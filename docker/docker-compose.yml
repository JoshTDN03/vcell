version: '3.1'
services:
  api:
    image: "${VCELL_REPO_NAMESPACE}/vcell-api:${VCELL_TAG}"
    environment:
      - softwareVersion=${VCELL_VERSION}
      - serverid=${VCELL_SITE}
      
      - dburl=${VCELL_DB_URL}
      - dbdriver=${VCELL_DB_DRIVER}
      - dbuser=${VCELL_DB_USER}

      - jmsuser=clientUser
      - jmshost_internal=activemq
      - jmsport_internal=61616
      - jmsrestport_internal=8161
      - mongodb_host_internal=mongodb
      - mongodb_port_internal=27017
      - mongodb_database=test
    ports:
      - "${VCELL_API_PORT_EXTERNAL}:8080"
      - "8000" # java remote debugging
    secrets:
      - keystorefile
      - keystorepswd
      - dbpswd
      - jmspswd
    networks:
      - vcellnet
    depends_on:
      - activemq
      - mongodb
    deploy:
      mode: replicated
      replicas: 1
  master:
    image: "${VCELL_REPO_NAMESPACE}/vcell-master:${VCELL_TAG}"
    environment:
      - softwareVersion=${VCELL_VERSION}
      - serverid=${VCELL_SITE}
      - singularity_imagefile=${VCELL_SINGULARITY_IMAGE_EXTERNAL}
      - docker_name=${VCELL_BATCH_DOCKER_IMAGE}

      - dburl=${VCELL_DB_URL}
      - dbdriver=${VCELL_DB_DRIVER}
      - dbuser=${VCELL_DB_USER}

      - jmshost_external=${VCELL_JMS_HOST_EXTERNAL}
      - jmsrestport_external=${VCELL_JMS_RESTPORT_EXTERNAL}
      - jmsport_external=${VCELL_JMS_PORT_EXTERNAL}

      - mongodb_host_external=${VCELL_MONGO_HOST_EXTERNAL}
      - mongodb_port_external=${VCELL_MONGO_PORT_EXTERNAL}
      - simdatadir_external=${VCELL_SIMDATADIR_EXTERNAL}

      - batchhost=${VCELL_BATCH_HOST}
      - batchuser=${VCELL_BATCH_USER}
      - htclogdir_external=${VCELL_HTCLOGS_EXTERNAL}
      - nativesolverdir_external=${VCELL_NATIVESOLVERDIR_EXTERNAL}
      - htcnodelist=${VCELL_HTC_NODELIST}
      - batchsystem=SLURM
      - slurm_cmd_sbatch=${VCELL_SLURM_CMD_SBATCH:-slurm}
#function func() { cd /Users/schaff/Documents/workspace-modular/vcell/docker/singularity-vm && CMD="vagrant ssh -c '$@'" && exec $CMD; } && func /vagrant
      - slurm_cmd_sacct=${VCELL_SLURM_CMD_SACCT:-sacct}
      - slurm_cmd_scancel=${VCELL_SLURM_CMD_SCANCEL:-scancel}

      - jmsuser=clientUser
      - jmshost_internal=activemq
      - jmsport_internal=61616
      - jmsrestport_internal=8161
      - mongodb_host_internal=mongodb
      - mongodb_port_internal=27017
      - mongodb_database=test
    ports:
      - "8000" # java remote debugging
    volumes:
      - "${VCELL_SIMDATADIR_HOST}:/simdata"
    secrets:
      - dbpswd
      - jmspswd
      - batchuserkeyfile
    networks:
      - vcellnet
    depends_on:
      - activemq
      - mongodb
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.zone == INTERNAL
  activemq:
    image: webcenter/activemq:5.14.3
    ports:
      - "${VCELL_JMS_PORT_EXTERNAL}:61616"
      - "${VCELL_JMS_RESTPORT_EXTERNAL}:8161"
    environment:
      - ACTIVEMQ_STATIC_QUEUES=simReq;dataReq;dbReq;simJob;workerEvent
      - ACTIVEMQ_STATIC_TOPICS=serviceControl;daemonControl;clientStatus
      - ACTIVEMQ_MIN_MEMORY=1024
      - ACTIVEMQ_MAX_MEMORY=2048
      - ACTIVEMQ_ENABLED_SCHEDULER=true
      - ACTIVEMQ_USERS_clientUser=dummy
      - ACTIVEMQ_GROUPS_reads=clientUser
      - ACTIVEMQ_GROUPS_writes=clientUser
      - ACTIVEMQ_CONFIG_AUTHENABLED=true
    networks:
      - vcellnet
    deploy:
      mode: replicated
      replicas: 1
  mongodb:
    image: "${VCELL_REPO_NAMESPACE}/vcell-mongo:${VCELL_TAG}"
    ports:
      - "${VCELL_MONGO_PORT_EXTERNAL}:27017"
    networks:
      - vcellnet
    deploy:
      mode: replicated
      replicas: 1
      
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - vcellnet


  # cadvisor:
  #   image: google/cadvisor:latest
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   ports:
  #     - "8080"
  #   # restart: always
  #   # cpuset: 0,1
  #   # cpu_shares: 512
  #   # mem_limit: 1g

  # nodeexporter:
  #   image: prom/node-exporter
  #   ports:
  #     - "9100"
  #   deploy:
  #     mode: global

  # alertmanager:
  #   image: prom/alertmanager:v0.6.2

  # dockerui:
  #   image: dockerui/dockerui
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - "9000:9000"
  #   privileged: true
  #   # restart: always
  #   # cpuset: 0,1
  #   # cpu_shares: 512
  #   # mem_limit: 1g


  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   image: ${REPO}kafka-docker:latest
  #   ports:
  #     - target: 9094
  #       published: 9094
  #       protocol: tcp
  #       mode: host
  #   environment:
  #     HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"      
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_ADVERTISED_PROTOCOL_NAME: OUTSIDE
  #     KAFKA_ADVERTISED_PORT: 9094
  #     KAFKA_PROTOCOL_NAME: INSIDE
  #     KAFKA_PORT: 9092
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock


networks:
  vcellnet:
  # prometheus_network:
  #   driver: overlay
secrets:
  dbpswd:
    file: ${VCELL_SECRETS_DIR}/dbpswd.txt
  jmspswd:
    file: ${VCELL_SECRETS_DIR}/jmspswd.txt
  keystorepswd:
    file: ${VCELL_SECRETS_DIR}/keystorepswd.txt
  keystorefile:
    file: ${VCELL_SECRETS_DIR}/keystore.jks
  batchuserkeyfile:
    file: ${VCELL_SECRETS_DIR}/schaff_rsa
