package cbit.vcell.math.gui;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.vcell.desktop.*;
import javax.swing.tree.*;
import cbit.vcell.parser.Expression;
import cbit.vcell.parser.gui.ExpressionCanvas;

import java.util.*;
import cbit.vcell.math.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class MathDescPanel extends javax.swing.JPanel implements java.beans.PropertyChangeListener, javax.swing.event.TreeSelectionListener {
	private ExpressionCanvas ivjExpressionCanvas1 = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private cbit.gui.ButtonGroupCivilized ivjButtonGroupCivilized1 = null;
	private javax.swing.JPanel ivjJPanel2 = null;
	private javax.swing.JRadioButton ivjJRadioButtonName = null;
	private javax.swing.JRadioButton ivjJRadioButtonValue = null;
	private javax.swing.JLabel ivjShowParametersLabel = null;
	private cbit.vcell.math.MathDescription fieldMathDescription = null;
	private boolean ivjConnPtoP1Aligning = false;
	private MathDescription ivjmathDescription1 = null;
	private javax.swing.JScrollPane ivjJScrollPane2 = null;
	private javax.swing.JTree ivjJTree1 = null;
	private MathDescriptionTreeModel ivjMathDescriptionTreeModel = null;
	private boolean ivjConnPtoP2Aligning = false;
	private TreeSelectionModel ivjselectionModel1 = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public MathDescPanel() {
	super();
	initialize();
}


/**
 * connEtoC1:  (selectionModel1.treeSelection.valueChanged(javax.swing.event.TreeSelectionEvent) --> MathDescPanel.refreshEquations()V)
 * @param arg1 javax.swing.event.TreeSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.TreeSelectionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshEquations();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (ButtonGroupCivilized1.selection --> MathDescPanel.refreshEquations()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshEquations();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (MathDescPanel.initialize() --> JTree1.model)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1() {
	try {
		// user code begin {1}
		// user code end
		getJTree1().setModel(getMathDescriptionTreeModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM2:  (mathDescription1.this --> MathDescriptionTreeModel.mathDescription)
 * @param value cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(cbit.vcell.math.MathDescription value) {
	try {
		// user code begin {1}
		// user code end
		if ((getmathDescription1() != null)) {
			getMathDescriptionTreeModel().setMathDescription(getmathDescription1());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM4:  (MathDescPanel.initialize() --> ButtonGroupCivilized1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized1().add(getJRadioButtonName());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM5:  (MathDescPanel.initialize() --> ButtonGroupCivilized1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized1().add(getJRadioButtonValue());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetSource:  (MathDescPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getmathDescription1() != null)) {
				this.setMathDescription(getmathDescription1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetTarget:  (MathDescPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setmathDescription1(this.getMathDescription());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetSource:  (JTree1.selectionModel <--> selectionModel1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			if ((getselectionModel1() != null)) {
				getJTree1().setSelectionModel(getselectionModel1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetTarget:  (JTree1.selectionModel <--> selectionModel1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			setselectionModel1(getJTree1().getSelectionModel());
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Return the ButtonGroupCivilized1 property value.
 * @return cbit.gui.ButtonGroupCivilized
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.ButtonGroupCivilized getButtonGroupCivilized1() {
	if (ivjButtonGroupCivilized1 == null) {
		try {
			ivjButtonGroupCivilized1 = new cbit.gui.ButtonGroupCivilized();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonGroupCivilized1;
}


/**
 * Return the ExpressionCanvas1 property value.
 * @return cbit.vcell.math.ExpressionCanvas
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ExpressionCanvas getExpressionCanvas1() {
	if (ivjExpressionCanvas1 == null) {
		try {
			ivjExpressionCanvas1 = new cbit.vcell.parser.gui.ExpressionCanvas();
			ivjExpressionCanvas1.setName("ExpressionCanvas1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjExpressionCanvas1;
}

/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setPreferredSize(new java.awt.Dimension(600, 400));
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			ivjJPanel1.setMinimumSize(new java.awt.Dimension(22, 22));

			java.awt.GridBagConstraints constraintsJScrollPane1 = new java.awt.GridBagConstraints();
			constraintsJScrollPane1.gridx = 0; constraintsJScrollPane1.gridy = 2;
			constraintsJScrollPane1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPane1.weightx = 1.0;
			constraintsJScrollPane1.weighty = 1.0;
			constraintsJScrollPane1.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJScrollPane1(), constraintsJScrollPane1);

			java.awt.GridBagConstraints constraintsJPanel2 = new java.awt.GridBagConstraints();
			constraintsJPanel2.gridx = 0; constraintsJPanel2.gridy = 1;
			constraintsJPanel2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanel2.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJPanel2(), constraintsJPanel2);

			java.awt.GridBagConstraints constraintsJScrollPane2 = new java.awt.GridBagConstraints();
			constraintsJScrollPane2.gridx = 0; constraintsJScrollPane2.gridy = 0;
			constraintsJScrollPane2.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPane2.weightx = 1.0;
			constraintsJScrollPane2.weighty = 1.0;
			constraintsJScrollPane2.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJScrollPane2(), constraintsJScrollPane2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JPanel2 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel2() {
	if (ivjJPanel2 == null) {
		try {
			ivjJPanel2 = new javax.swing.JPanel();
			ivjJPanel2.setName("JPanel2");
			ivjJPanel2.setLayout(new java.awt.GridBagLayout());
			ivjJPanel2.setMinimumSize(new java.awt.Dimension(106, 30));

			java.awt.GridBagConstraints constraintsShowParametersLabel = new java.awt.GridBagConstraints();
			constraintsShowParametersLabel.gridx = 0; constraintsShowParametersLabel.gridy = 0;
			constraintsShowParametersLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getShowParametersLabel(), constraintsShowParametersLabel);

			java.awt.GridBagConstraints constraintsJRadioButtonName = new java.awt.GridBagConstraints();
			constraintsJRadioButtonName.gridx = 1; constraintsJRadioButtonName.gridy = 0;
			constraintsJRadioButtonName.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getJRadioButtonName(), constraintsJRadioButtonName);

			java.awt.GridBagConstraints constraintsJRadioButtonValue = new java.awt.GridBagConstraints();
			constraintsJRadioButtonValue.gridx = 2; constraintsJRadioButtonValue.gridy = 0;
			constraintsJRadioButtonValue.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJRadioButtonValue.weightx = 1.0;
			constraintsJRadioButtonValue.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getJRadioButtonValue(), constraintsJRadioButtonValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel2;
}

/**
 * Return the JRadioButtonName property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButtonName() {
	if (ivjJRadioButtonName == null) {
		try {
			ivjJRadioButtonName = new javax.swing.JRadioButton();
			ivjJRadioButtonName.setName("JRadioButtonName");
			ivjJRadioButtonName.setSelected(true);
			ivjJRadioButtonName.setText("name");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButtonName;
}


/**
 * Return the JRadioButtonValue property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButtonValue() {
	if (ivjJRadioButtonValue == null) {
		try {
			ivjJRadioButtonValue = new javax.swing.JRadioButton();
			ivjJRadioButtonValue.setName("JRadioButtonValue");
			ivjJRadioButtonValue.setText("value");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButtonValue;
}


/**
 * Return the ExpressionCanvasPanel property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			cbit.gui.BevelBorderBean ivjLocalBorder;
			ivjLocalBorder = new cbit.gui.BevelBorderBean();
			ivjLocalBorder.setColor(new java.awt.Color(160,160,255));
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setPreferredSize(new java.awt.Dimension(700, 400));
			ivjJScrollPane1.setBorder(ivjLocalBorder);
			ivjJScrollPane1.setBackground(java.awt.Color.lightGray);
			ivjJScrollPane1.setMinimumSize(new java.awt.Dimension(22, 22));
			getJScrollPane1().setViewportView(getExpressionCanvas1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Return the JScrollPane2 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane2() {
	if (ivjJScrollPane2 == null) {
		try {
			ivjJScrollPane2 = new javax.swing.JScrollPane();
			ivjJScrollPane2.setName("JScrollPane2");
			getJScrollPane2().setViewportView(getJTree1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane2;
}

/**
 * Return the JTree1 property value.
 * @return javax.swing.JTree
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTree getJTree1() {
	if (ivjJTree1 == null) {
		try {
			ivjJTree1 = new javax.swing.JTree();
			ivjJTree1.setName("JTree1");
			ivjJTree1.setCellRenderer(new cbit.vcell.math.gui.MathDescriptionCellRenderer());
			ivjJTree1.setBounds(0, 0, 78, 72);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTree1;
}

/**
 * Gets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @return The mathDescription property value.
 * @see #setMathDescription
 */
public cbit.vcell.math.MathDescription getMathDescription() {
	return fieldMathDescription;
}


/**
 * Return the mathDescription1 property value.
 * @return cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.math.MathDescription getmathDescription1() {
	// user code begin {1}
	// user code end
	return ivjmathDescription1;
}


/**
 * Return the MathDescriptionTreeModel property value.
 * @return cbit.vcell.math.gui.MathDescriptionTreeModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private MathDescriptionTreeModel getMathDescriptionTreeModel() {
	if (ivjMathDescriptionTreeModel == null) {
		try {
			ivjMathDescriptionTreeModel = new cbit.vcell.math.gui.MathDescriptionTreeModel();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathDescriptionTreeModel;
}


/**
 * Return the selectionModel1 property value.
 * @return javax.swing.tree.TreeSelectionModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.tree.TreeSelectionModel getselectionModel1() {
	// user code begin {1}
	// user code end
	return ivjselectionModel1;
}


/**
 * Return the ShowParametersLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getShowParametersLabel() {
	if (ivjShowParametersLabel == null) {
		try {
			ivjShowParametersLabel = new javax.swing.JLabel();
			ivjShowParametersLabel.setName("ShowParametersLabel");
			ivjShowParametersLabel.setText("Show parameter:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjShowParametersLabel;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION ------- in MathDescPanel");
	 exception.printStackTrace(System.out);
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButtonGroupCivilized1().addPropertyChangeListener(this);
	this.addPropertyChangeListener(this);
	getJTree1().addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}

/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MathDescPanel");
		setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));
		setSize(564, 475);
		add(getJPanel1(), getJPanel1().getName());
		initConnections();
		connEtoM5();
		connEtoM4();
		connEtoM1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MathDescPanel aMathDescPanel;
		aMathDescPanel = new MathDescPanel();
		frame.setContentPane(aMathDescPanel);
		frame.setSize(aMathDescPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getButtonGroupCivilized1() && (evt.getPropertyName().equals("selection"))) 
		connEtoC2(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("mathDescription"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == getJTree1() && (evt.getPropertyName().equals("selectionModel"))) 
		connPtoP2SetTarget();
	// user code begin {2}
	// user code end
}

/**
 * This method was created by a SmartGuide.
 */
private void refreshEquations() throws cbit.vcell.parser.ExpressionException {

	TreePath selectionPath = getselectionModel1().getSelectionPath();
	if (selectionPath!=null){
		BioModelNode node = (BioModelNode)selectionPath.getLastPathComponent();
		Object objectPath[] = node.getUserObjectPath();
		Object lastPathObject = objectPath[objectPath.length-1];
		Expression expArray[] = null;
		if (lastPathObject instanceof Function){
			Function function = (Function)lastPathObject;
			Expression exp = function.getExpression();
			if (getJRadioButtonValue().isSelected()){
				exp.bindExpression(getMathDescription());
			}else{
				exp.bindExpression(null);
			}
			expArray = new Expression[] { Expression.assign(new Expression(function.getName()),
															exp.flatten()) };
		}else if (lastPathObject instanceof Constant){
			Constant constant = (Constant)lastPathObject;
			Expression exp = constant.getExpression();
			if (getJRadioButtonValue().isSelected()){
				exp.bindExpression(getMathDescription());
			}else{
				exp.bindExpression(null);
			}
			expArray = new Expression[] { Expression.assign(new Expression(constant.getName()),
															exp.flatten()) };
		}else if (lastPathObject instanceof Equation){
			Equation equ = (Equation)lastPathObject;
			Enumeration enum_equ = equ.getTotalExpressions();
			Vector expList = new Vector();
			while (enum_equ.hasMoreElements()){
				Expression exp = new Expression((Expression)enum_equ.nextElement());
				if (getJRadioButtonValue().isSelected()){
					exp.bindExpression(getMathDescription());
				}else{
					exp.bindExpression(null);
				}	
				expList.addElement(exp.flatten());
			}
			expArray = new Expression[expList.size()];
			expList.copyInto(expArray);
		}
		getExpressionCanvas1().setExpressions(expArray);
	}else{
		getExpressionCanvas1().setExpressions(null);
	}
	
				//Variable var = getMathDescription().getVariable(varName);
				//SubDomain subDomain = getMathDescription().getSubDomain(subDomainName);
				//Equation equ = null;
				//if (var != null && subDomain != null){
					//equ = subDomain.getEquation(var);
				//}	
				//if (equ == null){
					//if (subDomain instanceof MembraneSubDomain && var instanceof VolVariable){
						//equ = ((MembraneSubDomain)subDomain).getJumpCondition((VolVariable)var);
					//}
				//}
				//if (equ == null){
					//Expression exp = null;
					//String title = "hello";
					//if (var instanceof Constant || var instanceof Function){
						//exp = var.getExpression();
						//title = "Expression for "+var.getName();
					//}
					//if (getJRadioButtonValue().isSelected()){
						//exp.bindExpression(getMathDescription());
					//}else{
						//exp.bindExpression(null);
					//}	
					//getExpressionCanvas1().setExpression(exp.flatten());
					//getEquationTitleLabel().setText(title);
				//}else{
					//Enumeration enum_equ = equ.getTotalExpressions();
					//Vector expList = new Vector();
					//while (enum_equ.hasMoreElements()){
						//Expression exp = new Expression((Expression)enum_equ.nextElement());
						//if (getJRadioButtonValue().isSelected()){
							//exp.bindExpression(getMathDescription());
						//}else{
							//exp.bindExpression(null);
						//}	
						//expList.addElement(exp.flatten());
					//}
					//Expression expArray[] = new Expression[expList.size()];
					//expList.copyInto(expArray);
					//getExpressionCanvas1().setExpressions(expArray);
					//getEquationTitleLabel().setText("Equations for "+var.getName()+" within "+subDomain.getName());
				//}	
			//} catch (java.lang.Throwable ivjExc) {
				//handleException(ivjExc);
				//getEquationTitleLabel().setText("Equations for "+varName+" within "+subDomainName+" *** "+ivjExc.getMessage());
			//}
		//}
	//}else{
		//getEquationTitleLabel().setText("no variable selected");
		//getExpressionCanvas1().setExpression((Expression)null);
	//}	
}


/**
 * Sets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @param mathDescription The new value for the property.
 * @see #getMathDescription
 */
public void setMathDescription(cbit.vcell.math.MathDescription mathDescription) {
	MathDescription oldValue = fieldMathDescription;
	fieldMathDescription = mathDescription;
	firePropertyChange("mathDescription", oldValue, mathDescription);
}


/**
 * Set the mathDescription1 to a new value.
 * @param newValue cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmathDescription1(cbit.vcell.math.MathDescription newValue) {
	if (ivjmathDescription1 != newValue) {
		try {
			cbit.vcell.math.MathDescription oldValue = getmathDescription1();
			ivjmathDescription1 = newValue;
			connPtoP1SetSource();
			connEtoM2(ivjmathDescription1);
			firePropertyChange("mathDescription", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Set the selectionModel1 to a new value.
 * @param newValue javax.swing.tree.TreeSelectionModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setselectionModel1(javax.swing.tree.TreeSelectionModel newValue) {
	if (ivjselectionModel1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjselectionModel1 != null) {
				ivjselectionModel1.removeTreeSelectionListener(this);
			}
			ivjselectionModel1 = newValue;

			/* Listen for events from the new object */
			if (ivjselectionModel1 != null) {
				ivjselectionModel1.addTreeSelectionListener(this);
			}
			connPtoP2SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Method to handle events for the TreeSelectionListener interface.
 * @param e javax.swing.event.TreeSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void valueChanged(javax.swing.event.TreeSelectionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getselectionModel1()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G560171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DBC8DF8945535914122C60D8A98B0E84020D18286099295B4E80AE8F9957B520ACADB7C9ADBFCAF3E52163EC7DB2CB71BC0208990CAD4EA29CD855BA0B1A6A1C244540690B4C800C816A5E0A8591F496EA61B5D4D6C045D7CG6F5CFB674C4EEEE6F6A16F51FC5F79E66E39BF67671EFB6E39674E06147CB9F1CD2E2104105CB5C47E5B1BCB082D0D9067276FBD0238B8372910287E7E823019CC886443
	B3916A36ADB0959613BF7B57C1B98D4AB1CF1A8A5F0677AD2431A34388AFBAF46221EEFC46AB0FC726F378B052A9E0E53B3F881E9B815281C71F799ECA7F22FF2B0CDFAA6391F28D04ACE1EDA679374938A6A8F7G0C83C87670769970DC4FA80F59D7AB37EB3FB9192CFCC6B4EC20632846C4A875723E0D7233147CBAB747CBE9BD497824FD06201C86C0054FA36FD47C8D1EF5AD5D764F2C9627D4F14EAA38DC95BDE649D1E16FF36E5BF7845E9A851F35456C96DC4451CB47AA8C2CE3FD89290472CA06335B69
	78A9701E8930D441AFF1D2FC2DE8AAEC81F008A8535F7FD6A7735CB6B807E45B3F39FE130ECCB1A217A5D98C4AD47A01A56F8FCC7F57B7D3BDE7C35DBA9F4CBDC0BDC087C08C409F593C5FF27883F86E37C887BCBDBD9E77FE2F3741E5930FF8EC028B5E776D039A99F7DC30FAC49BA1FCEE1F7617EB709389F83F67AF3B9F57C972EE1C671463B3495259938C859ABAD91ABCE80877F1DD247A02BA61340B83FA34977BC26DB01476C92226CDDE2DAED823C1FB5B772A8B3265F1D629E857CAF42EDFE2B630955E
	E9BF3AF8B87ED5069FD26139CD76B0BCADA7C09D69C35BE85B083CB467CFA545D537E96AA17E09D8032D0F73B054974ECBFC979DBB390F537C03424B8C064FD661B9AFBFE0F6CA4B2567CC05B9G5C3E469D25EBB45DEFAA4C824881488F188AF7G54839883E8E3AF9D7E6892ED2C45ACCA8DFDCE17CD90896FBB2E79ADF88A81C9B49FF27BA4335BAA184C2253ECF189BEA237195CCCF5E08969B715593E95E8FCA1388551ACB9BDEE985D5CA3C8026863ED26B7EF26EDC401559A1DBD82906871929CF7F67396
	F83A4CBE690457E61604E08BDE7FE8B31D13F3E6930C888348BA5ACC669F237A12C07ED80084C58FFB0E50718E8BA2380BFD7B1ABD1E6EBE2F11CAC2F282D44FFFE33EA3955E9786D04773DAA82E325FD458540F63749C793DEA1CC6271532EF967BF10D3DEC8787CE5A21FDGA081A09DE0E9BF5A50FF35218DB5EE18C14A3FBBDE530662401ED775F35BA99E88DFCBBFE5B4A81F35D0578690G089FC05F6F3337692C358419977A9E10F9D3573777EB2F45613EA4D617C6013CF6687B9AF99D2B6B73220C3FD1
	194BDD4769DC2603DCD9GAB87F08E120F14F21BEEB07B843462E3A29820E08B4E8867730E2ECAF8EEE27D88594EF0043C89308B006ED7FB815E87207B4DCE00379599E7333EC50326429A00F60051GA9GD9G2B81F68C198A1B81A40084004CA11C03ECE7C68479B648BCED1679FAD3262B55F6FB98FF3BF45A6D3D843DDEAEF0D95E6E0AA44BA6F9CE574B73DDA84F1F5EF8EAF9B768345BFC85E46136F347D14A2FF0CEF0CB0D02D7F05B6045A757CDBBCAE5107DDD27C769B31D613D609F8F00C372A978D9
	C7A91FE6C9921D16BEC9E895A4496936876B9FE634FCFD96EF5035A22D0C23D4D79EBF78C7257DB70FD25FE275385D82B3E2250BDC7F9473ED02CB6881268FF87A5C92477F5BB19A7BF58B7D32EFFD6E58DAC2FD232B0F7AE99ECF251A693CF8C5E78FAC8D6A6AC95DF96A77BE8BECD569A8876C17460545D03763BC7AAC7FF674D9BB866EA599E73D862DBDB8FE5ACD065167397F08BF9F74D91C27A7DA34F9DF48FC2C0C7765B15CF7EA29DD04C6F85C46369051CCED2721CF12BC6EAFC4CF1F7700731C53659C
	90ECD5CA1B52770A6159A377971DDE2A4CAADE37662B2D2A3165BA23A888ECCB64EDC62FE57386CC31E9E0B5D532CF3235B21F8472AD8248BE0FBE2971ABDA0F7B026C0C8EF8DC7298D0D7FE016AFB0F23C425335567393E19EFE6759625DE02F26C05E0BD6FDF60D4774F3E905EFF37D23F632229306EE2301E73D9F53C1849565BA740F6CEB740430A5D549E7FFDD81DC936A1DEDFFF1C5A10CB35F7A6DC24B4FF5A056705660BFCCF3249F407AEF25ACDB1345D3D5D58EE39DCCFE2F87B2DB16AF6D697369B97
	235DAE7FAA5A6E6D9EEC1792437DF3A6BC33GD682D4A86DDED15A35DC45FDB9ED6738AA58EEAEEBB75D0D6D46DE4569A6DE4577D75A6EDD053FDE8F36DBB70A37AB05E7ADC05BA8B5FF8DDEEC679A45770B5123643DFA94274B477B3552AEF9942797AF374B88996F29DEEC37F4945FF7C62B5A87659894315DCA192F222BF9FCC05BD1B9783C6D77E13BB2393E7E6A50F9633E6397BB691AE1E731AE73B9F320426787BF37EF5F17ECE97233D7B20B1FE87B582B710C15B5C857CAA69D13622EC6FF725C86BCE3
	0D6BCEA6CBDF2DAA50BBB7960D66FCD40E8E7A1372957B577235B853C8E9FA21AEE6B42E43C70F2B633C7DBE1F476AE4A126EC43DD2DEAFF43F11E565F413353A97A24C330A184505E7BDAA93FB486155132BE6E5E3E1D284F266CC02A651264B34C794F55724E5DF45ED028A36FB8D94EB4153CCBFA0C857CACF02D23C876F1AB213EFC8C2C33B1943F40414E7ED721FE2D3B11DE5C40B452B1FE12AE3D64B11C4E42B1AA7DDED835064BD95AD4CDAE658C9E6EC5716CF25A097C12EB408E2FC1FEEFF3D2FE29CD
	72F6DB3B0BE45DFA21CDB2G7743973B5793159FD6747F921BE3D16894851F63E0EF9F1BDFDF59CE132C6F29DB6AE579964D1CCA6AAE7E5320F5069F3B49E1D8F68D17FB5DB70272B75DE249EB87603CFD279BE5B0C21B58EFA0EF1F38A85E69F6CACEB31D6B321D1C37CA77FB70B45BECE54D2A35D2315F62032842AAF1AB7994D815F91D712E1A57F566B11A3C463EEAB7E44ABC6628F8CD85BEB395DEE3DD48EB4DD8D321EBAC6A373E8771C900DBBA96E53827074E03D934D7713DE52FD93D3714DC8B7EG40
	F6AD36FF1635179CCE9F67FD6894729E33A80DEC5DF203A66F948257F21E932F8D72BE14E8490BCBC45EB73A11479550266CBA30EF4653D12B96CF9D5721ECD9CABF89F0A957A12FCB9D14173098C056794F772BF51EDE902B4937631EF8C376F51C5F226B03FC57CC3164B5CDC13EA7F910FEBB3499F7BD524F75065B871747E7D34B33885A2FGA80945FE3B3C540EFA78B21257D13797E914C13B0ED84C1115FCC61FAC4EA3987BE4FBF10EF85F6D3D58B79E7AADD6684C6C55528F6F33C269336E8650778D28
	6BA491718140255E00E34DF0EEA4617192725E6543353D9C5A175E08FDCE7653B91040E534E23F8AA649810759ED97ECE56A554342758A233A71C10A5A494FA7B30665165AEE8C1EE3DDB78EBF53721CCB539065AD66C61EF349D3704799BECE0567323CB80872A7C2DD7ECD18A7F87AA45D9F9DD09E8D10G108610853072A65C17DEEF5DCD2264E18E39A558364C2E5610838366C30C14AE4478F2F90ED1BD771C0F3D2728ED9547415A81E884E887980AC39EBEBB9115070381CD9E381EEFF2D0BDA744C54F91
	A070FE13D93F344B684757694E536A7CF27E66AF8DF9BA7EA5DB9EFBE5DCF01DF21DACBBCDF5D2F3332930854081908310F8B36AE46C0972E8BA411C172C8CAED307F3E43AF0BBAFD7973C5F3B5D61B61EF1F36898CB434A3CDF7930FE95E1E5F2CBE8BF2E37BD6DB4B65C8AF5B5G4DG8E00D800E400C537207E3EFB626FD1ED0AAED52367G601A606CF0A07CFC2B703AE4982F6120AD630F23764B5114F14699AAE37E2D6017GEA810CG8100F1G6937220CFFB5FDFA09B26EE7F28D171073F90BEBE472A5
	C66D3764D62DFE1F770C0C1EB1EA3F95E17478FE74D683BDDBE81C930E1BEDCE8F8FFD081CF7986C8C4FBB2C9B87FE8B209E001FA95C66F5B2CFED635057FEF8164ED99C14D3GB2811681640F07B984E89C0FF396B0B5C41BB3A5A58D7306B99C8D6364BAA9F10FCC176FC56D57BEBE349F17FD0C954FD352F84CA93EB8C29E16C76D17B2DEEBFDCC6D203A4E043AE5G2BGCAA640BA81B08284A6202E97C557352260CB51F522E7E4F24E0C5AAFEE02165D269A5F5636DB9AF148769AEFD15BEB7284EE2FD970
	DCBE816D75BE9B4E99398D672C57BBB2D9AEC66DD7FB1BD63F1D3DA32337B7EA3F96CDFA7FBDC2FA79E234FE8ECDFA77C56D27CDAFBDEA3F98ED7906451617366F6677C75BF763436871FB28CCFE8F85F519G9CB7E5006216C3194423DD9D9D22F17E8E255C464A54A6F9F959205E7D4CC639DFA4DDC483CE63D791E9DC4ABDCFA4603E65BBA7757375AF1C544E577F7024F63E7E15131BB99E46D05FF6E27DEBA7A36773FFF9D2BF1F7F0FD37AFCFEFECA1B4F66D35AFC9EBF95194F532774787C93537B778C74
	1CA27639A5E70F400666FECE8850EFC5409B9F6FF3F3D7CDC777054739847D7FB2B335295AF87473BFBBD5CD067B7903B6276491F19023E0960FF5F6AACE3E55ABD8116F652775F57453535ABA7A65E9ED9D7D66F4E49D65FD9DD9C7CF3F3509757779849F8B5E9A4D12D92E7B09C46F98065D439C05E80160B97B844BCD51B687A54F01EA05EEFD3B3E0CDF34EB4BF8241D66BFFD1EBE51AA044BE1EC5F2A5485B74CC31250C35961ED4E307E12D9348B4374E0E37DF91DDE7F1EF6BDDDF1D9B739D4329E79D899
	FB4E99FDD99FBB23ADEB6699FDD93FF5A63A2CD9E774E5FD69CCF4D9334FC416756990D9EB947C791EC2995F52A9FAFADA2A6438605A2170B8165E4B9BE14DB862B1AE185D09F1ECCCBC6646FF56416E11203C98E0396247BF3151FD03CC8C754FA5F239EC62F03F4D655AFBD6FFAEBEBB2BBD970DE7756762705968F3E1BC2BBF97DF1F0DBE973633D42796274DA94A99DE2E6B436ED0DDD74B7B4DF5D62DBD3CCE56C90B06EE78F81BBDB827AD122725CA61B125C3DFE733BB34F576F0073E4EB2BA226B6C698E
	FD1DAD6E082E3397BA34F5763CC7ED37D4C66E736D8729CF5308EDDB2D22476522B7B8844F9C0BAD787D1CEDA25A69E3D6EA2789D0CE83D8B4916D74FE1B56DCE44BF330CAF7AE123D21F33BDB46F7742A792FD65AFFA806362F1171AF0B6AB9D5356FD77B65601D70CB81FAA76EB277FB7AA4C2821328ECBFD76E3E0B203C83209920E392DF43DCFF337C14FEA71C94C1EDECB3B35ECE7B268FE05F8CE81F85309220846AEAEE479C275FC4F545EF492A64B94EB6EFD07B9FF9CF617A1FBFC475CF79CF389D75DF
	4F6ED032201C83101F007ACF6F8C577F3604204EAB613DB1A1F48EF8EED3B053715A92F8EE33C04177B23CD70567B94F7FE1FE0A1647C2DDCE824624AD6C2C53B259D4E81B0C38098C970072D88577DB9B462E63945C94AB364BD6F086255D0A49A863F7AD11E2767ABB74723A55B64A33710E703CEE9D435B6E884F6BE6DA15BB8428DBF28772340071D4F7A77873BB91D75309FC866E443C78BB7D788DEB8260326EC45BB95E74C74D35576089B4F3C36473EE69DFA777AFCA44F90FE3E3B6C2399DC0CA443B3D
	40DF71EEAF656E29E471AB5AF7274B0C678D3109723718092A3B0B8FACF91C668F8610E68E546F18C2F1C5036A3B892A0FB9F97C5C426BBF8B29277BA87DA6A9D86F8D29277C520B3EE07D5410FA2A236DF2FFAE5B375EC759D6FFAB15389E9C2D7BBD31EB8A17A9CEFE16FEFBE26E587816355CEE968C215DAC146B17CE895A4A8AF84F1F2A35B65258DA5BBAB5FCEDE4B0FC6554703571399357C6935425CCC59BF91659C871DD20573B90F75401F6532460DE692038F8A8275E05B65F4D56E1A6143381C89262
	7D8CDF1A443FEF205FAEF07C6B9D114EE09B6531AE675CC5E9E64BFDB80D374C51E8DC6ED92FC01E7F603EE0E7EB0D5FA1893616A42A1F8BB65C0F6A135027265A587D96EC4C631268F77095CE4AF251B45A7ECD21D19EF3C912767E036B1E2DFDE8C361CD99CF2671792540477E2AABB8769FECB836F15A703157040D6D18969C1B568D294666F31FE3C1FB98BB8D6732164936C4A9B730B27DFE03171F31C61B0711C210660F2E988D544D9672FD660769478447E950A58AA25F0FFFE943BDB58778493F9B568A
	C07B5DDC5FFC5FBD2C640DA5400F85C886D888307CEE1421F4D86E65D26CF1B32998E1BF7BE57763FE45B2C075306E1E20EDF0FCB7431728705C5FCCD07619D2289BFD8F6644EB3A29CE16C3B9BF59D4388D2086408860CD46333B4BC23FE50D1823B5FA3C4D908C3BD447E959A686C6763B017985684F539E390F24DF53287B9D4A68E4BE47C972B3FD5144DC7A6472BD652272E5C15D8A0012FBCD0565G75GED7722FCE996799E0F26A376CB12596AE0DF78A8498D27608F22E9A047576177D94C6502F1465E
	0BFE79E6769B1D84A827AA3862FEDC2FD98A2E1261D6C13978BE343DC7581E30834AF5GAD8AFE8143BB6E635FAF50BBFF0EEFF62A579BED2F27533A88F5BBF46AB88DA104C6C104F9DB9321CE4F4773B57D634E6171756B4ADA0D857E12G9681AC13F5407D2A60C03F3ACAC38635CF25D0B45DD4D8BABD68D7EB2687578867E3B5BB9FC1306E6C696BE9F58E88046FA5A56CAE299E5AB7CF473D443213FEC7546A7078033FCEE8B6DB8417BC56A4762D247A760A066B3CEE964B952A6BCC72DDBC7F4E633E10EF
	E98253394C898A6D71FC9F937B843ED6927D6A3B6E5A5F0D527C4616C26AF42E27CC79997B4644DCBE4633DF2B47A81E64B2646A0C31DA6E3BAEA5989B723870F3816FB06A206E4F04FF2F3D0E847F785E58CA0F4472BAFF398857793669F71146679B8D5BF568CAB23DCC955D0C0E1A751C76174A7D49EACD5AAB7E41E9BFC3FFA6A26F4BF9D6341F1A995A76233621A6E853BE035B8FADFBE7045B4FBC9F35E3F673D305FE77CF821E8F0620FD5A8C0C6F7F79A94D05DD7277F187D49B9E41B31FA0A8F1788C0C
	7DEFE574F64C849F82E01C09F9245ECEEC6B1A09B17B1D1D61B17B4DC49DF3BF57999E33670654675943E37649A1759F5B43E3F66C4FFD0BE300A86F3D2A77047EAB95C7847D5A03D714865FD77E5E2D1FA3EA6C564E91FD592D1D33EE690EFC3F50562DFF3FF036DB7DFB813EAFCE6A25F31384361081108D308A2068FE5C93DF6B265FA2725B57707D70204DCEF3D474D7DD1212FFF2694B7A3CAB7AEF41163968F734968FF8439EBABE62FF6C2273A5F93C8C49F17F49722C22536E10F8D3997FB3975B0F05CE
	0666EBF26590BD87FAC521D390C541463CBA117D7A067334FD9948DCF3BF7A56E47F703D68F165F72F9D77733DA8G4F587B79BDEE527D6CB7E07D6ADC2E76BE77C53F767EF2164582B9B04EAA050F86763D1CAA53A67F86617E9D413CD035BC6E6D1B435AD6737C722F1CDA774EBBD2CD05352918FFF85F0EF1E18B60462622FF2AE27777CA7E21426C17766D7BC2F45A9A4CF61E0060FE25470EFEA5A395FD506DEC4CD5D0AE1EE5AAAC1B05BEE80283FDF47DAC6D7DC1FF4F785097FCCF120822532C8E5A47AD
	78CB114D0AC6A7D8AB7DE1DFD9D5651E72525D15BB71DB74CE1DEF5159464DF9FC590CBC86E6E10C7CD59F3BD7057222D938BEC675505FD2194CDD43EF32G59A2FA3C02A875F3AC5F5D79D84D6708E22F8BFB5E579B83D659174062B1CB971CE90DE6BBC13FF5D8D04753B9408FF9A072991D53757B69DED782EDAB810CGAE009800F80094008C00AC009C007C5926422DG65G75GADGB60040EC14BF5E33B3027C3221B0A7A11A1D54CD487C9F8B497D4642F80933A3734F6725C67926A5ED36767E2E3F67
	BB7A09C2FF3B906DBC1293468F6FD795355F3BE1E55E2FABEA3FF060673802CEF63ECB8BBF5F95B3FCC9DA7879EE22201C6F20EEF49A1E914E8D4B75DE5A5EB535D75F1F5F5B9B5D1FBF504BFEAB81FE58586F156F9F6674D25F6A696C74894A3EB13737D8419D7235F8FCCE9A6E70F93B1E4584FC1DDF63AFA53A6BFCCFE5E5F9E9CDE565CE2E0B1FA87F97E0B9682174C174BF9F8550D735BD083E6ACC00FD2F8B65E4000C87B1D73A700CBA1FD83A6B18E6BEF1551981431287393D2CFEB0981726C0DC4AE5D8
	BF9414E13B73DDFD992A2B4BCB2B2BF7223DD7F5D1DE69FED17990727AA54BFDB8209C83907F904E71AE7B48F28F1F0C301FF8597D386DEEE23FC1C9FDA85C2637B27C5C0742EDFA0A32B7AD043A72B9A86F6D8EB57DB840A74D096CC364EFBD4DDAFC274BFD97E90C41ED5454C75F1558CBBE2C497767FDB40ED23E55E7BFA7E90506EEBBBF67DBD80C3EEC8E170D636C8C37CA4671F12E776B2F37DB7C51575B6DFE6D78E90AFFF87CF437DFBBFECA712B63A779F72AFE6AF36D604F5B14F68FA938D38A6ED1B6
	A6451DF45AA407021F4F782278A60192D4FE0F4A7872B3DC1B0CDB24421D12F14F31F88CC4F6F8C46C7BBDBFBD7FF6BADDAEDEFE1135F13A4105A87A78A1635169B52B784ED6F027143968348D1F1FEE1BFAFE643592F2FFDC128EF1CDFAE41B635F03E4EC5940F8F3B95D42817EDF8D14B1B7F492657DAD557B1D4215BF7F247F8BE83CB6427FB5721B91762B517DBFA1117D52F3EC8F28CB8F77CBAFB2FCD3FA38DF328650AF9921AEBD9D63449F316FB936BD8C71B5C0BB0084B096A071E10C1B1E9DA8A37AF1
	930F2C03E19317EBCF974A158663ACFCB8E8F7CB61FD85C07EA3DAF7D20F317DE26BA361F7198B993E6C11703B4C969B66AAEA21AE61917437EFBA0236792E6A7D9E5D7F63707FE7C399D71486DF6F8FB8067B00B98E358F603857595900BC8A6F0FE29E57225C45ECFB944FCE663F2AFE3F455CA147EF8BEC8862519D4AE337D80773F042BA5C8FBD9F886AFF196A5D993872F3B16A0A52606BA3E7C8FF9F7C45D074FDF0751076BEE8B8BFFC9FACB82F3D8F723CG6E03FCAE0EF4E12E5F254CFDAA7BBDF08C14
	47A93875F994178E65458AEE72A05AC836023B60407CFF4DDCDCE719AC2F5B24143F4D4A8E25ECE2FB992D3FF2F36CE1B47E2F5F5F6A810F03CBAC217730C397289D731CEC3F25B1C27F701CEC6C5C50FB584439C1DF4DF3AB67583C25GBEFDAE66D61EEADD4BECC4E49FD0719C4F8FDAB1D7128D6DD683144DB395568150FB9779FFC364B15BB2DB3B6D22274FEDC39A35EC4E0D5036E39E5ECD248D229C2367E967165728640807B6A9730239650CF961F25C436CE59160174CC3FE7EB2C0F3028783DED17051
	B34481337B1C59C73FDB62791FB7EC6A7CCF7EE3DC16BAF836BC96A9BFFF6745607B938C4F69CDEBADA53A67173D21E73035C65CCB9CC0AB71B1740DCF3D237C4EC7757BF7FAF558406623C1B03B718CF45408F778CB9E43B31009FD1FDC7CB84C8FC0BDG67F3D3DE104FF103D4EE0547839E17C72CF051E57E05E86E67E33FB20879043647AFB71FB039B5289F765F77707BB15B251C6F389E9EB5FCC0A2657F43E795F532D7C01D44BD0EBAD9484E7E8B213C8CE0556368AF0A0CA34BF53C93351FF62E636193
	DA7D0AB3747D950FC71EE1F33AA3A3BC7E7AF7062F4C880F3F5A8D98FF55C1DDE2864A7B9F03EA7A7973CD05DB67DF4A3930AEE20E26DCE38C791BB0160B291F9F4E77C106EF1E9F4E7737159CCD9B544D1D0FFB416293F4CECB1F003D608914E53101A87C3D20FA37982E7CBEBFF8C5E9F019F3070647BBEB070647DC2D02726D13221B8655D969306ABD6BDFF1263922B4389F7949896AA32C54ED91747F3FE5B662829D841E40BB07AE817DFB529343EDD4766514DDF95CCF8C43F2654CB716D56D29AC27D07D
	7147BBE5BF93275C6526ABFA9F9F32CED6GBE7F49486B0B4FE10A1283F9520038D9CA8EE4D7AE7FFFDEDB482CF3B7C2FD4AEBE40DC4725D74D21D2C617F09CAA41B94168F31F37E32F33B77657D682EBC8349BFC45672F86F904927C15BA1320645F407C89E44FB81FA611B2F86DFAF39C08C170895496F07BB737DB73E70FC4A59469283B1GF10740292D7153D01F51237E31AB829D08BFF26388B134E109504876AD09EC22DF9414FA711302FD17B046DC60F1E3680466CEFB7B6A621BF67799483A4F495ACE
	334B6BB09F12F559CC8AADCCBD0288EDA5D24C7E5748C75077A3567753E6E2307AA47247A01ED9A22FED751A2D82B4D9EFB30B5DEC844A4A262F497ACE51EEE184A4E2787A732F01ACAB516A4D4D64F71203DE995218CFA2EF8707EE2127DC3962D326BA72C6C6C606177DC5961E2B0C15B632FE0909EF28CA59596A927CF9D5FF2A9A2F770110725123C36A164A7F9338287EBEE255982B6EB7969D8B781A1096047FBF019B58BDDFAA6097AD40FC4077839F927DBB20569E334BA519DD5D7B5DB6FA9F5450AF89
	41BB5FDB7A6978BEECA3D7723A096CDB76AED51F7F85D0CB878893239534549CGG0CD8GGD0CB818294G94G88G88G560171B493239534549CGG0CD8GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG8E9DGGGG
**end of data**/
}
}