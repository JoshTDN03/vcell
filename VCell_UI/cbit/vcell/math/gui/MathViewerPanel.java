package cbit.vcell.math.gui;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
/**
 * Insert the type's description here.
 * Creation date: (2/5/2001 12:58:17 PM)
 * @author: Ion Moraru
 */
public class MathViewerPanel extends javax.swing.JPanel {
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private javax.swing.JTabbedPane ivjJTabbedPane1 = null;
	private MathDescPanel ivjMathDescPanel1 = null;
	private javax.swing.JPanel ivjVCMLPage = null;
	private cbit.vcell.math.MathDescription fieldMathDescription = null;
	private boolean ivjConnPtoP1Aligning = false;
	private boolean ivjConnPtoP2Aligning = false;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private cbit.vcell.math.MathDescription ivjmathDescription1 = null;
	private javax.swing.JEditorPane ivjJEditorPane1 = null;

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == MathViewerPanel.this && (evt.getPropertyName().equals("mathDescription"))) 
				connPtoP1SetTarget();
			if (evt.getSource() == MathViewerPanel.this.getMathDescPanel1() && (evt.getPropertyName().equals("mathDescription"))) 
				connPtoP2SetSource();
		};
	};

public MathViewerPanel() {
	super();
	initialize();
}

/**
 * connEtoM2:  (mathDescription1.this --> JEditorPane1.text)
 * @param value cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(cbit.vcell.math.MathDescription value) {
	try {
		// user code begin {1}
		// user code end
		getJEditorPane1().setText(this.getVCMDL(getmathDescription1()));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetSource:  (MathViewerPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getmathDescription1() != null)) {
				this.setMathDescription(getmathDescription1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetTarget:  (MathViewerPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setmathDescription1(this.getMathDescription());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetSource:  (mathDescription1.this <--> MathDescPanel1.mathDescription)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			setmathDescription1(getMathDescPanel1().getMathDescription());
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetTarget:  (mathDescription1.this <--> MathDescPanel1.mathDescription)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			if ((getmathDescription1() != null)) {
				getMathDescPanel1().setMathDescription(getmathDescription1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Return the JEditorPane1 property value.
 * @return javax.swing.JEditorPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JEditorPane getJEditorPane1() {
	if (ivjJEditorPane1 == null) {
		try {
			ivjJEditorPane1 = new javax.swing.JEditorPane();
			ivjJEditorPane1.setName("JEditorPane1");
			ivjJEditorPane1.setAutoscrolls(false);
			ivjJEditorPane1.setBounds(0, 0, 160, 120);
			ivjJEditorPane1.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJEditorPane1;
}


/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			getJScrollPane1().setViewportView(getJEditorPane1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Return the JTabbedPane1 property value.
 * @return javax.swing.JTabbedPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTabbedPane getJTabbedPane1() {
	if (ivjJTabbedPane1 == null) {
		try {
			ivjJTabbedPane1 = new javax.swing.JTabbedPane();
			ivjJTabbedPane1.setName("JTabbedPane1");
			ivjJTabbedPane1.insertTab("Equations", null, getMathDescPanel1(), null, 0);
			ivjJTabbedPane1.insertTab("VCMDL", null, getVCMLPage(), null, 1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTabbedPane1;
}

/**
 * Return the MathDescPanel1 property value.
 * @return cbit.vcell.math.gui.MathDescPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private MathDescPanel getMathDescPanel1() {
	if (ivjMathDescPanel1 == null) {
		try {
			ivjMathDescPanel1 = new cbit.vcell.math.gui.MathDescPanel();
			ivjMathDescPanel1.setName("MathDescPanel1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathDescPanel1;
}


/**
 * Gets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @return The mathDescription property value.
 * @see #setMathDescription
 */
public cbit.vcell.math.MathDescription getMathDescription() {
	return fieldMathDescription;
}


/**
 * Return the mathDescription1 property value.
 * @return cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.math.MathDescription getmathDescription1() {
	// user code begin {1}
	// user code end
	return ivjmathDescription1;
}


/**
 * Comment
 */
public java.lang.String getVCMDL(cbit.vcell.math.MathDescription mathDescription) throws cbit.vcell.math.MathException {
	return mathDescription == null ? "" : mathDescription.getVCML();
}


/**
 * Return the VCMLPage property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getVCMLPage() {
	if (ivjVCMLPage == null) {
		try {
			ivjVCMLPage = new javax.swing.JPanel();
			ivjVCMLPage.setName("VCMLPage");
			ivjVCMLPage.setLayout(new java.awt.BorderLayout());
			getVCMLPage().add(getJScrollPane1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjVCMLPage;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	getMathDescPanel1().addPropertyChangeListener(ivjEventHandler);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MathViewerPanel");
		setLayout(new java.awt.BorderLayout());
		setSize(433, 362);
		add(getJTabbedPane1(), "Center");
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MathViewerPanel aMathViewerPanel;
		aMathViewerPanel = new MathViewerPanel();
		frame.setContentPane(aMathViewerPanel);
		frame.setSize(aMathViewerPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Sets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @param mathDescription The new value for the property.
 * @see #getMathDescription
 */
public void setMathDescription(cbit.vcell.math.MathDescription mathDescription) {
	cbit.vcell.math.MathDescription oldValue = fieldMathDescription;
	fieldMathDescription = mathDescription;
	firePropertyChange("mathDescription", oldValue, mathDescription);
}


/**
 * Set the mathDescription1 to a new value.
 * @param newValue cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmathDescription1(cbit.vcell.math.MathDescription newValue) {
	if (ivjmathDescription1 != newValue) {
		try {
			cbit.vcell.math.MathDescription oldValue = getmathDescription1();
			ivjmathDescription1 = newValue;
			connPtoP1SetSource();
			connPtoP2SetTarget();
			connEtoM2(ivjmathDescription1);
			firePropertyChange("mathDescription", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G530171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BB8DD0D4673554E07C4378070A06C4B47E5004647126E6423C674B5056B6664531B6359DA7C3BACEE29A53580E263ED713BA756EAEAA86C970271666912309CDB521A8091990C465E7C5D1FC72E4DDD0C1393BDCE1F559DDF7AF32A0BF6F1C6F5C6F6EE539F797CDE4664C5D6FFCBF67BB67BB3F5F3D883BBECA5AE4B26F928453A6C1797B5AA488730B85E1491E9797F25CF80FBDDB507C6D8358AECC
	5A11894FA468F34F35E7678ABFB5E7C1FBBE34CFC37B2F70FB277002F96457704300CEB374FD706FEF5D08CCE7C29F27330535DF3F3D8D1E6F8124818E1F19DE243F71F61E024FD0709CCCE64031B19FF466AB385350EE86C8GC871527805705C4AA88FAFA9D646B5CEC896567D275F1C036BE85664305FC7F3CFAB4F3D42BB26B5BE24D55939CD1993836DB4GE45EA25C2EBA884F525A1B2D471D8E17DCF85BA9395D056D225CD6585A61AAA9B9873F6CAE29D372570A9E498DE35D37F03DB11DD9EC3EA09C01
	76FA067BF59352C8055F0BGD628781AEB08AF755B33EDGEEBF676B58BFCA15FDB75CF9C6D8597A132D6F9B70956BA7FED27CA13EEABFF3D87E464E60677DA86BD55037ADE04F5E8BE085E8810885789FF6764B7BBE03E739C32E743637FBBD65BEDF053B45FF4E5BA23961F7C98974A8388B12536BEF9184BA5F6A4E821D7DC4821AD7FF5773C8A649DF7233CE397014107103A966ADBAB249C83EE3CE8C10AC6687C2B2A15A638DE9AF8B8C544501346B85ADED610DAF36EC52211D7F2BAF362CD256592021FD
	D846333EF0954FBA9FFE63BC1CCF78A60617B5F8524B15CCE730BD927AD64BDCB79A5E63FB29491CA56496CD5515C3420F624C359D3407360E703D24B33D0B6FA01A596ADE16B07CFC8D1E76F20161313D8C7A0AEF5B33C93FDEB2211DA6C2BB8DE0A940AA002CCEFB76FE0062CE2EE37B7A8F8DD147EAC53FDC5161F237C8FE01663E543F9B1ED2D0760B551E00ACFA1C12DD743BC407DB8A884A18D77BD1860E8173D6B15DF7820DD312C7720B324B6B015545F6C9167C819A3336FFBB0E71CB2C5766EA1700C0
	3BCF606B3E5D3F936DDA8C4897FDAD22AC05C6D03F096947ED518EAB4282701B6432450272EAG7EFDGB12A9CFA84DC6F2C648707D1D2D263755E6C70591093E1E9A74AF99E739D7170BB25134B383384F13B02766C02A0DF6787428E4DBAD6179337AF7A3B380DB5DC45B9E5B03EB1487566778DDCEF2CB9CF8A853F1C2C2BB763C10703C152177141F07BF132F5F1EFE9C16E67FF5B54E0E0D31C7E5D583A3E4F30DCB522E1D1EC645B50A0B93FF6944FECB96CF79D402EAEAE6B5F837FCCF7AB44004435753C
	9F94CDEA89C91E767953EB3B9419E2FB2BE2B3B9AA9F4BD8FF812CED836881188D30380B4B3261DAC35819042F736DE5F90B5130E8701B4268FC9B9AA43315A60CD752ED49A3DBA51F64E9019F81256FCD9352D16C793AD71D331661FDE07F15E0F081957FC7935A28A84BFE1723C3166AA4D9F6F9DAC37D9B992DC0074397F29D1C56E6B372666D847BD747E71B51F61CDE0FC7E20727CED17AF3186DCAEE299DB6DD696D7048045FE9417C66265425780E3FDAB68BE87B6E8E74C314B3240AA8BF1F5F558EAA01
	2ECC30F623DDBF5B19271151BAB8EF4CFD72202F201B5BE767A75CBE77F7FF9FBC344F2C97E392660CB347F513CDA5F5076CD371AFA57AFB9F46FC08028F50DE1FEFC63905E7B196B67E432FF26109390ED58AB87DAE9F8A2A086CE44FB124118E3417812C6E66F67267926C67BEC9B110CA2F5BCDE2C63D3F43FC5C55DD8AAF19504E3FC33288694E1BC711F6C03A55A1012BC767F8D61579DBC7F70475599579D37FBBC7D17EEE0DDFCDE3B437B673FCD2D668455DA19F168C4FBD0027F13FD047E576047A7361
	F7D98F0D1B5F036312C4BE2ED199A743B396E0F68F71926C45F19E879FA774123D6775927D02DE9A371A0D4BF572F18BFB49A7E4740656AD9438FE7D61A06A914BC9EF083745E0E12093EC2124648CBBBC4ABF8F8433147145FDBC4F345D41B373C1FBA4C0D29F57391F6770BCB37EE6321071C65196237CB92D0F761B5197523936B5651BC9A75A0EA34D7CFE602B1F6BC3C729B656158782DE270B05D9652C769F536AA4618E9EFB971E57DD7E00DC8DCEA3484F7550B15CAF46E1852D64A5CBD86E04BADB86F4
	03G297D084F3E06360AE7CCFCBA3F64FC0E6F1EA3B4CF1EEE4EB660F3DDBF7137ABA644E7C15F7ACDC46F0BE6CE2F867AE38148DE76DDFBFF303DA836749F4D3897394D95203D3CD5DE2650DA7C54ACA1EDCB1CD9AF37EF1B17E0DE206CE125E6AFADB39D16A0G6DE7033A1FA35F037A81007C4DDF7A347EE6B6601783ECG489D4677BCC2545BB32D7B3C4857BDG631B55B9079D1C178D43F0DC5D65DD9ABA8900DB8830CA9D5FC0634159936FCF6E51721EA58E5765BD6E0DD633758162597DC0087795939D
	16F593B96FD39DBCBF1E8FE3D6BF406B36DD4771497C32EAB7953B0F4133D5126D15672CB587EA428B3AF38325F074E08D1AD721DB74349656C16071349E95F8AD70278FB98F7B2D330562F5B7F5F9E07D3134771A58908FA9B9EFEFCA87A09E3EF1F2B9A74218E531DCEEC9CE141B68EFADA21ABD17B84D184573053C1DE38DE9EE9BCE340E8C5750CCF2D85281A87E7FB398DE83458E8F65E889438767EBD49BACE2BEA4E5B8558696957FA243AF506009374BF7B8EF0B216F7003BC1F7D269CF5B39E5A29G0B
	GD6G88A320BE9D41FD47B3473E9422548B559EC863BD223BEEC060D77CC57BF1248B31DAE95F9A2093CAAEF69565D0BAE26879A94DFB054D335D45BCBA43031735F795195B4F18AD86E7982B2C9DBFA2F406A43B5FD6203DAD837C9A002C11A0B3003211DCEE7FFD3CA01A5CF86D24880CF8AAEE0ED613B70F9C48AF4D2B0ABAAFB6EC9E71D1E6E5F5A3742581AC85D88D10BB8A6287C06DA84E0F75C4C5B4FE4AF9E2E8732ABFAB4313BB3EDF33F8EFFC66C61D57B6EA60BC72BB9F947EC308F60704FE07F2AF
	725DDBFB343EBBE6945502A970CC872098FF2E0F47786523F80C3776233D650E36E79FGA89B4DEB0A1F5DA34FAFC71D57B0DA0F6722ED9F8A3AB94A4996176CE5E9A674932FB996AD2FBED8AF91A09DE059E84E6B1AABD94A1ED60F66713C37CA1B37ACF83F57B01E6F9FC3FB340E8959D2124736057450D405FA988BFDC9GE9G4BG56836C0A33E79747F1BD1CF262E8B4BDBC09458E68A0D33B418AC8B2FD4491AE53063801B254BF0BA7864DAB8CEB4BF1FAF6763DD348DF9C74A5832483E4G88E3A12785
	A89B4B79DBF522BC9AFF6A55094DDB89785310E36B1819325F934EFB5339F351670D556353D40DFC8621AF9EA085E09140EA002C074027BC4479ACAD0B6ACFB4FCC672A7F4DFE3E539369556EFGA05C3EEE4475C0BB7EA1EE03CB6EE0BCCFD35B4BD99BF3B2EAB75F893F5F403151624AD001E8F48D22E1790E56C7A079D6149B577D55657AF57F79F27D3A7FE279F642439A5ADBC15E5FD49E79DEC0AA573B977810717DABB37ACABF54472EF60911A55FA5857711FEDC6870100AA065C0F86CD4756E4499BC47
	252AFE7D297C8B9D7DA247479731C9227F7C756B2AF25579A4A75F73DB954672FB3BC2DFFE9BAB74653729B2327CF2AA0D64C7B2FADD7E0B20F3CF723FE09D0A6E6C943C4DDB15B135323736C8DD7B0C55180F7F336A73D1EF455AB3606D70BB25703DDE356629FDA1E32C1625F65C8E0DE9E573E5C81A25C13CFA58FC6AB31A5FE9459862F035387C4A0D8571780D2865914F17F46573AC03B8E7939D8E29C509F394434AFB78BB21558F71F8FD3597F5F07FB8FBF6A900ED9C7785977AA279C0773801FEA1865A
	14072731789FBF0E72F084427F106113B4F84A4F4F747377DEA95017BB1E579E1B9D1C5F133277DC085F5613867C56B97DDE37FBC0DC7FE3FF78FD977ABA99E80C9C4F637AC98B17C952F8AE13F96C6EEDB93457GE4CD60B2792FABA8133D9374FD6291401F1E20979702E7B1DFEE043EA040F800E400C593383D7E6DE454BA63E4B0C21D11DDE52C67BB2A7475BC2F4AD84FBF2A0A2E67872A0C757CD0D5F4BDAF2E0AEC774F6FFE1F790DC0C08A302446AA4A22E28B4B9C595C962E7B3D6D15C58A5DB1270C65
	B071143E9C92CE994BE1462968F2C8BEE5AC07FFB995DD8EE9270C64C03C5EF68E6095ACDFB9736A88E7DEEDF06655914E3CFA88E7DE9D614C2B07F066557A3E6DCA906F305DE21737C3061AF6A25A20BF48EDF7955809G3883G2593298EA1DF702F1D385EF54814C0E4AC009D1E04F30B3B795CC4981F8A3094E08D2EBB097B170DD634F10D17AC22BDD61E49511E0792E714BA33A712CF8CCEB23A33F811795838C9616FDCDFE67824C9616FDCDBFA55BBA5684B0B67B91D2B0F67F4BDAAEEB143A5C1FBFEBC
	77D34F768B6A1E1F537C2E6DB7FAFF755D65F72E7BCA03FC76A10157E269715CE7B730DCEABD34F3A7032ECC6632B8E309F4E6E5130D4EEC47E5DC4FB6B97C1EA91F61DBA6075FB3BDE96177CCB274AD1F4C4FE7DBA36E35F48A4456A99CD75F484F31CD458DEBC2DC9C341326703890F3565846C71C55377131E7757330C9E7A367E18F1FB572C3445F74A00F5373E1FF2B27F09B7CCDA14ED763F12158A91714D4F8713DCB8D99B41D59AB2CC641797B2772B34B6D42B59B21AD8344CD65F5F570D3DED7274C1D
	A5ACFDCD7FFD408ADB2FF976D4BA3FC5D3B5F7531FB9ACC473EAB7271919G3EA381F1F15D5A3BE2BC2FDF1A290E257EE7877423CCD036217EB5837AD90EE25176FFFCC75B0FB2FAC419CF3C3D70F74E5B0697D285775331065F8A45A690CF494AF36F12E9260589351BC9DF1AFA388E2DC8D06B39DE44ED1B867ABF0D63DEE5B8FCF714285E455C688D37D11CB3D49BBC90E5AC51F8E0900D3B2973223DCB2F1D06B208D15FAF146A6C097C7C2B4CBF4A224366125DD242B47CE66C1D8B023A4FA3C238FF48502C
	35A6EC5D4C69BC4FDD4C7CCD5E74F07FC0B55D0169617E612A197B07E268CB1C4E6DDE3470F3949E666713F7996B3982357DB1EB63FBBDEABFFEE928BE965738DB9FCBB4FEBCE49A77D23F5359FC520871DB6C103D81163C87040607D1A6C79B395DDA21CDB15D532846F4402582AC85D8036393F9CC1F46FC2884F5AE164734D6EA93DF6BF0A217DF5220F78FC31349D377B86F753B1EC73A748A730F564470DA6ACD062FCD8C2F25F6F7F19F5D88FD69097CDD474BF5A83B7D0F58334BG9AGFCG6381D29E61
	312628663090258631F9FDB5900C5C1A7021FC0F53FDEF5F527DF08B7705737F6DF1A16DC12B617DE97AA32447AB14E75A62E9A6FC92FF3E0B48DF6E23766C8200DA00B6009E0078C7B9FFDDB54ABB893C86A917E55159465E782A17AAAE29B30446E4F24123A8D339E7EF84BE129F257D107EED75636F813769C53C6F6BCFD08F6D1567EAEA45D6096253DC757EBCF3860FFD0B1A3471E16F6767F563437A26EEF3698C225DBCA3947BEA1CC73652BABF3B22FD4F13BB5DEDB6692C03902F4CCF522CC33E692C40
	6F95174D607E6AA7A66E2F562B3857CCBC874DCF62B6762299FD5681351D415A78DE165AAD666FA2CF44750D6D2E77BB21E1645FC8BF0216216B4787DBD94D91FA83D1C4788B0D288357C5F7C0D2EDA329D3FBFE456F8E537D8E8721CC1101CDF946ED1CE6A27D0AEF647A951744731F450D61794FDAC11B3F7C39B1BC7FB18D68BF5C941E7F141B347D0E26707C074FA7DE1FEB5272CA67342ACBD0FF2F557C4E6F3A7F754AD7771586791E5F549967713F2B534F637FD0271F473FDD97793E59E4B37E8EAD4B26
	7D8E0DFC6708FABC2F05209FABGB2E7C23D89D0B0D3FD67E47BD8E0FED347E71EECE9453B827C9AD666743BAE9A739AF3B17AB73423AE6237B78E2FACFB5BF1FD0E9FF7914FCB767A9812F07197D1C6FED7EB1BCCC3957C740B2877EE69BAC3135ECD6841BB06CA895F57F39B6B14382F4DFF62B1A17F23B2B3577770F3BCBD13ECCB1E997211A19DFAE240DDE9B20CD9B0B3F25EC5325FFD896356D2983B9AA0F796646DG25G36D9DC7E1F598F4053AE5E98FC0B8FC8AA31589978C517C7D63EED38AC283270
	5A7FEEB49FCE708C14EC679DB7A427EC93DB85FE77A28BBC57EA1BC5F7AFB1700C1FC5B584655E99263C887CD11EBD6D8A6E0364FF6ADD667BC237344AF7FCD54CC725405A0BD41E1F36FF9E0167DA3F57A77965AE4232AF6F14F3185628BD07D5305E06D9114FC1512DFAE31D1DD29FDDE7E754D35E59AA593AFC4ADD576CFA54B76F756B81C9350D6F57672A386AC02DB76042CBB012C3D753DEF866BE863687D08B50865083908F108C107E98174F5106C8BAC145F7C8A7A8C67F08659A993006AB133FB7FC0E
	6156816E990BFA8FF849D8961FDE0AAE0BC317746D772BCB036D3764123E7D16DD525AAF653609824FEDF3E75B33CF4F667777AB851E5F474C66778ABBCCB8B68D5ACB81D64D66F2BB5B781E56F7126AA8B4AF30386772401108EED7B77BC4103E39A2D925B6F279E13CA35C530DDCFEEB553D47B6994BEFCCD3F47945B7694BEFFA53E0794DE852175F1CA62D7C887738322EDFFDF9C67854A64CAF696E751C68015C94E3835D6D081FEE8B49245E55A23791BEBF1893421F16103E6A8BE78D2A27079607D36FF1
	5E9BF7BD0FEA2887190E88F342EB2BF18C3FEDCEF8ED15E7627A1787FDBDF3F89E9B07A8E5AF13B53F77186EFF6E7275FD25C17F13D7339D7DFC4A6F04CD323075642D8EE69881D958443EE1D43EA96B57662A6B07BB8DF35554394A7F4E4D8D7F26EC74CE54D9E19E549073383D3E34631F02F16C2AEB975DEED9F45FAC7734E09C2B681225D09EB4EEA72E9F60E314CE45276F44FD5F504C79FFD0CB8788AC350A8BB193GG5CB8GGD0CB818294G94G88G88G530171B4AC350A8BB193GG5CB8GG8C
	GGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGEB93GGGG
**end of data**/
}
}