package cbit.vcell.client.desktop.geometry;

import javax.swing.*;
import javax.swing.border.BevelBorder;

import java.awt.Dimension;
/**
 * Insert the type's description here.
 * Creation date: (5/11/2004 4:50:11 PM)
 * @author: Ion Moraru
 */
public class GeometryEditor extends JPanel {
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private cbit.gui.JToolBarToggleButton ivjgeoEditorToggleButton = null;
	private JToolBar ivjGeometryToolBar = null;
	private cbit.gui.JToolBarToggleButton ivjSurfaceViewerToggleButton = null;
	private cbit.vcell.geometry.Geometry fieldGeometry = null;
	private cbit.vcell.client.GeometryWindowManager fieldGeometryWindowManager = null;
	class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == GeometryEditor.this.getgeoEditorToggleButton()) 
				connEtoC1(e);
			if (e.getSource() == GeometryEditor.this.getSurfaceViewerToggleButton()) 
				connEtoC2(e);
		};
	};
public GeometryEditor() {
	super();
	initialize();
}
/**
 * connEtoC1:  (geoEditorToggleButton.action.actionPerformed(java.awt.event.ActionEvent) --> GeometryEditor.showGeometryEditor(Z)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.showGeometryEditor(this.getGeometryEditorButtonSelected());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (SurfaceViewerToggleButton.action.actionPerformed(java.awt.event.ActionEvent) --> GeometryEditor.showSurfaceViewer(Z)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.showSurfaceViewer(this.getSurfaceViewerButtonSelected());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (GeometryEditor.initialize() --> geoEditorToggleButton.selected)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1() {
	try {
		// user code begin {1}
		// user code end
		getgeoEditorToggleButton().setSelected(this.setGeometryEditorButtonOn());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the geoEditorToggleButton property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getgeoEditorToggleButton() {
	if (ivjgeoEditorToggleButton == null) {
		try {
			ivjgeoEditorToggleButton = new cbit.gui.JToolBarToggleButton();
			ivjgeoEditorToggleButton.setName("geoEditorToggleButton");
			ivjgeoEditorToggleButton.setPreferredSize(new java.awt.Dimension(75, 25));
			ivjgeoEditorToggleButton.setText("Geometry Editor");
			ivjgeoEditorToggleButton.setMinimumSize(new java.awt.Dimension(50, 25));
			ivjgeoEditorToggleButton.setMaximumSize(new java.awt.Dimension(100, 25));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjgeoEditorToggleButton;
}
/**
 * Gets the geometry property (cbit.vcell.geometry.Geometry) value.
 * @return The geometry property value.
 * @see #setGeometry
 */
public cbit.vcell.geometry.Geometry getGeometry() {
	return fieldGeometry;
}
/**
 * Comment
 */
private boolean getGeometryEditorButtonSelected() {
	return getgeoEditorToggleButton().isSelected();
}
/**
 * Return the GeometryToolBar property value.
 * @return javax.swing.JToolBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JToolBar getGeometryToolBar() {
	if (ivjGeometryToolBar == null) {
		try {
			ivjGeometryToolBar = new javax.swing.JToolBar();
			ivjGeometryToolBar.setName("GeometryToolBar");
			ivjGeometryToolBar.setFloatable(false);
			getGeometryToolBar().add(getgeoEditorToggleButton(), getgeoEditorToggleButton().getName());
			ivjGeometryToolBar.addSeparator();
			getGeometryToolBar().add(getSurfaceViewerToggleButton(), getSurfaceViewerToggleButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGeometryToolBar;
}
/**
 * Gets the geometryWindowManager property (cbit.vcell.client.GeometryWindowManager) value.
 * @return The geometryWindowManager property value.
 * @see #setGeometryWindowManager
 */
public cbit.vcell.client.GeometryWindowManager getGeometryWindowManager() {
	return fieldGeometryWindowManager;
}
/**
 * Comment
 */
private boolean getSurfaceViewerButtonSelected() {
	return getSurfaceViewerToggleButton().isSelected();
}
/**
 * Return the SurfaceViewerToggleButton property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getSurfaceViewerToggleButton() {
	if (ivjSurfaceViewerToggleButton == null) {
		try {
			ivjSurfaceViewerToggleButton = new cbit.gui.JToolBarToggleButton();
			ivjSurfaceViewerToggleButton.setName("SurfaceViewerToggleButton");
			ivjSurfaceViewerToggleButton.setPreferredSize(new java.awt.Dimension(75, 25));
			ivjSurfaceViewerToggleButton.setText("Surface Viewer");
			ivjSurfaceViewerToggleButton.setMaximumSize(new java.awt.Dimension(100, 25));
			ivjSurfaceViewerToggleButton.setBorder(null);
			ivjSurfaceViewerToggleButton.setMinimumSize(new java.awt.Dimension(50, 25));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSurfaceViewerToggleButton;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getgeoEditorToggleButton().addActionListener(ivjEventHandler);
	getSurfaceViewerToggleButton().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("GeometryEditor");
		setLayout(new java.awt.BorderLayout());
		setSize(532, 54);
		add(getGeometryToolBar(), "Center");
		initConnections();
		connEtoM1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		JFrame frame = new javax.swing.JFrame();
		GeometryEditor aGeometryEditor;
		aGeometryEditor = new GeometryEditor();
		frame.setContentPane(aGeometryEditor);
		frame.setSize(aGeometryEditor.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Sets the geometry property (cbit.vcell.geometry.Geometry) value.
 * @param geometry The new value for the property.
 * @see #getGeometry
 */
public void setGeometry(cbit.vcell.geometry.Geometry geometry) {
	cbit.vcell.geometry.Geometry oldValue = fieldGeometry;
	fieldGeometry = geometry;
	firePropertyChange("geometry", oldValue, geometry);
}
/**
 * Comment
 */
public boolean setGeometryEditorButtonOn() {
	if (System.getProperty("java.version").compareTo("1.3") >= 0) {
		return true;
	}	
	return false;
}
/**
 * Sets the geometryWindowManager property (cbit.vcell.client.GeometryWindowManager) value.
 * @param geometryWindowManager The new value for the property.
 * @see #getGeometryWindowManager
 */
public void setGeometryWindowManager(cbit.vcell.client.GeometryWindowManager geometryWindowManager) {
	cbit.vcell.client.GeometryWindowManager oldValue = fieldGeometryWindowManager;
	fieldGeometryWindowManager = geometryWindowManager;
	firePropertyChange("geometryWindowManager", oldValue, geometryWindowManager);
}
/**
 * Comment
 */
public void setToggleButtonSelected(String whichButton, boolean bSelected) {
	if (whichButton.equals("Geometry Editor")) {
		getgeoEditorToggleButton().setSelected(bSelected);
	} else if (whichButton.equals("Surface Viewer")) {
		getSurfaceViewerToggleButton().setSelected(bSelected);
	} 
}
/**
 * Comment
 */
private void showGeometryEditor(boolean bSelected) {
	if (getGeometryWindowManager() == null) {
		return;
	} else {
		getGeometryWindowManager().geometryEditorButtonPressed(bSelected);
	}
}
/**
 * Comment
 */
private void showSurfaceViewer(boolean bSelected) {
	if (getGeometryWindowManager() == null) {
		return;
	} else {
		getGeometryWindowManager().surfaceViewerButtonPressed(bSelected);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G6A0171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BA8DD094D71A7E20C1A50A0A8998F3B12E37C7AE6C9659F56F3CAB2FB4DB664ACB580B3B676EFA952F4E5D4AA5260E5BCDED58BA13F3F30FC19483AAAA596005A4A4CBB612B5848CDED8C2422F0942309019A3680152B08D0C74CCB75DBDB072FB5FFBDF3F1E1E199EB0EEEE2A3E6AFE5FFB6FFB5F5F7B3E6F3D9ED270467A6CCCC781A119594478FD18C9C8C185A139FBDEDA41F1713E4EDCE2793D89
	F0024CF79C0467FA68CB7B134E5CFCB22667C0FB93348B207D8A3C1FA2133A6BFDF809324ED968FB692EEE676C6BBC68636B9CE66D25D29EBC0F81EC869CFD9E14697A9B24C2833F4740F348F490320F0D799B294840DD04F6AF40C6004DB20E5F894FA3EC65C555D546386E1549A463D155F11452315064D02E60DC1771ACA6AFE49ED068DACFB1BE691CB8E8EF872042E791F76D07702CE99F9E7C243F4F23170D760B12D456AFF9C41FDE669635E1DDD64A86C559AB6A6A4D6A6A4F0C378BEE0FAE2BA4B0C2E9
	17F9F398ADC26A20FDD025387D5DF43DAD505E8510EE623776D07CC5F86F858828DC460F5F29B1E4681A78CB726460A3C70EC711B1DEC559B62BC1990B5F6D4BBA4D6C712FB255FB867495EA1D39E7815A819400F800D7199F7C4277AEBC6B7B74C6596B15FD750A52A03955D659ADCA70DEDD8DBD866E3258AF2BEEC250566952D99BFEE6831C7742171E07BAC97E005BBD6572B7491EEF5F65B8EC2313BD49930EE48DF531CD8B6A84577E409BED6D3DDA28DF062E7D85312ECD1EB9F7B85BE66D229F1DBB1CE1
	50495103EBD769545692337599F84FB47C8371238CBFE941230F3E48FC063663206FD91D7BC657B14E0B73608612DFF1372D9E923F9B67F0791187499F4E4B0757A86DC4BF2EF9546465D3065FE241A3AF0FB09EE9FBAF74B9C7BBF3513FB2C6681E5D8C6DDDG69G8747BAF3CBG6AGDCE35C47BE125F3FC59FEB97D43D416F115C22CAF0EE067CEBF80A81DD95AE79B4DD70750B1D026A917AA4D1A34618DF49D487FDA1739C8A757DFED863B351A72A026E11FDC0DD009DAB2A9A0E49D5CE50B12A48FADD9E
	2F888BF89542691ED2CED17D891A7EBF0ADB504560886CFFD521B69995BA01A29000F7544B1B9A55178E7247812CB375F0972357A22ABED12A2EF64A7230DFF1D1C9C87A9855F3B30B9D29703EE30C6B78B5963B4B831D3997831C4E77141396BACD1EFE4A3E205E64FBCC6D21F139BB40FD66E7DD5CE71A0EFE031C7D619ADB1F09877F8D8450D7628361FBE7125124FCE17BE0CFD7143D549D305FCBDFBED63C96F50D2CBF127EB153D64B7C54D61B0167DDG99260EF3C60A51E79B84CD64DE5A260203096E20
	46114F0F2F959A7A24FCE59B7CD35D671A32B859183C1B1D3915G5DGB1GA9G3BEEF21DBE5653BB8B1DBFD65ED05DBE455632DB6768D738966A7245911A3F44D1C823CD22A27A5C702299FD59AADD57585F8332B9A717619508870D3081B593FFC225FBD650F555536757458ED157BD3E41E07FE9152E25797B14E0A861EB952BD4D6F98C6201B97EED156E25FE59679319D14DA9C67FBBECAF0B126885269BE53FCFC77CFB9A5D8F4362CDA316D4E807880D85121F46A52CA7D2852ACFC575F841D5E8E8A34E
	F13A4F85EF21C5C787407E34AEAA063E4AF13EE747FE4377EC497883E45BF545E117F3927FF405A3E19C77DB72F8F04FA2CFEF69763C1FE1B14540EB486B7999BAB72C24B1764876D1CAE787505F8310B14E7748C61D7673B8E4EC0EC6D912D015260ED77A7329CD44913F88611B863C96D3EF097E13E1FD1D068E31FF3D1F6AD032444A64892A438557F83D18876D9200268954E34C846A41B949F25AF5BEAE8370F47F65CD623822C9C3EF0C5E0B6638C44027CE86696D1C34527BD62FC9EF9277F15E14C1EF4A
	081DD3F45C8D010FF39A7D6EA964F3F24ACA6F23BEBEEE4F9446038CE3FC4EB40EC37BBCD7CAFD065526B704D1A1D0260D015FD7D7B7378B20FD2CBD9FE379030EAF1F66B5663FAB54F6C3501E8710B84D7D6B7BC7F90D19B01CCC76BCD3F1B8DA9D1DEA7031EBBA68DF1BFEDEFF88FD63D8002ED9B083324DF03FF8F5541A676AB5CD6E773094EB587451D12B7FA16E71511760B960D1B57D928408G377F8FC7A93FB4879BE823A6F91055AAD456AAD8D781481FC77159FA010577E4406F86B8G1045681D3CFE
	0E468F6620E578E8975581D9750A6EB3D433E54218DE46E2D5D9BD6B3EC05FCB399D9283349E51066431503DF266EAE9A72F97B71C2AB356CF7B6686D2B3F34DE1D73F479E9FF2F44DC31D4E1B97546D45D5FDD95DGA827FC1D4B1986E38E4E67F27C68BA0DBF02BAD801FC0DB73E854FC1D18FE52B412F6B322FC324DB9284AC3D4AF97C0F57B80FA5CD9BC9D54630AD0F94EA66A3EF6E79C19ED30EBE1F3D8DGF9FC271773388946244F6736B8FA554E96A58B78F96B69D7DEB6F45961D78784286CBC6218E8
	2852307393A66DAA1827AC6072B78821727F45701BA8FF88A99B718D3A2B85DEDFA7834D3DA65D97985E6373689EC1720C0BE7CA91DF5217436294D2C29DFE63F52B1DF304C536BA0CFBE650D13890F5D737B02843D43071F6534E6EBEAEE7AC0C5936106B2860937AE4F9450C85F9ACE6E87636EE7301181863F7C61CF776AF8C56E6F9B111F59A1E8306C7A8AF45B161E795BF431747041FD5FE25F0DD56C15F4698DE3B560F5318153388EC8ED08360825081929671D851B376811963ECF04987A53BCF10BAC2
	12BA2F5183F4DD4843C67B1500D5DF2807072E056BA1F5D1286CE9E1ED1C37B5E2DED9D87B5930F9E81F678BFFC32C778803FE8F84EA17ACCB8D026A128787A591EDE55483A9A356FAA0E7B1567F6570EC824058DE43F2B64D055D0BF98C1F7A549A43379C1FF264C65943890B114FCD0B037ED762F59DB66E89A628BFE5C0DF7E9D1D39E7G1AG06GE2G126F60363ABF7071DC36E24152A5B7826EA2646C46703A4A542D7F7A6D59E4E1443CF01B6C38A3F49E4AB8BCC5E55C8BFD87G8AE2C13FGAEG85A0
	A1164B1891281FCBC67398F9ABF23E57FBFBF2FE94B1AFDC4ECD31217350CF1A2EF2BFC90B65670A1F5CA68FBF1F130703CB6C66A589F35D71582F77E7F34EABDAE2E75B1FCED35BD6C2DFBB4090C08CC0B240F600FDCB38EDBF3D7951AD7AAFE67EC82BA21FB77AEECF1F0108F9617A4CD99ABA8F6F851EE6F5DDB174D582A0EE3BCCF1DD50D616F2BB0F0C501C18E036A7D81B66DCECE70DC4BBCF5F8EA4AC35133168ABDDA37C1C0FF6EC9E0FFE1E7CFC5C7EBC7945387DF932E77C84620106757609770B6333
	1FB73D63F6674D57986FFF776B630C3626099AF32CA6C1970C3E27F5DA7BC41CBB7FG1145107B9459F76D08B16602AEB7D6901EDFFAE77E0B581E850C9443E34113A37CBC103A141F871C6CBC3B8F5AE4D9E7EE61B26E9B75BA774D72E5C13BB6996FDD7014G66D97AF06FF9882D7192G1F8A3083E0AFG0963FBAEEBE24E7CFEA1B0CBFE7F65C4F4DB9F18303735E3121EE5B4592F760B6176BCB2D9E876857777A5DD74D255631813EC3E8E452598618F2759FC6C0BB67F2D49E8BE03F6CD391EEB5835FDC0
	153DE0D91C671F0AAE6B64143D2C8B26224B3AE4EAEED9D7CDC517B5E9EAEED9B7CC4DAE2B3B576A43674CB8F169AA7737623820CFD59A6F9761598D20D87A10DE21902A3BF386FE27E0D927354214A1FDBA3ACE1F1B365769735351F5CAE6665669111968BA4D1F19DB2727E7E657697DFD21BA7840403F6825F7D012F0D3766BD01B46517D7E320F5716B150DE87309DE0F79C561898CF9E9A237486202A01E5BA94311F245D494EDEB21FDB85EDA70084908710F2A7BFAFBD778E55AFBF0870G04B6FEE6045A
	38E0397DFD70999BBC1EB3363198D5339C4F9907CDFC9A433BACF8BCFFDCE6F85A1620EF67F21EA33BD84DDC39826A02959C77E88F4539212D1B38772F71DCBA4F442DE2380D505EE2625E6826381D505E3702473791925D3F82445E3F2609FDAE0AA1336722B8924DAF103F5E2BDC5E83A64F93ADDC5E7CF80E5B534265ADB2F135CEAEDB1D095BF7196B4085B8547547BE7E6DF488F06B63398FBDD5C6F9B4F3923DC5292EEE10691D20939D92F352A2DF0EB1FFF7BC4FC95FE6B473D742598320EEA5BF5F84FE
	4B4FB7A9DF5FC0F67E0B7D9D55DE571423EBA57A52644A607926725D3EACDCB3D361EBEE067EE7D7B21BAB563B896A4B2D846BB16C97C27A295ECBC37AD70774D3FE7FA1535A7FC8C8FF36E5BE4A76585BDC36830F259269BBB1D13FE3D72DC2193A0DE7715FA7E566A7369FC29B91154A16GFDA92B385DB2B5EE5FED2BF8FE7FDB36C752211D3F9A4EBE2BB97E878CCF6FA53BD6633DA7623B34DB2963A81D597A53D7C576671BEB0F5C529A076768377B9614CDF82C14F52AD7C59587C4D5955D9D1EF1DADF25
	2E26FA0AE571A1G6FB12BF9BC7B897B4E2543264DD8CD7F7370A6BD7292E782FE9FB563E1C224DCB87F01EBB416C2A075F87DDE369A2E75B00BA789B0EFFD82DF6B3F3B59D8A190B6768FAC4E2441385DG08DB42767641B5708E003CDD79A4485BF3AD1C371AB5113CA10DA136475B213FFB8D27FB220362E2211D30065B2551F7FB5F76BF3F4DF9CB3F74BC4C870BE46A3B5B56E0BE48B4714B99BE4D02475875D7E66C5A8DFDB5F771FB2A1ADA2A3B75505E82308BA09DA06FEE08C7F773B87FD6E6B919230E
	F5490A939201E4895DA85FA165767E737070E19EA3B67D751F134D0B1B225E6F545CED44886339B9ADA913BED13E476B28FCF150178C108670A440FE007CC4AE5F0D4C33A89F3DCB2C57F521FF085D4EF36168FDEA90CD0B847461D758F73A81C906238D7DBA43FD6DFD15475C92D84319C8F105DA71ECB6CDC45E11EED28BBD9F8D0AB25EED065C1A71B13F7752EFC77C5453A1C26694E0EC856F7FCEA915BF64C2B80C8E5ED347DE31466A04C43C27CECB647B6C4E86E22E393567F5F87A4431E273E3C11387D4
	C27FGF0664373E70B4F1DAF6576DBBFE67D2FD255CB8BEC3F61D158EB481EE1BC637EB3A993E9BC7E3FD69A79EBA5C7E6949AE713F0EED5D2B087E27E132E71F3201444F36B0E9EEB7EA97EDD1BED7E595FB36E58E8505BE1212BF4D79EC15DACEF8A6A2620FB965D1CAFB7F403739E3A901C175D75C674F9956546C41CF77A3360BC2565D6EC01BAB86D64BAB810446DDAF3B1C86B1FAE5FBA8F7A25603CA7EEC9E60C834BE889E83CA7D85E377A3E4ABB937B983B7B7FF58D0CA197EA2357424EDA7BDA78F22D
	FDAD5CD5BB7B3DCBEFED746F7C0335566F7C98831B1A699E2FDC8BE781G9DA096E05DDA9E7FFED9CB3F1F51FFA2C5463E8B6EC1FA56237FBE52797A3B6B224B7A4FF5F37FE7E9DF9D7D5E59A7C3A072D27A9C7F33BAEAAFDDD69852B82756D19D291E41A19D0772F3EA9D75E9C99CE0E87447836CBF8E830224856F114E337FA6B40A74BB8A0FCDE3A25F7FC58FFE0D943DD167B8E1337FD9AED90B7B7E4935417DFF0C709A6BD0B34D9B782DC37616F97A3CE57ED1EF195027170990390317D2E6F8467D38758A
	7F1FE461BDBC8FFF1D1DCB5A21AD5D436D7203065F4133D338E1E4DCCC874CB200ECD7E5C5D4F56383987B6700E16F7B59FFD711C6E1635B51E800F51BE15F36755D000338CB98B4774BC848371FB860E77DBD33573A386E66D61AEBB741581DG99GF96BBAF30B812A56195F3C9A4F4CA2939E17183F29024727A3BF2FBB2D7CB801D66F3A5979B176DDF3F4BF6DE81E5BCF3B1B5937FA70AF57CD45381F901A29BF4983831AE86E070166FC93F7C9EB17B58F3D57C01D1CEAAB26BE8D7C4683EC82C883588B30
	9FA06F5E4E5C12FB39EE76B74F269BBCD0066BE67B15596A2B3AFBA37504EBBD58F24C9AE350FD0C3EEF3550F8E1FE87E6FFDF6800013EC1BCE345321C6A825A1F93FE7E3E1361A48307F49EEE0D2E7F9D2DF36B7F7B2D76F162472D11F1E2CF2BFD1C78E92BB5CEA02F671D117CD7BBA379FF3DADBA7FEF374D4DFFD91BBD7F15ED117C7F3E4D1E7F5AB6AB7F08EBB2682A66253971ED200D56B1F88756AA7804C11683D03EA72E70F3F16C3D7C5EC2782D65FB7F979E37BE0478224051A07E22C8F9A27C2C750B
	AB566F3561007F2FFFB97381F8267C9B495649F1FEBDD60C5E2C13E3C6D1DA0CD5292612131165C37D72FF7CF14A75268287F1DCA20706988F17C87698E5B220989127C59BA15344E1344E05345CA12D16D97A683DAC66055299EB3D39FFD1FF541AB57FBE5CD7A5778573826E77C09655F3AF60A76F637BFA07633DE87B9AE2F007D710A4DD10066BFDEE9A0F9BEE6AE2B057CFE5D17A9A9FE3F49AF7E6D9146F9B16B97F87D0CB8788EC1868152C91GGBCB1GGD0CB818294G94G88G88G6A0171B4EC18
	68152C91GGBCB1GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG6691GGGG
**end of data**/
}
private void spawnVtkWindow() {
//	GeometryJOGLPanel geometryJOGLPanel = new GeometryJOGLPanel();
//	geometryJOGLPanel.setSize(new Dimension(434, 287));
//	geometryJOGLPanel.setGeometryWindowManager(getGeometryWindowManager());
//	JFrame frame = new JFrame();
//	frame.getContentPane().add(geometryJOGLPanel);
//	frame.setVisible(true);
}
}  //  @jve:decl-index=0:visual-constraint="10,10"
