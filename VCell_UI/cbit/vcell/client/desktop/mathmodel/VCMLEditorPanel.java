package cbit.vcell.client.desktop.mathmodel;
/**
 * Insert the type's description here.
 * Creation date: (5/20/2004 3:35:42 PM)
 * @author: Anuradha Lakshminarayana
 */
public class VCMLEditorPanel extends javax.swing.JPanel {
	private boolean ivjConnPtoP1Aligning = false;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private cbit.vcell.math.gui.MathDescEditor ivjmathDescEditor = null;
	private cbit.vcell.mathmodel.MathModel fieldMathModel = new cbit.vcell.mathmodel.MathModel(null);
	private cbit.vcell.mathmodel.MathModel ivjmathModel1 = null;
	private javax.swing.JTextPane ivjMathWarningTextPane = null;

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == VCMLEditorPanel.this && (evt.getPropertyName().equals("mathModel"))) 
				connPtoP1SetTarget();
			if (evt.getSource() == VCMLEditorPanel.this.getmathModel1() && (evt.getPropertyName().equals("mathDescription"))) 
				connEtoM2(evt);
			if (evt.getSource() == VCMLEditorPanel.this.getmathDescEditor() && (evt.getPropertyName().equals("mathDescription"))) 
				connEtoM3(evt);
			if (evt.getSource() == VCMLEditorPanel.this.getmathModel1() && (evt.getPropertyName().equals("mathDescription"))) 
				connEtoC2(evt);
		};
	};

/**
 * VCMLEditorPanel constructor comment.
 */
public VCMLEditorPanel() {
	super();
	initialize();
}

/**
 * VCMLEditorPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public VCMLEditorPanel(java.awt.LayoutManager layout) {
	super(layout);
}


/**
 * VCMLEditorPanel constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public VCMLEditorPanel(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}


/**
 * VCMLEditorPanel constructor comment.
 * @param isDoubleBuffered boolean
 */
public VCMLEditorPanel(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}


/**
 * connEtoC1:  (mathModel1.this --> VCMLEditorPanel.updateWarningText(Lcbit.vcell.math.MathDescription;)V)
 * @param value cbit.vcell.mathmodel.MathModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(cbit.vcell.mathmodel.MathModel value) {
	try {
		// user code begin {1}
		// user code end
		if ((getmathModel1() != null)) {
			this.updateWarningText(getmathModel1().getMathDescription());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (mathModel1.mathDescription --> VCMLEditorPanel.updateWarningText(Lcbit.vcell.math.MathDescription;)V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.updateWarningText(getmathModel1().getMathDescription());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (mathModel1.this --> mathDescEditor.mathDescription)
 * @param value cbit.vcell.mathmodel.MathModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(cbit.vcell.mathmodel.MathModel value) {
	try {
		// user code begin {1}
		// user code end
		if ((getmathModel1() != null)) {
			getmathDescEditor().setMathDescription(getmathModel1().getMathDescription());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM2:  (mathModel1.mathDescription --> mathDescEditor.mathDescription)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getmathDescEditor().setMathDescription(getmathModel1().getMathDescription());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM3:  (mathDescEditor.mathDescription --> mathModel1.mathDescription)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM3(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getmathModel1().setMathDescription(getmathDescEditor().getMathDescription());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetSource:  (VCMLEditorPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getmathModel1() != null)) {
				this.setMathModel(getmathModel1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP1SetTarget:  (VCMLEditorPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setmathModel1(this.getMathModel());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * Return the mathDescEditor property value.
 * @return cbit.vcell.math.gui.MathDescEditor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.math.gui.MathDescEditor getmathDescEditor() {
	if (ivjmathDescEditor == null) {
		try {
			ivjmathDescEditor = new cbit.vcell.math.gui.MathDescEditor();
			ivjmathDescEditor.setName("mathDescEditor");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjmathDescEditor;
}


/**
 * Gets the mathModel property (cbit.vcell.mathmodel.MathModel) value.
 * @return The mathModel property value.
 * @see #setMathModel
 */
public cbit.vcell.mathmodel.MathModel getMathModel() {
	return fieldMathModel;
}


/**
 * Return the mathModel1 property value.
 * @return cbit.vcell.mathmodel.MathModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.mathmodel.MathModel getmathModel1() {
	// user code begin {1}
	// user code end
	return ivjmathModel1;
}


/**
 * Return the MathWarningTextPane property value.
 * @return javax.swing.JTextPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextPane getMathWarningTextPane() {
	if (ivjMathWarningTextPane == null) {
		try {
			ivjMathWarningTextPane = new javax.swing.JTextPane();
			ivjMathWarningTextPane.setName("MathWarningTextPane");
			ivjMathWarningTextPane.setForeground(java.awt.Color.red);
			ivjMathWarningTextPane.setPreferredSize(new java.awt.Dimension(11, 50));
			ivjMathWarningTextPane.setFont(new java.awt.Font("Arial", 3, 14));
			ivjMathWarningTextPane.setMinimumSize(new java.awt.Dimension(11, 50));
			ivjMathWarningTextPane.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathWarningTextPane;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	getmathDescEditor().addPropertyChangeListener(ivjEventHandler);
	connPtoP1SetTarget();
}

/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("VCMLEditorPanel");
		setLayout(new java.awt.BorderLayout());
		setSize(354, 336);
		add(getmathDescEditor(), "Center");
		add(getMathWarningTextPane(), "South");
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		VCMLEditorPanel aVCMLEditorPanel;
		aVCMLEditorPanel = new VCMLEditorPanel();
		frame.setContentPane(aVCMLEditorPanel);
		frame.setSize(aVCMLEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Sets the mathModel property (cbit.vcell.mathmodel.MathModel) value.
 * @param mathModel The new value for the property.
 * @see #getMathModel
 */
public void setMathModel(cbit.vcell.mathmodel.MathModel mathModel) {
	cbit.vcell.mathmodel.MathModel oldValue = fieldMathModel;
	fieldMathModel = mathModel;
	firePropertyChange("mathModel", oldValue, mathModel);
}


/**
 * Set the mathModel1 to a new value.
 * @param newValue cbit.vcell.mathmodel.MathModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmathModel1(cbit.vcell.mathmodel.MathModel newValue) {
	if (ivjmathModel1 != newValue) {
		try {
			cbit.vcell.mathmodel.MathModel oldValue = getmathModel1();
			/* Stop listening for events from the current object */
			if (ivjmathModel1 != null) {
				ivjmathModel1.removePropertyChangeListener(ivjEventHandler);
			}
			ivjmathModel1 = newValue;

			/* Listen for events from the new object */
			if (ivjmathModel1 != null) {
				ivjmathModel1.addPropertyChangeListener(ivjEventHandler);
			}
			connPtoP1SetSource();
			connEtoM1(ivjmathModel1);
			connEtoC1(ivjmathModel1);
			firePropertyChange("mathModel", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Comment
 */
private void updateWarningText(cbit.vcell.math.MathDescription argMathDescription) {
	if (argMathDescription.isValid()){
		getMathWarningTextPane().setText("");
	}else{
		getMathWarningTextPane().setText(argMathDescription.getWarning());
	}
	return;
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G400171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DDB8DF4D45535C68990A548BF820282C69BAD3A2C8FDF2326FD3CA7F4E90DAD2E15D6DE0BDD2C16D6FC0F3E47FBE5353C961FA7138482611FD8E9C5098AED509888BFCB488FE41249A413CC48B489A3AACB39193913991819BB5EFB07CCA0405B7B1CFB6E5CCC6EE400AEDF565A5CFB767959FBFFE71FFD76B9F3A125FB679465DBCA8949AFA25A5F477904CCBFC648DF5FBF361473A6045DA5447077AE
	508E32C2AC04679C28F35D6FAE59CEDEBAD38C6585D05EFE1F3B64CDF85FC5161DF19D0217A4F24A216E52091FBCB83C1C45A7381C8D34FC36FEB3BC3782E5838F1F05924A0F546F56784BB4BE27FC8BA12BE81B3175FBB4DE8B144F83E58165C82CFD9EBCB7D249232A0FEB6D4ECD4CA2EB3EAFDB3660B806B1B99D0D303EE735E79979FDBE798AE5AD20FAE21F89D077AC909ADFC0C6DEBB814FDA57455E131E1E00DAF949A38603151EE0C08C2B15DED13928CA114A10207AC312D78CD6D73B9B5B1DCD5E00AA
	49AEA1AC86216FG9DFFDDFDB19D0F909B140BE564E537204C05D0DE8A34DA676FEFC53E935E3DC083B237336E2F351A9DE72FFC1B2C68DD3CF1DB92BB27484C3E9CB9EEE77687BD85FF22F3D2D403582F053ABD0A3B6490D0B7108AB48568AD6A8B1B2BBF002735C7ED14C2A1A9EC0DC49A02DE399D0D04776AEA2851F81D22C7123D043079FE2A3E42C41F610875FB76267BB1CC320E70391F5F79A8D9768F53AC9BCCB0D916F545B2DFE1D8ACD26218B0597956E432D7A803FDF3306CCF08D1B6F9757006A293
	59FBFEFCF843DAED1C4DEADCF63D0AF3DD6140392E00F76C077D997FE34ACFB370191FFE177A8C1627C35DBA157B46592DDC97E761BC323D6AEED39C267FCB0665FC1469900BA66A7284753B4CA81339C35765FB143F4440E73AFCC879D8DE87F569175CA54C3F3656613AAD6D835F82EA81BA8FB482E89650E3FD5C474ED49F3CC19FF389325A908D843D22CCD85F2DB5FF042798D3E54191D6D4A16C915D029C90FA0222C234B6EF56A086BD037A6D213E6F81994DE2D81485B5A005E1F4A1A42A222C30B67BEB
	50A60FAC525A6EC0C8848121886163FED4338B1EC1C1D14FC43C02AA46DB307AE3B5B8A71784B70C888340BB432566A445916CDF8934D64761B1BADE1BA807B102B8A569E2B4520D16101698623C5B0A31E3B33C6F0BF10CBFBE053C8CA8E74678B82F546CB40CE38BF8D0FDC16E67EB6C30837BE4C37B3C98771B7FB84B7D46366591D271232926FEB381FCF8D5CC0B5F7D096B270E0E0B3AD57473383F28656CCD2E673C1879DA4BB661B399AF5F340C22A47C82939E4379813AAFB841AEBFD0FABF477A3D5AB2
	663B8D02A2F2EF6D104151C4EF9CF92667532DE59A26851A8E48C77CF183453DEA1BEED3AEEDBB8764BC8B349AE877E5F7C9BD109FE882D076E50EF1D56B089B9877E6703995E23AF4D3DD0653E3477F03AEECEEF65721BC7192EC51B6B1A2063D7022E8F5FB6BD0AFADEE78A43D4FFE4A0FC01CE904052D687C8F6BD0EFC1D565C0CFD4953BC4D58D04FB6375C728ACA55A930907A8AE2B3A8E31107AA04E686DCF55619A75C86130C81DC46F2255DBE90C9003E28814EE1422E115711BCFE2DEF5D16C57E2D45B
	497584E3CCB00A710E65AA0F8908F7C48E044075B0E412C3D7B0FE9C346EB6E0349C7C87F32EC2285BFD0547013E77F99C58F779A132704B0845ECAF1B7E40F8CB6C8ADB0F99D762F10069D4FB4ADC77869A2BB43E42F4ED7F8CF1CB4C168AE87BD5651B6009C9955D8B2A78DA7C1995471F8FF29782AD3D425762F7CFE1BD0FFB5AA2EC1402C186B1546D9EC09CEEF314EAF62C063E45838C07385FFC33FEBB4E2578D5D4046D8483F01B0E776375BB936A5C9A762C7E29FA44BEE8085DF3284C42B61E431E5764
	4586D81C1CG4FF700EF3B0A6DFE2037DBE528AF043A722BCC4725345DBDCE5EEE42D596A3322E3276B9702C5447F33773F67B2E456B0D6331F6FBCE73F6355762753CBD7297DE43F6BF575BF5EB63852FB1FB862E99751B59415BED3E4EE2563E6B2C7D516BCCBFB65EC597EF67B2549B47E3FE721B83683BB47F3EA0DC92E215CA9F2C3F6A6AD66AB0AC371EC177C7EC6F3F4EF36845B67415B9D04E86DAF21D7B790BDBF88EBD65E296D976EA5506E4E7051557351CEDC45C4FF3D7DB57B3DFACEFC419CE28BB
	B7027B61B12BF19F37AA0A64895094C2731195D663BAE03CD72D686B3E002C288E88D4B16ECF7FE9C5FDB1475058DA4E15C573C2DCA791101B8534FC8472FF694078003E456C749C61F6CE387CGB9BFF52625A4091D7BEE537C6136381D95575696B1F99F35F1F983D03FG082D51BFB8B69A572856E69749EEC3BDD4FFC0E1FA7C3735DE13137B68BC123DA143E2F6E671FFE33AE515A63F74F6835EF3FB8A1683B1DDFE276B6205B63300D8FC9BE8B246373C5BD91ED4BC924EB7A3393E37BB37E97A5AC445A3
	87A2F4DE180E0F3CE35431D898E52AE3462B3D1623A319EE67C646F5EC195CD3F0EEB257F111136B1889ED160D6467485213782471DA472A2EBD39CE831FF21DC664AEA03BF70DB35509621546F429CD0B6BD48A18156B38DDEF67E7068CE8338808711BCEF37EBA609D9D4579A59D1C9F84DE66A80E215C4167165994AABA864FA84D01BF9164B0AC4CEE58D94B1D0613B2DAD759BE58441A83EE424FD073F699312F3D7E05291D695B7C16E523347CF3F45C4E6513FA8A56CC62F6BE534131F7C11B7451DC6F8F
	DC2837A077D631F2274B8CF7B646949737FDA174DFBB1A67DA778EB9A39E9A934FCBEDE30666286C6CF4228947BBBBA671FCE7237C601844735D73B6AEFF84542D9843737D5FD19FEFC9F717F801860026GADG4ACB6771272F6188C9F11EF2046118939602DD039296FE2EE9C4FCA047504AD50DC61FE5B8BC6AC09CD6271B676A4973439C5A2F780E9B6F477C6340E7463B1D429D2D1602A46B6038B6F64B9DF17FE058E5B5633E1F8E7CCC209C20BC20B5F7F05C7E3131A295EE7CEC298146ECBA52166A4E22
	744E417632FE56147D0EA774E3F67CEF8B6E19AE288B8225814D81DA84349C28F0AC37275056104A9EABCFE83BA57D35B1B1A9657A3EF60BF616B8D3755BB3F6F0BFED4FA765E4681D9B0DA43D51C0F5B58FA7ACF3E4B94002A6FE3FF6F4AC4F81DE3453B58665B420D9E379DAD2DA914785D0DE82349228B083729EA09B10BF0363683655244231898F9900A105EDA8008C076F2744419C3F25A97B25E7187949EFE8AEB9876AF2007200D683150E037D9228FB9C37AFAB351F68D7A3B762A7235A93758D0E9B2C
	1F391D130774FBA7514EF1E67D5ACE5F1A3CCF0774CB14B747D45E0E0EDB1337F7C83F4A04F276B833F974539CFE89542D82AA3C4BDDD286E483BA8F14F6971F47BF586AEE50CF9B015782E79413A954F4FDEE082EB7662BAF256C17F917D93F192EDB43B4EBC83F44B94CC910476E521E20B9F89E542D84E23CC9B4175FBC9E724671FC3FBFC563C98B143DBA2F1572700C142673DE345D6C9D54A01D46B39D3D634D77C5A6635F7EAE997CEEAB595D9773A1E2CFFEE73241EEFEE73245EEFEE7324B3E0371E18C
	634DAD2FFF4BBE7C1D4A7BF633BB153729ADBF36E0CC1723E1B5909229D836E70831F7599A680C0659B2C049CA627E2D2F2D2C531893E60E67EB68C97BE113B544F698BEC837A8489DBE1F9E883BA222076B7CD8F3F27C3E5DEC0E5FF71A4D71FB26F9F87C1EEFCE069F436895758DE2F247F49AA2B961E70F8BED9B35B6AED5F2D569E397BB125B314DE1EE479B8EBCC3ABD2D47608093A6EF16C566B62D147210AA1D4C73BFB237DD5C85045A136D6507E2CAED97FE38EBC5B76843C81D93B71E1B69EF5F29B1B
	D4293DCADFCFCFB68D972B961A2CC51633B7B5236F650DE7B9FB3E4EBFCD794B8DFC164B3FE4673FA92E02BA57846EEBD7DB13E31C56EA0E711D2D49B11E581A9A63192D49B11E5B1A9A6307DB13799C43BA3F3D047B13CF16C260D12C5FEBED49EDADF41A5B3A49195C569D4E54367E59195C56F71D29ED7D401968CFECDDBD7747EDF4DDAA0A28508D55A62802E6FFCE3B51578E6B385CFE5A48BF2273DBBA8C7C46787A135B1363555FEE0E57757664F80DEECF0D57787664F8CDEBCF0D57FD6D437B86F18D76
	0D439A7FC5179103B8E639D63C5B8E8A7DD2D405F35CC4DCCB3F506F309740BA4A85DA83D4BC115D7530BD60DBFDA8478799AB082741F99D6D7BD0A36F6B0772G50AC209C20E593799DC143962C8F8DBAD9F0FD1E8A633D9E1EBA8C379CF87FC8C6CC4271531A793DB212ED9253A9B8092F7779273798715162B04BBD16B4715C6359C9BC27E8EBA6FA2C6AB63C3FEC7FFB7200D444E47C76EB15215DAFB570383886EC2E184C676FD7150817FE57DBA9742955558D925E67BB19B33033DED7C331565FBB191F75
	EE23E34E027282205C497C9EB47697FE8FBA7F41F9E449AF4D6FFB17F7DF352C184C62FE7194437D6387BD85CC668F9B39CC9B548FCCC15EEB0D46F9C7DF19EBE139BD2BBFE8B356639AB9C00C754220FA54F771207E13875597997AB35B1E5F4FEDDB777CE3A478C4DA526FDE96E9B62D64367DE0C6FE798C57FA067B05AB03F00F5F316BFE4EB0F83A99B1C099E5D3B93ED76D467B741CEDD7135EB327CDE532B3279A3EC9113AB72C1D0AE33F52D4B60C5F2C507AE8673006DB7B46E46FAD76BBFB537DD8DE50
	5508BED9BFADB1DFB8C7794EE909794298FDDD1C053A1CE97C3E629197462F323B5DA535C05DC0C1208C202C3BF90CB95A011FEE8DFB866C16A2CE58D802061412591757F8EB5F5E7C7386BE778B1EFA18E40F36A51D7B1C3B597CAD531E5939B37271496C2B6FC47BB6CFF7171483B9013CC0B120895339FD839D5A9D9D06E64840850F1F7E0A22A7788131AF4E46604FECDB581CAA1EE5CE9F1A6FE583AFB7013F9C4AEB000AE74479CC7F073BF01D6E817EF1A097109FA8FD86577DFB9DA96FE51BE2267732EC
	7FA93463FE58A8625DAD473ECF64586F79667DE44F5EFA4B0EA458E7E97A664D082F3B38EFFF5AC874779E437B38062FFF2FF970EB15215D6D3A1267D35FF11967D34F384C4FE54F3906BF373E68CA7EAD40D21771DBG66B7D5E750EF0AE7C23EG5482F48EA8B2137B0D6FEF6FB13FB17177A6EFAF66F37865134A65BBBA135B6A6ACC7D3D54271D78DBE40F242AD28847677CAFBBF13ED4A9C2190C676DC40C64C02FDFE5CDB57E05CE5CA302220F32D90E73F33AEFE400DD19B3791DCB3DC03FC502F21E4E13
	E95F15D0DE2B73DE75737CE873BD1C77DEGF947216C52F93F35A34F8B6558BD9C3F473B126371E417795C7FD317795CAF6E9A7ECC7EC2D7B25FE0F3BD5ADD069800EED9C039C0AB005682ED1F85738FD4BB0B6BFD3E9B6F3F5D420521379040E489911DFBD98870EFACCE1CC9EEEB7D1954F36F205F830BB0E75D7D91AD2FBFFD86630E6473A9226EE3DDE7366BBC07621214G1E87D81C7A1FE67ADB36A40B3D32948DFBE14F1F05F333238547BE8B6F5ED9BC5F7EC440BCA2A20BBED116C5EFD760B27A90EB9F
	213E71AC3C67696D6F68AC24E307D55666BE6AABE4B67885904BA1C820EC18F8D0BB1B45BFB65E09G6ED5F0D0880422A1AA1D0D7BB76ADBAEE8FBEEB6173D2519E193D091B2566E4E961E8F264F6673B6511DFC8E263BD34F41DC37797A7B06FB687A1B6FB6DFFF0F3B0D6BCF3BFF52461575CBA0AD7E39F18E58B92BDD888B3D541FE74D466F3A47FCC1F42C0E8B786D8BCF49AB9B2520A4D74224713DE8CE1F71B73A631BEEB77DF6086E215A9C2C511E992F4F48E7727E6B4B383C5ECE3C4B8D0BFDE53ACCDB
	G229FFECCD9DED5D5D1F66C50812EE739AF5E6FE57F3B097D6C60B0656FD9816860FB95E5C7AA4A2A0E9E505B3F9DC0BD3B40FA3FEEF7DBEFFC3CFF375F089E2C6D5C969C4BA784951C8B064B8FBFB76232FDE650121F84170AFB999E476FCD7C6D320E463FA070536F65FE167B450743448717ACC5C4D96DE7DC7A151296030E87086EA763FB77A79B83F617D630372367829C763B05DE3DCF03FF2BB1463121F97C7063DE864BC98528831769E7AFDD50B05C4B7EEF41B44FD1D84073FFCD0A9419EC9D6CCB79
	8F3CB9F27B78A3D18BA936137500E144AFB8C8917D6159C9CAFA2817E3488B2AE43B937B9E043E87E95F9AA731F894153C9567FB104FEA3BA202C704A69B3D02FC110E709539C672BFA79BFDF2EF8F9520924B67764FC1ACADE1F50113ECD27D383B2A30DED572E6FCE89786DC2D22A606DF841357DF07B0C67F40301DC39D45FA573F3EB47FCBDB2905D89CE43DDFC4DB40383E00D7755391705E23847AEE9964340B679E7BD56E4F5CCA81D96FA0FF423857A54A94DA510B57CE5A3745F632B1A201CE98419C24
	D0210FA2C56D8F82F2253ECE7CDECDD1C52FFEE78DD03D416C092A01604196C171532886A095067127BE3213D58705F06FC1B6034C52FC6BF96A55B406023E3B283EB8CA25BE4A2E27376DFF37F5C5F6813158492620A4F86D02877C4AC1B62AFED9D47CD2509B0B1C2A2783957721EBE398C61FF8CBB79F0D2D4423272E7445586C0CADAB375861F49C1349C15A922720D2EF61ED748BB20892E5070ADFF5CB72BE3D6E36F7543F3C507C66B98B49570C44D95E940B288CB0903E0D8E09A6D75AC1EB75A73FFEEE
	5ECFEBD72F02AEF64D91C17076F82B5351D00FA80F1EBF756D12A94B4722DE9104C74111372AE4C3C4D254A8980C651DA71D39AF709AF06FD0A0588FAFB618CD29D76777D14FE09D909FDE3191F60C30821BEA8874ACCBG09D76936D6CEFE6E505407FE7F9935B55ED5A5FB63CE5CABCA2103D61FAF90967581E00AE17837756131CDE5C21B1D3109EF347E68759EF0C99BA9889DBAC47F2D227F9E46FF2BA8270AF22A8E43BC2FA6437EA55647E2E8731FE3547475FCE9E85F01DCB746523523BCC97718A97733
	981AF5FFE2AC7D298F9DEE8570C9A60F259F7ABE9AA68EF60504E0D09502972DE1AF464406FED50C67044BFDB83E425BE8155A3778BE547B02214F7F81D0CB8788A10A53321B93GG40B5GGD0CB818294G94G88G88G400171B4A10A53321B93GG40B5GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG5593GGGG
**end of data**/
}
}