/*******************************************************************************
 * Copyright (c) 2001, 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package cbit.vcell.webparser;

/**
 * Insert the type's description here.
 * Creation date: (10/3/2002 1:30:30 PM)
 * @author: Frank Morgan
 */
public class WebSiteParserDialog extends javax.swing.JInternalFrame {
	//
	private WebSiteParser wsp = new WebSiteParser();
	private javax.swing.JPanel ivjJInternalFrameContentPane = null;
	private cbit.vcell.desktop.SimpleWebBrowserPanel ivjSimpleWebBrowserPanel1 = null;
	private javax.swing.JLabel ivjJLabel1 = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == WebSiteParserDialog.this.getSimpleWebBrowserPanel1() && (evt.getPropertyName().equals("currentContent"))) 
				connEtoC1(evt);
		};
	};
	private WSPJtreePanel ivjWSPJtreePanel1 = null;
/**
 * WebSiteParserDialog constructor comment.
 */
public WebSiteParserDialog() {
	super();
	initialize();
}
/**
 * WebSiteParserDialog constructor comment.
 * @param title java.lang.String
 */
public WebSiteParserDialog(String title) {
	super(title);
}
/**
 * WebSiteParserDialog constructor comment.
 * @param title java.lang.String
 * @param resizable boolean
 */
public WebSiteParserDialog(String title, boolean resizable) {
	super(title, resizable);
}
/**
 * WebSiteParserDialog constructor comment.
 * @param title java.lang.String
 * @param resizable boolean
 * @param closable boolean
 */
public WebSiteParserDialog(String title, boolean resizable, boolean closable) {
	super(title, resizable, closable);
}
/**
 * WebSiteParserDialog constructor comment.
 * @param title java.lang.String
 * @param resizable boolean
 * @param closable boolean
 * @param maximizable boolean
 */
public WebSiteParserDialog(String title, boolean resizable, boolean closable, boolean maximizable) {
	super(title, resizable, closable, maximizable);
}
/**
 * WebSiteParserDialog constructor comment.
 * @param title java.lang.String
 * @param resizable boolean
 * @param closable boolean
 * @param maximizable boolean
 * @param iconifiable boolean
 */
public WebSiteParserDialog(String title, boolean resizable, boolean closable, boolean maximizable, boolean iconifiable) {
	super(title, resizable, closable, maximizable, iconifiable);
}
/**
 * connEtoC1:  (SimpleWebBrowserPanel1.currentContent --> WebSiteParserDialog.simpleWebBrowserPanel1_CurrentContent(Ljava.lang.String;)V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.simpleWebBrowserPanel1_CurrentContent(String.valueOf(getSimpleWebBrowserPanel1().getCurrentContent()));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GD4FEA7AEGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DA8DF0944715A6711F4AC7D21C8B2708C3E259A767C8CCDC38AC5F114429F2F20A43852ACC8EFCC7FCCA0C9DD2214A0A8F6AD4BE25C2F22D1590DAC782E104CFB142DA109684C8ABEC38887D8474EB6BE7A584DAA4C1C4E034BBAB0DB43B334C4CCA0293645E6B1E1E9D2DE6C5F0012A1EE67AF5776B6E575FFB7DDE4F126232646D590EE2C2323793632FB61B1035B504FCBE6D7BBE4E6B6BF0BB0965
	6FG50EE324E138B4F2BD057B165F696914701FCA86BD0DEBA69F67E8F3C6FA1BB8E14FA60A541B8195504FC47F5F2FC7EF1CAA4BE4E8EDADEFD3AG1EBB0126F1AC204D9DB87E4FCE17987C97213C53F8C74AF6903238935B8C69A596FED5A7EBB7864F9920D3DD58663727CB0D7AF460E11BCC207CAE565685CFB649876ACF996D067F7647A47307B30EC29C4BA21F538223EF8A17C1F29D28089C6278BD2A2731EFE27434FFC452BD13FED116BDD362C8C4D0B5D12D2F9F94C77AA5DD6C2345B6C91015D1D0E7
	B74E73161ECFE540BCC1EEB2653D2D23EE0660BD8214544D677A2342C6E3AE0BA7FECCA24D2B934EF5D3B71BE33EB7B6574023E773D7FAD17E61B385C63F8EA8AFGE2F3D14E7039EC7372399CD0316D499E37538B9468617C4D14BF836545C04BFB789C7FF8184FF1687FB6132C11479D3B924CB12D074DAD23A7B647B56FDF4A7BBD45472F77619ED7764238C0D7016E87CA81CA835AC7F1F9C5BA8A4F66913DD5890514F0F3A452A287549EA5A04A70DEDF8FB5866F3C68D754GA18CFB7769D5B67361145EBB
	9BF7C8ECED0304E3E5797957082EBFCA77BFFEED292F5CF2ECB1E4641E0D2D6D64D9545BF89475D6816F59062E99DF277CE98B1F6D55B60A85ACA7C1DD46D92E67211DFCAE5E5CF5246843A79CBBEC663264FBDFF07475997651971B8B5371AB7BD1470B013F82E89550C6A0F24E6DF41D63BA7E1AF462F6BA6E8C6B229A96647EA882DEEF09CAF2C0D48DDDD71F19CF57F6447AB55CF1BF2617E5A72CFB147EDC322DDE5217BD60E8BC477461BB97538B9BDBCFB836FEEEAEB6F61AFB78A8350924F371FB7BB865
	AFB9973F3707D53E374B202E603C5B495A8FEB480F1C0F1793247C856763653CE54AD984F519C0ECFF35B27401C37DEE278E3490A885A88DE8A3D0E6BF5F63CC29662F3423BE4B7E323E39256F41D31C56D521B32C69C258AF8E882AA40C4822C60CB60525285711D97D5EADC56C79E10CCF4430288A3A2404C13A909281CC9AEB332FF4B736D1C5DA6B13C2A28C900A90AE373CF48FBCE5C153AFC48202AE46DA307AE3250809C9E1GA402GF8EF73213E9E23BE37985E0F7B382E12DD48CB02F2320F6B652B25
	6F42339B40AD4A7575ED129F27A12857B9C6A3D1BC53D2FD5CA65F9A6258EBAB7CA929FA65F1DB6C4D385F5C51F841405E05F86C5D20B2E7AE70F352919DB27A61B8F7E28FFF3D2D6DB34748394B721118FEF79EC40CAE05F52D845AF0016B7875D29743DE0B20099CEDE7D5G0A9808E91C357D69FEBCCB44C9B12C370991B19C00974D586B1F6FF746F098D4CC0C3CC9796817DA81A81A495F3AFFB763038CAB2AF97D2FE83D206B2AB4925545FED1572570E82CFF7687B897ED164B530C35961563DA37409A73
	875C4E12813E5607BF58E34113D7D1A622919FDA0A014B3F2167EF9534EF9B607B7FA59571B0E6161F2265D8FD354A776EEED3EC4C0F6F5998B9A686C7B4DC57F633AC53F212B9074CD9F358FE17674146A8542CE35CEDDBE09838D9169843771759E37861B2FB8CAFAA1B9F23CB4A6CB04A6A9EAFC39DAAD3E18B66D34A505F7915F0D82406E7F6A1AC4EFD4B076B104212BEA885C6C53DDF3AA19232E1G317BAC7529AB60BDED007B4329F26E8FABEE3CCADE3CF243B6DEDA7254979D25034C379D9F0C79C3B6
	2727DCE8CB22AC06C0D12DCAB42CB37E5354DF9BFCAD07721E8F4EE05F4AFEA99411C5883ADBD4E58AA26EBE818C6E43AAFFD4D5299008D7423A2B3A7A344BA6B02F52ECFBDFE91D553B52BBAECC8A9ED9880FFA7AC17F615106A383C7BEE2765FDA01F36E03358400E686397D9FBE00755C7E8DA7572A48B2D3B754E58E22AE1F0E96DB7433F81065C79BCDB945870BF0DF45EBD1910EDBF4A05D62F5FEE69EFCB72EEEC010233133387C606F60A9DBFC8F633FD7EE2F6752F2344389D33E2BBC0F60194AE4B2DC
	2C90D0E6C415C2602A51199AF95A13E72CF9DA63105B09B95D98BCE700D85F1B6568936D92241397D14617B51E47AD06BE4B01569AF2B20698D69650F62B4CBC2A46643DC6F935706F1F3673783027481A6F8534C7ECB10914F611495FF0B1BEEE1EF6235CAC6067DF62FB72D8395537B7EB1A6217E858E2683733420AD7466B2DF8871EC1C955A0068E0853FC0FFC95B8D70CEB8C362167270F7D114C0D535A83122E287C68EC1DEAC75F62D3DAA1346A00EDEEB54DF9C09227884FBB5F08F2FD15DE6276FA73E3
	EBFE79422E079C3FCB209B5FA526937DD2CCB70BA0F7E3737CFA190B9879B0DA4934C71B8283292F6F62194247986731F994B4659B6BCB3D44F34B5C9644E28614F37F64F6168231B877A59A7FE25B13401301984E0E77DAF116827C0DC03943F07682B15FD02DE35DEC9740755AAA54234DFCEA3B6758FAF2CF13B107B54F2CA30DFF99334DFD13F6290E6343CCEFC343165C7741CBF9258FDD4AB3F24D0F2CB8FDF1630389F11AE248D8B99C0F536143285B75405FBC4CF17AF245EE8BCEA1AF0610FD943C00F9
	BE39F3183D9B654F3837F3FBA77C1C7CC574CEF233ED43BC467EE2A57A35224BEEE795D09B50B0504CE5BE377CC3374DB55B276749B5F7B7A51A57D298E345653971B34B2B26A95E52AE4767DB1F257C751763732DF7DAF83E35896ABA7E4CE314B5DA7C784B7FBCFB4CD5F1E5566F55B97DBE08ABE74475E338DDD060A1F36F1D8222B621AB20AE5BE3105F21FD3345EAB339D7D84CD9894F46AB7CBEE82C177B885F95EE1B07C3387605D0CE81FA618A5F5B7FB802FEFABD1437G65DFF5BBAB00BA0082C0C9D7
	799E8F9E3273E13377B811830B4568EC4C1AE3B83FE5A0FB25A9BF75D021855FFD0A04E6EEE0D9B80CE71722CA23D21873021467D7D49A8831B87C3754B72E82191BCC39CFD4A60E5B16D55A47ED4FD45A47ED291573679EAFD4A60A6B587CAA294F4C0239958B30EF1427D1DEA5141B840E47DBADF8F6874CF292AD23EFE46522969E6FE21B3B996B4630FD2465DE66167B295CFFFEEF97552726099A85CF1B208BC65DAF743D44A6266D05834818539E1223BB0DB66D3A527A21E9DF7FF92404581EE35412180D
	ECED616757C2015B48D48F75A7D0CE874AB4759F6A1D4FEF960CA472CFDF22B6679AE1FEA85B6427D0FE15054F7CD3F5085F6F1E023A25A39C433FBA1298436428BD06730E22BDE9CAD4750B71B8ADBCDAE256452C34D397C328DEA32E247DF5C105FCA13E7FFE5A1F55A56AFF68687CB94E49E3384EE933FC0A162F1BFBA8B66FB447E88F878C074062433D1338F74FC3434FE4F3AC1CE9227620C4A1B4EE0986039822431965275F9D1A38BFA4FE9E3FBEBB05B1D290829A18D6FFC474134D346D43CD5C3F7A20
	BC861484348CE8151F47A4879A500F4D0E0A0CB88391E65A505BAD7138B99E08E125AD1088B7EFD29C8E8598BEF6187C7F227C08054FF0F31372311C84F599816EDB6E6F653E25CF64D8FEA2C44C79FD5D72FEA2F42F6E8AE2BE45FBCF47E0FB23B4212F54552848623164A9EBBCF66A1D05896331E4116DC72A711C19CE4DE63EE285458F7649003A0AA0729A1B0B63462E8141F82E337A702CFA34857CA6972BCF1ED50FF3FDAE57DA7FAF336AF14E870C7EECDD2B5DBC665F367AF5A2BF7F79045F1464A0DB4F
	A263D974C9EA362E7FA00FE12430151E19D0179E6438E96F6138A1239CB7DBA946AA205C81B4EC72FFC379185FCD83EF09493F2F67CE769A656233E3F47E73EC5828E7E3AC3D23B178B9F63BBB289D46B3F70C7A705EB6237C024D5C387F4EB1642E05B61B00769A3C2C51180FE7314F33D528DBAF489E9B637E7D5B470E41F3C0981F1B998233CFD5A2222ADFE7DCFAABE02CFFCF73277B56725D9D9CBB295F7AF73272415E0479E25298DB73B27EECCF4D5EE92EE51F87FD6586284B84AA115C4E63C0EDC04392
	DF1B238A670851A1CC3FD957857F984D24F9500849ED0C0D0E1859F1C5AB46F732F0DD09025FCF17F0AFCEF7F35F9C01F292508A20B409650D9563749BCCCF49BC6BE7323F758EFE7B303FED62ED5C1F200E3B3C4288B299EF418D14B1585F57252B22485B333B1FD7C3D6FB1547591C960D73DC575DB5AB57B56AB740B3E31C476DEBFAF9CC12BB61F61651B18949A77CEF4B99BBDE6384FE376F7FDFE26E6F6B85FCFFCB1FDECF5A7E2D57D11EE0FF97CC30FDDDBB914BC1FD15DF48E3FB778FD548B34FF086BD
	633C7ECE952E976F94A5C116EE50AB9316D89BF76935D81FAF433EGF5G8D83C5E40E0B666A038C97B618E88F0C62F90ADF25F4BEDE05A7F18CF44CF37BEFD9A7BDF8E7B322683A92C2791CDF6F41FD063C0BB2996F0C8775886946184E1A9A7CF68F6ADD9603144D4E5EE0B70F5996425A52E49EDFFCF89573AAB3867588D3FAFD7DA72A94E891C63D9455EC4F1F6966E74BB61947210FF869377B105B69858A0478BD4F74A13E2F4B3F3A0E8CB5587F0EE0236FA147CC086DE7F2A8362FD96F73BB0A7189ABBE
	30AE515911EE74A761189C6EC3A14E8EA60833295530756D8EF3CCB70539EECE94D71279FFF7E1B5B1A667F2970F612643DCCF799154538AA82F825A9866E74F0FE6456BD940AFD066BFD718DEDE7E13B5D6A8FAEC5241FDF7FCFB17A12FCA093F3B715761F9F19578B3C049C0AB0156GED824A82AA08381DAE20D3C0FDC08120E92005C0CB01D6G25C5381D1C7E43911278ECB0GC50DC5952CB9F3C9EDE2FBA92B3D3D3DD45652FBCF40396FFA4408692BEBE99E9E8CEA22E9179F5596193CCE2DCF51A47484
	4637206ECF779B029B1F321F643D53FEAC2E4E23B14C06C8FC1E360B72B7C5627334A5DEEE73DB204EF70D5F257CF7BD5A43CAA82F874AG4AD5417F81B529FCBF5F28BDCEEEF30F62D3A2DE58B859F2454064DFECC479BE109581DA8C349C68C5208D267C2AD3A766414BF9C521A98AE6ABG97D135A00769703D301D8EB3D4438FE8F36D48788E58B51F6E0BED7AB19D3FF18DF5D929456B7ECD4ABF29456BFEE7046B3E896AD2B49E33EE26E7E73E6EF62E4B6577AD3F24BC9770A4870FD9E6709A4B402EFE4A
	1DC8D7308DDD60524E0E0CC3F26B93C64DBED3F5096D6AD65D6D6D6A21BA7BF368F3F5F34F21C76A6C4F21A5F556F308713EDC073EF5947C4110596EC913F751647DBD15093CC1A9200F197CEF50F9A13FC34481B97FB9BA2FA94A9BB2F8ABAD3C0BBC9E28C35FGCB9ED3D45E77FBF5180B85A5D9E66517E89BA98C2E425447EABAC7A9A2D8663D5664DDB471D550C34C773D16772FF86FFD5E7A0F77F48C638E3DA1B12EF6B5585F716CED303F275C57B07F5DCBF9C3626F4BC79B66FEDF9EE9CCBCB729717618
	D79B6DB1BF5DB89773B79B6DB1FFDF2395734C3E2BE9EC5188766D55399FF8A44CF357A113F73D0B731669BCC658FCAD06212D167762483D47D375BD9D0345D842A17413C6FCCECD1D71CB278BE3FCEE6AC6FE539626F7A73019AC27C8BF0DFAE1F9705742BC8F4E52677AF26C4F73E02402A844B9D11687A35F950D79F1A6EFD19717D7953517E725A6E8630B46726AB10BBC969F3EEA4619FA54AEF7821C50B5BDCF73A456673BDD3C4FF25BBE7365DBBF7FC38CB32F4DBAB3B7012CAC1BB54D4541CB334E4C02
	C9088BA7676F47707CF6181FF559A66F57E1FE5645F8BF69626D1A33B96F0DAE5EEEABE1F7D2FB48596A2F208EFEC936EBAA59455395CFA7F5549BA7CF54677C6C6FF29CA4371364B1A36EA439E8091DE4BBB554CE1283C6BC0DBF704B3512CE768F75F8DD7457818197DE6E3B022A92F28D8E8E3A70E7835AB5F20BAAF5D6AFFBAE0F510F7C459A23E7BD90CAF81F37F04A48012662E3749F56208E52011FB545632677EB2AC962D820BFA44832AE48934D61G4685AD57F5B166CFDF2EC1799AEFE3D4323AFF2D
	41F90FDB7A7CBFD0CB8788C4B2G9A8D91GG78AFGGD0CB818294G94G88G88GD4FEA7AEC4B2G9A8D91GG78AFGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGC791GGGG
**end of data**/
}
/**
 * Return the JInternalFrameContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJInternalFrameContentPane() {
	if (ivjJInternalFrameContentPane == null) {
		try {
			ivjJInternalFrameContentPane = new javax.swing.JPanel();
			ivjJInternalFrameContentPane.setName("JInternalFrameContentPane");
			ivjJInternalFrameContentPane.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsSimpleWebBrowserPanel1 = new java.awt.GridBagConstraints();
			constraintsSimpleWebBrowserPanel1.gridx = 0; constraintsSimpleWebBrowserPanel1.gridy = 0;
constraintsSimpleWebBrowserPanel1.gridheight = 2;
			constraintsSimpleWebBrowserPanel1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsSimpleWebBrowserPanel1.weightx = 1.0;
			constraintsSimpleWebBrowserPanel1.weighty = 1.0;
			constraintsSimpleWebBrowserPanel1.insets = new java.awt.Insets(4, 4, 4, 4);
			getJInternalFrameContentPane().add(getSimpleWebBrowserPanel1(), constraintsSimpleWebBrowserPanel1);

			java.awt.GridBagConstraints constraintsJLabel1 = new java.awt.GridBagConstraints();
			constraintsJLabel1.gridx = 1; constraintsJLabel1.gridy = 0;
			constraintsJLabel1.insets = new java.awt.Insets(4, 4, 4, 4);
			getJInternalFrameContentPane().add(getJLabel1(), constraintsJLabel1);

			java.awt.GridBagConstraints constraintsWSPJtreePanel1 = new java.awt.GridBagConstraints();
			constraintsWSPJtreePanel1.gridx = 1; constraintsWSPJtreePanel1.gridy = 1;
			constraintsWSPJtreePanel1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsWSPJtreePanel1.weightx = 1.0;
			constraintsWSPJtreePanel1.weighty = 1.0;
			constraintsWSPJtreePanel1.insets = new java.awt.Insets(4, 4, 4, 4);
			getJInternalFrameContentPane().add(getWSPJtreePanel1(), constraintsWSPJtreePanel1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJInternalFrameContentPane;
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setText("XML Parsed Data from WWW Site");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}
/**
 * Return the SimpleWebBrowserPanel1 property value.
 * @return cbit.vcell.desktop.SimpleWebBrowserPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.desktop.SimpleWebBrowserPanel getSimpleWebBrowserPanel1() {
	if (ivjSimpleWebBrowserPanel1 == null) {
		try {
			ivjSimpleWebBrowserPanel1 = new cbit.vcell.desktop.SimpleWebBrowserPanel();
			ivjSimpleWebBrowserPanel1.setName("SimpleWebBrowserPanel1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSimpleWebBrowserPanel1;
}
/**
 * Return the WSPJtreePanel1 property value.
 * @return cbit.vcell.webparser.WSPJtreePanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private WSPJtreePanel getWSPJtreePanel1() {
	if (ivjWSPJtreePanel1 == null) {
		try {
			ivjWSPJtreePanel1 = new cbit.vcell.webparser.WSPJtreePanel();
			ivjWSPJtreePanel1.setName("WSPJtreePanel1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjWSPJtreePanel1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getSimpleWebBrowserPanel1().addPropertyChangeListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("WebSiteParserDialog");
		setDoubleBuffered(true);
		setSize(601, 663);
		setContentPane(getJInternalFrameContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = 					new javax.swing.JFrame();
		//javax.swing.JDesktopPane jdp =				new javax.swing.JDesktopPane();
		//frame.setContentPane(jdp);
		
		WebSiteParserDialog aWebSiteParserDialog =	new WebSiteParserDialog();
		frame.setContentPane(aWebSiteParserDialog);
		//jdp.add(aWebSiteParserDialog);
		
		frame.setSize(aWebSiteParserDialog.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		//System.out.println(aWebSiteParserDialog);
		aWebSiteParserDialog.setVisible(true);
		//System.out.println(aWebSiteParserDialog);
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JInternalFrame");
		exception.printStackTrace(System.out);
	}
}
/**
 * Comment
 */
private void simpleWebBrowserPanel1_CurrentContent(java.lang.String arg1) {

    java.net.URL currentURL = getSimpleWebBrowserPanel1().getCurrentURL();

    ParsedElement pe = null;
    /*
    try{
    	pe = wsp.getParsedElement(WebSiteParser.SITE_ID_BRENDA,WebSiteParser.SITE_TYPE_ENZYME,arg1,currentURL);
    }catch(Exception e){
    	try{
    		pe = wsp.getParsedElement(WebSiteParser.SITE_ID_KEGG,WebSiteParser.SITE_TYPE_REACTION,arg1,currentURL);
    	}catch(Exception e2){
    		//do nothing
    	}
    }
    */
    try {
        pe =
            wsp.getParsedElement(
                WebSiteParser.SITE_ID_BRENDA,
                WebSiteParser.SITE_TYPE_ENZYME,
                arg1,
                currentURL);
    } catch (Exception e) {
        //do nothing
    }
    if (pe == null) {
        try {
            pe =
                wsp.getParsedElement(
                    WebSiteParser.SITE_ID_KEGG,
                    WebSiteParser.SITE_TYPE_REACTION,
                    arg1,
                    currentURL);
        } catch (Exception e) {
            //do nothing
        }
    }
    if (pe != null) {
        getWSPJtreePanel1().addJdomElement(pe.getElement());
    }
}
}
