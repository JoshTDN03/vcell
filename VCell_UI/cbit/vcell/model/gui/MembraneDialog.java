package cbit.vcell.model.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.vcell.model.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class MembraneDialog extends org.vcell.util.gui.JInternalFrameEnhanced implements java.awt.event.ActionListener, java.beans.PropertyChangeListener {
	private javax.swing.JButton ivjButton1 = null;
	private javax.swing.JButton ivjButton2 = null;
	private javax.swing.JLabel ivjLabel1 = null;
	private javax.swing.JTextField ivjNameTextField = null;
	private javax.swing.JPanel ivjPanel1 = null;
	private Membrane ivjMembrane = null;
	private javax.swing.JLabel ivjJLabel1 = null;
	private javax.swing.JTextField ivjJTextField1 = null;
	private MembraneVoltage ivjmembraneVoltage1 = null;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public MembraneDialog() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getButton2()) 
		conn4(e);
	if (e.getSource() == getButton1()) 
		conn2(e);
	// user code begin {2}
	// user code end
}
/**
 * conn2:  (Button1.action.actionPerformed(java.awt.event.ActionEvent) --> Feature.name)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getMembrane().setName(getNameTextField().getText());
		connEtoC1();
		connEtoM2();
		// user code begin {2}
	}catch (java.beans.PropertyVetoException pve){
		javax.swing.JOptionPane.showMessageDialog(this, pve.getMessage(), "Warning", javax.swing.JOptionPane.WARNING_MESSAGE);
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * conn4:  (Button2.action.actionPerformed(java.awt.event.ActionEvent) --> FeatureDialog.hide()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC1:  ( (Button1,action.actionPerformed(java.awt.event.ActionEvent) --> Feature,name).normalResult --> FeatureDialog.dispose()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (Membrane.this --> NameTextField.text)
 * @param value cbit.vcell.model.Membrane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(cbit.vcell.model.Membrane value) {
	try {
		// user code begin {1}
		// user code end
		if ((getMembrane() != null)) {
			getNameTextField().setText(getMembrane().getName());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM2:  ( (Button1,action.actionPerformed(java.awt.event.ActionEvent) --> Membrane,name).normalResult --> membraneVoltage1.name)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2() {
	try {
		// user code begin {1}
		// user code end
		getmembraneVoltage1().setName(getJTextField1().getText());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM3:  (membraneVoltage1.this --> JTextField1.text)
 * @param value cbit.vcell.model.MembraneVoltage
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM3(cbit.vcell.model.MembraneVoltage value) {
	try {
		// user code begin {1}
		// user code end
		if ((getmembraneVoltage1() != null)) {
			getJTextField1().setText(getmembraneVoltage1().getName());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM4:  (Membrane.this --> membraneVoltage1.this)
 * @param value cbit.vcell.model.Membrane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4(cbit.vcell.model.Membrane value) {
	try {
		// user code begin {1}
		// user code end
		if ((getMembrane() != null)) {
			setmembraneVoltage1(getMembrane().getMembraneVoltage());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM5:  (Membrane.membraneVoltage --> membraneVoltage1.this)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		setmembraneVoltage1(getMembrane().getMembraneVoltage());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM6:  (membraneVoltage1.name --> JTextField1.text)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM6(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getJTextField1().setText(String.valueOf(getmembraneVoltage1().getName()));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the Button1 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getButton1() {
	if (ivjButton1 == null) {
		try {
			ivjButton1 = new javax.swing.JButton();
			ivjButton1.setName("Button1");
			ivjButton1.setText("OK");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButton1;
}
/**
 * Return the Button2 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getButton2() {
	if (ivjButton2 == null) {
		try {
			ivjButton2 = new javax.swing.JButton();
			ivjButton2.setName("Button2");
			ivjButton2.setText("Cancel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButton2;
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setText("Voltage Name");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}
/**
 * Return the JTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextField1() {
	if (ivjJTextField1 == null) {
		try {
			ivjJTextField1 = new javax.swing.JTextField();
			ivjJTextField1.setName("JTextField1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextField1;
}
/**
 * Return the Label1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getLabel1() {
	if (ivjLabel1 == null) {
		try {
			ivjLabel1 = new javax.swing.JLabel();
			ivjLabel1.setName("Label1");
			ivjLabel1.setText("Membrane Name");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLabel1;
}
/**
 * Return the Membrane property value.
 * @return cbit.vcell.model.Membrane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.model.Membrane getMembrane() {
	// user code begin {1}
	// user code end
	return ivjMembrane;
}
/**
 * Return the membraneVoltage1 property value.
 * @return cbit.vcell.model.MembraneVoltage
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.model.MembraneVoltage getmembraneVoltage1() {
	// user code begin {1}
	// user code end
	return ivjmembraneVoltage1;
}
/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getNameTextField() {
	if (ivjNameTextField == null) {
		try {
			ivjNameTextField = new javax.swing.JTextField();
			ivjNameTextField.setName("NameTextField");
			ivjNameTextField.setColumns(20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameTextField;
}
/**
 * Return the Panel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getPanel1() {
	if (ivjPanel1 == null) {
		try {
			ivjPanel1 = new javax.swing.JPanel();
			ivjPanel1.setName("Panel1");
			ivjPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsNameTextField = new java.awt.GridBagConstraints();
			constraintsNameTextField.gridx = 1; constraintsNameTextField.gridy = 0;
			constraintsNameTextField.gridwidth = 2;
			constraintsNameTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsNameTextField.weightx = 1.0;
			constraintsNameTextField.insets = new java.awt.Insets(0, 0, 0, 10);
			getPanel1().add(getNameTextField(), constraintsNameTextField);

			java.awt.GridBagConstraints constraintsLabel1 = new java.awt.GridBagConstraints();
			constraintsLabel1.gridx = 0; constraintsLabel1.gridy = 0;
			constraintsLabel1.anchor = java.awt.GridBagConstraints.EAST;
			constraintsLabel1.weightx = 0.3;
			constraintsLabel1.insets = new java.awt.Insets(0, 10, 0, 5);
			getPanel1().add(getLabel1(), constraintsLabel1);

			java.awt.GridBagConstraints constraintsButton1 = new java.awt.GridBagConstraints();
			constraintsButton1.gridx = 1; constraintsButton1.gridy = 2;
			constraintsButton1.ipadx = 20;
			constraintsButton1.insets = new java.awt.Insets(20, 0, 0, 0);
			getPanel1().add(getButton1(), constraintsButton1);

			java.awt.GridBagConstraints constraintsButton2 = new java.awt.GridBagConstraints();
			constraintsButton2.gridx = 2; constraintsButton2.gridy = 2;
			constraintsButton2.anchor = java.awt.GridBagConstraints.WEST;
			constraintsButton2.weightx = 1.0;
			constraintsButton2.insets = new java.awt.Insets(20, 10, 0, 20);
			getPanel1().add(getButton2(), constraintsButton2);

			java.awt.GridBagConstraints constraintsJLabel1 = new java.awt.GridBagConstraints();
			constraintsJLabel1.gridx = 0; constraintsJLabel1.gridy = 1;
			constraintsJLabel1.anchor = java.awt.GridBagConstraints.EAST;
			constraintsJLabel1.insets = new java.awt.Insets(4, 10, 4, 5);
			getPanel1().add(getJLabel1(), constraintsJLabel1);

			java.awt.GridBagConstraints constraintsJTextField1 = new java.awt.GridBagConstraints();
			constraintsJTextField1.gridx = 1; constraintsJTextField1.gridy = 1;
			constraintsJTextField1.gridwidth = 2;
			constraintsJTextField1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextField1.weightx = 1.0;
			constraintsJTextField1.insets = new java.awt.Insets(10, 0, 0, 10);
			getPanel1().add(getJTextField1(), constraintsJTextField1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPanel1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION --------- in FeatureDialog ");
	 exception.printStackTrace(System.out);
}
/**
 * Insert the method's description here.
 * Creation date: (7/20/2000 3:43:54 AM)
 * @param feature cbit.vcell.model.Feature
 */
public void init(Membrane membrane) {
	setMembrane(membrane);
}
/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButton2().addActionListener(this);
	getButton1().addActionListener(this);
}
/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MembraneDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setClosable(true);
		setSize(345, 150);
		setContentPane(getPanel1());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MembraneDialog aMembraneDialog;
		aMembraneDialog = new MembraneDialog();
		frame.setContentPane(aMembraneDialog);
		frame.setSize(aMembraneDialog.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JInternalFrame");
		exception.printStackTrace(System.out);
	}
}
/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getMembrane() && (evt.getPropertyName().equals("membraneVoltage"))) 
		connEtoM5(evt);
	if (evt.getSource() == getmembraneVoltage1() && (evt.getPropertyName().equals("name"))) 
		connEtoM6(evt);
	// user code begin {2}
	// user code end
}
/**
 * Set the Membrane to a new value.
 * @param newValue cbit.vcell.model.Membrane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setMembrane(cbit.vcell.model.Membrane newValue) {
	if (ivjMembrane != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjMembrane != null) {
				ivjMembrane.removePropertyChangeListener(this);
			}
			ivjMembrane = newValue;

			/* Listen for events from the new object */
			if (ivjMembrane != null) {
				ivjMembrane.addPropertyChangeListener(this);
			}
			connEtoM1(ivjMembrane);
			connEtoM4(ivjMembrane);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Set the membraneVoltage1 to a new value.
 * @param newValue cbit.vcell.model.MembraneVoltage
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmembraneVoltage1(cbit.vcell.model.MembraneVoltage newValue) {
	if (ivjmembraneVoltage1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjmembraneVoltage1 != null) {
				ivjmembraneVoltage1.removePropertyChangeListener(this);
			}
			ivjmembraneVoltage1 = newValue;

			/* Listen for events from the new object */
			if (ivjmembraneVoltage1 != null) {
				ivjmembraneVoltage1.addPropertyChangeListener(this);
			}
			connEtoM3(ivjmembraneVoltage1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G700171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DBB8DD8D4E53AE6E8D4E8D814E8E8789BA59677C665365E5D36E5F7ED330DADAA776653251BDD71095AEA6B66ED395B61C7458615D6F66516ED34D10B2D91BFE3A1A272AF884200B422E1F206B98C03434CB4F390D0347BFEBF6F19B3B3E79875F976BE1767F91FB3677D5E77FBFF3E77FB3F777B3E031077E17426740CBCC1C85FA4703F2F52852124D690F666FCFEBB62426DC61D207A7B8860DDC15F
	17854FE8E8CB394B284B95F2C63261BD9E5ED3179BF53B6077CEE1D77B5EC370A3001CACE87BC5468B67A717F37E904A59C25F432AF360399DE0856048B34BC164AF2E4E6778359C0F101E81B8CA73636A5D9C578C6FFDG11G318EC61FG4F2DD472344A8ACE57BBABC6F87D172E0CED249FD51F8805CE465B4C1F8542DB692FB8092C942AA76119826FABG08711942CFF76C01E715610C253A5FE4150B4F76CBB6DB713043AC590AADA3564A4A23523049A55A25862BE8F3D80056769D692F64D0B6659784BD
	3CEF2438673EA0B2626077AA00E4859FD9CA70D5AE232E9B4066C23B8E7E2D0A6B5DF37EFEE11D65E7DBF78430AB44456C09F5F96CAA784C1479BFF48CFED8C3FC1D82EDB9EE232EG2081408C908270BE9D7B078EFD864FDA13DC6F989EF658EB1D4EBA1B59F51458893FABAB2105633A24FE074BAC88ECFCDF2E5E2B214FE4407852AE1B0F79A4269C47BA366BAEE16DBD37E4EC5170495A187399D1EE660BF83747A7CC763EC301E4A7393DE351DB76F1C1ADDB58D036E513066C5DCF15EDC9617D2429E46BE5
	B256DF1710315E8D3F5339AF98DE2478B1951E4565FA9AB364BD9C5ADE17B1B6FA3623AEEDD98B055C52591AFE08FCA8AC23E70469609C715545D9C67A0E9AE1B2BFD0F439066213D5F8264BFC9A27643D70AC3C0F9AF5AC3E926A48BCCD03777CB1232E842099E090A084A0F28CE3CCD77345A54618C1F449F5A3D61BD9F2890CB721664F701446E41758E2F74B223DDFB20AAE2BE832C9EE0153BCDAC3FCE07262FB1C46FEBF48B8AC59A517A8DB9DF668DD9C16E44965E6B44F543CCBE8DC92ED6D368ECBA0E0
	58A9E03F4F576CA473DAF44BDFBB4D22ACF9A8D87B0BB5E4CC4E0AC66891BA005F4CAF2F5693FF2DG7B93811295BF8C54127EDAA517DD32D5D636B99CE7C61C5D449221E41C78390D660E5701BEE79CFD7CD2834149709EB60E7D4C2B7D232A1F86EBBFD1DFF40D639C7B0646D4B4502F84C89C4758F93987E327E15BF2E16F13B7EB46CEB844F16AB84F5967FC67100576CD745B8BEDED67B05F3F74C58F670F9E571ECB3E305207AEF192BEA6E3F3894A483C047E89EC5268A790AD7377B7CD44BE9B58958A90
	F38EFD3E26360045F01D6816B0EABBDC90F01259B382CC4F33E5444FDB39FCB2EFF4DCB6D91FF6D09A5227A07C89002CB33B387C7795DBE750BE9E8479A9G39670D3A8A00BE00D000B800B5G4204D1D784E0G98830886D8B501E33238B4594797DB38DE3AG3A287578A0001F76DC226F7F2F00597AEFFE366AF81CEC8DE02B5A4EC0F1316B7F01FDEAE031782BBAE20BF4D6324B8D12D3321B61071B37BDD9C76C6579F2402170BCC371CE482F7510505C8A7E39BA6293D116DDD65308AC9D13E459EA37F85A
	B7D0D96E911353131AD156ABF5444F0ED1482F8A7D9BF5A4B775BB6CF609CE8A0505373FC9F323E41306C169FA4708DDE6787F2EA7756399E91C676674064D82492D36911267D9CD96A712B1F53A2C43B05548D2A198AE103C59FFA8DF6523D7A07EC9EDD988ED9597B0770DFE0C392F705C9D4203271D99DAEBF864129BB2A2AF701A6A02A777B11DDEEB5056FDA34D519C6F4E2438775D045737C8E4ED9BBB33D5ED8C97A26742F318630C8E1BACDA24D21613A28E93392BC11FE4000D97B0A7490D249D57811E
	0C6A9DB69BF3BD34F5DFA47E09AD4963766542FB51C5661F6DCA7BDFCB31BD8A5E63D56DCC0E58C4F4F3CB5F0DC8307C12852BD599274126BF7A3499791831F6E79399B31BEA2D8B7D1E48FC248CEB7C94101786307BFBA637971EB2C07E94C237D50FF4C900CB791E511135A7FB8A531151BD22501927307689F8068144F23A94CAF73A8269D6CEE1F9B5E90A273FE205EE67FE2453DF45F2F0926F2F79AAC6476C7811C25743691CD7F96C706857D709F421AABA32FEC6DF2556AF7FG5245DD4572BC113B0A70
	F0392C3FC405EEA36FA7F72A074E535F5CAA24AB184A568B529F4A757457FE9069AA26B2FF9826B2BA72D469276C4D7A2632F5877DB7B6D55D5F938ADD44D4CF3B3ABFC6B767905245727684EEC79227E3F33F437209205E0F51BD581196BBD4F3F65156C48A3BC67BA0A98F4D826E459E257594496D6B26621E6B3DBADA07DFED5469815A2E467C706BED38670AB893A32C5DD03AA550DE52FCB553AB74EACFFE087FED6DE6B6D71FEDA6B2D7C15B1A2BF11E3E58242E7BEA5DEEC73F15161CFC0E4CBD2C4E9F8C
	F75B61F760B9E0F5396596C870E3B81F169CA67A121A1423F90D7EC4896EE3D3C1EEE1886EE35FA87DD088300F756CE179BE273F9CFD90FEEE0950F7735C8CDDG9F7406B05BA7C2BCBE58FBF163A626CB8B5DAF103C968F6D290AAEEFDE78B438AEBC7561983ED6164DE320F09A543353882E22BDCF2D8B60C2GE2GD8AEBDD6DE86CF11A641E276B0C82E8107EBD8B2978D09E745E2F1D4AE266BE7F1ADEDEEA43F77E02CAD5DC5FCEF363A1D8E37D43447083A5CD80EFB7B2C6998B78BF756F0BDD65F35D028
	7A7E5B8C2D3DFA680E410C2A694CD766699E1FB55FE84A6C8560E787FA34B5EEBA5AFA7337DA3626CCC7DB6F5513F5538E614F74D97E9735BE5962B4CDFD42B6D8B252389E0557F8740983DD92G58B83E2E47F134814D62EBD066C795C426BCE8F5B39D731A54BA2E3D066918950A74AD0C9E0A9256EFE885761B8FB406D00C0F3CEA7224EB3E00FB6F0993E84F145571C27E4E991A76D09F07B2BB62C2BD76CCC41BB24323513F157BF17C04EBD137187D5E3A2D5F1F43472082E81C5722EE551D84EF079892ED
	DD12FB4446692F2DC4DBE200B6D969B763G0E8B232BBD2058FC9D58FC9D0E6F853D166FC22F43FE9EB8602D5FFFA97DC481CD12C257D705E34268FEDA05F4B9579BF58DG8CBFFA907193000B3F9E791FBD684DDFDB0DF429C0D3982668D3CD7C6FD327709C14D60D3E6B857A08B0147950A1442F86DC568C6CEBCF8D7A083DF756202D2C26FF1C1E57D44DE063E918613DBFB44F705FAF32F30C19B4470F4DE06798198ABE1262C3D5F826DFC19D5A9A89EDE9B3F06FFD22155415FDB32116G08G0885D88D10
	BA93F37B674D65C210338DDC240EF99551F84650CC64C25D4B5F57B72B67G7343EFCA2E6C2CED7DE573B13BFF54C6E2B27B8698F700AA00EEG798634595632B7184DF8C6430DE57AF414923E089BAE6DFC40E347A94A97FB59FCEF16795A3F56270FD7FC5E59DC5FF10C78012ED3E43598ABF60F421E884A0D3A91D926F5B55BF7BCD6275EF7E40533F31BA2F8D681301C63E8471C5E9D0EEB4605A6F52D31F24705006BECD8B85F0B04FBF2DA61F07796E65F6CF2E2DFEA78257B050DEFDFBB293904D9D0CB83
	68818CGB2C0B8C07CAC9C679F349C8CB64EF4616CF654832E99EA7CFA5FFD1FB2967B743EE311B44BDB6F941FF7663F555F227F52E6613CFC3A03682F3F917486988488810881C8GC8399175FF674801CB541FD5817E5AB35D5F72535D9732EF72561D71E56F8B463777A62D787B24E837F67CF5C3EAEC32CAB6B373CDEB937A2661A6BC7319D9F1E53AC685651B7061E3E3F13C13689A81EDF1G2BG5681E4C7C06EGE80E403168BDD297ECAC1463D9988FBC0F5088A8266F217D41746D0B503273A5BFBE59
	07CE5BBF3F7763AB76F98F5714F7C365150D473C20FCB11A728E9F38B2F9DF8765FBB0C2EBFE466B3126DA9301B17876956A302DAA98DF6E4DDAFC8F8765531677F4D03EA2CDF9978EDE193C6B037255E84ABB9C744EAC401886656B51141761F7CFF6E9F3A4570F6FAFBE6FCECDF92B2ED05ED3C165057A48E377AC9B6839C0B434A5GB0DCCD8D412D0177D485371E6204DB0C3A7CDBB036A36AC80DDA253C4F276F24E6E76F1F56619D8521194C77D782BC7755DD6EBD4865G4B57265640E74C56D66DB3E6C7
	2B769973C86B3B8C8FFD28EF78307DC26B64E75053DA831FC17F3CAD301E0F36E96B79C41B361E3FE91BDC4F675A826979819D0B27B248BE42B5E2172D43926D1A2D67529879C682D6382E91BBDB7EC86FEE5FDAD9094F6D741C014C01E28537136248BCB05C02FB525F6DA17527C61DE0002D190D6567AD75D8A318EF41B3304EC6FA7F8B6F71G2B15D8165B357245BA9E479BB5621955GEB3B48FEA1E7B6543EGB5GBDGE333F16D9FBB9AF40F54B82639C7E2365FC5ED0F047EE214BE075A830F7BF76D5A
	63BE5ACE4E745C0E91D73F64BB36975B7315B6CF5151A2CB436DD014B01AEBA83FAC3AAC12DFEC4C247C2CAD907F6C76C071436FFF757E635E2947F1DFB99B47692BBE2DF1CA1C4D46E75DEC7FF162715B9158E7A99D5ABEFB39A3304F5E68886E33BFF4847659A6C3F01FEDB7CCBE67564B64AE4F6F3E09F4A060FDCB693E2D1C26D1F69CAD95B00F9A1AA6DB9FB77A78B1A7924FADFED621637D9986DC0EE1C3A95E13F486766FE02736FF6D1D017DBB52995C3F97BB837BF7DAE7F07F4E6CA436182CE62B0B5F
	9A3138B36E4738ABG3B192F9F7E738E1A9F5DEE49CDB7CE8D22ACF29F97D62AFCDCDF2A787E67EA7C51B285FF7100378F4B78187CE0523D16BE52BF36D9FFDFD6296514ABF86120371CF20E0FBF282657FB742A762657F37C7EC3EA7AFD8A7D5BDE78AFBDF2EBC8DC1A2581F144864B0C43ADF5B879E7A8001F92C9FC7CFE8D6666E6A5360ED3DCBFB010A5015159EB3046CE08445C7FCF23C44F8158B141F4B866147A0541B904768FB5F8A6118434A9G5900AF82E81E03B2769B485DAADDA4CAD15F4F4AB7F1
	BB744A7C4829779D0B38B99E7FA74C719F8BF64E76B0DDDF564CE167EC5B947C9A0ACFD36159795BF10AA76F85F30D3A3039D8FFDDCF4FCEB642FB762D08CBED471AAC6FD6DC8B56F5851EF7AFF6E94F3BD73B34EB00B73BA62F815E6E8A140FF8EEA8A775A0CC39D2B6F64F50350B58EB3E957DBF28C7DF1379406CEA6FC3DB4794DB6F69C3DBC3941C2589F1C98AEEC4A43842A8232EA28AE58C6FC799650A0CC4BD7236A9F4E5B5E40CD565C371F12B5D6C9805FCC13E36125D458DAD478C9D479ACFF7341F2E
	EF039F6C8CABFAD47D6DE545BBD3B56F5389C4C571F3F97E8CFBFBCEBA137DBCBB6FF50DC82CD6A92CC5DF25GED41BC026B2AD51F0F933E4F53595E1B3507F835133179DED0375F6755CEF43FA7C35D1E6255CEEC780273B3BB9F79844F6A529E0993EC7706847C46F4F09E370FBF8BFEB5A7BDB7523019797EE3DA07A5C05B1AF9B8EE9FB662F8244D43357D31C6B2FF8B669BF5D5G86GB34098C058FC24F91652103B684573591DB839BFCF184F6ECD7919E9E31FCAB7429F2C6E2F62B2FC7185AA1CD9755B
	2068B366A5CB97C48E7AF91B86DE3D1F592A7A3DC519DFD29F5E912C1BCF3EC3BEFE123850F99B71E7E6C78327AF3A4D5F0ECD821E2FB128829A834047FCBC4D37313C142E48FA0D6644815166A6358413F76E9B0F3CDF76213C959A72B2FD642D66727E44E5A4436FBD7CB76B6FE29376179A203FF4D51FC23427BF024B0B7655BFCCA4FE6BF758C6066DEE3E66AC22390248ADGFAA6F73D9E6516C4EB4BD55B52GB4BD519E39B615DC369F78DBAF11B1867808E84C51B79D7BBBBC0D62902F7E9B4DD6596122
	65BFA08DAE872C0E72B84352AFC8789A3427764A3E977E49961C37718F5CA92C185E90700CBD1E5B1C441FABD64FC95F2E58B26B9419EBD98BA09F81B4G7482B881C29720ED7FFA0C5F079075EBE5D96C9F24B7794A864FAA0DFA50E431E663D3D9CF56E11BB86E981185617585F43F56006BF7943C47AFE0BA2DDD406E852B96921AAF9B73A7311F753D65BDB23FC81D279C9AABED6559C4EE1BE8D22D7F771FA67EE6979C259C771FC59EDC9947592C84F704B3B3DC528744371E5369D2015DEDA60A6A5C9A32
	105F53AF443B4F23A7345AD7AE44FB12473ED12FB139F3ED9998E73EB6A7AE64FEDA6839A7E1EB0A3E83EB2C5CC5C65D07827B7E0F66DD7A774AA1FF9C4E75A7CF8BCABCBD17037134FB59A2216169068C4C9B3E3AB4AFE2BAC4AE726892522B5F4A7479FD9F6A1328298F4AEE9349EF46F337F24E1F3D98F9FACB54B6B09E07C9D04678819116B9212C847B485F07FD54AC3EDCBF3C50CFFE33D85F5BCBECD26A9FB6D5F9DBF9AF99CF2B5DAADBC51B759CADF60F81215D4266523DE652BE8672A3GD6G2C86C8
	DE0C73687E5E3F8AF49EE94C21C633C5421A84654DBD95386EDBF0AA78F763F71EA25FF9189C905F4324FF44471DA2B1AEBB1C9449F0771EA2F16032DA86E5C64A71BFBCC57CE51386A81A5533DFB46037B8E9E01BFE89566C25FDDE77BA64AB144A4A43AE2B39CE343451AC404EE7EC145F86FCA1GD1CBF0BE0CFD0AB1983BF42110780276B7CA495D97B262173058DB33C4756D7FE726CC564F5099F5AC1336C0B5CD5ED246DF3154538F2E2519426F86821CBF516C404F1FCC98F7E3CB71CEB46404721D4BD2
	3C53338CF8E22C75DB722D1766DA8111F084C4F51806E0375AAD127F3BE16B447E8E75BA11827D26AD1D3C66E1F2EF341035AF77F623EEAF0081E090E082A082A086E0A5C0A2C08A0090837B8E00A200AA00B600BEGB986E3783D3EBD01F487A49FEC9A48AE51CAC2196BAF08EA7DC3213F28184975E7FC71DEE798F14013F0C9FC9FF85DCD2E811E54A0FC4C3EFFB1871EF38966CB78DF8DB37D568D66CA7738131FC1BCEEA66B11E3E040ADA9F37BE9F32E02EBF19B9CEEAB49A67CAE39614A3E07283FECBE36
	EFCD2673D13843D367B07C860A4FD161597CF7A973BF9F5AA66E4098AF361279128C6FE9GF9F7C24C8134818C5E29FCDBA1C14A1E7C2C345B61EC0381302936272C7F50A1527F847495893092A089A085C0D8067D5FA715CF921FDD8E07CC4E85A0C0E588CF49250AD4FEA6E05272E15EB296BBC54B7CE30871DDFBC20B2F0A539BB478589E49C057EF73B266E3067B1A62A6B80E59355492B8AE17DB024765FD966D35E02545FFAD7809C5FBAD7805C53D96B05CEA8B49F3961877BD8A5D2F955C898577946D13
	600EDB4D722002DFCB75A278E60988C47C3FD33DC6A92E873F9DD261CEF0DC2A054CADB0F95061D24EBEACE48FB5E0355978B9AE25315AE12AA97EF80B6AE8F50AAA3D5FD6F0A7143158A57A0F4FEED1BDBE8C77C813BFDDE213BF1DFE1FBF5D7EFDEABA96CF7FC152B67F7DDB556F31863C9B7BC7G13B16B9FAA03797AABEB60F82E36EA1FE9B5D8354F340ED8A73FDF6B32863EDFBBE1757F9F0FD9C301F50B9C8ABE57968CE94F355B077C67DA6C1076DC7B67A175DC63E7AC34560804B809D906E7AC21A6BC
	E309D7F051347E480A059C9C0B38CDA7112EA0966BB571539CC129E76934E4785DE35BBCF81C163C6E2EB4F91FCFFCE4A35D32FD76EDA65CE7BBE37D731DFA6FCEA0A4166D6F5F677848D85F7D7D7DA73CE51D9876485AFD92E5AD8EA0ABD385BDFCCF0F32D628E4311AADD1296392E23D778F65746F893E8719308B8A4F51134A37DB40435A6FA5614A675113DEEB09FE39D1573C7CD2EA172E13EA3EDE60F1866163E747A67F5C722A49BF87D9CF7A5359CF2A69587F4D5F7F6DCB700CFDC958A48B1B6BC9285B
	E4A12323556D92F6A81F193750341AFC363CB27379C51999C2D60B301905FE0B10C56237C558C4433BC54804509FA37FFECA7E4894A15B25BC77F742C5A1C3707E734792FAC1937B0EACEC432F6B8B480900AC64708FF7692B9753BBFC44BCDDE5293064B75BC36C79DE3DB75FB82DBF60796F5E3B5958545C6D59C330FA656FEC1DGFC645DD81F1C6F7BDC88DC7B9F9B96ED20386DCC2D5DCC7681F563326449E3A5A2695F0DB43C1167D31168BD246279DFD0CB878883175D56E996GGD8C1GGD0CB818294
	G94G88G88G700171B483175D56E996GGD8C1GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG2396GGGG
**end of data**/
}
}
