package cbit.vcell.model.gui;

import cbit.vcell.model.*;
/**
 * Insert the type's description here.
 * Creation date: (6/24/2002 11:34:37 AM)
 * @author: Anuradha Lakshminarayana
 */
public class KineticsTypeTemplatePanel extends javax.swing.JPanel {
	private ParameterPanel ivjParameterPanel = null;
	private cbit.vcell.model.Kinetics fieldKinetics = null;

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == KineticsTypeTemplatePanel.this && (evt.getPropertyName().equals("kinetics"))) 
				connPtoP1SetTarget();
		};
	};
	private boolean ivjConnPtoP1Aligning = false;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private Kinetics ivjkinetics1 = null;
/**
 * KineticsTypeTemplatePanel constructor comment.
 */
public KineticsTypeTemplatePanel() {
	super();
	initialize();
}
/**
 * KineticsTypeTemplatePanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public KineticsTypeTemplatePanel(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * KineticsTypeTemplatePanel constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public KineticsTypeTemplatePanel(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}
/**
 * KineticsTypeTemplatePanel constructor comment.
 * @param isDoubleBuffered boolean
 */
public KineticsTypeTemplatePanel(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}
/**
 * connEtoM1:  (kinetics1.this --> ParameterPanel.kinetics)
 * @param value cbit.vcell.model.Kinetics
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(cbit.vcell.model.Kinetics value) {
	try {
		// user code begin {1}
		// user code end
		if ((getkinetics1() != null)) {
			getParameterPanel().setKinetics(getkinetics1());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (KineticsTypeTemplatePanel.kinetics <--> kinetics1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getkinetics1() != null)) {
				this.setKinetics(getkinetics1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (KineticsTypeTemplatePanel.kinetics <--> kinetics1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setkinetics1(this.getKinetics());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (8/9/2006 10:10:52 PM)
 */
public void cleanupOnClose() {
	getParameterPanel().cleanupOnClose();
}

/**
 * Gets the kinetics property (cbit.vcell.model.Kinetics) value.
 * @return The kinetics property value.
 * @see #setKinetics
 */
public cbit.vcell.model.Kinetics getKinetics() {
	return fieldKinetics;
}
/**
 * Return the kinetics1 property value.
 * @return cbit.vcell.model.Kinetics
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.model.Kinetics getkinetics1() {
	// user code begin {1}
	// user code end
	return ivjkinetics1;
}
/**
 * Return the ParameterPanel property value.
 * @return cbit.vcell.model.gui.ParameterPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ParameterPanel getParameterPanel() {
	if (ivjParameterPanel == null) {
		try {
			ivjParameterPanel = new cbit.vcell.model.gui.ParameterPanel();
			ivjParameterPanel.setName("ParameterPanel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjParameterPanel;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	 exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	connPtoP1SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("KineticsTypeTemplatePanel");
		setLayout(new java.awt.GridBagLayout());
		setAlignmentY(java.awt.Component.CENTER_ALIGNMENT);
		setPreferredSize(new java.awt.Dimension(729, 553));
		setAlignmentX(java.awt.Component.CENTER_ALIGNMENT);
		setSize(494, 283);
		setMinimumSize(new java.awt.Dimension(300, 145));

		java.awt.GridBagConstraints constraintsParameterPanel = new java.awt.GridBagConstraints();
		constraintsParameterPanel.gridx = 0; constraintsParameterPanel.gridy = 0;
		constraintsParameterPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsParameterPanel.weightx = 1.0;
		constraintsParameterPanel.weighty = 1.0;
		constraintsParameterPanel.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getParameterPanel(), constraintsParameterPanel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		KineticsTypeTemplatePanel aKineticsTypeTemplatePanel;
		aKineticsTypeTemplatePanel = new KineticsTypeTemplatePanel();
		frame.setContentPane(aKineticsTypeTemplatePanel);
		frame.setSize(aKineticsTypeTemplatePanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Sets the kinetics property (cbit.vcell.model.Kinetics) value.
 * @param kinetics The new value for the property.
 * @see #getKinetics
 */
public void setKinetics(cbit.vcell.model.Kinetics kinetics) {
	Kinetics oldValue = fieldKinetics;
	fieldKinetics = kinetics;
	firePropertyChange("kinetics", oldValue, kinetics);
}
/**
 * Set the kinetics1 to a new value.
 * @param newValue cbit.vcell.model.Kinetics
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setkinetics1(cbit.vcell.model.Kinetics newValue) {
	if (ivjkinetics1 != newValue) {
		try {
			cbit.vcell.model.Kinetics oldValue = getkinetics1();
			ivjkinetics1 = newValue;
			connPtoP1SetSource();
			connEtoM1(ivjkinetics1);
			firePropertyChange("kinetics", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G470171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BA8DF49447F942810CE399C4ACEC1162D74516936248FE34D6EAA5A5A9F66C979A6BA5B8ED8DE964D4EE6D8437348FBBFA2F240F5423BB71E789DB9825119308E5030384C2C1C8AE32CAE284A2A0F39207B89FA7A4C02B3B55E9455E6DFAEFA51D0400FE5F4C4E5E6A342B83DA5FFB5F5B1DEFE63E3F793EEF3E19BDD279F6760692D7A5A1A59B0871BBD4C2C84EDEC29AC65CA39C17917517914B6F9D
	00ED6447CAA9BC33212FB74BDFD6C1A6021B211D876D3CFB7DE53F04776DE4C6303886DE9C7894C05F2342BBE953737946C71C4FA65A6E59D38E4F57817281074FD285794776D49978C2834F2144C5488BF44C5CBDBB8C5CC9E87781E48364A9ECFC81BC37D04E33DA1A0DF13D739713626FE82E2DC847C213C31D4A66FA0DE7B5790F12F5AA72FA0C4A09F366C0FB99GAA6FA65F2EED0267E16F65709F027D12DEBF9294E539BE2204C439BEBCAC35341C122222AE85E33EB1D5740991D596F451ABC4C5D97F84
	693E3AE7B32583B420CDB444DD6FC6DE7950DE81305A447F4BF9443741FBAF002EF17DFE3F6730A1FF604AE3640570D3DB5EF050AFDDE3FA65E9897DE66E6DF73FC5576267275066EB212FB266AF2B8170G48G69G3F26BED0FA8A5C0934766B4714C8C409362A6AD1B924F5203E705E5282BD862ECB8CAADA0890364E5F58D3E7A34FF44066BDFD537318CD96B772B54F6DFA0494BEFA0FEB130DCD8A97DFF1654418AD164692B6E13CCBEB1CF89746A67B64E45E670815B7F96960268DB63CF7BCFBF053DA03
	CE291E605D2C63DA7F147A40EEF847F9B81F617F1362A7ACF8661F33A89E5B9950D72CF35F883C4EE571145ECFAA9A6E3535C35693692E40B013C19DCE166529DE243DE818715CE44A728C4567D970CC1617291FE23BG7A8E0C784B18FFED6C44F84D0476920065GC5GE454DF36836040A877310ED33F3BC19F738A1AFEF4D812C322C6585C0D1E7F02279857B521BD9A5305E8D0748B1AA4744BE20C98E35E7020EC7D1366D5FA5077034063049895B5C11714A8D097A222AEEAB1B6E627E79B0E51C45A6B13
	A2A2B008280453FD4F339D1E329053BFD6C3906609912CFF3F8757E4C47083C5A0G6F4CAE0D2751DEDE50FF90A0EE5AE1B125F7CA54A0DB3434F8946572306AC3CD4872D134732FEBB0F72443FB4EA837716F3C08AB0F7B4BF647B91DFF703CE92153A685D1FCC19B63B17633EE1C538C637B625CEF7EAD407D26ED6B43246E6F96587ACD8678F0BC4E7CA5A3BEA5FE4EA3DD14ADBF4E737D1D5D8107186A0B5B47D433835EB9E764B872586000F75FA07D574DB53B6F8C2E59AA102D9820F20C5B7AD79D554CF7
	0F8AB111FB6BE98D9CCD8CA5ACEF6436DE3E27388D5998FEA5455781CD9F404498375D3F1F8FA40D3F193CF8E3362B6889A449737F49035928229377A7F1C40C6AED22AAC6C37092B37AFE59097EE7446F00E24E59C971AA447BB1883018095F5509B1A9683AA6758F6B62D9D15725E8B8513F0F720A8D772B09D441F99D6CC49D15D108F7F37C21CE0C1520920D0AF4314CA9C67F87B4D6C5D90C0050471461284E709F1E463A6632B8E6640AE327B7920CF5F998738E2B951688D890291A9481974054C50A47B0
	0E8F56D4D9EC1483B82CF91663F30C476368AE9E0F3B473FCC16DDD2DDF6FBCA560373DC07470D9AE6BC910FCC26A62F3D6CADB4E79878981375298368670E450B61A35B49198A146F32B12E410C0FE73B10178AB24C84D8B44E6363AF3C142E110B0C40B82648B2B3B774950E23CDCE1E2FB4F44A03F641B833C942079EB8D3016BAAFEB2ACC20A4724F84A347DC3E75ECC6A739B6B407A7F7C8C2E03EC4927FDD71067EB97F8BD397B8A63F7788A4BDDDEF87E86706B69383FB54765DA7A1F84D8FD054928CF60
	38BF3DE8562793AC167BA692636B89770B1F56627A539AF2C89891627531D1706116160FACF562A21A6B31EEDDB6416B41C7BD34C6388AF282782EF2DFF9E6AB2F87B3AFAFA605AFB5ECF22AF7652BC66E3E1A70150C352D9B599AD67B10678A68AB3A4A57EFFF17F5CFEA0D451420C437C3433605DDD6DFE238673BDE036700244574F68876B8DF071FF4213C38DF9AE823FED0E87D007ED58CFC6B2E794BC257901FFB9EE38C57046999EC64FAE60CBFC87A96FC5ED566206762EBCC3F655792FA56DDDB370171
	EB3C4079116B7E32E6G665BCF507D0B7BB643FD73824A208FCAB1A643AB2DC78C9E850F5CCF72B7253B6CEA6F41AFE539546B0CF75675048CD9DF68F76782B0B9FEEE4A319A46D427415EC27343E007B5BF845258FE1F014FB4AE6B1C0BD6D919EC8F7F46AA5BE6E1162DEC69AF05DDCB5318CCAF24A5E42B3C3B5FDDF3B717ED79C5AEDB5D8CD80F997C7CD37987FC52BCC7F87DBB514D79269564112A6DF75972C5D8B40371FBF2C602EFD1F63F3B98006DC7DF28C95E4BABEF033349ED53578407215F1BB4A6
	846DF8920E5531FBBAD037745BD89D6BB6718D943F4802E736781A075BA2977AAABE43EB2F7B7C38CEBA34B3G9683AC83A882A0B3F97CA8E79BC90A5A36BD8AA5E7D4104FCE5A34F80D69C33E304F986DDA1F557E4CE64367715C32E3664D56CD1F21731AEEE29EDB6F5A735673F569360FDCEE07758E993475190975E6366B8CE03E4F837C8A0055GE4964440ACEE37C7FCF5296C466BFC43E0CC278FAE24BABF9E19B5D9DFB66FC44AF92124F9CC0F1CEE4C7993501785308420GE0ADC079ECB8634C667A2C
	779DCD25CFABAFEAFC0A79FAAC39B061723AAF5E1A1E5BD24EBBB9FB72BC9677BB1BEA4934779E666109578BEC9F4B6E60779DFD3379BED69040F84A027692006533F9BC3D550336AC0276FA004A5B41FEGBEG95A073F6EE4B4E0F7FA715AD0FE33189F624261BEAC4E60B6F5E228D8BD34E4B3B5D4ED7967622FE8550379A004C01F3B0409100DE0034B9DC3F6C0FD37A0AE96D69FD051D9B3FC5EB09AC201F8B40F059FB69DE8F6D55A66E950ADB8F6D2ABBB86E3F7D082B03F61B091BC3F181E82BA66ED2G
	F119504E3D031FDF76F7605E394CEC9F22ED2C1BD87B2FBCCE67B68EB877C6F313FD0EDB1512474D1C8513012D57977D4E671B077D76671BC77D76671B2F7937B1BC50305EF6707E477D531FFF7E5AEFF77E59C975FC5605F12741B9C00A0814AD0BEDB17E8E73372E61A8F3B9649CCB4E33269F2F24B5D1619D5CDFAF1DBBE8632F47C3122EE81C08CF943453838326331ED545A017599FF0365F05003D7D0281FB7BC901696D77C94049FE4CC6BF51FFC1EC4E031D90ED041F01548BDB0CB1DEDD71B618349F69
	F656632B5D76FA7CE5B7566AB1E5D88B0A4932BE51DDE576A5023BDD97A3A88E9B73B41D2F8BDAD81C226B7769FC5667B47F075DD8C377CBA1C9B3CEE4CC47160BDC47633A5251E04653039D53653EF5B6714AEA2BA3743E327C332C36AAB1716D94DFE541331A6B7B81FED7329B7A66FC167B5A2E9EE79B6F6D313771019EE79B9F6AC9ED63A3BD4EB6BE51135A465E9EA71FE3365EF0290C7B530026C440230CB3EF2F332E8F755A6B3A2457D95747FAD36B3A2C57D957EF772656F5C52F3DBF7DFD8D5E0F4842
	18B22C435EF1A73DB7B66FC156407A16822E8E60481D6C3C4366BD36974F1202AC0523F8426C06B38B1D7BBD3AD7E543FB5E1DFC6C16FDA83B2A0983222609213352B846AC9B7F6EBE9CDF136EAFEBCA6763BB7C13E88778D8116EEFFDB0CECF67671EBF9BC53D86E057052523492B79AEFA6677F39DF2E0ECBE40AA00F5GD5F7F1BEA3811C8B932548F004CA45784C25FBE69A0CCBB747269FC4DA494514912B9736DA7D4848C9EC7FDD5A4177647C3B787E7AC730960F5B531677D501D4FB627F85980F17BFD5
	9EACC73CD54BF344663960B7F379DAB574E11DE55E2F548B23FACB4B89CD8A9D95429E6A012CB695EAB79B7363F3F9EDBA0F52DC826D65GC5F3795DC37C377C6EA1770B771395AF5A5F3194792E3A564DE5B9F047BC4B39FFEF3F7BED3A06A0AB613F228F591A7FF86FAEF8F2D16BE197D515A8B8E47D31631D3E63DD17DABD6DA7BABB605DB8FFE50FDA4FDF4D2F5DE6FBB70890B0E4100DE77A2B8BCBF26661F75A5368BAC6EC6E73D743B3AA0ED61BB234C10590450F96B5078EFED0D77D7E7B0D354E72CF78
	EFD4FEE677AB67385DD703AC5599087B7239CA0B5CC877100B10FA349F6D7F6124FE4C272F92EB7F5600359F6D741C5B5A7F6124FE34D750184FEC7A74FBFCFD57BF3D0448DF1D69784DF8B0433025712C7E6E4212B5D95E0D4C2EBF9AC858759E4FB4F6EDBCF0202E3A21697D5A7279A85F5FF43499741F4C183A07723D51ED40AA9833866097C61B4CCF6C1FAC7E5E2E3D356F2F7BEFF15E40CD4FE37B3F3097634DB7BF39AE9822783E7949F54182B366E568DBB11F1F9D9F8FE39EEE7A1C3F4C8BB088108610
	8D3074F33CF688DEBCC0D21C2BFC0A6A018DD736140E0C7E0B03743C84345618743EF2F19FBC7D4250540A9710DECDD1C5CD9FE3D8FAA3ED785A77FA2C71DB71F95945F5CC36D1795D4C972A6ECE7E5616F66E563E13BF3E097BF95E579FA279335B9C6FD0BD86CF59F86697ACAC41A733C766905AFB9174658394829483EC4E04F84E647649940DBB9CB481D47EC2F0105E921B878BC99CCD20F1D3E579213493ED0DB15A843426661D359F5A61D87CDD472B87C357674B392EBB3E72GE9DB59665A65202B1CE9
	7CA7A0B3E16740C05396E66BB07E854270F355727EA7351F7EBE1A772972E06B741D30F31D79CC583E4EDC9936BFFFBD971E7EFC7AE258797B5C1A70546FF37FBC783A159E8BA3236F65C14C69D0D6699294F163743344D998988DB39F0DC508C9E7D4FA0FB844AAF862C7101FCF778F01837A04306963E9D124DF8CBED131G6AC60013G3D8B38FFFFDDFA1779370DEF9F8F05314646FFA468DC067B061C6D1CB3147AFF8C8F8FE13D5A2F683A92C17A66DD42907A0A2E289449F079C338BE1A949E5459D0837F
	4DA10C99D99C20E866E3DBBA2D39A48E7A25AF187E5E055967C78A6ED959B0F6A9C09140BA0072FB7CE53B811A81BCGFDGF1008C009C00FC008200C20035G2577F2FBBEA957BA2D91A00D820E9AD593A4B42B21531C2833DD67C5D35BB5ABCA3FE101BD703B2731D6D1BC2FA88383B151DC3F7B2395A62EBD66D5E292FA9C2B3F2BE94E2A82DDBEF6731A7CBD0ABBG3867CBB80DD794E7D9FF26241655255A7B40E6F52A8FECD56DFDE03BEA7581062BD2B17642E06300B9EE27096BB6F16FD21A08BBA70574
	C193DFC365C27CC99199F2FCBD15EB146282862E51026BB6F04DAA5A9BD49ED4B4BE7777AA5EB38DC8324C5A2DF40C9485731B7678A315D1D2850B5C27CC9C4A4D4E8442EF4B9339020A4E70BB62DB93F8AEBAE17FFF3C96DD844F5CFFA59BE29AF9F3EA8D57BA7787ABF3AF35D53A082B1DEC9C24135B4906D1249ED789F101BB3BFE907B04DC43BCC466435ED387145EB0A935D3D50AC69ADB5C7F74005BC5CA018CDB5AF6D20A6B8354B4C6558DCB0BB4C929950C6FB1572D75443AD9C14773C0F61671FF402C
	646FB14FD11FD88B7872056637DFF57FB4B973ECC410E5DD10AF37C6C318BF0F0E69E2A24F7F230A74E3FC0C51497ADE22BEB4E419733FD0CB8788602A0D612D8FGG4CAAGGD0CB818294G94G88G88G470171B4602A0D612D8FGG4CAAGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG678FGGGG
**end of data**/
}
}
