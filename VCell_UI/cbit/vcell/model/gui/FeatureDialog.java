package cbit.vcell.model.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.vcell.model.*;
/**
 * This class was generated by a SmartGuide.
 *
 *
 * showFeaturePropertyDialog is invoked in two modes:
 *
 * 1) parent!=null and child==null
 *    upon ok, it adds a new feature to the supplied parent.
 *
 * 2) parent==null and child!=null
 *    upon ok, edits the feature name
 *
 *
 */
public class FeatureDialog extends org.vcell.util.gui.JInternalFrameEnhanced implements java.awt.event.ActionListener, java.beans.PropertyChangeListener, javax.swing.event.DocumentListener {
	private javax.swing.JPanel ivjPanel1 = null;
	private cbit.vcell.model.Feature fieldParentFeature = null;
	private cbit.vcell.model.Feature fieldChildFeature = null;
	private boolean ivjConnPtoP1Aligning = false;
	private javax.swing.text.Document ivjdocument1 = null;
	private javax.swing.JLabel ivjNameJLabel = null;
	private javax.swing.JTextField ivjNameJTextField = null;
	private javax.swing.JButton ivjCancelJButton = null;
	private javax.swing.JButton ivjOKJButton = null;
	private cbit.vcell.model.Model fieldModel = null;
	private javax.swing.JPanel ivjFeatureJPanel = null;
	private javax.swing.JPanel ivjMembraneJPanel = null;
	private javax.swing.JLabel ivjMembraneNameJLabel = null;
	private javax.swing.JTextField ivjMembraneNameJTextField = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private boolean ivjConnPtoP2Aligning = false;
	private javax.swing.text.Document ivjdocument2 = null;
	private javax.swing.JCheckBox ivjOutsideJCheckBox = null;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public FeatureDialog() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getCancelJButton()) 
		connEtoC4(e);
	if (e.getSource() == getOKJButton()) 
		connEtoC5(e);
	// user code begin {2}
	// user code end
}
/**
 * Comment
 */
private void apply() {
	try{
		if(getParentFeature() == null){
			if(getChildFeature() != null && getNameJTextField().getText() != null && getNameJTextField().getText().length() > 0){
				getChildFeature().setName(getNameJTextField().getText());
			}
		}else if(getChildFeature() == null && getModel() != null){
			if(getOutsideJCheckBox().isVisible() && getOutsideJCheckBox().isSelected()){
				getModel().addFeature(getNameJTextField().getText(),null,getMembraneNameJTextField().getText());
			}else{
				getModel().addFeature(getNameJTextField().getText(),getParentFeature(),getMembraneNameJTextField().getText());
			}
		}
		dispose();
	}catch(Exception e){
		cbit.vcell.client.PopupGenerator.showErrorDialog(this,"Error Editing Feature:\n"+e.getClass().getName()+"\n"+e.getMessage());
	}
}
/**
 * Method to handle events for the DocumentListener interface.
 * @param e javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void changedUpdate(javax.swing.event.DocumentEvent e) {
	// user code begin {1}
	// user code end
	if (e.getDocument() == getdocument1()) 
		connEtoC1(e);
	if (e.getDocument() == getdocument2()) 
		connEtoC7(e);
	// user code begin {2}
	// user code end
}
/**
 * connEtoC1:  (document1.document. --> FeatureDialog.updateInterface()V)
 * @param evt javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.DocumentEvent evt) {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  ( (FeatureDialog,childFeature --> NameJTextField,text).normalResult --> FeatureDialog.updateInterface()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2() {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (FeatureDialog.parentFeature --> FeatureDialog.updateInterface()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (Button2.action.actionPerformed(java.awt.event.ActionEvent) --> FeatureDialog.dispose()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (OKJButton.action.actionPerformed(java.awt.event.ActionEvent) --> FeatureDialog.apply()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.apply();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC6:  (FeatureDialog.model --> FeatureDialog.updateInterface()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (document2.document. --> FeatureDialog.updateInterface()V)
 * @param evt javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(javax.swing.event.DocumentEvent evt) {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (FeatureDialog.childFeature --> NameJTextField.text)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getNameJTextField().setText(this.getChildName());
		connEtoC2();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (NameTextField.document <--> document1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getdocument1() != null)) {
				getNameJTextField().setDocument(getdocument1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (NameTextField.document <--> document1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setdocument1(getNameJTextField().getDocument());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP2SetSource:  (MembraneNameJTextField.document <--> document2.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			if ((getdocument2() != null)) {
				getMembraneNameJTextField().setDocument(getdocument2());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP2SetTarget:  (MembraneNameJTextField.document <--> document2.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			setdocument2(getMembraneNameJTextField().getDocument());
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the Button2 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCancelJButton() {
	if (ivjCancelJButton == null) {
		try {
			ivjCancelJButton = new javax.swing.JButton();
			ivjCancelJButton.setName("CancelJButton");
			ivjCancelJButton.setText("Cancel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCancelJButton;
}
/**
 * Gets the childFeature property (cbit.vcell.model.Feature) value.
 * @return The childFeature property value.
 * @see #setChildFeature
 */
public cbit.vcell.model.Feature getChildFeature() {
	return fieldChildFeature;
}
/**
 * Comment
 */
private java.lang.String getChildName() {
	if (getChildFeature()!=null){
		return getChildFeature().getName();
	}else{
		return "";
	}
}
/**
 * Return the document1 property value.
 * @return javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.Document getdocument1() {
	// user code begin {1}
	// user code end
	return ivjdocument1;
}
/**
 * Return the document2 property value.
 * @return javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.Document getdocument2() {
	// user code begin {1}
	// user code end
	return ivjdocument2;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getFeatureJPanel() {
	if (ivjFeatureJPanel == null) {
		try {
			ivjFeatureJPanel = new javax.swing.JPanel();
			ivjFeatureJPanel.setName("FeatureJPanel");
			ivjFeatureJPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsNameJLabel = new java.awt.GridBagConstraints();
			constraintsNameJLabel.gridx = 0; constraintsNameJLabel.gridy = 0;
			constraintsNameJLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getFeatureJPanel().add(getNameJLabel(), constraintsNameJLabel);

			java.awt.GridBagConstraints constraintsNameJTextField = new java.awt.GridBagConstraints();
			constraintsNameJTextField.gridx = 1; constraintsNameJTextField.gridy = 0;
			constraintsNameJTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsNameJTextField.weightx = 1.0;
			constraintsNameJTextField.insets = new java.awt.Insets(4, 4, 4, 4);
			getFeatureJPanel().add(getNameJTextField(), constraintsNameJTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFeatureJPanel;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.FlowLayout());
			getJPanel1().add(getOutsideJCheckBox(), getOutsideJCheckBox().getName());
			getJPanel1().add(getOKJButton(), getOKJButton().getName());
			ivjJPanel1.add(getCancelJButton());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the MembraneJPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getMembraneJPanel() {
	if (ivjMembraneJPanel == null) {
		try {
			ivjMembraneJPanel = new javax.swing.JPanel();
			ivjMembraneJPanel.setName("MembraneJPanel");
			ivjMembraneJPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsMembraneNameJLabel = new java.awt.GridBagConstraints();
			constraintsMembraneNameJLabel.gridx = 0; constraintsMembraneNameJLabel.gridy = 0;
			constraintsMembraneNameJLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getMembraneJPanel().add(getMembraneNameJLabel(), constraintsMembraneNameJLabel);

			java.awt.GridBagConstraints constraintsMembraneNameJTextField = new java.awt.GridBagConstraints();
			constraintsMembraneNameJTextField.gridx = 1; constraintsMembraneNameJTextField.gridy = 0;
			constraintsMembraneNameJTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsMembraneNameJTextField.weightx = 1.0;
			constraintsMembraneNameJTextField.insets = new java.awt.Insets(4, 4, 4, 4);
			getMembraneJPanel().add(getMembraneNameJTextField(), constraintsMembraneNameJTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMembraneJPanel;
}
/**
 * Return the MembraneNameJLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getMembraneNameJLabel() {
	if (ivjMembraneNameJLabel == null) {
		try {
			ivjMembraneNameJLabel = new javax.swing.JLabel();
			ivjMembraneNameJLabel.setName("MembraneNameJLabel");
			ivjMembraneNameJLabel.setText("Membrane Name");
			ivjMembraneNameJLabel.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMembraneNameJLabel;
}
/**
 * Return the MembraneNameJTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getMembraneNameJTextField() {
	if (ivjMembraneNameJTextField == null) {
		try {
			ivjMembraneNameJTextField = new javax.swing.JTextField();
			ivjMembraneNameJTextField.setName("MembraneNameJTextField");
			ivjMembraneNameJTextField.setEnabled(true);
			ivjMembraneNameJTextField.setColumns(20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMembraneNameJTextField;
}
/**
 * Gets the model property (cbit.vcell.model.Model) value.
 * @return The model property value.
 * @see #setModel
 */
public cbit.vcell.model.Model getModel() {
	return fieldModel;
}
/**
 * Return the Label1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getNameJLabel() {
	if (ivjNameJLabel == null) {
		try {
			ivjNameJLabel = new javax.swing.JLabel();
			ivjNameJLabel.setName("NameJLabel");
			ivjNameJLabel.setText("Feature Name");
			ivjNameJLabel.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameJLabel;
}
/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getNameJTextField() {
	if (ivjNameJTextField == null) {
		try {
			ivjNameJTextField = new javax.swing.JTextField();
			ivjNameJTextField.setName("NameJTextField");
			ivjNameJTextField.setEnabled(false);
			ivjNameJTextField.setColumns(20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameJTextField;
}
/**
 * Return the Button1 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getOKJButton() {
	if (ivjOKJButton == null) {
		try {
			ivjOKJButton = new javax.swing.JButton();
			ivjOKJButton.setName("OKJButton");
			ivjOKJButton.setText("OK");
			ivjOKJButton.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOKJButton;
}
/**
 * Return the JCheckBox1 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getOutsideJCheckBox() {
	if (ivjOutsideJCheckBox == null) {
		try {
			ivjOutsideJCheckBox = new javax.swing.JCheckBox();
			ivjOutsideJCheckBox.setName("OutsideJCheckBox");
			ivjOutsideJCheckBox.setText("Outside");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOutsideJCheckBox;
}
/**
 * Return the Panel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getPanel1() {
	if (ivjPanel1 == null) {
		try {
			ivjPanel1 = new javax.swing.JPanel();
			ivjPanel1.setName("Panel1");
			ivjPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsFeatureJPanel = new java.awt.GridBagConstraints();
			constraintsFeatureJPanel.gridx = 0; constraintsFeatureJPanel.gridy = 0;
			constraintsFeatureJPanel.gridwidth = 2;
			constraintsFeatureJPanel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsFeatureJPanel.weightx = 1.0;
			constraintsFeatureJPanel.insets = new java.awt.Insets(4, 4, 4, 4);
			getPanel1().add(getFeatureJPanel(), constraintsFeatureJPanel);

			java.awt.GridBagConstraints constraintsMembraneJPanel = new java.awt.GridBagConstraints();
			constraintsMembraneJPanel.gridx = 0; constraintsMembraneJPanel.gridy = 1;
			constraintsMembraneJPanel.gridwidth = 2;
			constraintsMembraneJPanel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsMembraneJPanel.weightx = 1.0;
			constraintsMembraneJPanel.insets = new java.awt.Insets(4, 4, 4, 4);
			getPanel1().add(getMembraneJPanel(), constraintsMembraneJPanel);

			java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
			constraintsJPanel1.gridx = 0; constraintsJPanel1.gridy = 2;
			constraintsJPanel1.gridwidth = 2;
			constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJPanel1.weightx = 1.0;
			constraintsJPanel1.weighty = 1.0;
			constraintsJPanel1.insets = new java.awt.Insets(4, 4, 4, 4);
			getPanel1().add(getJPanel1(), constraintsJPanel1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPanel1;
}
/**
 * Gets the parentFeature property (cbit.vcell.model.Feature) value.
 * @return The parentFeature property value.
 * @see #setParentFeature
 */
public cbit.vcell.model.Feature getParentFeature() {
	return fieldParentFeature;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION --------- in FeatureDialog ");
	 exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getNameJTextField().addPropertyChangeListener(this);
	this.addPropertyChangeListener(this);
	getCancelJButton().addActionListener(this);
	getOKJButton().addActionListener(this);
	getMembraneNameJTextField().addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}
/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("FeatureDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setClosable(true);
		setSize(344, 143);
		setContentPane(getPanel1());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the DocumentListener interface.
 * @param e javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void insertUpdate(javax.swing.event.DocumentEvent e) {
	// user code begin {1}
	// user code end
	if (e.getDocument() == getdocument1()) 
		connEtoC1(e);
	if (e.getDocument() == getdocument2()) 
		connEtoC7(e);
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		FeatureDialog aFeatureDialog;
		aFeatureDialog = new FeatureDialog();
		frame.setContentPane(aFeatureDialog);
		frame.setSize(aFeatureDialog.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JInternalFrame");
		exception.printStackTrace(System.out);
	}
}
/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getNameJTextField() && (evt.getPropertyName().equals("document"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == this && (evt.getPropertyName().equals("parentFeature"))) 
		connEtoC3(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("model"))) 
		connEtoC6(evt);
	if (evt.getSource() == getMembraneNameJTextField() && (evt.getPropertyName().equals("document"))) 
		connPtoP2SetTarget();
	if (evt.getSource() == this && (evt.getPropertyName().equals("childFeature"))) 
		connEtoM1(evt);
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the DocumentListener interface.
 * @param e javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeUpdate(javax.swing.event.DocumentEvent e) {
	// user code begin {1}
	// user code end
	if (e.getDocument() == getdocument1()) 
		connEtoC1(e);
	if (e.getDocument() == getdocument2()) 
		connEtoC7(e);
	// user code begin {2}
	// user code end
}
/**
 * Sets the childFeature property (cbit.vcell.model.Feature) value.
 * @param childFeature The new value for the property.
 * @see #getChildFeature
 */
public void setChildFeature(cbit.vcell.model.Feature childFeature) {
	//
	// See class documentation for usage:
	//
	Feature oldValue = fieldChildFeature;
	fieldChildFeature = childFeature;
	firePropertyChange("childFeature", oldValue, childFeature);
}
/**
 * Set the document1 to a new value.
 * @param newValue javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setdocument1(javax.swing.text.Document newValue) {
	if (ivjdocument1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjdocument1 != null) {
				ivjdocument1.removeDocumentListener(this);
			}
			ivjdocument1 = newValue;

			/* Listen for events from the new object */
			if (ivjdocument1 != null) {
				ivjdocument1.addDocumentListener(this);
			}
			connPtoP1SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Set the document2 to a new value.
 * @param newValue javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setdocument2(javax.swing.text.Document newValue) {
	if (ivjdocument2 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjdocument2 != null) {
				ivjdocument2.removeDocumentListener(this);
			}
			ivjdocument2 = newValue;

			/* Listen for events from the new object */
			if (ivjdocument2 != null) {
				ivjdocument2.addDocumentListener(this);
			}
			connPtoP2SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Sets the model property (cbit.vcell.model.Model) value.
 * @param model The new value for the property.
 * @see #getModel
 */
public void setModel(cbit.vcell.model.Model model) {
	Model oldValue = fieldModel;
	fieldModel = model;
	firePropertyChange("model", oldValue, model);
}
/**
 * Sets the parentFeature property (cbit.vcell.model.Feature) value.
 * @param parentFeature The new value for the property.
 * @see #getParentFeature
 */
public void setParentFeature(cbit.vcell.model.Feature parentFeature) {
	//
	// See class documentation for usage:
	//
	Feature oldValue = fieldParentFeature;
	fieldParentFeature = parentFeature;
	firePropertyChange("parentFeature", oldValue, parentFeature);
}
/**
 * Comment
 */
private void updateInterface() {
	//
	boolean bModelNull = (getModel() == null);
	boolean bAddingFeature =
		(getParentFeature() != null) && (getChildFeature() == null);
		
	boolean bEditingFeatureName =
		(getParentFeature() == null) && (getChildFeature() != null);
		
	boolean bChildNameChanged =
		getChildFeature() == null ||
		!org.vcell.util.Compare.isEqualOrNull(getChildFeature().getName(),getNameJTextField().getText());
	//
	boolean bOKEnabled =
		(	
			(bAddingFeature && !(getMembraneNameJTextField() == null || getMembraneNameJTextField().getText().length() == 0))
			|| 
			bEditingFeatureName
		) && 
		!bModelNull && 
		bChildNameChanged && 
		!(getNameJTextField().getText() == null || getNameJTextField().getText().length() == 0);
	//
	getOKJButton().setEnabled(bOKEnabled);
	getNameJTextField().setEnabled(!bModelNull && (bAddingFeature || bEditingFeatureName));
	getNameJLabel().setEnabled(!bModelNull && (bAddingFeature || bEditingFeatureName));
	
	if (bAddingFeature){
		if (!getMembraneJPanel().isVisible()){
			getMembraneJPanel().setVisible(true);
		}
	}else{
		if (getMembraneJPanel().isVisible()){
			getMembraneJPanel().setVisible(false);
		}
	}
	if(bAddingFeature){
		if (!getOKJButton().getText().equals("Add Feature")){
			getOKJButton().setText("Add Feature");
		}
	}else if(bEditingFeatureName){
		if (!getOKJButton().getText().equals("OK")){
			getOKJButton().setText("OK");
		}
	}
	//OutsideCheckbox visible only if we are adding feature to top feature
	boolean bOutsideVisible =
				getParentFeature() != null && 
				getChildFeature() == null &&
				getModel() != null &&
				getModel().getTopFeature() == getParentFeature();
	if(getOutsideJCheckBox().isVisible() != bOutsideVisible){
		if(bOutsideVisible){getOutsideJCheckBox().setSelected(false);}
		getOutsideJCheckBox().setVisible(bOutsideVisible);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G680171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BC8BD4D4573578CBE8C292E2C844CFA2D1D4B4E808A189D6CCE8C39BEDD889CDEDCAD25A5A56A626B5AD2B0F7659D75F6B65E3A4C5949B92E9CAD21AE80B9189A082A2C9D150G8EB2951CC0A04240DC1841BB9FE66E400C5F374FB9F75F394C5C81E4C5575A6B4E5967333FE71FFDBE48657DBDECC7DAFA9E47256D6024FFD5E99C17FA0E630E2E51B99197EC51E5F30AFF7FG584B3DE44D04EF9854
	C5466932F3391661ACA8C7C3B978A9DD76BE787D96D75F1928059FFE68C4C05D7C553BB60CCF6739C6243313168F58F641F7B7C08C6048B753CA68FFE24B177049929EA1AD1D6312E81B8EDB0104EB04F2AFC088C00415350F036F1B14722C1AEA29DD775D91DC6AF76C69B9E49C45188805B65637C17A96F27F133655C6E8CD23FC12BED7209C8DC0044F60E634954137D6FBF170537EBE13D8B2524F8BC20959EA600512C127292666B42F971DF63E4124972C0346E1B25686DB966D4BF125D0CE2538BBCA4878
	1170BB9EA0D946BFD0CA7055F6DD369640E8C719BE79D72D44F34765A7384D035FFAF30F9F19826CCC16883BC726420F7AB27ECA753F3B1968F9B354E5B9F45985GF5G3DG81GFF23F6FF3B69A3781E68936B2DE63355F242E6BBA9986CADC4C678DDD383B5926E9C5FEF359BB80E5976D6DB318ABF63816BF76F8D77E3BA09B802F60EBC370ACBFE743E741DAABAC90E381C9E6AE03A08F2F8F442E8BF6717F622E32C9F0E257DB927244D3DD63EF3078A6D02974BF7EE1646592620DDAA92DB27FDCCEC1D8F
	3F53A4DDB0FC8E450B8ABC7349FB284F10F290542508689B9D3B1197CD66A2AE37EC0E2A9EC23F99145E6EE4BC88CEEFDE4E151131C31D0C66BE1917810ACFD46099AF6154CFC9B9EB84FC98007957BE8D192381233A6C85G51G89GDB8132DC60EFAE74318BCD9FCF524734FA3BF852E9928C3C1DE3FD77B53F83DF5EA55A75CD960728377473BA3D5D246F93F887A735A9ECA6BA689B536FG757DFE207199EF616DFA51E4354068FAB3AF72F687EBD3523C1734317334365DE466010059466138154DEF917D
	699D62F91BC1AF721E962C7E53E6E213913D8EC6048160B753CBC38B51D7AD485F8EE0107530060EF70637DBF82126C6E335DEF45A5A09A4DC340B687997B4F63860F7308BF5DCF716603611FAB70E13527C9745B88D26FE423E5E6E46B936137A54FEE8DF875061C65F79F5877ACEC34ECA2E787B772A7ACEB078314D4DFCA6506DBD075E22E3937E2220AE510D31FEEEC947A466F21D5BF71EF5286076FB61980D55132231C38537D3851761D5E67ADE55CA64CB817A3BAE69320BAF214E8F1DA9E4BEFCD26F60
	51EBDB6D60F03C41E38146E7C7D93124578C09B651BFD9B0495A340736A1E3F25C5BG87E579845A2F81E88AGA1G31G1B81F6DD56E5D7GF4834C84088458F899F53F22B4CAC1EF77A4E8CEA66E9E1CE43B2982637DA54AFB0642EEDF856F7BEEB26F4CA77E21A13C71A33CC5EC60ED3C45GBF9CD2DD110648A0452D812B5C270462ED90676AA130B8E4FC0506482897C53B294FA972ED3CA81AAC031E7ADACA4B616C33F9C2A4522A57905DD9C7A14E496D9BB5A4C674DBAD961EBA275CC52AEF26B10A97F8
	B3B0DDEFF5DAC4065736109C6EA26F16E2E4FB4B9B9C09F1021344DB1697C56909EDECF61399DC1E04EC2E7B8A09DF5B653C0E40F670CF125F15C2DD43950CC1239FE28C5AFFE9B99757E3CBD7DBCBC3175C159EFE05450018AB1E9844F8BAF5D61D77B3B4D6CAF88763F52016785018C4CD7237373868A64213415A6FA49D4AE47C52F71478F28EE3432BDAC2B78978598A10F995E343B3E7C9BD46E3A9A854DB8501299E6A9A2E521C7663BCC93E82A8D7DCE57A59AD577FD12E8F02F238221E5109EE4DA5BE40
	8FBBF9D8864942F1C636535A563FF85569A41B317A27DB094D84451A13FB0D50DCD606F9F6B450CBG58FA1545F68E6A5F87FCA4EDB7DC0E6D3A2F31FA719A63AF689A631135BBF4845BED136AF32F2B35FBC5EED78C758DG8629DD78F5E53B959558AE96709B956DD247343BF0945BE585307A420031F4193C7BAA31DD8554EBG04G360E8584A8657D295CAED82A0F709A0F1BC65A4D2F42F6F1D2FDD2G53E3CAGEB97CE5BDD2C46F61AE9AC069B2631762EE9CAB9F20EE13B9429DD567431F419DF378E9E
	6014FB933A9FE9EE32C0F6E3518B27C922F34AE2A46992246C9C5B1B8C50FD9F092F0553F18F72280378F48714EDG0153F11EFEB78777A0A197A33864574AF67A5BD705CDE7FC45CF774C53685F1CF8034D1932F304E6668CDDF65E8C1CAF1FEA15F9508907435AEF22A918642B2FEB15731861FE2B7DB3FC87CCF6075884015605FE3DCDCB78A5B91A0416F2566BB4CFA1733988687682044EA078580FC9FCA3BE4E646CBF02F286DFDA42755EBBAFBD5B0F1C49B318FC5BE7F864AC3E36ED872377C1A9522B18
	89BEB59369751492FA4447D83B44B2EC978EED128144D9847FE3A1CFC1AB8FF035G3DGACA63D70F116A2A6B1DCD7B999DBB41A9CCC165F1E28137AA72CDA44456C8CCAD75BB79A170526474EE2B2EC1E65112562413E0CC6G46673C72DD122FD55C82725C02FC249DD1464692599FBBF3C87CF152BC19FA61003E1FAFBA2843BD542237143C55DE3F204ADB609EE3FA78AD0C2704DBBC3CB54E6E4B681E0D3C359FC15E72EF053D732D485B5AA344C7E101844E2408AF7B431E8A6C93886D63EEC53DBFF3D829
	77ED00AF8C04F89408E30ED410782F27013C04FD34A01C55EE668DC5C37A91FD09FED4AC21B9C04989DAFD0A7CBE08FAD93A0F782D416430D99DCC9F0C1F6F497CF4G2D60C064A734D80D1F7501F8A6F1759D6287FA1BCDF043E8EC2CDB0F62D84950AE6FEB487B2F0F929CBD2F1075D0D7097E2701F6B33F06F48F57F87BDFAC54ED1247F2167A7A5F331568FFEC6CBFD7A19F29502F78B66CBBDC656DB32CFDFC9572E200368B6476072A893E5F88990BE4C606BFDFCD69C1D245FCEA657BCA1F4A524FD27529
	20578653B75EA64D5D5BBCBE95857E94AF7BD4C8B5725EF03BAE7B4A6D286F3CCF491766BF322F17649542F710976B890BE7A154969D54D0DF9074164112B64861AC0347990FFFFC8FF95C5F904ED527DED465112E3F37B35E12EF7770981973079DF1G0C474AE348E3F1902C9FC14863277FA1F88B7824DEB847BB1C0248F26B0B43E4BF31A0C8BA8F899A3B270A8F725DF731F300FF09B44F89E267G99B23E0C6237A8700C2FB58E3463B6286B3E83772E5CF9128F46C1B999A095E0571D6097G1ABBF1AD88
	784F91EE023381DC545A46A43F38C7BFC768C23EAA15EB4EA96D4574B06BE32287631D6AE7BCEA407A5DC37B855CC0BFE67303DFA84FA4B377B627E77831F914B4F65C1D9E1BB35DBD22A373113BCB17DDGD0812081906EC23DBDF52EF8A23D61B90924B0A6D3D16954F4D1D9FA233AE07DDEAC1B683CAF68AE353D7E66897BC5F975E3F361C091491FE8DEC4E6242B44B18A1391D223F6889B27CD3CE0E0FB1545234A3D4AFA98EBABC0EE30AEFBBFG4B175EB6E33ED49B0C794255534A3CA8F64FD53F790298
	4C788B897658F63F39FDA733EFDB8761F3A35425GE45D8DF4819A818CG01F7231DF35ACECEE4679338E9EC374ABF6B3DB7FE285730F2EF3D065DBDD60F6A76D865532F442B9C6BB58E13F3FDA715936AD2G32E6031CG0DG86004059A8E7EF5BA79349C99756F6EBBD609AE19F23A222446B97C726A62351271F370C9133557A3DDDB1B5FA9F7A74732697B7DB4D4777347DD55D47CFBAC5116EB7190F7F21D24D4713E04C2D3351477F6FB05ED7E45E0367C9AFCDD11ED7A71427761E317D988F4F9763BCEB
	17F938636854F8186F534F1B0720FB547A1D2E1CDA1CEA1F30DF3897BDE61B86231AEDE221ED62BDE89BC38D6AE50B2C175C2A296965FD1FFE5EFAA98CD16B779D1FFE1353CB52047D2AC35462453F3BC83C50C21DGB093A08CA09EE093C0663D98AF9EE9BB4ECDAEDE302C5CB7DAB0BE67D5CFCD1F91BE7D3C75397FDEB5791E6A266B9354F5G58G02G22G92GD2E479B25ACFCCA41FFC1DB11918D8FBECEAF2B67B747316B3773E317D58DD46F4FA56D084F59AG06FB0962FA21AC4A38GBB4185C2B96C
	BE747143A249736365F295AD1379414ACFB9709EA05E0B76D781127F4AB43C6F893E8AE0B6FE733C7F73635C736A67476F1CD7BFBFAEB83F17433D2F72968D6B771F9F7FFC39783C5A7972FBD47E9753C9FEEFF7DAC4131927E459BA443B7E41FC741C53425C14D0F6F8671F326F7F69CBE247247B50473FF93EDC4547CF99CC22550E033473FAFB6B40001C58345978FE64F90D4E3F7E62F46A7A7B36CEDDFF893A717537D167CFFFCCC72F0A64EE42673C1DEC8EB9BCD74EA9FFD3EA23952DDAF25E4C7478DF87
	49DA20321EEB7596DEE06B05D174DEAF489DDCAA68B2EB8E2E97BF9C4D1246AC1C0367FB67AD74FC8F4AB60040B9B8075EB50F971F4320DD749C4F5CDABF8777F455BDE4DF128C65EDG39213A6CA20046D03469454FA75C4F1DF20D331F7B32433FCD8D9D6AB69D6AA067BE8E2B535E4FFB5BED38A3DF2E73C447A611B7935330B617E8FFD1EF07AD3DF77FE934BF2B73577F368E328768B399CCF669441F794406F776D01FF2B8F887DD0C9A7422DE72059F483EF0CA3456174974DE6874AF7FCB1D6A727F2453
	3F7C2FF4CEAC7FEFBA7D4B7F7B4E09657FD3273F3941E43D7B08D256A3B2DED32144D7F0188F16D5219F9BC3510FFF77917163B0A847GA406229FE71428797116D07F6B82231DFBD4C97BA807F1FFE3315AF85B2571F267427EE56E583159F871E3462B1471D7AB15F33EDC16710A91E52C1E0BB236EB080CB6A88782044DC599CDB5634D5598E8172060E953DCBCC77B2CCA49D3154CD3DA35825F62713D26AE7F3E276DD277BDDD17FF5F7B32EBE25F9B68726FFB662E09FDEF24EBFC5F7BEEF5B66AFF40EEB5
	43CCE37DB6F47B17B531DBDD56973B7D4B7A236E09E5FD255B3F2C2FF7CFAC6B6F3B471755F1CCE96FF299BFF7182CCD86FEC06F94E05933BA78D61B74A486704573086FC58F23BF264A7E13C2F17D5001AC632C5DCEBB6E97ED73707C7111D122638148C6019D3AC0674DA7ED6758F14D8A0036A1G51G9B81D267A10DE3DAF23FCC973AB254C546059C251C529A4A66CD1808FCF64F47F9734B91B2EFC2209C8990BF9F674D26D16FF913BC5FB3CFD2667B4688F64E39012E19198B58B9678E993F11627395F8
	F67E59E5114FE521AEF8816636E5747CA8954AD977A3EE440C79EE010CFBED106084A8875C0F6BE8DD0FFF7F7C2CC75DBFDBFA54F31B361E71F31B2E9EFFFEA51D7D796C65C26E7768AE62FEFFFAB49DA2FA093D5F7B4D1B1362B75E6F7D666D0F9F611B372DD027FDG7573EE89FD2F8A65F899772BE244A54AB86DE154ED320C339DC69BF08B51AF26993D6549DB681121E821BFF9565378DC3B505BAF3EC7715A055EFE7105867D42GF56B974AFB9E3A2FAF8E53E55705A1AE3E86F9EF17F18FD492DCB814E3
	42F03EBCCB4F7495E9E24967A60B41BA8AB1033C0E939DA58DCDED5A5636D3BD2DE7FB6AB570031DDB060DAA4F242B7FBCDD755D850104B0A67FA6699B742739E90C7695BB3DFF31BBF9B6975751D8C04648FF906C75A0350BDDF90FC47A7DBD0D6D99D97DFB8EE5BD713B051C323EF5CCBD617D11F4E57D34B175C406B3D2FFA667338770FCF67B33D11C7058CC3F6F01C39FE47245CA5F426766266506EA5FE0BE32C47476115487BDFE1135481F0FDC98A5B6AFD8646D73C394DF31485B67D3C65067B5D09735
	88ED7F5FB4174FDB8C7975E2B9F63851C7B40B51171F37905C8252C6463DCCF1090B59BB840653DBF0BFCB5AFDD57B588552D80C46A519065A9B3C29C206628BEB19C0E8719632A29924356B8BB37AE18A70238927EF2E4D8DD23F4CF0DFF971BEA6C302FCE8D38C703644FBDDB833D31ACC17B3923A7DD641E936B8A43A7BE88EC75E490504230DDA2A50EE61B26E19EA345B7AF034071546407CA53A6C8AG4D9244DF26F863927656053C0BE17834C313F97BC8000CC73EE44C7CA513333534A71CB48D65DB3D
	491E0FB0BD269F46BB5C40A564EF889E9D6008EE686F974953ACAEE189515960617CF146E27A1FFB986D1E3794F59DCAEDD28465DA9937EF88755F3B9475791C066022201CA863DE223854256CDD904375EAA62B93EFA063626F28256AF6E0B45CD326211CE77E6C40747E5AB15FF9333C86F3393CE5B8EFFED80373E67F320967CDB569374CB3EFFA17F94F1B47AAFD67CDC2A54E9BE1991EAB4C20F63B826550E518837D266790FCF57AA15F13A1C0EA6DD648E2C5B7435257EE12BE3FE91F5A5F98FCE3A72E9D
	51DFDF41455C526077EEAFC652CD12740DC9181BC63ECC1657CD44F733A2E02F885088508BA08284C520EC153D527DADE17F04A86A7B0D743513FCF8E662C7BDE812D4B3DF0E2579EF980C939D017E9DB3027E1D9401FEEB206B4DF6A867AF0798339C71B60A2F155EF71037A58C7F7B1171FC10745FAD0DB711AE73177B36E1B4760C0EC7835FE8CFA61E282DAF4C5FF63B48FEC2503B2DCE916C381C6867008BE3C9A314FB81828196ACE7EF2C2475420DFE3FDD05FF74699D921D5C95E05B954C6F69BCD8616D
	77DF3CCB5E7D102DCB33C65FC79E60B07C4F3AF6A3DE3E1106F8C85F606C32AAF31B06950CBF638A799D0D19509F508B8E4FFE68C9B36E072EC03B3FF36C1DF496077FD27E6D0B43F83B75A2A77B7ECFF7216F97BC3418EB78C1C37A07FEFCBFFA057437DC8FF96E35E7F6D73C49F8ACB1C23A461517226EC72AD07735503E9D608AC070C34C77186EFFDC0D3A0FF8C8DD77BB943A0F05B6098FF9F43F79A1EF5D1F4DA66FE4DB1D2243E4601B6B0DFC7F4513D6972B8B27FF3351FA46F3D74A70A7CAC91ED8CF9E
	CC8A1EBAE617D50714F6C911F84F0F44B7814FF7A9F36B5CF9C2BA7263ADCBF1A4132FBA5223BBB6467AAF15F9EB6121D6553CF55B1717528529EF30E28C1B2C7F2843CA9FE138070D3EF3625B727DE3FCA41B934970CD09E4F1015925E4886D1235D25DAE78EE1FFC8B20CD69CA4FDA5030525BAEB37711B702AD3C394F8E7BFD5F39917576BB5E75BEF3A43B45FB0E90FE35ABF10E44550C5D236CBA0E73433072C667476BE6CE667D67156857ACFE879A89FDF94F4C169F296EAEA36151E4B109A63DE03AC48F
	DA5823B036BE2C33107A8540CF8CC0B2C08AC066AADC9B5EB2FD405135C1E5DDB8E59864F12FA71F511A7C1F957C2FE9623F1FFAE308442ABEABB83D190C0F78DDC3A4A60BD69BC5B25C5EA1622FF65320D1E4CD716F34E80EA57083944DF476BD51576F421C68F7052B185F5179300A5DFFEBD75177GA36365FEEC6C65F50AF77D6C22C42EDBFFE237420F3012559D7D104854AC9DB831BDD80B8B7F7EB39468A72E42F32D325EB1EF0948CB4F1A1A4F6CA643C97D2006CA45FC6CDE976621D98F63195453F44C
	BAA8F7G589E46D8617AA74E7348250B3844DF283F2B5E54FEB5BD70E169DD78430AB73A9F75E5C8F15F0DFE3D65619B756BF964CF5C706EE9404F5D931D190CD63DD5FEB79E05794253E36E0FBAGAFC40D1F9BB05F8F9CA6B1A5G5AAEG0883C882588A10798844D400E200BA008EG9B40CC00D000C800D800C4004D0F60DCA993C89E69AFC7140CC5A70CDDEFA2D3C6327983D5E873EDB0D669EA34791172B1EFEB184DCF8B56D10D6446523A7BCA955A5C389AED1EC75F1006C1B986A0F1B55E4B6DB9A65B
	EA75E4ED1572EFE62BA79C9EDBFD2A7B1B3A2DF00913F87B45A1799E70D14C2F8D04F5E92E0E8A877C698CA2CCB38C5D5AB744770B6D7AC159EE17693C6D0071C400D000A800F80064C7519631C251B836E08A741802596157C634C38A0CD3940DBA2BB421FEFB23D13F86937D3BD5A8C7812C175B768C213C1B22EFF4AE640DF232CDCF36201F67BF06FE3E7738524F3500B7BCB63E1FB3DDFC4B62BFA6A7D8A60E495F27E7B8BC4452F637CDBA7FFF59C26229F5E040414B317FA716DC99576450DA9DA6325AB0
	5D2EF722EEDD40F354E328479D744CE98B143947E14EBD0E31E96822B287A471465F59D96963CC876D0FFBE213A74FEFF3CD6DEF4375D36CB76F067B31B339AAB73DB7F85C1327B0FC9D4507A970CC1F9B64F5A2926AF21F4039F5126EAFC4A88783C4G4481EC82587E844E8D518A29437877626DD61B869CC6D09C51CB31562D14AFB786769EB1637BA06B57E8D553CB3554D7835FDE2FF158FE72E53A2790E3187C8C77930A8B12F0CC2685437EFDFC717044BE9EB92C1EF72C9E764DBB1E98D64FBB568DAB73
	8E69DD49B0098503907BBB64F64F4838CE9917C047A4384FCD8651A863DF20FC91FCA3CF88A2BE0972B5CAF19DF86F2740F5CA381F8D13F98AA29B2DF66C7B6AB049CB87CC02404A3F22EDCC96183632BED2A80FA61BDE41776FE4DC27EC5770895F56297B436AA9767B558D77E373A8102E0791B15E736BEE0A0F0E711EDF6FD6637C0AA3BE3E86E3F05E18B7E80100DF30E6B27E7F4BC3EAFCC7C9FD63D546E0BA1F69746F5737BBA7766B90273ADF4FF37A7A75C2273ADFAFF1AA7D1A49136AF3EFB5B97B251B
	26566F788D77E376CD226BF4529AEF3B7F1462B72F71367B10C94E81202E7D6B7299561012FE8C60933EBE993BFF56224677A629EFAAFC33562A453D22633EF16F70F1E55C134E0E1DD353E7728D77E3FAF353753AE02D37BE27D3FC51DAEFFDE60F20BEAB20AEF4AD2ED38B5CE41D5A8E657CD8DDF6ADC0BB0091A0A09657292ED172BE47DF8EF74EEA9549568932B891F2B85E2E482C190C1F38B9D95E530A5F4F3B26FA46BDF97DEE3929B4243FB1F7790F8D67DC6A77729DAE75FB798B2E715FE48E387C7F4D
	3F59257C1BFFE95DF62B2C5BEE257FB2DC8F5D4F05004D43E3718C790BE1BCC30E11F15385797D42BA5C9F697FC9FCCBBA5B204BA6439738F2BCF8DCB6A53B5CD96D7103B90A5F0555B75FA70E5DD49ACCCF070E796A3D74182F5E53681B058250E571BA5471C0B16A3DFA9D463D9F1BBCBAFAD5715BE63A797A7A5ACD2541E43EBC047A3AA39DF181C3282FE3F23B8BF4BF568DFA91E4FDBD5D027AF24938970E61FB0A75328E2F0FF8749628783DF75CFB0E2FC6079F5DD49AD2FE60769F07A25D9367A80F3955
	F31435EE5F9CA54E2D1E23FC5B6DFB66B7E2457BDDF65797C4E3CDB258E54BBABCD79E9E166F661F74FF5702F70C450A3BF97A5664C94FFA47E8C489F8D6307FC9BC874EAF9EFB4F5CFC1978G3BDB3EDABC71792233E5ECFF7395521F717FF28B72DFBD897EB50ABBD2025778704F4977309DD04768AD3D4A493C3CEEA563FEA09DF6961203718F704CE2117CEE4FA8775DF04D53779941774EA87BAC7689137BEC3D6E6933CFBEC3E77E3CECD81937A4C11F2DAAF27B4E035C334AFE5CD33A6C3C27466F476673
	13433E717469E15FF87A2F333E6D0A4FAA5B317F5B305D1283054857399DA277863B6291397456B38EBB37C77E937EA63A955BB4F224A663670BB352394CA66E8DB6BD1A38CC6263CD5C8EBA851A388C189EAEF2061A298447B0F70DCB7F6A3110D9C9D7D9A21703075A5489C4EE1752A7EEE4D0CE7EDB656B4A3B2BED337A7D3E8BCB09136E7D3E617D374A09747FAD2B83FC77B7B00FAC349D667C1FB136197502A06A050BA7AC86F25EF852AD721E3C677BB6B23E835BC8152CAE59C6789ED27479FFD0CB8788
	7E4530CAAA9BGG9CD3GGD0CB818294G94G88G88G680171B47E4530CAAA9BGG9CD3GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGE49BGGGG
**end of data**/
}
}
