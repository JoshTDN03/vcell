package cbit.vcell.model.gui;

/**
 * Insert the type's description here.
 * Creation date: (7/25/2002 3:03:15 PM)
 * @author: Anuradha Lakshminarayana
 */
public class SimpleReactionPanelDialog extends javax.swing.JDialog {
	private javax.swing.JPanel ivjJDialogContentPane = null;
	private SimpleReactionPanel ivjSimpleReactionPanel = null;
	private cbit.vcell.model.SimpleReaction fieldSimpleReaction = null;
	private boolean ivjConnPtoP1Aligning = false;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private cbit.vcell.model.SimpleReaction ivjsimpleReaction1 = null;

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == SimpleReactionPanelDialog.this && (evt.getPropertyName().equals("simpleReaction"))) 
				connPtoP1SetTarget();
		};
	};
/**
 * SimpleReactionPanelDialog constructor comment.
 * @param owner java.awt.Frame
 * @param modal boolean
 */
public SimpleReactionPanelDialog(java.awt.Dialog owner, boolean modal) {
	super(owner, modal);
	initialize();
}
/**
 * SimpleReactionPanelDialog constructor comment.
 * @param owner java.awt.Frame
 * @param modal boolean
 */
public SimpleReactionPanelDialog(java.awt.Frame owner, boolean modal) {
	super(owner, modal);
	initialize();
}
/**
 * connEtoM1:  (simpleReaction1.this --> SimpleReactionPanel.simpleReaction)
 * @param value cbit.vcell.model.SimpleReaction
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(cbit.vcell.model.SimpleReaction value) {
	try {
		// user code begin {1}
		// user code end
		if ((getsimpleReaction1() != null)) {
			getSimpleReactionPanel().setSimpleReaction(getsimpleReaction1());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (SimpleReactionPanelDialog.simpleReaction <--> simpleReaction1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getsimpleReaction1() != null)) {
				this.setSimpleReaction(getsimpleReaction1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (SimpleReactionPanelDialog.simpleReaction <--> simpleReaction1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setsimpleReaction1(this.getSimpleReaction());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * Insert the method's description here.
 * Creation date: (8/9/2006 9:57:55 PM)
 */
public void cleanupOnClose() {
	getSimpleReactionPanel().cleanupOnClose();
}

/**
 * Return the JDialogContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJDialogContentPane() {
	if (ivjJDialogContentPane == null) {
		try {
			ivjJDialogContentPane = new javax.swing.JPanel();
			ivjJDialogContentPane.setName("JDialogContentPane");
			ivjJDialogContentPane.setLayout(new java.awt.BorderLayout());
			getJDialogContentPane().add(getSimpleReactionPanel(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJDialogContentPane;
}
/**
 * Gets the simpleReaction property (cbit.vcell.model.SimpleReaction) value.
 * @return The simpleReaction property value.
 * @see #setSimpleReaction
 */
public cbit.vcell.model.SimpleReaction getSimpleReaction() {
	return fieldSimpleReaction;
}
/**
 * Return the simpleReaction1 property value.
 * @return cbit.vcell.model.SimpleReaction
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.model.SimpleReaction getsimpleReaction1() {
	// user code begin {1}
	// user code end
	return ivjsimpleReaction1;
}
/**
 * Return the SimpleReactionPanel property value.
 * @return cbit.vcell.model.gui.SimpleReactionPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private SimpleReactionPanel getSimpleReactionPanel() {
	if (ivjSimpleReactionPanel == null) {
		try {
			ivjSimpleReactionPanel = new cbit.vcell.model.gui.SimpleReactionPanel();
			ivjSimpleReactionPanel.setName("SimpleReactionPanel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSimpleReactionPanel;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	connPtoP1SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SimpleReactionPanelDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(476, 631);
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Sets the simpleReaction property (cbit.vcell.model.SimpleReaction) value.
 * @param simpleReaction The new value for the property.
 * @see #getSimpleReaction
 */
public void setSimpleReaction(cbit.vcell.model.SimpleReaction simpleReaction) {
	cbit.vcell.model.SimpleReaction oldValue = fieldSimpleReaction;
	fieldSimpleReaction = simpleReaction;
	firePropertyChange("simpleReaction", oldValue, simpleReaction);
}
/**
 * Set the simpleReaction1 to a new value.
 * @param newValue cbit.vcell.model.SimpleReaction
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setsimpleReaction1(cbit.vcell.model.SimpleReaction newValue) {
	if (ivjsimpleReaction1 != newValue) {
		try {
			cbit.vcell.model.SimpleReaction oldValue = getsimpleReaction1();
			ivjsimpleReaction1 = newValue;
			connPtoP1SetSource();
			connEtoM1(ivjsimpleReaction1);
			firePropertyChange("simpleReaction", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G620171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359AEDD0D457958DAA1AD5D1C1CD5A2646EAC392121A14B436E32779500C09CC06F40C35D3A6C3DB1B181934F19AFF5856E99F0B864D0A7503F4C8C39292C90216920CE924449AD4E8B4A1F12B302C388AEF6131AC6C6EDB5E3EE597D830675C736E6E835E326A98E64E5CF74F7DB85F671EFB9721782DC55B734D4502103FDD507E0E668BC279C1C148782D69DB9C176A33D9845D5F5BGFB051201ED50
	AE0231C2566FEC5A856DEE00650043F61BEC336C91A2CDA59ABED743F348B78B4286B6E7C1D32906BB8D7DF600C5GD9B24D4F06F6A723BC2536C61B671813A1ECFEC2B19761BE3ABDB9D47AE92DD5EB4B04BF66EF71A32D07981F38A6857A8F81207085C2EA65C7509E33763A0EF7B85DEAD5FF076471D4F965CE49D3658A3AEBEB4F3B3DFE0FF4CE92BBD4376C330ABE49D36F96BD32CB6D43FDF7B46FE07B409E509794447D6F9252DA8E7D9C000DD17CCFAEA33E9E3E9DG2A42657B4F7B47B47E6DC38F8A9B
	DC2BF67EB50EFCA605644AD2E272159DF2963C46ECE19FC41DEF023162004DD28150886081B0813C8EE37B053601C3501EF02A27E42FD7761D707BCFFABA15AFD1DE782E2D05918DF7CE6A1015CEC1A0BBBF56D4E9404FC4C06B56DE73BA52C94691EE734CF3778A395F1FEFAEB450C9EE4610F9C900F431A290538951AEEA0EC7BBB7B05AA7C753EE9174340567BFAC5CEEC03BF45D07051B34FD3629B15AB5AA5AFA957301F27846F5381E70B98C9F516149BFDB989E7B29B036D9653EE15F4DF9E95C36D858F3
	F801219E96BEE2B25B034403BFB81617A3ED3877B703C433B04A4B278C1F254393AF2B181FE2BF9B462A7BED9672AFB102711A867DE5G2B8172G04104DD28AD09D62BE16B17041D57A18D5D45413C13727D3D284DAAB8E7E8DDAA92CAA6299DFC095FD9D12CDD45C2253A38584EDCE4FA072669C35CEE63E5F81B4BE13FC12A2D230AA22D7D2A5A5C0F34203FBF10EA23151A637D78282DE3F4077CD9A5C8F2DC78C284D7ECED115E2B3E8BCE590ED52AF5AE0C758G3EC9AF3306D1DFD6103F9BA09C55C34190
	6E770524C04E282DED14655E203F89A591D607D04F65ACF71860FBC9086BF8468862F605ED1672B05F27F6E81FEE1FFAB74BC422B240E3EC4DA5DCD383735B435CEFFEE767FED3DFF40FD079F43A215F24028FC74264AFE9613171330E6D0B3C2D8873FCFF69127DAA6398F929899B475944B9237F2AE9D08E3F367CC2FA5EF285ED168B7CED81A899603A8E8E15116F1E9483927756338AB81A549953BC71796FB6FE2694E83C903E01612BE1CFBBC052G575D1A4B76B1732F056F2B535D86C6C34F4F0D24C1BA
	6A0D6079A475CBBE35DE72CB3ECE7888E8E3CA847DCF0B5FAEB93AA64C70FE0877D390E001A8FEA402B1A92A2A62F686D5693C242AEE1FABB6BE15518A841D7ED82A6034E6C6D0C6B984719E1DBFB7023152A17BFC92B3D6F409B61E46E2D572C8DEE07A149C7429043FF5986B1ADEE9C04B95378D3FACE02CFB0218F7484F1609D89079953797DCGD31730F5G63781366921D0EB2G07B5CF8E349B86F8BC068E70F8AC9F3CD3F8284DEFB6BAD396AE1DED2E9F2418318F466211F81ABDE24CFBBA4B999ABEC0
	3C668D211F47ADDEB49F59AFAC9EE67A9DB56F3096A3077311DE9878B081AC9964B132778A0E73FC248547A95963A115435806C1544B5FAF97EBF22D007E5AC152CB4C0F7EFCE58F52167A029224F9CC0CDFC4753FDD58B7E64C265902460B843405C717D37DC3C8B35C46EB4A4AA122D7BFC4792B9D5AB781DF9C41F9A75B793C953A7135GDB0608C7931B97F472F96D910A67F0A4B63FCA603EF12E8FF5426A489E31DF8CD785C2604735351FC775CD7562D21673F14D7A882F8B6FECC1BD6F99061A8D20EE18
	7B4CD3C53CAECC6B4D90F21FBFDC982F6E358F934F1161184FE43DF862E532631099E92E00316CE1EE4394C1FFB61D8884648EB7BB96B57D9E4D577B94610E653F82ED17DB8928E7A068435C96A77311DFBCB7B534D6C71CE0F5847AD99E50AD9931D92CA3089F390C3106F6A1B9BB0EF0B9D387178A6D69371AADF164CC9B516A5F11181C15A3DB36933D5B5BB83D97E03C7C0A4DC2BE1EF6F977B89F677EDF590E3C285D6EG71727B93F59A2D6CFB978B4B8BCDE623DA3C7B0E05E6479562A179CA0C170FEEF7
	961C86A0FEFA5BB9BFEBE14E2EA41B0572450A0B7AFCD18F78A400A5G4B13B84F8E27914F4463BDEF6AF95CA1CEB16451743C4B1C13C43CEDC90A7138EC2E33E065DC4E63EDCE4EE35DA4706DC97CDED4FC9CDB167F84CEB7F20153CD4A4E92CA764FB4240B30EC9251DBBFA9C6B73248D9108AC06754DD2CB62F18ECDC9F9CB340D34D7A061D55DA1329E6AD08625FE778F69D1E647BDE8B174F8FE3EBA773BAEB1F8BEDD0F3134D52846081C886D8823072A69EA3CF649F91925431E7FCD0DE7AC44F79D18794
	2FA74DC8974E942D1FEC566B14747059E554C35ECDD7DFA7513AE636EE4BB52CA39B9EEC555F25376D7D1C71E8E4430AE45A3BA6B9E6C3525D235D18574300CF834884D88930A1196BEDE7C1E5A23D711ADED39849F4C7DB223B6236A9236525F58FA4DCD7B1E69D4971DA8F6676BA98F3G28G29GD9GB9G1B27F0F9DA8ACEA6126784AFE01A6468672931C58867372F7D7A643C12F05D2E292357D1AC7F490C6754353DF188DAEDF3592E4FD565D3692EF29ADA87G1DE91BAF72B790F5AABF53EEF3E05CE5
	C2FFA5C06ED49EF733FAD1671B213FE79A1CF7G75G5DG49G9953384E6FAC78A4114E9B30G85FDB32647AB1BF43644F9FD3A3EBF613A55530CFCEA3797654B03312DG45A9F0AF86E88270832425F079DE6DCA68D3516B6B44BEC5F74907D9DD11897B67G902E4406388D505F1A426FA0876CF85E15CD677DFF32BE1EBFDAAC35DC6D5D6BEA81E90D566D13B71C067E8EC87AFD5D957F0E720E4B780ED261B23E23D43976929E76503FD870710FDD935FE10E3B0C6EB0EFB03E5719B1CE9428655DDE091125
	181542EF13FF1C8B7A48C510F2E0EC7E0C7ADD238F6DD8B71D7B57DA5707867E555069D6E505EF52A4094A592E2E28F31D77CB9D1C67B55D71757753EEE37D2D6FB6565FB35D936B6F596EF87AA39DBD273EAA985C693E026890F89D77CC5BCEED0ED5152D0723FB9F6809AF47219EE3B92AFB304E8E48C125C39A4B6B511E1268D8AC984F2812975921B9F5EC3DAAAAAEE91C2C1F3175B496EF3D35876BDF273B532DE8B7AA12B1231D4B58204ADF220C64ABAF9D44BD8D6E9EAC13D30E1EEF67778E47F41E238B
	AF226F25C1BF93E0E5B4A77C6162C439AFF7FA3C5AEC9FFB435CB41DEA307CA87EF5065F2A43D3ED3644415FCFF64C009AEC86775D053D71ED766DDEE31BAD6D0DEF334C5E44B6FB20B73E4DD674A636592A5EF8BECC367B0553427D33CB113D6021342E449BDF56373C46323E6B0DAFEB25B7312C7F7246177518B7312C8DDEE37FDC5F0CF15AA9F509C18F24GB9A01D75EBCF31E8631B5166AFC56F3FB9B378DD633E906E5785279D280CA521BCB677839B2FBD9A215F8E1084308860211B79BD297D983E93E8
	37ECE0D8E5B946A7F1F92C3EA23DDD341CC1FE7E8D7BD8BF2FB045FC7B18A91E1F8F3138311A465EC126B0FC3BE96C9D2468E2748E82E3EBCD7CFC5E636067F34DCC9EFBA51704A8FFEF6B3E6FF25C68B3F3FC4D736857CA036C750A8DF52ECBD3D5ADEEDF279C825361EB3F9A282ABFF35EFA76FCC35B592F5ACEB542875DDB96057477161AD7A69B3E1FA1F44EA43B0535567417DB72A987B633FA8857AC03310DB39177CBDB71989EDF0403348ADA9A5F5F229F4798BFA868479BC60DA32FBFAC500F07C60DEF
	572DA739563C4B5FBE362ED9A6F89EC80E7B5BE675AC1227C9EB4B1E3CA5FF4FC26B4B64CB77337CEE0231C53338FFBD5D4A7DEB65AC6EDF13AEE21D30B15A3F1975715D0B7A7BAF5E889F58B84B78DECAB4AAEF880DF86F7E553359FB0023CC6B6F18BD1E17D28DC735D3360CFA8A83AEEDB6BF0356797E812DCD6C99DFB981522A4810595481423217C9CD3665366B7B3D7361C26E87D9BF3ACBD8BE35BE6E9BD816467BDA2DDD1EFDCBFECC160F7BB0E7EECB35D94AG6A819CGFE0014D4AE5B9B32F6BFC776
	217A93BB3A59ABDF3438F4CB21989A93B2456E63F6FC93770883F2D0853D4EC1BD67C56F075F047D33GF281B625EA3F4333B9AF3416CCA0BF6D7D5C3B789EE9F4912558BD6B60674642B9BC77CFF3A0BF27A4FC0361FA8CC9DC0F25F7FFC7A8FD2B4E3CB70E9EF366900FDB67445EB730A59DBDA563F7745CA09373BAD74618F67B5CAA1CBA6EC1F6401D0709BE975960E185472B675AAC0DGFE00E40005F3397E9D7EF7C87F863AEF68F4C9BC97F2FA1F76452F917E5B1778775233FD78EE6B14D5D576627E9C
	5F5C07BE2B4AFE06A4DCEB9F6AD1F13B3AD51A2A615B7BD07F9E290B2169DC5BF10157EFD9A05B8BF379F97EEC952E095623D5E2C82D2DBDA9636F840D64BCE4D36B851E0F4B67711A7423D65C5381FD9540B40F3F91075F63F64D7C6EE2A167B746EF61F9CD4366A573481E2B67695EE58FB98BE81F1EDE3DFF60D83CFC3BAD0D56D7240D768F0A73A607BE4E3BE1CEA4ED6237B8720D3B55B2E8D3E1EEA6C08E40C6002DG4569B6CB85C0DDBA7713CDFD95C27C9CC48AE53E2208EE7EDB5063CAFCDF49D1927B
	4A4F95766E8FB6EE9A70EB755EB38A46195C55951022BE79EBE5CF94F7A6E01583EE0C82524D6E8B57773FA22557394E52FA2D6B28DE4BA0DFCB9FFBDF390F613B53475ED7EADB393F2BB036BE1D3FE96D6FE7772F79B60B9D408F1082108130F2BE37E5B8D0ADA4F86FE9127D0DE0B80F6E0ACC7BFBC3387FFA58EBB3C049821B259A209E4031006F7FC86048843EF2CE16D9D50C85B2780A5EED347723DE16DF7D309F56AF0473B3DC8A6030A6A2BABFD0637B570F55447E7518EA1C0B3255713968A955B8977D
	CC5567A24265EA7BAA510781427FCA457826B36BCB51A73A58DD077C665ED6A17A7D206E3B2E756B2F35AFFC2DB4C876527E7836BA50EFFC37BC58EF7C0673C17F44EFDCC77B637FCEFF3CFF7C6F747D21783C8D07927B515410319F19C2637DE8CE48580F960474FEC4E717789E4638F6363738BB55EE4217060BE27853926E857D7F83D0CB87886B9578B3EA8EGGCCA9GGD0CB818294G94G88G88G620171B46B9578B3EA8EGGCCA9GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5
	F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG248EGGGG
**end of data**/
}
}
