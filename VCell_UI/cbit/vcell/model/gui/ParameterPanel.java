package cbit.vcell.model.gui;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.gui.ScopedExpressionTableCellRenderer;
import cbit.vcell.model.*;
import java.beans.*;
/**
 * This type was created in VisualAge.
 */
public class ParameterPanel extends javax.swing.JPanel implements PropertyChangeListener {
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private ParameterTableModel ivjParameterTableModel = null;
	private javax.swing.JTable ivjScrollPaneTable = null;
	private cbit.vcell.model.Kinetics fieldKinetics = null;
	private boolean ivjConnPtoP2Aligning = false;
	private Kinetics ivjkinetics1 = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public ParameterPanel() {
	super();
	initialize();
}


/**
 * connEtoC1:  (ParameterPanel.initialize() --> ParameterPanel.parameterPanel_Initialize()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.parameterPanel_Initialize();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (kinetics1.this --> ParameterTableModel.kinetics)
 * @param value cbit.vcell.model.Kinetics
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(cbit.vcell.model.Kinetics value) {
	try {
		// user code begin {1}
		// user code end
		if ((getkinetics1() != null)) {
			getParameterTableModel().setKinetics(getkinetics1());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM2:  (ParameterPanel.initialize() --> ScrollPaneTable.model)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2() {
	try {
		// user code begin {1}
		// user code end
		getScrollPaneTable().setModel(getParameterTableModel());
		getScrollPaneTable().createDefaultColumnsFromModel();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP2SetSource:  (ParameterPanel.kinetics <--> kinetics1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			if ((getkinetics1() != null)) {
				this.setKinetics(getkinetics1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetTarget:  (ParameterPanel.kinetics <--> kinetics1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			setkinetics1(this.getKinetics());
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
			ivjJScrollPane1.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
			getJScrollPane1().setViewportView(getScrollPaneTable());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Gets the kinetics property (cbit.vcell.model.Kinetics) value.
 * @return The kinetics property value.
 * @see #setKinetics
 */
public cbit.vcell.model.Kinetics getKinetics() {
	return fieldKinetics;
}


/**
 * Return the kinetics1 property value.
 * @return cbit.vcell.model.Kinetics
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.model.Kinetics getkinetics1() {
	// user code begin {1}
	// user code end
	return ivjkinetics1;
}


/**
 * Return the ParameterTableModel property value.
 * @return cbit.vcell.model.gui.ParameterTableModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ParameterTableModel getParameterTableModel() {
	if (ivjParameterTableModel == null) {
		try {
			ivjParameterTableModel = new cbit.vcell.model.gui.ParameterTableModel();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjParameterTableModel;
}

/**
 * Return the ScrollPaneTable property value.
 * @return javax.swing.JTable
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTable getScrollPaneTable() {
	if (ivjScrollPaneTable == null) {
		try {
			ivjScrollPaneTable = new javax.swing.JTable();
			ivjScrollPaneTable.setName("ScrollPaneTable");
			getJScrollPane1().setColumnHeaderView(ivjScrollPaneTable.getTableHeader());
			getJScrollPane1().getViewport().setBackingStoreEnabled(true);
			ivjScrollPaneTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
			ivjScrollPaneTable.setBounds(0, 0, 200, 200);
			ivjScrollPaneTable.setAutoCreateColumnsFromModel(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjScrollPaneTable;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION --------- in ParameterPanel ");
	exception.printStackTrace(System.out);
	if (exception instanceof cbit.vcell.parser.ExpressionBindingException){
		javax.swing.JOptionPane.showMessageDialog(this, exception.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
	}
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(this);
	connPtoP2SetTarget();
}

/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("ParameterPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(509, 240);

		java.awt.GridBagConstraints constraintsJScrollPane1 = new java.awt.GridBagConstraints();
		constraintsJScrollPane1.gridx = 0; constraintsJScrollPane1.gridy = 0;
		constraintsJScrollPane1.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJScrollPane1.weightx = 1.0;
		constraintsJScrollPane1.weighty = 1.0;
		constraintsJScrollPane1.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getJScrollPane1(), constraintsJScrollPane1);
		initConnections();
		connEtoM2();
		connEtoC1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		ParameterPanel aParameterPanel;
		aParameterPanel = new ParameterPanel();
		frame.setContentPane(aParameterPanel);
		frame.setSize(aParameterPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Comment
 */
public void parameterPanel_Initialize() {
	getScrollPaneTable().setDefaultRenderer(String.class,new ScopedExpressionTableCellRenderer());
	getScrollPaneTable().setDefaultRenderer(cbit.vcell.parser.ScopedExpression.class,new ScopedExpressionTableCellRenderer());
}


/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == this && (evt.getPropertyName().equals("kinetics"))) 
		connPtoP2SetTarget();
	// user code begin {2}
	// user code end
}

/**
 * Sets the kinetics property (cbit.vcell.model.Kinetics) value.
 * @param kinetics The new value for the property.
 * @see #getKinetics
 */
public void setKinetics(cbit.vcell.model.Kinetics kinetics) {
	Kinetics oldValue = fieldKinetics;
	fieldKinetics = kinetics;
	firePropertyChange("kinetics", oldValue, kinetics);
}


/**
 * Set the kinetics1 to a new value.
 * @param newValue cbit.vcell.model.Kinetics
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setkinetics1(cbit.vcell.model.Kinetics newValue) {
	if (ivjkinetics1 != newValue) {
		try {
			cbit.vcell.model.Kinetics oldValue = getkinetics1();
			ivjkinetics1 = newValue;
			connPtoP2SetSource();
			connEtoM1(ivjkinetics1);
			firePropertyChange("kinetics", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G740171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BB8DF094D51A48C6AEE2D882828E98B0A86E311A753237D86676D2352C0BF71C269636C48FEF2993EAD16164B43BE615DA3932B393CCB08142925D5CAD8A1E400144C8A067D291DDC392B6E133A6171FF1821124A75349F452B3BD7474A413E4926E7B5E6B5753B3F4E700F5D375D54F7B5E4F777F3D6F3D6EF0E58753F7665B4BB8AEFFA7277D7DAE1F63DC27B9AE7C5009A206CB75BB0BB9435FFBG
	7B38D7478B60198EFD25CB81B8450793D6C0BBB35DD97C9B783D1F9B7165D6418F8BBA2B216F483F7E7D6F2726B3BA4A689412F60BD0824FBDGD90043E7010C748704F28D3FC143B34837830E0C19AE9C50F00D506E853081E448F47CAAF86EA214EF2DB9230D6B1E331C4BFBCC316F46F58CEBB2B89C20F39B3567A16ED77939812475G619367CC03F696G8A6F605E29BE8E4F332DC3831F7539C535F238CF1024CA1F6C91244A0110D8D3534AAB3CCFD0852515778B920C152E60FAAF8BC5E4BE47D5C3FBBB
	41AD3902B4B26177EA000DD13C0A78330A333883C0D218DC1F7E4FD90DEF5778435C6601C7F76D3510ABC92172E4A8D139EC475D0E7FA4B6783BB154759668AB89BA0B8F815483F8G12GFECBEC3FF27483F8563A55BA5967137D350140B949237C8965045FB5B55023615A04BED971F09C356FF7058A93FE2682BA6F87B7BC0F6AE479E9E66B0C3687398D5FDBE0AFB451490665637634A055450AE0D4A71476F6CB5A6B02313E98CB7BCB4EC81B5BFA2AF027896D83CF1DAA5C222D3343C03BDAC5DB0703E86B
	8370BBDF538545A791FC580027FE390C788C36D321AFCFE53E615A43F8E9AE3807AB2D3A53D48F36C7D26C2E9065A1900A67656D902E1D9622B4F76B3C9CA17815863C468B71D3ECEF063E56E1E7B1752FC7A298275950DE8F108BD0B462ACBE86D08F609AE1BE36EB6C236B74B188AA75DCC814BC024251390F0C3D8DCFA12CAAFC13BF28727EBE4149ABA26F1604A0270DF9FC8CF5600E19371678FE9F507803609794DE95E53F9E32C1BA666931FDB8C691C8EF0768930000AF4031F5B70D6D47386603EAE740
	432BC2F4846D5FBA06B699661D30A2ACG3F29DEDE1AA0B68579D38152F5BDF846F13DBF8A8AA40C1A1AE6D99E8A85BAD092AEF784753C371F64E6781DB342F47C42A4622A434E6266B0DB672E71DF9B5629977B10FDDE99E5B1B6C9FC2A9746C7G6605196F3C68E23ED33F7BBBDC451373CDFDA7957CF8C5187ACCCEB8BE06E61235113FBC68AB9BE5797E7EABAE0B580AE8EB7406E3E3ECDE58BC662CF3470FACE96C541E8E13F957CB036A3B0BC3792AC12ED60040A85379D36307288F1F630382735A96859C
	CE70C4ADC079BC90AA57F8592971007A47CD7320AE4B89B2A699564F84D88F400DC16CG340E69BAD5FB8DF2452FF5BDB29D3CEE5DBE7AE7535AFD9DE328AEF3A2381F894302DF2D9782025F83BF02DA5F9391242945FB3F2C4FF91A6083109F6AA0A003BA7E198846B02F2A0A688E29C23B202A22FFA05A7FBC21958C3983515442E83D98C1B96591488F7A7817A398DBFD325FAF90236AD3347EDF125896A44187CC5749A13FCA712FCDE07DB3A40CEA39657509B7B84C8DD28873942DA9B2F954E5C091FD60AA
	186A3855E39877C77B4B8DBA8A838EEB23B4F8E60E31589DF91F456E6131EFF3ABFB82F633BD48F65FECFB69B80D2B4363515825BC65CE1A737E8A49B19ABEC8F9FD228C674697B98EB2FE739072B4A47A85D56C8BD6F18C7F70117D46B9A43511AC2F45565CFC24DF8FFC39G8263AC36142B584F721996D4F532A4D193C0DF66B86AE9CD30CC13B3995A6963D4CF582E0E105AD6ADB368E23B211F526961CA519704ABA1813691646E0F3A3D7A39DF4775B9B55B51FEBF09834910333388CDBE44EA55C804521B
	972139F1B9BC5F857C49899CF7E2180DAB180876E37EBCB0C1F9DCCE463D220F0BCC505CB04FB03ED2DF6F7E91B6AEEF0252AD19F4969F86E81CB42EB79EE6633AA7E90E417510AEDBAFE79247FDB44A462913F43D946D39CCDB0F7A454B4751D7C9DDBC488F73614A608844DBCD4D8562A13486CEA57B980EAF3F4AEA5DEC91ED5F8AEDAF40342B4C2FFF321B553A730616F39B36D695DA5570362B140F6C2BD13F66DE2AFD037A5686BB525C81FDA55318DFED650C7BEDEDB0A87709E42B57ECEA4BB77ABD45AD
	4EFF931E7D2292D41BA0B105197D6F4DC7FE31965050DAED748A598F517F8F81DD97C06AB4441FD6B19F20AFD0B97BCEB3B9D3476E63FA67AF3297DB4839EE9A15AFEFDAD44E0A496DBB297EAB47AA396BBB179842CF2BE3A74E9BF51D3DF74212070ADBA86D66DB22BC2C14BA8A294CB3C3CC669468DF85C0633FC9ADB264850AFBEB987520FA45A0656197351FEBB4F29E3C074BAACC311B1DED3CFFED336F50E89F1E9E65A1A35D6DD889C0796898E6FC28B0A6E3BA636319E1A39F146EF75EB552AD62EFB525
	1B32F5403ED923D7720DA85DE3F35D0E33F3995D03A30CEE870CC97986BBB316FD06CF1273B92673C89723BBADE785D73EFF16A9DD04D59A3DED863AF9F73B9DC53A3CCF68F44FA6B90B55A4A6EFCD987122DFD4C5DE924704E347693E721C5F382FE4407835GF9GC53732391EB0726C23EE426A7D306E53B04E85C0712E5192AD2ED38137DADF638723717429BEFE71B16614C04C9E5253E4986624BA3AE73F51B6E72FDEB655D172DE2F1D1BC1F5F3EC0641AF67389D6BGE89DB33FBF7E0C274E08561949B3
	2E2DB969596764A0B9934D20E79F070E2FA1788C831E6A62911169A89B7A8E7D952B5777F6224E13201D8E10853096A09720B4196525937653DC0273D0139F94666725761842051DCB6CC897EA8D2D7D2C5D68F7D48FBB0228070A649B2D315FD4F1DE7D8D4C23B6BCFE51F897D3306F8261514C4FD5ED6D2464288D296ED6BAF17FDE85780DG5B81CAEFF3961F3C0D69ED50D111C8EF6CEC28A90C2EFB54056B3642BA92C092C09AC0363E6E8AC7C2FBB404CD6DC1F5169ACAF427316136D8FD52F9CB924E63E6
	464E2372C43AB02E4A212F9A2099408B1082309CA0E7A6136BC07B39C4F255324239C356FF5645973F0C5F0B43B7A727B7613C4D26F27E7CA24A39837A4AEF87BFGE88688G24GE45E4E647437FF1250FEF858G9909D8578AC879BCB2F2F3721DCEB8EF6D6DE672DD69C67936C0DFC18A5401GE7G3A8142GE9A97A9DDDE2BBC6F77D6B306353B7A9677389672DC8091DC7770141F10B1A1114A8F42F3AB2E85C2BF2D2689D48F6F8164C0238A5B5643BF211464B61D92C2EFCA100F9389B5AAAC04AAC7D6C
	9C3EB99933924EDBB64BEC5E655178F959F1634C69C9574C2B0CEB2F1FE566BB4FFD053E138BFDA55F043A9F60F3G8F40B400E55FE43E333F63536B0C0DBA40B542794644ED347B298CD2572F02355783D05CEDDED2F7C33BECB6537D4703D8731D515B1F13B6569E343DDA343A47399140754D701446262F05C67CFD92832A5B72CE6BFB0C031D667798C7BA4D6FB1CEF46E23F8D843F88B4A7ACFF7CEFD4F71C92759BD47BBC406276C98A38A1C77C51FC048523894426FD15FE88B7929FBA065E07CDE2A7B5C
	519E34E36BEC66DBBF69BCE562DB8D9ED1159536C80740ABAD7D7DFAD2EA8F88FD0C6755CEEB7D2DF11A6B6FC927397EFE6A1CDAFFBFF3CE2D3FCA17B5AF7F6BB267659317B9AF352E29F9E9F2D971C26D753C7A96E7F2877585E4F80E5D357CE3E817B626D515DBCF69EB4F683216E3D617399CF7F46119BBA80714BEA11E57C5DD65FADFB4B3B429028F59514E46E43E4AAB8342B5325ECF6653BE2B795F6B42F328DB74080AF663C3E51CB34CE4ECD065BFD569EB3EF651DAC67BA5F3990BAED94B3877D2E299
	4BAFD94BF870D2E2990FDD3232B91535FB24185933DF11FD2DD55A5A635D5632CE6FB617B5395BDA56595D09E535F5DB4BFAF7F7E2D917F71B5B33B4EC34A77AAC4DC3838D6877A675C1FB1FA2CB921E9BB976FE755B032C8610E6339A204A0F79ED9934338156697B4E7BB26E2D5BAC7689AEB596DF86EDFA666BA16F5E0E2552B39F8245FB893E5A0027E7411F8758BB644F21EFD9AABB97EF8A475A7414965F7F7476DE129F02C1A1C8B65FFADE65B59D4D9FB56828AE6A7339DFD97B412BDF197B41FFFCE56D
	878517937B416E4B56FED0F6B9319F3CF3F9EA1F7FD1BF5E11CB7C289CD2E12DB9284BFF516F420B20FD88209120FB8E2D87293FFC1744CABFD43C309C59D0DA67625CF4AF1B1B8D63578264621A50F7F2AE3309430D36B2F8D6956575031E5DC6DE35DCCB7D6841C1D62359E01D0C3931FE33F22E551D42FD44AF574D0D3FD3789B025FBCB77ECE61F7FEF6271087FD2EBBD80DD5C36A5EECE82F57F133E4D6F7ED53F1D98144154E0B3ECB5E4789D7B87D375F707B554057D19FD98125D1EA793E6E6BG2AB37B
	G0B3DB3A0F7E09E73112ADE2C0F751CD2490F28B5B5FFD0C44FB9FE2019F89C4DA797860A34794B6731FC92A6EBEE44B6C069FCF6079BBE4A6ECFB33EF58F3776D9733B6A0D9D9376E373357B5379063B4B63EE8725798FDEC6B3997AD74EC7DC1E57786E82FDE0D3BEBD8B507E2322319F636AD14E586F0A69C7FEDFF3987BE74674230E2A3479D436470FB059F6BC1E49C98FA5D9FECBD334004AD421BD8F7DF8E1FE771D2DEFD09FFC1464E78F74A5AFE0FE39EE88F1E950DE2563BE12187F2EDF40727583FE
	2CAF0F5D495A8F11B63E53206DCF7DC6FF42F1DF3F4FBAE3E8D8557FB78BB4877D1F0C3F7910AA3789C1F10CDC52C37E3B9375B2A8B35F2807B64DEB4BE4165732G1783308D204466AC2E30313C36A670DF5A1AF578BD8364F4A96473874F433E233D832072958D5C5CF7BBEF5F643C169B1EC7F36485AF46E033ADFE8FEEA7F817ADFE8F1E547300877AD65B58FD6CB33D283B0A05300FG74820481ECGAB9632F34C5F761C64921C11BB64C0B3EC3E12211C2772BD6E3D396F19FED84862ED45776F6732E654
	DB3E0BD93D107A79966D191533B09F1FD4BE450D7215AF025A85408590GC882C8DB44647BD50FF6EF0AC7B3B80971FDDE7246CBBF680942C8940D9BAA75298D0378FD60302028E29FAF51AD739C2F344A1258B72A796B2BA45EBF8448DC44FC7105A1644DABAB62186CD72F1D49FC3D1064G3C1F480539113B90F7DE2AE7FEF05735714DEC6E50209146F4833C253583F7C57D0272227830EE0AEE77745DAD6D3BC57EEFF89ACA4ECAFAA3D5D95B5951525356505EF4312127657CF9E6337491639D7719B7271B
	3E03C7D825713EDEFB263C3EB01F667E47E476EE34B40D65FEFBA0BE774F09497D5501785C0FB4237D7D01785C9FBB5F96084F7DECBE7561D6AF277F6EB27CCE9A784B57880B7F22B4287FEF69352E1DDF6AB52F1DFF59EBFE36FF2DF76AFB8487EF7D3D491B3C71FB939A3F2F7721ED9A4197BCG49GE9G19E9ACF6EDBC7AA83D290F0F5B864FG566E78D51C4A680F3B27B8AF3A93FFCBF73B9B5FFF3BE5D515FD38BE434FF1233DD4B9C0109437400DBAD244812FCA07EA78B4B77A38A47493B40D35D5C3D5
	7131968D4ACAE7C3DBC7D3DDEDF3CFFBDDDBCBF373395A361E5A66AFEB3B5AB996476FCA9FCFB13F31252D69E24B979D31AB3477FC5150D05FD04F4E0EA3920B3D9C506FC132AE54B39C7B4B7D3D992EE0B1FE6FDCB544F1AC8FECAAE1397B408377F2757FDCEFFF1FB34F830D0BE97C5B96C76B40460E6ADD5476C788BFEB21EF5BE2E66F8F7BCE4053498FDEFB1B8648D6C58EC0BA9E25D872050A96C7EBE463BED432844ECECB262E0FA83DC20F353F6C71A476175FF848B794E0670E5100F66EBB6041F31D5C
	5F9F94F43FFC4FD32A631A022DF2D04473A265BDA299F92F863E9B9370CE6D306612B19F17AE126CAC77470F6F565673AE09FF6778AD9F6EB7E9004F8258G1087D0F4B7688F209A2091209BC085C881C887D881309AE0BD40B6GAE1D59EFF868789476538EA0A4E895DE443055747301344718D728E9353EAA89F3047EFE1DFC42528E837D833416FE0E6CA9E5408366FD0AFB0160AAE2F0F7C8EC9C291B884EA631F179FACEAA41B42851FED8BAE2A58FE4208B900FAD6EC1B87CF770837A1C6F7B2CFD6A073E
	44BE75184FBC872D75DD1B031E741967201F7A0CB90862B67AB076874086AEFD5C33BA2ECB477D9BD993F1DF0A9E552B63F389DF08EF9410A0433FC2789AA1B8975BA78C38AE8D4779B1AEC0E4A80D585C1D640C53AFCA12762DB499A37AA1CCF4FD6C71A30FE200B7703DDF47A15F744C4B9FB5FC07C1D8277883615DD1BCE31D237F7B31F42C8D1E997F4E6D8CAA5CDEF6D42EECA28CEC9CBEDD6378593D8EBBD750443DC18D52449520D61B381DC469CD1C838C92460F268BE2C17BAE602AB1C6375F5AE7D9B3
	F5AC55E2F4E9FC0C3E98C1DBAE837C4A25AC4EBE0BFCB805DF367BF8C9024AF328566FC19FBDB72A8A51BD7A65882E9FE4E334CE2DD6A65F198E9A667CBFD0CB878803128AB48C92GG00B3GGD0CB818294G94G88G88G740171B403128AB48C92GG00B3GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGC692GGGG
**end of data**/
}
}