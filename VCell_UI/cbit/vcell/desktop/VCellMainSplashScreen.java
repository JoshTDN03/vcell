package cbit.vcell.desktop;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import java.awt.*;
import javax.swing.*;
/**
 * This type was generated by a SmartGuide.
 */
public class VCellMainSplashScreen extends JPanel {
	private int blend = 0;
	private int direction = 1;
	private JLabel ivjJLabelSplash = null;
	private JLabel ivjJLabelStatus = null;
/**
 * VCellMainSplashScreen constructor comment.
 */
public VCellMainSplashScreen() {
	super();
	initialize();
}
/**
 * connEtoC1:  (VCellMainSplashScreen.initialize() --> VCellMainSplashScreen.startAnimation()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.startAnimation();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
private void drawAnimation(Graphics2D g2d) {
    //g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    //g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
    if (g2d != null && g2d.getFont() != null){
	    g2d.setFont(g2d.getFont().deriveFont(30f));
	    blend += 25 * direction;
	    if (blend < 0 || blend > 255) {
	        direction = -direction;
	        blend += 50 * direction;
	    }
	    g2d.setColor(new Color(blend, blend, 255));
	    g2d.drawString("Loading...", 7, g2d.getFontMetrics().getAscent());
    }
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSplash() {
	if (ivjJLabelSplash == null) {
		try {
			ivjJLabelSplash = new javax.swing.JLabel();
			ivjJLabelSplash.setName("JLabelSplash");
			ivjJLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/splash_nrcam_logo600sz.gif")));
			ivjJLabelSplash.setText("");
			ivjJLabelSplash.setDoubleBuffered(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSplash;
}
/**
 * Return the JLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public javax.swing.JLabel getJLabelStatus() {
	if (ivjJLabelStatus == null) {
		try {
			ivjJLabelStatus = new javax.swing.JLabel();
			ivjJLabelStatus.setName("JLabelStatus");
			ivjJLabelStatus.setText("Loading ...");
			ivjJLabelStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelStatus;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("VCellMainSplashScreen");
		setBorder(new javax.swing.border.EtchedBorder());
		setLayout(new java.awt.BorderLayout());
		setSize(623, 422);
		add(getJLabelSplash(), "Center");
		add(getJLabelStatus(), "South");
		initConnections();
		connEtoC1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		JFrame frame = new javax.swing.JFrame();
		VCellMainSplashScreen aVCellMainSplashScreen;
		aVCellMainSplashScreen = new VCellMainSplashScreen();
		frame.setContentPane(aVCellMainSplashScreen);
		frame.setSize(aVCellMainSplashScreen.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Comment
 */
private void startAnimation() {
	//Thread animator = new Thread() {
		//public void run() {
			//while (!isVisible()){
				//try {
					//Thread.currentThread().sleep(100);
				//} catch (InterruptedException exc) {
				//}
			//}
			//while (isVisible()){
				//try {
					//Thread.currentThread().sleep(100);
				//} catch (InterruptedException exc) {
				//}
				//try {
					//EventQueue.invokeAndWait(new Runnable() {
						//public void run(){
							//drawAnimation((Graphics2D)getGraphics());
						//}
					//});
				//}catch (Throwable e){
				//}
			//}
		//}
	//};
	//animator.setName("SplashScreenAnimation");
	//animator.setDaemon(true);
	//animator.start();
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G640171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359A8DF09465151F009102C4CAADBA4CB4C3E9A75508E90DADAAF6D069088AADED51EA1BD11CD24596FFC61916BA997DF2C9C868A184C12592CB4450A6C8AF00C81993ACC908A5F8C8CA6291A0B6593B5B5CED32373B595D6372C3C25F7B3E7D6EB649DD82CCE566317B3D77FD6F3D6FFD6FEF3F8B593AA323A85F3115107CA2E27D7BE7BEA19595047CF1450C139C172EF81D44766FBD004DE43E23901E
	99C04B3D5E6BACA50B23A5B04E01716CF42F73EDF85FC216C6F3F1F292B9B9C07B6BF33FFCEFF4B90B5B381CE2BA3E685DG4F0DG7381074FC295654F74EE337039961EC33E031095F44EED5EB28BF79C466DG338132D5B6FFB1BC57D349135C072CF92D57E712B58F690E57110F0DA707CA0D2D75D84FF272CA7E9A8DE5BDC67544B5A9B0DEG001BAFA0D55DAEF89EEE6C8AFE6277C9266B02DF14E5D7C0B43ACCD5F33B3DF5B0BCA9C8CA13A68BC628492F0B22C208560DBC4B4F14D09E049C02F19E45E58A
	A8A7875E17G2C0C619F71A37E286EF536GE8BA5F5B113F9F36F4EF697FA1D9997C717ACDC976162A33BDE56B713D156F76957C051EC3090076DE8D34D2436B2CGB88E9082C88558CE4FFFD37BEEF856784CBAB59CD6159ACD2B15837AC9B5A04A706EF68345421D967D2A9EA0041D71935EBD8974998D583A55D73C0E59A473C3FE5ED92767115C5BEFF094A730C9EEE63FA343E03618EF44ED42E46FBA13CC76E346D0FF9CAA7B8C314BA64F6EAFAECAA03B6C517D452BADBE440C4B5EEB62D9CF20E7DD8E6F
	7916FFB0FC9A451BB6BC734DF954E7F01C8234D5A6770D160DDC97CF619CD23A6F9B896DB06B3EB407A742F488C4066B5290C05E6911613AB4D1FCC6E438AE3F76F3DD320136750257497CEB339FE3358746B38132G96812C84A0D1189765BE5652DEFD19BE56A868E6EDC4128322CE585A4D42DB7094FBCCDDE8D08CD3D07C22D750A541A70B8631663CA3208DFCC3566D203E6F87997F9695D197CCC9D5003B9096CDD1B7581CCAE1B34E51C5CAED1642A28888EB04735DABEC01A7443879059690CCB1BE0351
	8F89F8A69784AFF08486704E6C7289356381583F8720B5E6075BA93F4FC4DD91E5375B232ADD912D99F7C23222E86743B4F7E8701E9A65B6F60B08FB9146A5BD1C4F6F04B7ECFC0EC9FED4DF50FBF90C257AB19F1775F01FF93E057B4C3157EFA5FB9E79FAC21FC9877FBD5A43FC2525E7F86C4C20BCD1AFB64E91DA2EB00EB7DABADDFE2ED8FAD5B28AAEF39E33EFE6871E55B850EBB64002180DF7794A194F568A06483D74148E8EA6866296E7FA1E8A94DA76E46333F43C3C075B6AA9FFCB82FB7F3F0049F805
	4A385C3DDFA9B01BEC77E39D92AF080AF9CC54C4A5GAF06C55B69C7DF336234C30D2D2924F88D623A8E82490861DDFE0CBD41B4F54997B145A651B4A5A598279F24320C08CF0B2784AE6B089F732F9A05380E4D2F75E3CC78D5C59169614416D874E3B4A6C5D98C0352F5EAC4B1997E84BD2BAE31574A891F8756910CE9B902790575835982B6BD1AAE056148B1C591CFAF4D17E73659EC1487670DFDCDB9508E7472580B3E4FE32F226F3BE4E11B66C8D4BBE6FDFB3AE3E6AF0B0D4C5EF86CB11D7EA5A6563D1E
	66868BEFB0DD17D73C894FA4AD0A6573CF85115FE210138B3026177B7C3DA252F9DE311C3DCE15E5E652182D67F5146259085D919152B1A6304FE2763B23630DE1B42FE5CBC63F2783EDA95BF2DFEB9F5AF2CA0077FD9B7A189DAB2C6761BEE68F363F172B506634B76B94AE88BDAEA38AFE63F61FE894C0EB56035DC373A846C5E69F6F357EF09E773C8246EBD1DEBFBF1F1F3D4EFB2D19DD19A47759FD45C97B48FE2B0F6C0F1FCF4E8BB56B18CDBF10D0E69A50E677F3FB9E8A5A73FD0DE128FE09169A4B964F
	846D6747F02B03FF06E707249BE68384D88F375BCBC15497EB110536EA736D542F51B659A0F795C0811D7F8E7599C911CCC91025BE31320A592F5009F187D5CCB7EB94F0E8D427324ACBF82FB3E74BD1EB3FCB664DA107AF7D57112877CC5D94F214DFE4F6B8FEB1EE0F63B3FC852DGACA75DB7245F1A8973B2AF46737F020BA3EB816BC3BADBD177E597D99FD29443C7A8FE258D4FEC10F71E5BE0AD50DA87F86D3C2B93FDE5A10CF38156GEC9874BA77GF88679997505BEA4E374A68D8A348C0AA0B78DC9C6
	3CC7108AD87E30468724A21EBF884F4DF78606771D214121FBCF99B6E66B9E98314EB5EC1CB9EC9D5B77B699E3E9A150F28156G14DE021C845088E0DE62FB7F11F4E42C3D57E332EFD66BGF79CE236EEF8FE05752CF7F91C465CCC601D8940F0BB4EA2EE890CD744F0771FC3DC61B82F33EC9C2F0FDAAB620E4238A5066B27B88D4669B11C23F5F8BF007393552B23C970E357516DA3E494A519FFB53516597D7E4E64F574214E44F5F4D9E762BA7AE867E606879E766E19531F689C3D4EBE5D19284E3ECB7777
	60DB1BA8EF43908D6A884784D330E84F18D8E7C6545B4F214136EC33053C98D8EF4D29B7553AFDB119BB65647B2F12936F3FDA463CEC28915DAF8E5F63C1F9DB0C96775086D38C23BAD68D256BA16D854591B67A142EE734E46BCF49496CE86D758C768DBED5270C370EC7DFAFEE617DC1B67863E24BA77346317E1E2DBBF8965749C22F9AB1793ADB4E72F52DB0B64733F5334733F5AC0FFFAF0AF53483BEE8C00DA6CD74136393F06D2F4E7135B9B0FFB140AA009220D5CE60B275AE4C17A7BC02CF14D903E055
	0C7DB63CA91891E3B165F9EB6BD61B8F27CFE0FA644013517F531E08DEBA91F28F4D4F55AD7C1E2582F02D93799E0A4AF71111355C450C68F6571B7E10982835CCCAD89D17A92F1940A38BE051C4DE47FB7E466BF856F76610E53FCDDC47D7B48FB8F2A7DA5F68A9713AF5E0372F00697A0B33DC5743C0B7D3382ECF3B365BF5F589D1536DE63AF95861B17DCA4F617AACD83788A0970075A464FC0945F78D6076CCC21C6B3C5DEEF886A78BD80EE77476A1F4743FAAE2274F98C2C7BBBCD9E827AF9AC2AF322DE7
	B6FBF89737D95E4359C43EA3A5699D1AB90959EA1675AC7F490D7925339A57D9BDD9C7121E0CFA925B7FCDDF16D8F217CD62E7B670293D77DA30E94061CCA23FE4B213DBB9B9FEE6956166E246BB351D77FB21493CD6FC54F2F577D3F5D73C0E75A6AB28DFE6CCE63DC9FE8C7FAC45E759704C4F74D8CC4C87DA59B53CE769D2501663E0BC9BA087E08940EA0012D4DE37DF127712B16AF6332AF9A0414A361240767778592B334BB3D73C0E6DBF0546C3D96AF03BCC23784A5461F6F96B9C374B81204DCA6567D9
	F47E6A6E8D6FAD66BE16F3574DE06BE3C9FDACAF1579D65935567D61129B7371494E65D5954F45833490C09A40DC0079G4B2E6567628E6FE167D29F104C9A53947CA15A5973C371CAE2B40E46244D76764DAFF15D4AEB0776ACEBE13CE18AFCCFCE99594BB01DC25D985F87005E889082988710B1056B13929E33372D6FC9585BB23D2635A73279C2CB1F6556F315CDBF366EE9EC212C7797EC6FBDADD7F31FF3E5FEFA7DD7AA035955D41277AF7DCA627EE53C1238FF3BC6993DBF1B2EA43F8739C1315F03307D
	CFB997377757EC6FE5673EFA5BFF74154AE0BEFF330EBE1F87BE37ED2A57F9982091A0B0157BFC053A13D01FCF90FF7501A07607F80BECF27B96EB494FF223B6765D735B9AFE2F7BD453D443481F635F5550A6262AD1245577EA68833A948C19ECAA3FA35330FE49E287C5336F249F50FAB98E7615BE15FFBBF95B90B79746B9B15C5D9437904639B15C3AF67E0D75E24CAEDAF772FDC63B937B6CC0F7E21F1D58BD7AB747546EE4BE4D741BCB75ABCB03BEA80D6B3CDE60BA9F0A61EAA9AEG6314B43E0F6F6B49
	77F127BE76F95D2753BB9730F3F32FE675768F6858032B9D9D0698730BA5FAE98C57E0B42A06045F842CCFDE7AA55E99CA70E1D3B28D757C8DBD2BD920635CB45EE30769EF22A6A86319063F192675E2ACB25A4F5B501F83EA84942B0DF4F460B59B74B814576F5B786F0769B04E2138F75B4BC7090B0CE9AC7FB25EF7378F157BD09F4AE5FC4A055178648D61F3167ED691D2F529CFD5CCC12E1125200251E469E9883C1FAD3D4E6BE432768F4477F8246D8CBC95B1DAEEEF6D9B42C2D0ECG43D5622796BAD5E5
	158BDECF0B6C6B2DF2E73504D30CEA03FE1734A93ADF883749EAD0BD38F72F51678ACA9DBB2B2A2C5A1E91357F86FC684F93925E2DA29C3D0E6D2D59FA263DF6E3BE63715373F69E25B7490E7CA4BC522C35332E0B7720EC2F8EE6F3BDA232313B9D7D29CE44FBA35E07C4C55E07145D72ADD2366328E3F392B9CBAC7EEBEDF26267F2C440BDB64187C7A8061BA2606F70F6BBB7617FBC55992E3A7A4F1B6BCF931EC33387716C76CC77BA0FCF67F1959D78G1EDE21536A923005D1F51AB98159282B1A281B3D8C
	CBEFF4ADDE37DCA231383FE7E0D7B29E10FDCF00FE27FC1D70F15DAC84E33AACA56813A150A385A093E0A140F20055GA49D72FCBA5751B1D8B90A0E6CE30CEEDA97A4FEC7FE4760C6FBAEE22ADB7AAE9844DA923BA325F721CDB0D189B27AE3A4F92EF9120C1DEBD611443561F9B232B63CCC925706BF91FBEDE038D7AD3EFA6C4205618B73717B0D5DA51C949408A34C496C6FBCF6676F83E74BFA0E94C10AB30953238A8158E8394B65B2F4723EDF8D3BA4DF58953990F689BE53A502E9DD48BB908B59F37737
	4F8FBD7866CE87A9EAA04E8EC91483CDB4E8BD24140E0E0906DF17B43422C95E7020BFD64B02922CE6B67D58C3B653F9BC5811FDB799A4859E3245466ED3C99615B8E9230D7445E90FC9B6B24E0AE8D64378639E7C3DB65FA43BDD2ED67A079A2DAC0334A64FA0A6390CB4036257A1EF963FD5176CF9E26DA4FF52DCD3BE03456D01997178E53EFEDB813D5384FC5A8C6E532FB97EB1CA4CB40585D9066C5BD52384B0FEEAFBCDB1DE07F38A103F4167D8C4C63B3BE03D1593781A7F81D0CB87883A7EC7855B8DG
	GCCA4GGD0CB818294G94G88G88G640171B43A7EC7855B8DGGCCA4GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG958EGGGG
**end of data**/
}
}
