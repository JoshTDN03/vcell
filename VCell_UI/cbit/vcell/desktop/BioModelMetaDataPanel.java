package cbit.vcell.desktop;

import javax.swing.*;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
/**
 * Insert the type's description here.
 * Creation date: (3/29/01 10:39:36 AM)
 * @author: Jim Schaff
 */
public class BioModelMetaDataPanel extends JPanel {

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == BioModelMetaDataPanel.this && (evt.getPropertyName().equals("bioModelInfo"))) 
				connEtoM1(evt);
		};
	}
	private JPanel ivjJPanel1 = null;
	private org.vcell.util.gui.JTreeFancy ivjJTree1 = null;
	private BioModelInfoCellRenderer ivjbioModelInfoCellRenderer = null;
	private cbit.vcell.client.database.DocumentManager fieldDocumentManager = null;
	private BioModelInfoTreeModel ivjbioModelInfoTreeModel = null;
	private org.vcell.util.document.BioModelInfo fieldBioModelInfo = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
/**
 * BioModelMetaDataPanel constructor comment.
 */
public BioModelMetaDataPanel() {
	super();
	initialize();
}
/**
 * BioModelMetaDataPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public BioModelMetaDataPanel(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * BioModelMetaDataPanel constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public BioModelMetaDataPanel(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}
/**
 * BioModelMetaDataPanel constructor comment.
 * @param isDoubleBuffered boolean
 */
public BioModelMetaDataPanel(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}
/**
 * Comment
 */
private void bioModelMetaDataPanel_Initialize() {
	getJTree1().getSelectionModel().setSelectionMode(javax.swing.tree.TreeSelectionModel.SINGLE_TREE_SELECTION);
}
/**
 * connEtoC1:  ( (BioModelMetaDataPanel,bioModelInfo --> bioModelInfoTreeModel,bioModelInfo).normalResult --> BioModelMetaDataPanel.expandAllRows()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.expandAllRows();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (BioModelMetaDataPanel.initialize() --> BioModelMetaDataPanel.enableToolTips(Ljavax.swing.JTree;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2() {
	try {
		// user code begin {1}
		// user code end
		this.enableToolTips(getJTree1());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (BioModelMetaDataPanel.initialize() --> BioModelMetaDataPanel.bioModelMetaDataPanel_Initialize()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3() {
	try {
		// user code begin {1}
		// user code end
		this.bioModelMetaDataPanel_Initialize();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (BioModelMetaDataPanel.bioModelInfo --> bioModelInfoTreeModel.bioModelInfo)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getbioModelInfoTreeModel().setBioModelInfo(this.getBioModelInfo());
		connEtoC1();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP2SetTarget:  (bioModelMetaDataTreeModel.this <--> JTree1.model)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		getJTree1().setModel(getbioModelInfoTreeModel());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP3SetTarget:  (bioModelMetaDataCellRenderer.this <--> JTree1.cellRenderer)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP3SetTarget() {
	/* Set the target from the source */
	try {
		getJTree1().setCellRenderer(getbioModelInfoCellRenderer());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void enableToolTips(javax.swing.JTree tree) {
	javax.swing.ToolTipManager.sharedInstance().registerComponent(tree);
}
/**
 * Comment
 */
public void expandAllRows() {
	for (int row=0;row<getJTree1().getRowCount();row++){
		getJTree1().expandRow(row);
	}
}
/**
 * Gets the bioModelInfo property (cbit.vcell.biomodel.BioModelInfo) value.
 * @return The bioModelInfo property value.
 * @see #setBioModelInfo
 */
public org.vcell.util.document.BioModelInfo getBioModelInfo() {
	return fieldBioModelInfo;
}
/**
 * Return the bioModelInfoCellRenderer property value.
 * @return cbit.vcell.desktop.BioModelInfoCellRenderer
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private BioModelInfoCellRenderer getbioModelInfoCellRenderer() {
	if (ivjbioModelInfoCellRenderer == null) {
		try {
			ivjbioModelInfoCellRenderer = new cbit.vcell.desktop.BioModelInfoCellRenderer();
			ivjbioModelInfoCellRenderer.setName("bioModelInfoCellRenderer");
			ivjbioModelInfoCellRenderer.setText("bioModelInfoCellRenderer");
			ivjbioModelInfoCellRenderer.setBounds(446, 285, 179, 16);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjbioModelInfoCellRenderer;
}
/**
 * Return the bioModelMetaDataTreeModel property value.
 * @return cbit.vcell.desktop.BioModelMetaDataTreeModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private BioModelInfoTreeModel getbioModelInfoTreeModel() {
	if (ivjbioModelInfoTreeModel == null) {
		try {
			ivjbioModelInfoTreeModel = new cbit.vcell.desktop.BioModelInfoTreeModel();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjbioModelInfoTreeModel;
}
/**
 * Gets the documentManager property (cbit.vcell.clientdb.DocumentManager) value.
 * @return The documentManager property value.
 * @see #setDocumentManager
 */
public cbit.vcell.client.database.DocumentManager getDocumentManager() {
	return fieldDocumentManager;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.BorderLayout());
			getJPanel1().add(getJTree1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the JTree1 property value.
 * @return javax.swing.JTree
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private org.vcell.util.gui.JTreeFancy getJTree1() {
	if (ivjJTree1 == null) {
		try {
			ivjJTree1 = new org.vcell.util.gui.JTreeFancy();
			ivjJTree1.setName("JTree1");
			ivjJTree1.setToolTipText("Contents of saved BioModel");
			ivjJTree1.setEnabled(true);
			ivjJTree1.setRootVisible(false);
			ivjJTree1.setRequestFocusEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTree1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	connPtoP2SetTarget();
	connPtoP3SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("BioModelMetaDataPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(379, 460);

		java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
		constraintsJPanel1.gridx = 1; constraintsJPanel1.gridy = 1;
		constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanel1.weightx = 1.0;
		constraintsJPanel1.weighty = 1.0;
		constraintsJPanel1.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getJPanel1(), constraintsJPanel1);
		initConnections();
		connEtoC2();
		connEtoC3();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		BioModelMetaDataPanel aBioModelMetaDataPanel;
		aBioModelMetaDataPanel = new BioModelMetaDataPanel();
		frame.setContentPane(aBioModelMetaDataPanel);
		frame.setSize(aBioModelMetaDataPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Perform the refresh method.
 */
public void refresh() {
	getbioModelInfoTreeModel().setBioModelInfo(getBioModelInfo());
	expandAllRows();
	return;
}
/**
 * Sets the bioModelInfo property (cbit.vcell.biomodel.BioModelInfo) value.
 * @param bioModelInfo The new value for the property.
 * @see #getBioModelInfo
 */
public void setBioModelInfo(org.vcell.util.document.BioModelInfo bioModelInfo) {
	org.vcell.util.document.BioModelInfo oldValue = fieldBioModelInfo;
	fieldBioModelInfo = bioModelInfo;
	firePropertyChange("bioModelInfo", oldValue, bioModelInfo);
}
/**
 * Sets the documentManager property (cbit.vcell.clientdb.DocumentManager) value.
 * @param documentManager The new value for the property.
 * @see #getDocumentManager
 */
public void setDocumentManager(cbit.vcell.client.database.DocumentManager documentManager) {
	cbit.vcell.client.database.DocumentManager oldValue = fieldDocumentManager;
	fieldDocumentManager = documentManager;
	firePropertyChange("documentManager", oldValue, documentManager);
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G390171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DB8DF094471586AC300C0541307CC31001CB649CF1F109DC5679148A67609409D5B6F15909125365B807F3CC19901D4365F4B6B90FFEG017891C6B84AC581B9D6EC300902B05C91D949C9C8882D903100E5AD7E8E4D6E0CD60BE6F71619113482016E3D7E199D2DE63418942A7AEA36DF3F6EFE6F756B572FFBC6C2593E540D7985E502103FD1E0FF7F13AF88170F8A4287F57DCD1CB6A56CAD91ACFF
	6FGF6895121A2F826C2DD59A2EFC929A0C50A211C8E6541055E12DF406F5DC2B01279917CF0984785F5B71EFEF34E6863F41E6163ECA665B70EEF03678EC0865070D92462783B9B4B99BD0751B9728B84E1956129EE2CE03496A8F7826681162A14FF85BC37101147579EE3FC179FCE9356FFCBAB580E7DD87A64589F21ED5B5833D2F8BDFFFD84477A34F19BEB138465CCGAADFA83C942D06E7DDFBCF60CFFEDF50286E734B0AD2AD49FA0F21C6EAEB0F8755532AA4AB27E5C3EC928D31DD8C4B0AA0C42EE31F
	8B9A0BC99F02F08C4A9B886D07920E138E3F33G2BCD7A51A0526BB5EFC987A022F15D7E78FE9D133D636693C2397E74161D8E3AA5EBD42725DACCB765C3DF61AF49BC241EC5FB2F053AD25DDBD285E881F48312813FA2737F05B39F403341E7B42A21109AEE08C40EAB12C674035F3535D043E8E7E53F2AC902C06778CA63C19BF9C683ED5773195BD11B24FD4467FB495947041C2F4CA858ECE3131C341B8529BA35C5069E33899DFB316358597AF0FF9CBE762702F5ECE14D614D9BED462E784E614DEBD9BF02
	919B7B1801F37D55AE1C6BCA781D4FECC1695FA474C18B1D7A669A62B3D8F6C1DD1E41FD23E38717252DE821D0DAB353568E331ECAA9385CCBE5B0FA63E579DB62F7293DF44C1DB1D988FD0505CEE5791850311C8BF5CA1F37047A57239EDC2B2FC039285FDBD281B88270GA20024FE6EE339E7FEFF07BE56AEEA46715E20A2491AC05BBEFA76EDF84AD1C3935DE15D9043FE59ABEAC15127483A40F83EFC96ED609B566E89627BFE9863249C16B551882AE168DD8C49062C6914E75959DD4823492456938C49B0
	C0A8A270FED71C5D8DCFC5540D7391C9B46498872DDFF9966724CF74C20F50817C26F6794EF93457E250BF9310E55A6154B96C6F142CC13C282DEDD3551E5E0887B591AA22E8673FA331E395706775F39BBF6FC5DAA754C7233C1FF1675E3274539474237822B64057585709CF25G7FD2408BD16EBB6BBA386FB4ED7F12F0704569363EB3857CB8AFCAFD26F4A0FE8DBDC77AC6790EC1DD47G0F79BF11BA9C5656D256578BD17BB56604948BBF9D23D8F69AE323056F330CD1E879CD6DDD5F017AC5C1AF97A0FD
	005B7C2B67AA298F9F97F519FB6DA79AB81CAC45E6004A7935A02E0BFD0077815B59B8B88738F93EE36A739C614B02B15683AAEEF8CB1AG8A4085483C41ED5B900C58484B7B5BFE87FA6EE36372727BF750060E5DE90E3D45D247473D93FB234CBBED66EAB4D01BFF45036D64BEB9ECB44991B9AC418F1D55BD69C1F9D8DC68D24DB64B88BD82F12491962EEE523F614135AE9A069674759A72B959B00261C02C7ED9B2165E6B0B44C2909F6BC58F4A2C76C39CB1793F6F41B568D743E119CC3E590455671098A0
	ABF28804EED4FB4386253FF49EF3259EF9004520174FEF92B006A83D984FE87E31D4C47BC634E088DC8AC322F064A64607674D7C89319A7C837328E2282B384957F87F3BFC0DD75DF8D4D8F6B5D2E037D74D7A2B498503B7697A1AF2B3364629CC5F755A4B7E0FA496B13ACEE57DDEF88FBC9DD2A2B2773B05BDEFA30F0F7160F4F9B4D9A68513673E4365F1BC0D10F41D45C957E40D2E4D018BA857D210F7B9A067A6DF1B97BE45FA9E8F5922ECD49505CE8D549D9AC47B15854AACB6D8FF135AEF07D9DFBF2CBE
	BAC86BB38679B84D9D2568A37275DE9936A18C5C274CF9BC5D71D6DC1D174DA92DBF5F01F32AD8E27E41DBB86626EBBC5F4DE2632DE64F8D03D4B64A374C640B5E2275D358B36D965361B6725D6861FC59C04758128BCF816AAA8155C04FA0FCAD8A679B3CCDE3396BB665DB8C58EB727DA244790A06E83C67FC95C314EFF0086438A65F11A1AAD75B906DD79A326A71F818732D9822F1EE95634FE3FC542FFEFAG7D0164605744BEB1DA2D7743FA2D2DEDA52EC5F36D3A26E246DFB60667545DA751C75A20AC81
	864770F5716D6DBC27F6752489B9EBEAB6BB1D97DCE3D87EB846F2DE48ED58C4FD706B97F14CBC28AB9E4B7DE2E507F5DFEF50F5559FA4A9851B7B218B56F5C3E9C997364233AB2869069BFCBC4A7DE462851497F38EC6E676F83B3CDA3803B3C95C62223A5FEA366A1E3973D6C109036E95E3294EF5E3E33A2FD2BD1B298CC7BCB5F7AA03F5718A7CEC549F6073B5887D535C72775736B1DABA505682E8BC18C16841F050880ACA70063C7FG15A167E8955AB20CCB48232A0AA798517737D9DC243A95757F7800
	176A3EF0F7BDDFDF0FAD946A067E2F406EAC153C333B20EA9CBBA70E0B696E1A66ABCC83301C5C14F596702C9C47E5ED6F3117555D7E2EA5268D0B0DD75D96EEAF4B339711FE304F627B3CA57577717E37AA38E708DA200646291F7B0645A960CB85ACB7798F93FE23BB28D39B8CDE60B6981315AE146F1EE4EB8392B36EE3671724188DD6BC62AB4CF9045B603A42E5EC871E64A4BEE636B9A6AD8BA134C10845F8AA47EB8D563948581CE2ABC77797E695ACE3633FE211E34CC2DF21EBA11723BE4465B8B69E4E
	9B63399C4F903A5F62FE14FFDB184FDD9A702EB279F5C2376EBB14BEFF841D6A70253DD69D0A457136BA242C899414CF203257CF08693081FC295445F57801A9D3B270AC1B406F9F7EF48669E1D58B0920055E2B98149E38067B0F9C0D08E1298194D47BF5F09E16A3B6451FED73A6447267ED770F4C3D6919AF07444B4A7B69192F50243FCC6807ACF4AAF378A437FBBD54AD3E1F1FD3E6DC41F8DD1C6CAD29825481BCG8360CA66F1722D0BF855B46AB9509D0663D9D8D44E8DCB4478F96CA20E8B3993ABE7DD
	C43B105CC96079FB51D5DC9BCBE14CAC40EA4086C04583DC06F317924AF0A2EAAB833573E0406E8E216E81EA5F7687C65A1936BBFAAD3E1D9447BBA62ECC5BB50EE8D79DD7DE9C570E5A61E2A76E3319D0178D4885EC1B68ADB984E883C4A6F2FBAC3C7447047640845C23B6822D85721746781C571475A7F729634F936AB8E522DD3BC7FB925DA5590F77C442F6E9F1635175975902360D6DFF015EA0A4A4385DB40BE1BF9C3FD91E7E6B1678BC9D4F4B4B204F975076E4AFBC62473D9077613593799A7A3E08F3
	D675A044FEC08740G4C822483329F64F376EF170EA71AB3732A4323B670B30F4D44D1FB74ABF7E74771895B65BEE8671B1F78D14F6294089500BAC087E090B08B10194275F4DFCE2827295C1D68599C3ABBBDBD895B3D10E2576E2D705D2D074A916D76461557265859F53904F6AD1A8439BE609840830882DC000CC95C2EF3AFFF1C482EEC4DB790B30EB4A815F375DD6A775A08F6716BBDFB5270F674FE2C03647B39D0D7749044F4C2BB5A0C347DD02EFF085F173CF492F39149AC2FA5E54C11E859B869F40F
	3403359BED2E93010EB1E954B18A7F027E91F49E97DCF13E9F797C957B7B11A5D76C6FC73EFCE59725C39F56DBD8DE7F6415516FCF1E3A62FCFF326D2A331C3B2F5A4B794B2B76F26E3BBA3A1C6FDFF512137A4BB4F28609429CA71BBE149760BE64827C1A4C4FB75F5EC94651F5D9A70B81D3F701567D48407B0C91F7BFFF0608AB707B8C655A9646F342D09B8F1B72C91D4E36686934374575CEBC2B6AEA2F661763750DF6161BF531F56AB664900AC3F9461276869CA0649176CAA66DE91DD37B07BB1DECCAF5
	FD2F472A6BC7A6FDD5CF892337F7E9EA283D061D834F3770F3E046C37C5C5E62433CB2974A4513A1FECD66EB758FFE0C9547A65B2F49B620F7828CC0B26321B22F961D6D7C2AE8EF67FF951D6D1CA7A636F33E4F594E453E44F65E65C3FB7902D2D0E3B7D7540E0FA95C3E6D065A9E73258BFEE79DBB7D76BAF6791DF58C79936B5867F7567116BF310E937C76BA5E8AD9F50C7910BBEC712D53B566D84FCA4E3A3FA8596B7E8F12336EAFC909F5FFD5F2567DB5A9316EEFC8232F23DF2956F5D4E35255A63CA3D6
	44813557003CE98A2E1789CDBC471C87FE1F8E488164CE2639A64DD77F269FED5D8519A08CF3AEA27B055524EDDBB3EF5B8EE5891084D88CD8BE051F0B273F076B0F5E3655B0B93E98A0E7FCB06C410771BB009F77C0117539331B7799013AA440E240F2406A0779DA3E58923F6F97CD0D2D6B7229CEE754CC929B8ECE0DBF23FE03506B26461FD17F6C63E754B628DBBA154779F612F317CD73169C1C46E9CF78F96CBFE652F289CD02F254247DC1C2DA8A14971B34A4C24B00F276B4FE1F75D8937F26E0AD502A
	DCFCAEEA48F94C3C4F2C967B0D5A5A13DAD0BAAE865A484C525878B31263E07B4BAE9E9B2BCEE01FAEA8AF81ACF771BB4D68FB7CDEEF4967978AAB7F457ECEF31567D6C10E0B5D6BCC375C27FC68AB24E3EA4DFC4CBA28B726A3AD3559FA4704361CDDC873B4DA7F7C30FA746B8302353E6824359E657D7782EB7DFF8F2B5FE8E9CFF5FB6637DC378D4FAC951447139C3F6F48E4BA2D623ABDBBBB3FFDF67BA65A4FF3172C5F09144ED18A729D7AA91FC15BD74D0859085A67E8B75F2FBAE6F07B043A636D734EB0
	7D97F4475B6763E17AFF3BBB5EBE01FCEBFDE1B05EBE37187D296FDDEF61397014995C9F9FE9653E1CBE032F3927FC38E60BE672F296A9637DBDBB5B78C64BD37F9244468C5D33B18A859EA383E4DFB1680D3087C214C0E3549BA1D47760CC344F337E4AD17AAA1FC9671D7637D9C25969BD33A4A41176FBA57EED0FB1533C7B15F0DCCDD58DEFD08F62FB9D4A5BAD71B53542641DAB61FB828D5F9169C6336A6F55CF8C6B7FF133CD0EE93B749177FA0940667DAE5B3D71195B51D87CB39223F2E752D81CEF525F
	A4748D96BA0D139F1C60F132F81637C419456FC0FE9046FDE4A51457820AE603EF836AG9D3379797508F2C8C8F0FE752811B6C88E944B91015DF5B45F5D77C7FF3F19472374A73FA8E4CCE8F2FC07224C26FE14421E99D9337371C9753B9EC17DB221AE9B3081D0B647DB329FD0BF076BB7C86ED57094AE857106C374F713B7C7DCB9EFD06E0F11F1E327FD3B2E23246CBC267C961EDE719A338EF625EA3C07D65802BE71DD03A445A3864C392F6D365A468372F44F997DACCCF311B966FD57A0703BG190015F3
	68FB09C3F311A7233509713CE253E7E19CB6GCFA9345B434AD5F3E37E435EB76C411C08DC3E55F05A2BFE24B54AF8074C672DDF6673D671570B040AFD75853B9C66ADBA174A35F8EEAC7E476241D10964BEDA2FCC7BCD6D376EAB47360E33FD4F0E48E67D2DE54F14B7E76753BE07A4EC53A5AAFA6C5C18B50CC667E54389417C3D31B9767B5009FB95D7E37140FDCF47203E7A2330F3AE3FAEEC1F4B2F8F5B5F8F3C9E9E7D1E22C0F53E275822DA3F7320EB6AF7BA6E43D573E0FD82A4C09410B20F2F55196AEF
	8432D6ED566989A900E7897CEA4D60635F08B86BBAB61278DB370991FCEF6CD38DC38DE17F1CBEA50273E52891C2243469913411968CF49B14155167126F0095390B10E96EF00664B8E9209766A11466A534E5C0435C06466D27DAF85C4E81FA59FC1E5F3EDC0DFD47653747D57C960326376C6C3F4C4D77383679BC3FDD6746BE1320BC8F10BE1F5F112FE965F9D79650769159A166887CAF77FF6DE8F45F7F2097CBF42D7E73B6EB8CE87AEED3413B027DDAAD7A9CDD231E4FD9F24079C736D0DF7076D542B385
	6A52GD9005500BCC06982487581F58B38DF6C51768B8E71970854B044B7B4B198B6E87F497D28C78774E1187DDC52BE9C251FF6CD0D481AB1C029640B93B647C7F5E7BF2B53937B59891DFC33G7E6199083073EB2B0E71D56D6A52E5531FBF51CBCD1ADBEFD775A01EFB29CF086FD95E0BFF9A140CEECA2F08EE0F51DBE474CFB35E5CF65FDD5E12F2176D1E7E4C6DE8DE63EBA5E732857179CE8F2127AE084FF7563B793AD982F52529BC3FDB57EA9D5FGFAF26A68FBAE3B6B0F62FEBA8FF8B3GB900750062
	C73CA51500A3009640E50081C88124825281ABG590035GE1A177B3357740A8FE468E2AB10795787C0BFD4EFE565D17584F2E775947337E3E1171EC304FBE1E0D6B3346B3CA3B1F752B19973314BE298FFD0F5E251C9643E240F207B3299F6DEB6E9DF4B931BAD7FF19E0794603FC5EF38E984381BA0F5D2D0269D357AD3FDFF75F7BBDFAF76B3D9C036E859BCF717DA15F24EDBD457707FC530659D1E7FF7827E8E2FFF8A5EA6F8F6B22A37D6127D1FBFF780F68C8FF784FA8461EG78F10749D7B840E997CCDA
	714096C6A3814B246F98584A68BCE0D1FA997966371F50BA783B8B8B6D82236D9D405889AAF72B9AEF7B6EG6614DDC1C5E16FAE88CFB08C21543447C1A2E3B0A2DA642EB1E9A8B77DBF1E325B936139644742C6C3A8F77A0C52907E8B163001D3D229F6D56AE21FACD5724F36F4CD5849376EEAB791E2D55FC73505BFDCD4D8A0943905CDF4D25CC291DA56ADECA406F78B05B0A9D17CC838E8B8685EFBE0481AA7670D77BB66499D0BE85CD3964576DE9A6BD4323F2781FD79A29E2F3EB674BB4179FCF3AEA4AA
	0AA1AABD8DE1894FBA47878CB916839AE4BC1D7330CADAF71348FD4D52667F81D0CB87882EF7A1743692GG04B5GGD0CB818294G94G88G88G390171B42EF7A1743692GG04B5GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG7092GGGG
**end of data**/
}
}
