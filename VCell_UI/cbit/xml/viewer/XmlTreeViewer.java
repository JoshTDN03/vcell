package cbit.xml.viewer;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
/**
 * Insert the type's description here.
 * Creation date: (3/30/2001 3:38:59 PM)
 * @author: Daniel Lucio
 */
public class XmlTreeViewer extends javax.swing.JPanel {
	private javax.swing.JTree ivjJTree1 = null;
	private org.jdom.Document fieldDocument = new org.jdom.Document();
/**
 * XmlTreeViewer constructor comment.
 */
public XmlTreeViewer() {
	super();
	initialize();
}
/**
 */
private javax.swing.tree.MutableTreeNode buildTree(org.jdom.Element root) {
	if (root == null) return (null);
	//
	//  Create an anonymous class subclassing the DefaultMutableTreeNode...
	XmlTreeViewerNode node = new XmlTreeViewerNode(root);
	//
	java.util.Iterator elements = root.getChildren().iterator();
	while (elements.hasNext()) {
		node.add(buildTree((org.jdom.Element) elements.next()));
	}
	//
	java.util.Iterator attributes = root.getAttributes().iterator();
	while (attributes.hasNext()) {
		node.add(new XmlTreeViewerNode (attributes.next()));
	}
	return (node);
}
/**
 * Gets the document property (org.jdom.Document) value.
 * @return The document property value.
 * @see #setDocument
 */
public org.jdom.Document getDocument() {
	return fieldDocument;
}
/**
 * Return the JTree1 property value.
 * @return javax.swing.JTree
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTree getJTree1() {
	if (ivjJTree1 == null) {
		try {
			ivjJTree1 = new javax.swing.JTree();
			ivjJTree1.setName("JTree1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTree1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("XmlTreeViewer");
		setLayout(new java.awt.BorderLayout());
		setSize(309, 369);
		add(getJTree1(), "Center");
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		XmlTreeViewer aXmlTreeViewer;
		aXmlTreeViewer = new XmlTreeViewer();
		frame.setContentPane(aXmlTreeViewer);
		frame.setSize(aXmlTreeViewer.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Sets the document property (org.jdom.Document) value.
 * @param document The new value for the property.
 * @exception java.beans.PropertyVetoException The exception description.
 * @see #getDocument
 */
public void setDocument(org.jdom.Document document) /*throws java.beans.PropertyVetoException*/ {
	org.jdom.Document oldValue = fieldDocument;
	//fireVetoableChange("document", oldValue, document);
	fieldDocument = document;
	firePropertyChange("document", oldValue, document);
	//
	try {
		if (document!=null){
			getJTree1().setModel(new javax.swing.tree.DefaultTreeModel(buildTree(document.getRootElement())));
		}else{
			getJTree1().setModel(new javax.swing.tree.DefaultTreeModel(new javax.swing.tree.DefaultMutableTreeNode(null)));
		}
	} catch (Exception exc) {
		handleException(exc);
		getJTree1().setModel(new javax.swing.tree.DefaultTreeModel(new javax.swing.tree.DefaultMutableTreeNode(null)));
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G630171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135D8FDEC9CC795BFD287A21494C3DBC8E8ABC2E228632654A8818CCA110B8232E881A31548C82E0854009AD1C1CAAB94CA7E183B73D7F01CBA09A1366FC2CC6336E9B1EE1286911D52AA0E1D1234CEEB9A77FAFFD41035EFFC3E5C5E6E5E6E5ED77D915E1B5939DDBBFBB63508251F66663D1D775E3C77663D99130E23EB9B3D3E8EC23C0D447A7B0717904FE1C2D6BE95FAC250CA15F0ABF17C7D85F000
	7CAD5AG63DA60B53379E55FBE9877832A0006E3039AEEEDA75457E9516BAD3A0057C74896760D479734E897E1FE95D08AA8D36D6F77B24D4BC3E72C79871FAEA7CFFFDF7735219C07CC01860D2FBDEE0DBD6499EF2D063AB6B0BBF14DD5182F8660667D647148B1984F0EA4E22F0F0F454D7EDCD26E4F44E9166A21D0A4A90F6A140659148C27D04E133E96360E108E1857B1DAC590E517426FF2C0B5005B7D5A0BE7AD3BA2D35FA0BBE25F5D7BEC913B03BA37F7C8376D6EF9F94C5F45FC1C2468CB8F704AGD5
	00FA409EC05088378600F708185117E19C98B38755E4D2D586B46D3C9C55AF2BD1AA436FD088B8966DDDBA2E6AD1C2F87C6E777539583390783A87BE72BA6E1372D7C5ACB73E7B95D23F69333EE6971F5417CF79CE9B5C9743066D932E7B37C5F54B465CDC1B2B7BFD6254CDF61EEAEEF4519D5CF62A59E349395D21FB2B01317E73910C75E6786D357200530FB3FA0BE953F95ED5325C40F9A77026CD119B117D42166106F5247D6467DC7D307ABBABFD5BCDEE43EE53360567C5A6066727B79DEEBD8708GB4C0
	A9E0A320BAADF2630168AB7FE3EE0CC83AF9BE9D1723106FFCED067E89C61AB3F56912E21812B2CE43129E1746E4EA906B1B6B94ED9F1B332E04656CB86878A7D528AE19F1D58169D2121AD4B778B72B68817CC6270CBB9ACFD2D010540810FB87BD04B1158C73BDADAA19547E02736F26684B0C948609A0GFEF33F2C1FC41FEF077D6F8634E4049FBAA7D05EDBD4D7289C8A8D2BEAA22D0D62CEC8A40331EA7363598E426F53GAE6B8BF1245D85734D85B96FCC9CF448990A0F2379121E97E723778856481A0C
	08752FA2A256C3ED77113E1F5C619A6BD2483B9D999E63BD1979B95F4FE422DDFC7E75E0443136A6631E77CB85577123B9BA7C7FC7797B8B31EACBE02CFA331043002BD96163CFCE74701CBDAF99D4E469BBBAA4980D5A9E675FFAE2D8D7E906AA6690552892059F0615A31F086D3573F7C2AD6456AAC657A05F87A1410C827D36986624E41AFAFCACED52AB54B463CA4C665F49F49969B14DBEAAC2573A985693B58B79DE787E1E58C1F68E9405B2238BCBAC7E86162BD426C9B0FAD0CDABA6275FBF0971CE503C
	F5D6B6CDB631DC1753F86EF86F2A1430C1EBFABC892E4023CBEA3218473DFE51FB91B920E18F3E8B464A2C48496CB111133D9FEEA0557F51FCEE35F07517BE65EB4F715C6A4D59B949EDAA0B3B5BDE414E0CC5B7382D5DA16C59F3BB2A4801B7E414B38472A3GADA7F26005EBDD0EF3E685FFD015E56E4A020F8FA55AB1A6B41526D01E70C03FD570DBF76260BCDE5872A167BF17C09F4A0EDA406DFD6AA574A13B97DC13B2D22E5F48C29E04C2EF0EC8E08D3F8B5C4A6A85FE3FA2A76E82DF6C463DD4639C30AB
	A77C7D63B6F19738BDD1CE6AF71EECAEF607E949F3BF7765EDFFEF7E75C09377D5E992F54A401B4E8BBF5D1DF056358143D047632C24DAFB9C161D716034FF49FF00F1A22E9B66A5B8B0B9610F77E53497EB2EC536EA41ED7E79BD37B4EF571C327C0D75077745BF86509FD579797D72A823576467774BFB3AC53F2C835E598FC59D7E010271D88B73AD00C7GCFG76CD05DB7B26049FFEA63FCA9669F31794E8BF0AA4DF19F300C53FC97A79193366EB120D624CE16E329ED141E2FE91F4FEG60B4258BE99E18
	2F1E9275B99040733B25B0FF1E4DEB8B737B3AA3E46935F3A158BA3FF753F4788BE7EF1BD23C76BE2A38575E4794775A3BD3B94069A043F993917CA71505EB736F94375A6CE73C877DCDAC2F73EA5A04F744B4462D2ED0A7F7014FDA00F682B0B44D7BBF2F83DF4DE2FD18000B8B283A2251F1F2E68657AE6F92EB4B607BAAC09DE0B7209378DCE7E78EF53E09956FA41C8136AE9C68F07851B343F5154148731FB408F78A198D371E1995F67C229F77D828C77DD2568C054E2BD893077926F8CD3A5850E22D57E6
	C5CD4AB01965B02FC65A2C28C93997C4CD5A7865F52476676EB5E97B680CEF57ACBF5F9D576D1AF49A5EA7DC673DDDC2678870D7DCC75ACF3B1C7BC4FFBC866F3EFE98B93F355B4947383EC41C7C576670515E441C756A9CFE23E3BD5F5BC34F0B3D6DF9281248DFABA97AE62C35767434585B8F57F85BD70FB4D9BDF674B0F16D8398D54B672B8262CD5867913E1DF943D96F37BCBB63EBAD22BF6A61FACBBC36EFFB13234D7C8CB7B5AC6DFD563144F517BF72BADE4FDF69429C5B6A61755CDB201FE174DA871D
	6779F4A14F6B01F76EE3224EB72770DC15413C9AD0875885E8DF86F5FE192873372AA748A2F5FED4550621A8490EB24277D7593534F76B034DA21E1B3FD5C12ABEBED4B41E671671B8DE35462A0757F8F1647B7B3C0E7BAB855EC6C0AD60F1409EC047ADE2FF5B54BE3E3F8B5138B9E01A5278A46B5CE2F3F8FD3249D814785EBE93D8E8EF47EF3931C7F31B9ACCBCCBE7019F81E80095007202BDBD5A22FD75C24E352FF23B7E0EEA2C5F2FBBFEAFEB38D97D494E67BBEF2A8E6E1F76D4719EF8B8655E830F245C
	FB60315442BD6E2F29626F0FD3A9677B433ADB27B136B5904B9D001612F0EB90F022C44436BA759C0F2DCB1EDD084668204ADE7D26503FDEAF3E578AFD717F95EC52715EB9261A261AC479027ECDF6BECDD5E3C4CE7B360EBE526331C913FFEA51376A6C8ECCA798195F41B684449DEC383037FDE6F1DB8F196EF169B25D63F254DC78EE722239F05C5ECE9737653D7462FE7BF71A5D61E13F23F90DF25AF89A6F976A4404C18B7119CC3797E8170C91550863C3E0E5897A28BA5033C0AE67CAF8FD60F717C783A8
	FB1062FDD95440AC95B5B0F86FFA92BCFA4E07FBF62B010FD83248F23B275975E6FB866DB88D3C910089D889D88B2882BC8C5831DC44701974F1984352B52B6AE0C9D4F51621C06497A016233A94976F4FDFE60A7B7AB71945FD7D7B0CFB0EFA33B766E8D356BDC777E51DB94AE98732DCAE5A7C3614AC48BD1C453B893F1BDE1694A946726A3FD0CB87882F23E0A47588GG2897GGD0CB818294G94G88G88G630171B42F23E0A47588GG2897GG8CGGGGGGGGGGGGGGGGGE2F5E9
	ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGAF89GGGG
**end of data**/
}
}
