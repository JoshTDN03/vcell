package cbit.xml.viewer;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import java.awt.*;
import javax.swing.*;
/**
 * This type was generated by a SmartGuide.
 */
public class XmlTreeViewerApplicationSplashScreen extends JWindow {

class IvjEventHandler implements java.awt.event.WindowListener {
		public void windowActivated(java.awt.event.WindowEvent e) {};
		public void windowClosed(java.awt.event.WindowEvent e) {};
		public void windowClosing(java.awt.event.WindowEvent e) {
			if (e.getSource() == XmlTreeViewerApplicationSplashScreen.this) 
				connEtoC1(e);
		};
		public void windowDeactivated(java.awt.event.WindowEvent e) {};
		public void windowDeiconified(java.awt.event.WindowEvent e) {};
		public void windowIconified(java.awt.event.WindowEvent e) {};
		public void windowOpened(java.awt.event.WindowEvent e) {};
	};
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private JLabel ivjJLabel1 = null;
	private JPanel ivjJWindowContentPane = null;
/**
 * XmlTreeViewerApplicationSplashScreen constructor comment.
 */
public XmlTreeViewerApplicationSplashScreen() {
	super();
	initialize();
}
/**
 * XmlTreeViewerApplicationSplashScreen constructor comment.
 * @param owner java.awt.Frame
 */
public XmlTreeViewerApplicationSplashScreen(Frame owner) {
	super(owner);
}
/**
 * XmlTreeViewerApplicationSplashScreen constructor comment.
 * @param owner java.awt.Window
 */
public XmlTreeViewerApplicationSplashScreen(Window owner) {
	super(owner);
}
/**
 * connEtoC1:  (XmlTreeViewerApplicationSplashScreen.window.windowClosing(java.awt.event.WindowEvent) --> XmlTreeViewerApplicationSplashScreen.dispose()V)
 * @param arg1 java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.WindowEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cow.gif")));
			ivjJLabel1.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}
/**
 * Return the JWindowContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJWindowContentPane() {
	if (ivjJWindowContentPane == null) {
		try {
			ivjJWindowContentPane = new javax.swing.JPanel();
			ivjJWindowContentPane.setName("JWindowContentPane");
			ivjJWindowContentPane.setBorder(new javax.swing.border.EtchedBorder());
			ivjJWindowContentPane.setLayout(new java.awt.BorderLayout());
			getJWindowContentPane().add(getJLabel1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJWindowContentPane;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addWindowListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("XmlTreeViewerApplicationSplashScreen");
		setSize(300, 220);
		setContentPane(getJWindowContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		XmlTreeViewerApplicationSplashScreen aXmlTreeViewerApplicationSplashScreen;
		aXmlTreeViewerApplicationSplashScreen = new XmlTreeViewerApplicationSplashScreen();
		aXmlTreeViewerApplicationSplashScreen.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aXmlTreeViewerApplicationSplashScreen.show();
		java.awt.Insets insets = aXmlTreeViewerApplicationSplashScreen.getInsets();
		aXmlTreeViewerApplicationSplashScreen.setSize(aXmlTreeViewerApplicationSplashScreen.getWidth() + insets.left + insets.right, aXmlTreeViewerApplicationSplashScreen.getHeight() + insets.top + insets.bottom);
		aXmlTreeViewerApplicationSplashScreen.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JWindow");
		exception.printStackTrace(System.out);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G610171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359A8BF0D455B5FC8D7FG29862B95515234862585EB5AC1C7944728545299F4EC07E9B3A3DA1CD20BD3DAB38C0EB78BA1C890032024E32CA99FCD10AE22CC9BB69B92C8D00231E4483A4692C35E6E3E5D3C646DFB4BFBEF331BE4011EF36F3B3BAFE1B7A1CC4D4C197B6EB96F1EFB4E3967F75F066CFEEFEED121EDB7A105C5447C7BF7A1A1078E90F273CF8FCC66388C45DDC2ACFF7FG58C99A831BE1
	1C8B3455335CA525E4FF7BD618AF06795A196E12BD703C0BD4359F5A878FA976598C343FD4ACBDBA7CBEC74E73FD0A695CD93D9D469DG390043F1330A7B3B2A4BCC7CAA934F2150C648DA7A0EDADDEE62CE433C93A09BE0094A5EDF8963EBF467890EEA733D761959E47D631A6DF564E3614961E8082DEDB3478A322110DC443D32281C38A683E8F9G287CA632788B870C4E161E40F12FC7B26C5120EC6F15440828B99CEDC1592509221BCECF04C23264958CC9D5DAC33220F735FA01269092237C732B37D2FE
	04B442FC2B06B8CD43BD9F0479B3G6B6278E3BA621B6159879053381E359FB8CDBD5A866EA32B830F3C76C68ABDB3B5265F92AD21E745C14F263F51B339580E36AFGDA396EAE79884085E0GE4823CC3FDA1FA7EA00CA7BCC6039A8C2A8AE8F7D276E9DF28BED106E70783A8A66E1C68D5B59FA16C3C3FD7FDA809BC4381DB17B36AF54CA6591F70334FB9F7B7D93568C6DBF1921B2C4A9E3065684C964B7404CD585E4F255CFB35BE58B7876F7D95316ECDDE783838A8495E65CFFFDCDCE07259EEA476F69AF8
	564FD39FB8844F0526FFB07CBA0ACF3360191FC6A99E6799C0DBEFF05FE85B41E5E95EBC0F149E39A9299D329E1AEAEB8BB399C2612132AC20FEF7CBF828AC77D1FCCEF828ACF5BA17E58950AAFA5DA54C3F7ABBB0EE4743FCAEC0AE408A00F5G5BA370DE047B585273072F5147DA844DB89916E41F289136363F7DED9845282189CD0AEE880AD7F48B1AA4F8E4D1A766BB635A51861EC16B52296FFBE10F4FC4C554E83C82F7A1A89A222633F7E6366F44F7B411D2DDD2D0048D02A142794EE95F85A3443871E5
	48A798E2628DC63F3D9D4F24D7F083C7E0G4F4CAEBF3800762A877D5BG3A62F6A87F8679FDAEEA0AA8BB9C4D2A5A938E39D093129BC1BBEF2439A3864F1991EE63BBBA913791663B231CCF6BB7EFDA78B4CADE94DF507AF80C2D55B0B7D7C6394F3C5846FD267175856450D35FC96AB399603FEDD153E722C3E3672F14A74A4566173536D146F1E5B4F90C254E95B70DFA0FCD23F81759F727874FAA8BE4DB8C30B2EE63695FD4B01FBDA968A27752339AB81868CBD81C4939C85FEC5A134D6F277335D1EE2BD3
	FADB92FB7F3F006D51C177980D7E2381E613719DD80744DED1B19A4510287860C1B7E9D3BA50574CB8752B71B5B3A9BE84F15DG01244771B7F5E06C890621C91E30A1360A06A1A901847DB63A179E760492A9016FB53F83732F9A01380E3FFFD7874604D7D594119ECEFC09C9DFC0E3D21445A0885D200695036197DD40336A917B4C1CF05F05AD84E3DA8EE3FEE13D41C2819B2010A6856148B1C5112EBE0C57DD474AACB65A8DB86CF11CB0367471580B6C6331373F7F0764418BA1DB325A11757D993605FDE6
	5D6ACB449E13A93BB3396CF7535CE062F5A66B24337BE13C160E05797F99AF72DE8DFB9620CE7D5C7F8F8AC867B946F47C86D51619F963F65F63A945F392AF06C5C84D184CBE0F5B726F1EB707505C26DD997DFD8F5AD53664414CFE346B0BBA6F87AB7BD9AE2C6FE7360D75B35BB0DD1F26B91276EC5DC22F90356B9170A107634CD71262D3A30477E4170E711EAC3F1F77DEAFB9D06F3281680BGCE8F70737A556B3C774A6C49A62BDEB8D21C2A476C9CE0320C9FC81C5762BF1D58426C1A6943BD1781ED65G
	37696D9EEB7EBF216B2AD72247E25A2345EBBDCF067B523B8DC63F2469C69384DC145B6E3C9765455AE4224DDA3D476035FA8D6CDB91F317EC226FDFB6BEC2EF2406313321C1D6F530D7A55A4EAEC48CBB0DECBBB35EA9FC2EE2F61E3F87E570C9FAC855454AAAB76F0B666D2AB7ED317C6EF944F92543162CCFCDFF234B5696E3B6CA0BA5ECF5FA16E7D3BBG4BDFE30F8D5797AE0FDDDDBBD84FA256203E7931213D0CCA716BE2C3FB19179D5CBE6492745D17F81D5D6747D84E0379EA000DG3BAF3BCB0E8238
	AE7373FB567B8999210FE9D2203DD08439F5D062627D04EF934BB5667CD6DF914FB5046771F70D117A6350654136E06BBE9CF1DD6610F5CC6FB1810C359C2065816483EC84283882F98C20738A577D8331F6A45D294B385486401D0618EE981A0BE1BD6BF36650F8CC835ED9D7F80D6C2941BC3CA4BE8F53792A787C9547357482387E7AEB685BB55732477556D8E647C37E54B57493FF729AFA4C1F3C065679F7B2BC7030F64E1C7E19FF789AFB561F2C463ECBF57C3D7196C9D2CF7F838D34E903DD44E53CE63E
	F34AD09B0E4479CE892456F1D6A0390ED9814C333A9A563C62D0BDEE8B1445E9892FEAB244A00AE356C83A5E903400F8159D6E216B99AD557A5CC0AADB319C78638856AABFDCA0G5D9A923DA4AD8DFDF961209E00G2E82209E20B30D675EDE9F56C133AA01G86BDAF858C497A0879B5D69EF9E92C662D05110CF117140D41F71EB836FB088F7E8C921B9DC6C6FFE5909DF529A2D67AE107150EE770354DCA9786510BAC6BD92EFF62G2F0B9B1FD8C864FB47277C7652B9462C0B66D871641C42522C16AD4C0E
	FF2EC2DD1354ECB4084C6A75EFEB361AB139E48C2F57E76AB0EF2F077976316E127DE3F93DDEDA4C65DA7C739F115C090D361294F2B947B2F95A4DB1F7791C42C49E0CC8A857D420E583AC87D88DD0GD0BA0E67402F3BB047E22673C9468943903CDD34D27384086DD6820DCE42724A33B5565C3C9F78D50FCB642966F129EA5B83D4674EF1C3EBDB9E4507468D2DEDADF53C362581ED75B8DE5B6E6F4633BDBD9E6A9DC0BA40ADG8B47F33DEE6D5A4B74CA2253A9DFGE38EEF5E860F27B4A9F5FC5FA00DFCDF
	4F10301F702806218611BF475FA8213D8CB5C4118C77DD894FD91382DD86FB155F3DA57491D974D3B42BAB9B285FAC873D7281984EDE0B384D93A00EA6F0DCD99D2FBF4E893C3EAC2B43FA53991FBFC967C6FC6E2E9B6DDDF407496F5A6B0FFADDFBDCEBBDE2F6FB24BB7559AD6F9E796C1E6A26BDAA585C5597B2F367EF3A714E247A7D3A9877115FF51746F1CDFA8BF41A18F3D9BE5C695CC24FDF23C93AE0821EC925136740CC186718F64BB7C7366ED4AD2E1305BEB5EC70F56D35FCDD7DC4F7C95BC4334FB4
	472C09B47755158DE397467BF6814F60CC33609165A3246C86DC77EA1DB5A76683AF6CC7B6834D0CB7A77F165C89382C9B783764220A83646A9CE7E78ABB9C278CEF1768BBE92ACFD8FE1BC6F92DG9EEB10FFBA4FEF5177F9FE4B19BF0F2CF8AE79FDA45FF549D6164EF4F626A7FA6C2387BD1B182C63EB392CD120AFCC6732BEEFFF47AAAB5E839C8EA6DBB3B3B413EFA9DD3F865611C990CB1338FC5DBDDC3E723B6E20FB262A8B9FCDE2F239A6A5646335866A02BFC5DD20A7426A423F6AF9DD480C6FFF69D3
	6BFDED499B17D2667F65663EEBAD7B6F8F3A0A4D78F6DE5F77EC5F2857319CDEC86DF9E8B24B6105F17CB60A2F366059794D0E7BDAA35032A7735C7E120CF65BBE45DDD289D08F50869085481C42733B5103F73FE1FBF7179AEA0624A0DB5AC8265F645A6B33CB562857B17D7FF09C754C1EB254AE6BA9FE711421F6F9B46E578F82ED7FD4EE174F9534CBBA4C6F8448834887D88F30FD9A374B83BDF81FF38B5D26C5302C2B9AB589A04F29AA6D5230E193A4C554E899546051B0F52C29C79DAB268D4E71C74D79
	69E9D767FEA65B3DAA6615F620C781B2G32817262F2ED13C73CE71E0AA63DE7B2390A712AE6BE17DA1E67B82F273E0C6E5CFF722D6E416C33C1CEDD438A03496F97454164F7285703435F115E8A267E8ED99E34FE07E47A3FF4BCE16F8D1667DF54FE7B36FF7EDB5D03696CD2D25B7E3CB2F27F60D31277FE5D4A553D1F2AA46F7D424A553D5FB9DA9B56C08C95CC63FD5EC3979137FD3A3B24FCBA47FD20715E2FF2BA0F377B5554BAADD3137B5363EAF2FFDA218EFFA7FFC6CD65EF2C8F116A316F1460D21DB3
	9D653DC275F241F367F4FE1F7C75C55A1B02D06B2663EF73F3FA514FCE4F40770FEB95431C615199ACA731F5AF534F060C67BD97B1D1A8E224425A32B4850500588442D4625599952D2C324363B9115D46AB779E762A91FBC0726F2D427BA22B49F3A3565F692B370DCD7A4D9BA1431467CEF31C7A6A1CC2466317672DBCCAEF16ED05A9F82CB2572E1911286BCC27739A760B8DA2FE136332C5C4EB3FD27EDE3DEDE78A3E6599E69E4F985C2F309C9E6E273F5581ADAB037B11336FC3123A1E34E8EAC8540CBE06
	25DF42CDDE218192770F31FD87D2710034FF864E662C27DB749AAEA19017E5D68C4FBC9764D889D0GD0BA93EAA10093208520EBA61771513E4AE1E4E40DDF2250193F41766F307AAC935D14F7CCBF56B2C90176DE1025FE76AB833C28844C3BE5ACF5EC5D999BB9DFAC08A54F970BE2D7670B5CD872FC71C04C1AAF986EE1132F967F2845700F4530FFE5F70CAF84855C9FE3177D5FCC1E78820CB9FFA4C5F07D50B5324F2B866D12A7E88F77866D0247300BE0CCBBF2734583673F8FF766F6BD7656DE9BA9EAA2
	A5FEC914FD2DB4F41AC9A91DB50A3AD713C2E8B7033C590C51F7D8961440E1E6451AE632133E47C38E59DFA417092D196C32307BD412C5A5C15AE1A1FDF92E59A0BB98E7C5B48E433CA60A3FF2979AE4375D5E5E6B95E539A29A145B4DD88EA11322D0BC1E2B2ED8E331E002B7E5BCD74EB66FA03393B143FC34268B4FA08A784C595C9727847EB90C2F378685D9B68439670462C33FBF59E70809BCDB5F057CF57E0EC9B43FFBF6215C5D16B57F83D0CB8788A8EE243A4D8DGGD4A5GGD0CB818294G94G88
	G88G610171B4A8EE243A4D8DGGD4A5GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG878EGGGG
**end of data**/
}
}
