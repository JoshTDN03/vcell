package cbit.image.gui;
import java.awt.event.*;
import java.util.*;
import javax.swing.SwingConstants;

import org.vcell.util.Range;

import cbit.image.*;
import cbit.vcell.simdata.SourceDataInfo;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class ImageContainerPanel extends javax.swing.JPanel implements ActionListener, ItemListener, java.beans.PropertyChangeListener {
	private javax.swing.JPanel ivjAxisPanel = null;
	private javax.swing.JButton ivjButton1 = null;
	private javax.swing.JButton ivjButton2 = null;
	private ImageContainer ivjImageContainer = null;
	private javax.swing.JLabel ivjLabel1 = null;
	private javax.swing.JLabel ivjLabel2 = null;
	private javax.swing.JLabel ivjSliceLabel = null;
	private javax.swing.JPanel ivjSlicePanel = null;
	private javax.swing.JRadioButton ivjXAxisCheckbox = null;
	private javax.swing.JRadioButton ivjYAxisCheckbox = null;
	private javax.swing.JRadioButton ivjZAxisCheckbox = null;
	private ImageContainerPanelTool ivjImageContainerPanelTool = null;
	private javax.swing.JLabel ivjStatusLabel = null;
	protected transient java.beans.PropertyChangeSupport propertyChange;
	private ScalePanel ivjScalePanel1 = null;
	private Vector dataSetHistory = new Vector(0);
	private Vector scaleSettingsHistory = new Vector(0);
	private int index = 0;
	private javax.swing.JButton ivjButton3 = null;
	private javax.swing.JButton ivjButton4 = null;
	private javax.swing.ButtonGroup ivjButtonGroup1 = null;
	private boolean fieldSpatialPlotEnabled = false;
	private ImageContainer fieldImageContainer = null;
	private ImagePaneScroller ivjImagePaneScroller = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public ImageContainerPanel() {
	super();
	initialize();
}


/**
 * ImageContainerPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public ImageContainerPanel(java.awt.LayoutManager layout) {
	super(layout);
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getButton2()) 
		connEtoM1(e);
	if (e.getSource() == getButton1()) 
		connEtoM2(e);
	if (e.getSource() == getButton4()) 
		connEtoM14(e);
	if (e.getSource() == getButton3()) 
		connEtoM15(e);
	// user code begin {2}
	// user code end
}

/**
 * The addPropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().addPropertyChangeListener(listener);
}


/**
 * Comment
 */
public void checkScaleSettingsHistory() throws java.rmi.RemoteException, org.vcell.util.DataAccessException {
	String newDataSet = getImageContainer().getDataID();
	if (scaleSettingsHistory.capacity() != 0) scaleSettingsHistory.setElementAt(getScalePanel1().getScaleRange(), index);
	if (dataSetHistory.contains(newDataSet)) {
		getScalePanel1().setScaleRange((Range)scaleSettingsHistory.elementAt(dataSetHistory.indexOf(newDataSet)));
	} else {
		dataSetHistory.addElement(newDataSet);
		Range defaultManualRange = new Range(0.0, Math.pow(10, (int)((Math.log(getScalePanel1().getDataRange().getMax())) / Math.log(10)) + 1));
		getScalePanel1().setScaleRange(defaultManualRange);
		scaleSettingsHistory.addElement(defaultManualRange);
	}
	index = dataSetHistory.indexOf(newDataSet);
	return;
}


/**
 * conn9:  (ImageContainer.this --> SliceLabel.text)
 * @param value cbit.image.ImageContainer
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn9(ImageContainer value) {
	try {
		// user code begin {1}
		// user code end
		if ((getImageContainer() != null)) {
			getSliceLabel().setText(String.valueOf(getImageContainer().getSlice()));
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC1:  (ImageContainerPanelTool.clickedPoint --> ImageContainerPanel.firePropertyChange(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.firePropertyChange("imageContainerPanelToolClickedPoint", arg1.getOldValue(), arg1.getNewValue());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (ImageContainerPanelTool.endLine --> ImageContainerPanel.firePropertyChange(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.firePropertyChange("imageContainerPanelToolEndLine", arg1.getOldValue(), arg1.getNewValue());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC3:  ( (ImageContainer,dataRange --> ScalePanel1,dataRange).normalResult --> ImageContainerPanel.checkScaleSettingsHistory()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3() {
	try {
		// user code begin {1}
		// user code end
		this.checkScaleSettingsHistory();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  ( (ImageContainer,this --> ScalePanel1,dataRange).normalResult --> ImageContainerPanel.checkScaleSettingsHistory()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4() {
	try {
		// user code begin {1}
		// user code end
		this.checkScaleSettingsHistory();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC5:  (ImageContainerPanelTool.sliceNumber --> ImageContainerPanel.firePropertyChange(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.firePropertyChange("imageContainerPanelToolSliceNumber", arg1.getOldValue(), arg1.getNewValue());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC6:  (ImageContainerPanelTool.slicePlane --> ImageContainerPanel.firePropertyChange(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.firePropertyChange("imageContainerPanelToolSlicePlane", arg1.getOldValue(), arg1.getNewValue());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC7:  ( (ScalePanel1,scaleRange --> ImageContainerPanel,refreshScaling()V).normalResult --> ImageContainerPanel.updateScaleSettingsHistory()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7() {
	try {
		// user code begin {1}
		// user code end
		this.updateScaleSettingsHistory();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC8:  (ImageContainer.pixels --> ImageContainerPanel.refreshImage()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshImage();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC9:  (ImageContainer.this --> ImageContainerPanel.refreshImage()V)
 * @param value cbit.image.gui.ImageContainer
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC9(ImageContainer value) {
	try {
		// user code begin {1}
		// user code end
		this.refreshImage();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (Button2.action.actionPerformed(java.awt.event.ActionEvent) --> ImageContainerPanelTool.decrementSlice()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainerPanelTool().decrementSlice();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM10:  (ScalePanel1.scaleRange --> ImageContainerPanel.refreshScaling()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM10(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshScaling();
		connEtoC7();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM11:  (ScalePanel1.autoMode --> ImageContainerPanel.refreshScaling()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM11(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshScaling();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM12:  (ScalePanel1.colorMode --> ImageContainerPanel.refreshScaling()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM12(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshScaling();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM13:  (ScalePanel1.colorMode --> ImageContainer.colorMode)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM13(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainer().setColorMode(getScalePanel1().getColorMode());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM14:  (Button4.action.actionPerformed(java.awt.event.ActionEvent) --> ImageContainerPanelTool.decrementSlice10()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM14(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainerPanelTool().decrementSlice10();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM15:  (Button3.action.actionPerformed(java.awt.event.ActionEvent) --> ImageContainerPanelTool.incrementSlice10()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM15(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainerPanelTool().incrementSlice10();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM16:  (ImageContainerPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM16() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroup1().add(getXAxisCheckbox());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM17:  (ImageContainerPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM17() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroup1().add(getZAxisCheckbox());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM18:  (ImageContainerPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM18() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroup1().add(getYAxisCheckbox());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM2:  (Button1.action.actionPerformed(java.awt.event.ActionEvent) --> ImageContainerPanelTool.incrementSlice()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainerPanelTool().incrementSlice();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM3:  (ZAxisCheckbox.item.itemStateChanged(java.awt.event.ItemEvent) --> ImageContainerPanelTool.setAxisZ()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM3(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainerPanelTool().setAxisZ();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM4:  (XAxisCheckbox.item.itemStateChanged(java.awt.event.ItemEvent) --> ImageContainerPanelTool.setAxisX()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainerPanelTool().setAxisX();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM5:  (YAxisCheckbox.item.itemStateChanged(java.awt.event.ItemEvent) --> ImageContainerPanelTool.setAxisY()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainerPanelTool().setAxisY();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM6:  (ScalePanel1.autoMode --> ImageContainer.autoMode)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM6(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainer().setAutoMode(getScalePanel1().getAutoMode());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM7:  (ImageContainer.realBounds --> ScalePanel1.realBounds)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM7(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		if ((getImageContainer() != null)) {
			getScalePanel1().setDataRange(getImageContainer().getDataRange());
		}
		connEtoC3();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM8:  (ImageContainer.this --> ScalePanel1.realBounds)
 * @param value cbit.image.ImageContainer
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM8(ImageContainer value) {
	try {
		// user code begin {1}
		// user code end
		if ((getImageContainer() != null)) {
			getScalePanel1().setDataRange(getImageContainer().getDataRange());
		}
		connEtoC4();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM9:  (ScalePanel1.inputMinMax --> ImageContainer.inputMinMax)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM9(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getImageContainer().setScaleRange(getScalePanel1().getScaleRange());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * The firePropertyChange method was generated to support the propertyChange field.
 * @param propertyName java.lang.String
 * @param oldValue java.lang.Object
 * @param newValue java.lang.Object
 */
public void firePropertyChange(String propertyName, Object oldValue, Object newValue) {
	getPropertyChange().firePropertyChange(propertyName, oldValue, newValue);
}


/**
 * Return the AxisPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getAxisPanel() {
	if (ivjAxisPanel == null) {
		try {
			ivjAxisPanel = new javax.swing.JPanel();
			ivjAxisPanel.setName("AxisPanel");
			ivjAxisPanel.setBorder(new javax.swing.border.EtchedBorder());
			ivjAxisPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsLabel1 = new java.awt.GridBagConstraints();
			constraintsLabel1.gridx = 0; constraintsLabel1.gridy = 0;
			constraintsLabel1.gridwidth = 3;
			constraintsLabel1.ipady = 5;
			getAxisPanel().add(getLabel1(), constraintsLabel1);

			java.awt.GridBagConstraints constraintsZAxisCheckbox = new java.awt.GridBagConstraints();
			constraintsZAxisCheckbox.gridx = 0; constraintsZAxisCheckbox.gridy = 1;
			constraintsZAxisCheckbox.insets = new java.awt.Insets(0, 5, 5, 0);
			getAxisPanel().add(getZAxisCheckbox(), constraintsZAxisCheckbox);

			java.awt.GridBagConstraints constraintsXAxisCheckbox = new java.awt.GridBagConstraints();
			constraintsXAxisCheckbox.gridx = 1; constraintsXAxisCheckbox.gridy = 1;
			constraintsXAxisCheckbox.insets = new java.awt.Insets(0, 0, 5, 0);
			getAxisPanel().add(getXAxisCheckbox(), constraintsXAxisCheckbox);

			java.awt.GridBagConstraints constraintsYAxisCheckbox = new java.awt.GridBagConstraints();
			constraintsYAxisCheckbox.gridx = 2; constraintsYAxisCheckbox.gridy = 1;
			constraintsYAxisCheckbox.insets = new java.awt.Insets(0, 0, 5, 0);
			getAxisPanel().add(getYAxisCheckbox(), constraintsYAxisCheckbox);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAxisPanel;
}

/**
 * Return the Button1 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getButton1() {
	if (ivjButton1 == null) {
		try {
			ivjButton1 = new javax.swing.JButton();
			ivjButton1.setName("Button1");
			ivjButton1.setText("+1");
			ivjButton1.setPreferredSize(new java.awt.Dimension(31, 25));
			ivjButton1.setFont(new java.awt.Font("dialog", 1, 12));
			ivjButton1.setMinimumSize(new java.awt.Dimension(31, 25));
			ivjButton1.setMargin(new java.awt.Insets(2, 5, 2, 5));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButton1;
}


/**
 * Return the Button2 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getButton2() {
	if (ivjButton2 == null) {
		try {
			ivjButton2 = new javax.swing.JButton();
			ivjButton2.setName("Button2");
			ivjButton2.setText("-1");
			ivjButton2.setMargin(new java.awt.Insets(2, 5, 2, 5));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButton2;
}


/**
 * Return the Button3 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getButton3() {
	if (ivjButton3 == null) {
		try {
			ivjButton3 = new javax.swing.JButton();
			ivjButton3.setName("Button3");
			ivjButton3.setText("+10");
			ivjButton3.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButton3;
}


/**
 * Return the Button4 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getButton4() {
	if (ivjButton4 == null) {
		try {
			ivjButton4 = new javax.swing.JButton();
			ivjButton4.setName("Button4");
			ivjButton4.setText("-10");
			ivjButton4.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButton4;
}


/**
 * Return the ButtonGroup1 property value.
 * @return javax.swing.ButtonGroup
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.ButtonGroup getButtonGroup1() {
	if (ivjButtonGroup1 == null) {
		try {
			ivjButtonGroup1 = new javax.swing.ButtonGroup();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonGroup1;
}


/**
 * This method was created in VisualAge.
 * @return java.util.Vector
 */
public Vector getDataSetHistory() {
	return dataSetHistory;
}


/**
 * Return the ImageContainer property value.
 * @return cbit.image.ImageContainer
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public ImageContainer getImageContainer() {
	// user code begin {1}
	// user code end
	return ivjImageContainer;
}

/**
 * Method generated to support the promotion of the imageContainerNormalAxis attribute.
 * @return int
 */
public int getImageContainerNormalAxis() {
		return getImageContainer().getNormalAxis();
}


/**
 * Return the ImageContainerPanelTool property value.
 * @return cbit.image.ImageContainerPanelTool
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ImageContainerPanelTool getImageContainerPanelTool() {
	// user code begin {1}
	// user code end
	return ivjImageContainerPanelTool;
}


/**
 * Method generated to support the promotion of the imageContainerPanelToolBeginLine attribute.
 * @return cbit.vcell.math.CoordinateIndex
 */
public org.vcell.util.CoordinateIndex getImageContainerPanelToolBeginLine() {
		return getImageContainerPanelTool().getBeginLine();
}


/**
 * Method generated to support the promotion of the imageContainerPanelToolClickedPoint attribute.
 * @return cbit.vcell.math.CoordinateIndex
 */
public org.vcell.util.CoordinateIndex getImageContainerPanelToolClickedPoint() {
		return getImageContainerPanelTool().getClickedPoint();
}


/**
 * Method generated to support the promotion of the imageContainerPanelToolEndLine attribute.
 * @return cbit.vcell.math.CoordinateIndex
 */
public org.vcell.util.CoordinateIndex getImageContainerPanelToolEndLine() {
		return getImageContainerPanelTool().getEndLine();
}


/**
 * Method generated to support the promotion of the imageContainerPanelToolSliceNumber attribute.
 * @return int
 */
public int getImageContainerPanelToolSliceNumber() {
		return getImageContainerPanelTool().getSliceNumber();
}


/**
 * Method generated to support the promotion of the imageContainerPanelToolSlicePlane attribute.
 * @return int
 */
public int getImageContainerPanelToolSlicePlane() {
		return getImageContainerPanelTool().getSlicePlane();
}


/**
 * Method generated to support the promotion of the imageContainerSlice attribute.
 * @return int
 */
public int getImageContainerSlice() {
		return getImageContainer().getSlice();
}


/**
 * Return the ImagePane property value.
 * @return cbit.image.ImagePaneScroller
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public ImagePaneScroller getImagePaneScroller() {
	if (ivjImagePaneScroller == null) {
		try {
			ivjImagePaneScroller = new ImagePaneScroller();
			ivjImagePaneScroller.setName("ImagePaneScroller");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjImagePaneScroller;
}

/**
 * Return the Label1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getLabel1() {
	if (ivjLabel1 == null) {
		try {
			ivjLabel1 = new javax.swing.JLabel();
			ivjLabel1.setName("Label1");
			ivjLabel1.setText("Axis:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLabel1;
}


/**
 * Return the Label2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getLabel2() {
	if (ivjLabel2 == null) {
		try {
			ivjLabel2 = new javax.swing.JLabel();
			ivjLabel2.setName("Label2");
			ivjLabel2.setText("Slice:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLabel2;
}


/**
 * Accessor for the propertyChange field.
 * @return java.beans.PropertyChangeSupport
 */
protected java.beans.PropertyChangeSupport getPropertyChange() {
	if (propertyChange == null) {
		propertyChange = new java.beans.PropertyChangeSupport(this);
	};
	return propertyChange;
}


/**
 * Return the ScalePanel1 property value.
 * @return cbit.image.ScalePanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ScalePanel getScalePanel1() {
	if (ivjScalePanel1 == null) {
		try {
			ivjScalePanel1 = new ScalePanel();
			ivjScalePanel1.setName("ScalePanel1");
			ivjScalePanel1.setBorder(new javax.swing.border.EtchedBorder());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjScalePanel1;
}

/**
 * Method generated to support the promotion of the scalePanel1Visible attribute.
 * @return boolean
 */
public boolean getScalePanel1Visible() {
		return getScalePanel1().isVisible();
}


/**
 * This method was created in VisualAge.
 * @return java.util.Vector
 */
public Vector getScaleSettingsHistory() {
	return scaleSettingsHistory;
}


/**
 * Return the SliceLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getSliceLabel() {
	if (ivjSliceLabel == null) {
		try {
			ivjSliceLabel = new javax.swing.JLabel();
			ivjSliceLabel.setName("SliceLabel");
			ivjSliceLabel.setText("0");
			ivjSliceLabel.setHorizontalAlignment(SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSliceLabel;
}


/**
 * Return the SlicePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getSlicePanel() {
	if (ivjSlicePanel == null) {
		try {
			ivjSlicePanel = new javax.swing.JPanel();
			ivjSlicePanel.setName("SlicePanel");
			ivjSlicePanel.setBorder(new javax.swing.border.EtchedBorder());
			ivjSlicePanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsLabel2 = new java.awt.GridBagConstraints();
			constraintsLabel2.gridx = 1; constraintsLabel2.gridy = 0;
			constraintsLabel2.gridwidth = 3;
			constraintsLabel2.ipady = 5;
			getSlicePanel().add(getLabel2(), constraintsLabel2);

			java.awt.GridBagConstraints constraintsButton2 = new java.awt.GridBagConstraints();
			constraintsButton2.gridx = 1; constraintsButton2.gridy = 1;
			constraintsButton2.insets = new java.awt.Insets(0, 0, 5, 0);
			getSlicePanel().add(getButton2(), constraintsButton2);

			java.awt.GridBagConstraints constraintsButton1 = new java.awt.GridBagConstraints();
			constraintsButton1.gridx = 3; constraintsButton1.gridy = 1;
			constraintsButton1.insets = new java.awt.Insets(0, 0, 5, 0);
			getSlicePanel().add(getButton1(), constraintsButton1);

			java.awt.GridBagConstraints constraintsSliceLabel = new java.awt.GridBagConstraints();
			constraintsSliceLabel.gridx = 2; constraintsSliceLabel.gridy = 1;
			constraintsSliceLabel.ipadx = 20;
			constraintsSliceLabel.insets = new java.awt.Insets(0, 0, 5, 0);
			getSlicePanel().add(getSliceLabel(), constraintsSliceLabel);

			java.awt.GridBagConstraints constraintsButton4 = new java.awt.GridBagConstraints();
			constraintsButton4.gridx = 0; constraintsButton4.gridy = 1;
			constraintsButton4.insets = new java.awt.Insets(0, 5, 5, 0);
			getSlicePanel().add(getButton4(), constraintsButton4);

			java.awt.GridBagConstraints constraintsButton3 = new java.awt.GridBagConstraints();
			constraintsButton3.gridx = 4; constraintsButton3.gridy = 1;
			constraintsButton3.insets = new java.awt.Insets(0, 0, 5, 5);
			getSlicePanel().add(getButton3(), constraintsButton3);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSlicePanel;
}

/**
 * Gets the spatialPlotEnabled property (boolean) value.
 * @return The spatialPlotEnabled property value.
 * @see #setSpatialPlotEnabled
 */
public boolean getSpatialPlotEnabled() {
	return fieldSpatialPlotEnabled;
}


/**
 * Return the StatusLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public javax.swing.JLabel getStatusLabel() {
	if (ivjStatusLabel == null) {
		try {
			ivjStatusLabel = new javax.swing.JLabel();
			ivjStatusLabel.setName("StatusLabel");
			ivjStatusLabel.setText(" ");
			ivjStatusLabel.setMaximumSize(new java.awt.Dimension(25, 25));
			ivjStatusLabel.setPreferredSize(new java.awt.Dimension(25, 25));
			ivjStatusLabel.setMinimumSize(new java.awt.Dimension(25, 25));
			ivjStatusLabel.setHorizontalAlignment(SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStatusLabel;
}

/**
 * Return the XAxisCheckbox property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getXAxisCheckbox() {
	if (ivjXAxisCheckbox == null) {
		try {
			ivjXAxisCheckbox = new javax.swing.JRadioButton();
			ivjXAxisCheckbox.setName("XAxisCheckbox");
			ivjXAxisCheckbox.setText("YZ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjXAxisCheckbox;
}


/**
 * Return the YAxisCheckbox property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getYAxisCheckbox() {
	if (ivjYAxisCheckbox == null) {
		try {
			ivjYAxisCheckbox = new javax.swing.JRadioButton();
			ivjYAxisCheckbox.setName("YAxisCheckbox");
			ivjYAxisCheckbox.setText("ZX");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjYAxisCheckbox;
}


/**
 * Return the ZAxisCheckbox property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getZAxisCheckbox() {
	if (ivjZAxisCheckbox == null) {
		try {
			ivjZAxisCheckbox = new javax.swing.JRadioButton();
			ivjZAxisCheckbox.setName("ZAxisCheckbox");
			ivjZAxisCheckbox.setSelected(true);
			ivjZAxisCheckbox.setText("XY");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjZAxisCheckbox;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION --------- in ImageContainerPanel ");
	exception.printStackTrace(System.out);
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getScalePanel1().addPropertyChangeListener(this);
	getButton2().addActionListener(this);
	getButton1().addActionListener(this);
	getYAxisCheckbox().addItemListener(this);
	getXAxisCheckbox().addItemListener(this);
	getZAxisCheckbox().addItemListener(this);
	getButton4().addActionListener(this);
	getButton3().addActionListener(this);
}

/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("ImageContainerPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(455, 433);

		java.awt.GridBagConstraints constraintsAxisPanel = new java.awt.GridBagConstraints();
		constraintsAxisPanel.gridx = 1; constraintsAxisPanel.gridy = 2;
		constraintsAxisPanel.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsAxisPanel.anchor = java.awt.GridBagConstraints.SOUTH;
		constraintsAxisPanel.insets = new java.awt.Insets(0, 5, 5, 5);
		add(getAxisPanel(), constraintsAxisPanel);

		java.awt.GridBagConstraints constraintsSlicePanel = new java.awt.GridBagConstraints();
		constraintsSlicePanel.gridx = 1; constraintsSlicePanel.gridy = 1;
		constraintsSlicePanel.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsSlicePanel.anchor = java.awt.GridBagConstraints.SOUTH;
		constraintsSlicePanel.weighty = 1.0;
		constraintsSlicePanel.insets = new java.awt.Insets(0, 5, 5, 5);
		add(getSlicePanel(), constraintsSlicePanel);

		java.awt.GridBagConstraints constraintsStatusLabel = new java.awt.GridBagConstraints();
		constraintsStatusLabel.gridx = 0; constraintsStatusLabel.gridy = 3;
		constraintsStatusLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsStatusLabel.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getStatusLabel(), constraintsStatusLabel);

		java.awt.GridBagConstraints constraintsScalePanel1 = new java.awt.GridBagConstraints();
		constraintsScalePanel1.gridx = 1; constraintsScalePanel1.gridy = 0;
		constraintsScalePanel1.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsScalePanel1.anchor = java.awt.GridBagConstraints.NORTH;
		constraintsScalePanel1.insets = new java.awt.Insets(5, 5, 5, 5);
		add(getScalePanel1(), constraintsScalePanel1);

		java.awt.GridBagConstraints constraintsImagePaneScroller = new java.awt.GridBagConstraints();
		constraintsImagePaneScroller.gridx = 0; constraintsImagePaneScroller.gridy = 0;
constraintsImagePaneScroller.gridheight = 3;
		constraintsImagePaneScroller.fill = java.awt.GridBagConstraints.BOTH;
		constraintsImagePaneScroller.weightx = 1.0;
		constraintsImagePaneScroller.weighty = 1.0;
		constraintsImagePaneScroller.insets = new java.awt.Insets(4, 5, 5, 0);
		add(getImagePaneScroller(), constraintsImagePaneScroller);
		initConnections();
		connEtoM16();
		connEtoM17();
		connEtoM18();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * Method to handle events for the ItemListener interface.
 * @param e java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void itemStateChanged(java.awt.event.ItemEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getYAxisCheckbox()) 
		connEtoM5(e);
	if (e.getSource() == getXAxisCheckbox()) 
		connEtoM4(e);
	if (e.getSource() == getZAxisCheckbox()) 
		connEtoM3(e);
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		java.awt.Frame frame;
		try {
			Class aFrameClass = Class.forName("com.ibm.uvm.abt.edit.TestFrame");
			frame = (java.awt.Frame)aFrameClass.newInstance();
		} catch (java.lang.Throwable ivjExc) {
			frame = new java.awt.Frame();
		}
		ImageContainerPanel aImageContainerPanel;
		aImageContainerPanel = new ImageContainerPanel();
		frame.add("Center", aImageContainerPanel);
		frame.setSize(aImageContainerPanel.getSize());
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of java.awt.Panel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getScalePanel1() && (evt.getPropertyName().equals("scaleRange"))) 
		connEtoM10(evt);
	if (evt.getSource() == getScalePanel1() && (evt.getPropertyName().equals("autoMode"))) 
		connEtoM11(evt);
	if (evt.getSource() == getScalePanel1() && (evt.getPropertyName().equals("colorMode"))) 
		connEtoM12(evt);
	if (evt.getSource() == getImageContainer() && (evt.getPropertyName().equals("dataRange"))) 
		connEtoM7(evt);
	if (evt.getSource() == getImageContainer() && (evt.getPropertyName().equals("pixels"))) 
		connEtoC8(evt);
	if (evt.getSource() == getScalePanel1() && (evt.getPropertyName().equals("colorMode"))) 
		connEtoM13(evt);
	if (evt.getSource() == getScalePanel1() && (evt.getPropertyName().equals("scaleRange"))) 
		connEtoM9(evt);
	if (evt.getSource() == getScalePanel1() && (evt.getPropertyName().equals("autoMode"))) 
		connEtoM6(evt);
	if (evt.getSource() == getImageContainerPanelTool() && (evt.getPropertyName().equals("endLine"))) 
		connEtoC2(evt);
	if (evt.getSource() == getImageContainerPanelTool() && (evt.getPropertyName().equals("sliceNumber"))) 
		connEtoC5(evt);
	if (evt.getSource() == getImageContainerPanelTool() && (evt.getPropertyName().equals("slicePlane"))) 
		connEtoC6(evt);
	if (evt.getSource() == getImageContainerPanelTool() && (evt.getPropertyName().equals("clickedPoint"))) 
		connEtoC1(evt);
	// user code begin {2}
	// user code end
}

/**
 * This method was created by a SmartGuide.
 */
public void refreshImage() {
	if (getImageContainer()==null){
		getImagePaneScroller().getImagePaneView().clear();
		return;
	}	
	try {
		int nX = getImageContainer().getDisplayWidth();
		int nY = getImageContainer().getDisplayHeight();
		int nZ = 1;
		SourceDataInfo sourceData = new SourceDataInfo(SourceDataInfo.INT_RGB_TYPE,getImageContainer().getPixels(),new org.vcell.util.Extent(1,1,1),new org.vcell.util.Origin(0,0,0),getImageContainer().getDataRange(),0,nX,1,nY,nX,nZ,nX*nY);
		getImagePaneScroller().getImagePaneModel().setSourceData(sourceData);
	}catch (Exception e){
		getImagePaneScroller().getImagePaneView().clear();
		e.printStackTrace(System.out);
	}		
}


/**
 * This method was created in VisualAge.
 */
public void refreshScaling() {
	getImageContainer().refreshDisplayScale();
	getImageContainer().refreshDisplayPixels();
	refreshImage();
}


/**
 * The removePropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().removePropertyChangeListener(listener);
}


/**
 * This method was created in VisualAge.
 */
public void repaintImage() {
	getImagePaneScroller().repaint();
}


/**
 * Set the ImageContainer to a new value.
 * @param newValue cbit.image.ImageContainer
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setImageContainer(ImageContainer newValue) {
	if (ivjImageContainer != newValue) {
		try {
			cbit.image.gui.ImageContainer oldValue = getImageContainer();
			/* Stop listening for events from the current object */
			if (ivjImageContainer != null) {
				ivjImageContainer.removePropertyChangeListener(this);
			}
			ivjImageContainer = newValue;

			/* Listen for events from the new object */
			if (ivjImageContainer != null) {
				ivjImageContainer.addPropertyChangeListener(this);
			}
			conn9(ivjImageContainer);
			connEtoM8(ivjImageContainer);
			connEtoC9(ivjImageContainer);
			// user code begin {1}
			if (getImageContainerPanelTool()!=null){
				getImageContainerPanelTool().setImageContainer(getImageContainer());
			}else{
				setImageContainerPanelTool(new ImageContainerPanelTool(this,getImageContainer()));
			}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Set the ImageContainerPanelTool to a new value.
 * @param newValue cbit.image.ImageContainerPanelTool
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setImageContainerPanelTool(ImageContainerPanelTool newValue) {
	if (ivjImageContainerPanelTool != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjImageContainerPanelTool != null) {
				ivjImageContainerPanelTool.removePropertyChangeListener(this);
			}
			ivjImageContainerPanelTool = newValue;

			/* Listen for events from the new object */
			if (ivjImageContainerPanelTool != null) {
				ivjImageContainerPanelTool.addPropertyChangeListener(this);
			}
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Method generated to support the promotion of the scalePanel1Visible attribute.
 * @param arg1 boolean
 */
public void setScalePanel1Visible(boolean arg1) {
		getScalePanel1().setVisible(arg1);
}


/**
 * This method was created in VisualAge.
 * @param text java.lang.String
 */
public void setSliceLabelText(String text) {
	getSliceLabel().setText(text);
}


/**
 * Sets the spatialPlotEnabled property (boolean) value.
 * @param spatialPlotEnabled The new value for the property.
 * @see #getSpatialPlotEnabled
 */
public void setSpatialPlotEnabled(boolean spatialPlotEnabled) {
	boolean oldValue = fieldSpatialPlotEnabled;
	fieldSpatialPlotEnabled = spatialPlotEnabled;
	firePropertyChange("spatialPlotEnabled", new Boolean(oldValue), new Boolean(spatialPlotEnabled));
}


/**
 * This method was created in VisualAge.
 * @param statusText java.lang.String
 */
public void setStatusText(String statusText) {
	getStatusLabel().setText(statusText);
}


/**
 * Comment
 */
public void updateScaleSettingsHistory() {
	if ((scaleSettingsHistory.capacity() != 0) && getImageContainer().getDataID().equals(dataSetHistory.elementAt(index))) scaleSettingsHistory.setElementAt(getScalePanel1().getScaleRange(), index);
	return;
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G730171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E165FD8FDCD4D576386DEAD9E2E1D2D16B3AD41614685206E5E905C5693A565AC6C59B959936DA16D4D66C2E3B7B7823E2E8125206CAC50A0A0A880ACA088A0A0A05CA0184CA4A40BCE0E41899E79EB2A86A6F5CFB5F396F4D1BB78C727D52677B797C78FC8E6F5DF34F39775CF34EFD775CBF6F0D107AF5407C3878D4C1081BAF48FFBB6384A154D7904ECD5F5B8FF13E166AE4C175778D40E7C2EDC7A2DC
	83A04F796F6A6494610CA98952A1101E99DB1D7C855CAF9736D5E4DD87B79E6A91A0AFE64E25173B2F677BCDD84FC21AFEF175E238FE8AB08EF0641AE8A5754FD91DA663A3E5BCC2DC3CA0C4D01ACF56244B38B2C85783788184DA99FDA8DC97511A87949648F4F5C3820539D36C71CBC8B92AB291B2EC0C37D43EE6887F081BEDA3F5EDDB33D8666902F488GE9FC02705802AC3896D534B66FE9ECB0C9B926B6C33318535CEEAAACBCCCEE77DBAD1241E4916D95860BE8EEB9CB4A3A30A609728AC2AE2467D21C
	1FC84A8F027BB000C80E6FECA67882FBF5F285C00B9D5B34FBFD11ACF34D0587056866A797AD755026FEF65616C03B52A67F8D8D89AB287E87E593BDC7C3DE1223BAB99D2098209E209F40AAEA779BB7ED04EBC903345F5A56E6351458EC7B4CC67B912BD1B443FDE1A16448389F45C62B5DA8884C365F2E49561127BBE0FC072E180F69A4F09B5AB96847B1C2647DB747AF5451C9E46005F8FF8753C530C351892B3B1F473A27B9DC7D50356E1F84F55D422C2D8B676B541D7E42560551F2B9312A3A73A5E26B24
	A6E26BB4380F134BE5784FA95E2942B31F3C0D7A8CC97BC1DE2C043ED173A94AD21EF8071012F70B2E9E7C9F77092FEBE7B2C86DDAD9C493A9BB201D5579BD17E5A845971FD370CC164B54CFC9BA8A720ABA2B1319FF796510BE6AFF817A8C40D400E800442E6A648C007CAE743117B7ED69210FD5986C523EF61359A85A85466B177DDF380ACE49EEB8ECF1C886CB23D8ED301B8C8DE651A148B43F4DA6BAE8F0613B037AFEA354F1C8049EEA10CCD68B14EEE893A5516EE0B42332BFA3B4F61166D6195AC42820
	4DA6E03977E7AF072B5960100E5B0C86C9D4A8D87E78ECE213F306EAA8918A00FB261709DB083E2A207DE600AE2E079D1BC9F95F0BF6F8DA949616DB2D2D6D36AA5292E1EA975173AD7459618B7701DD2863C7F289AE65E2F5F256C5AC27ED73B2D5B92526C6A23E415E09FD6C532694389681FD9D0093E058C5741FF7EB50FFCA170C96321F3FC957FFFC4117C3AEB23F19FAD15B0FD65172090CF3A1AF7592587A92BE7383449A388E3B285F1F2E846A64B20A64B6A84F1007E89D0B7E07659318AFDF936432BF
	65B65C34155A905AE583703D043A8F5C1C41FCF91F41A122779E33036309C64592CC4ED6139FDC096F6781EC83G938937839C87E8964813C5908EG9C82D8C34B97047DG5B8176826C82988C308960986987G1B81F682FC8E70AD40DAD9668DG3B81FEGD8CF6B9704CA002F85B6BE13F13E8460B057632DD43EC0E85BB400D8000C4B5549E5GB6GFF00D00019GA97D2A138BG6A8186828483C4G88D701DF82D4GB88182GA68344G247D8A469B0096GDF00F1GD1GC93F2ECE4E85288168879088
	B08DA096A023BF545F9FFDE9C0F3C53CF79BFEA66B6DF3390DABD4F95876B5321E564BFA5AA46BD1ED1B6D32DE3F15753EDB36C109EC933453E1D57947E4FDD74AB67D299BB9C559665E5A5359C35F9D5CC33A5BFBC8777F8BB05FCAEF6909EF917B93FF5AA25BFE3BAA8FFD02789C719F62AF44FF081F917FA24F1479F2FDDF8A4C5F082F91FFA4BEC6FC137892FB2EB07F7DDED5BE71D56207447F16884C4FBD49C9FCFAE98F5A5E53E7661A9E52A57F9F30677FA5E0369C1EC3ECA11E93ADD229E893ADC638F1
	48F9F765909B4871CC1315730C22F89B44BF7BA160F0F07CFDB9446E86C9321B9A5AA531D214A41325D949FF085665E8EF30A9219356951AC37C4F5A81718F27FFB207448E0DD60BC5240395E71173A75158C5B40BEDA074FEEB3BC5E27827371039DD2B58A947CE4FEED9A01058475CCE62B0B6DF8AB690FF3059E11EE46FA4211C905A1F44B5E3562429F4E4839C19777941B530BF46A59DEBB0AE49BCFF0F90FA5A962F97E37B5FF5C3FC52G968B248FD06292A65363397A32CF26B1140CF7B0D9CF2612BE27
	B30D237DF63990167D29DB3EA067559E78C21F374AEAC57E7CEDC416FD6D12E4359C32DB5BEDF9AC2EB0D2FC9148DE8150B2G630AD21A0FB11D9CD06C371A4D4CCC10B7F9G512521A9D556C5BFC87B8FE03A7C14673F4873D32E063179EAA55F67EA12FF24B9D5254FFAD5BE13A3EFAB096D9C6259F691C2ED921CFE4FEDDE30F519A62FDA36BF4BAF5ECA6CEFD64535E55710BA5FB561DCBE9C6A1BCD643806551BF58D2B1B51851EC1BA3FEB98DD10AE1D219569C2E53A888DDD79C0C2374A0CF4B100A7F1CE
	52C0C617B1D0DD5EA31C4EDF4E8F9E48E25A49AEF49DEDC8976B014EFCAD215BE4C13A14EBD9AC1585578200BA009CDE5E5FB95D38EB3BABEF34956926DD4B623319F00DD5154768BAECC817FE9D0B5D7261DAFA1D365E1233C857F29D0B617BDD477468FF1D3A3D4B6DC897AC530541B59CA076BA351E43B9DD52A0C617B10835A7FF103A3C418E242B9824580D5037385055CAC857EF1062AF044E5F05EEEDBB17CF2EF772A03DF64C61F49103943FA274B10354FAFE789C52A57A3038B65DC7214F616D35F4A0
	DD2E8F0B01512F4AFC546525B8114EA6531172D05F0A5D42B85DC09F96D7E33DA95728691C1DC8976043E2F0240BF0214BBE4F7D4A07456CD86FD49FF5BBA2B8DD148F0B6F755BF17E8277FB19CE5B8ED6DECE97777B41ECDE18B51815D784D7BFGE60F44CBC8978838D000E819BE73FA355DA6F33AD24057DD2F5075F3216B3A4C75F2BD7377F157B33A39AEF4FB8524DBFC836BBFC817F9031A6E83CED7F4836B37C8D765C2B7B28E694C006F8F90F883231BF9033AFF3446737E614B72B3FC953D9440BD235B
	3782694AE5BA230A2E0B53FD3A8A69FCE53AC095DD28AF6A7975757C398B38593E0AFCA9C354725D14457DF98833EB5990577E4B464C8FB610F11C2E071EB11CB3B8F39C9D900B9496FE27DA7FCC4BCC1269EB0660BAE772FAB26679C2BA90A0F4880E794FAE41F5CE3F56C0A1F2D65EC2CFEB3791323C7306A8E33EB027E4819BD3476413BA0BEE847D5C086369782D6A35169207435AE8224BBC72D8F5E61BBAA6E0B86B36CF605AE432BB24439034B9F1DCEB5FC664A56BC0B2DADE979B58046B4675D02F7F0D
	38EE9CE0DFA374E85DD8DEDFEC5C06FA70BDFF17D0FF53ED71499E74B06DC6567E189B95BDE4DF0A1D4F6479B717A7EBA8747B21A8CF54716C1E4943039846772F1CAFF56D2D0AEA84DCA33DF8D0ED4B89CBAFFAEC037FD0A67B3821CA9BC24DD58BD99B3EB833D8761FD8484F7583FF21B1E478A9F58C5962475648FC61BA820045DC174E907BB99A8DE671C70325D9C43F3DAE034450F63149AEBADAAAA19BDA1135211A4BBE7A2BE2395C29E36E90128C836275565BFDE6B547CF70E3B2C77BA932E75D5810D0
	844064FF164ACF64493E897A6FCDA8DBC1AB71B7C33BE4A56B1E0C763AD6249D86F4611C763DD6A2D72355EC250B245C5FCA4D281B45B743F36EE6346F1E9F885EE23537994CBF0A0EF633447031A544FE6DF46D12B41B4F9E4ACC8E49EA6FD46B600E65EA9D94DDBE252B0301CBDB623BEEE6ED9FF1334AFEC39A924207208E5EB4E33BE200A66B96EC5711B602B7D9CC1289ECF0DE4C5A40644C352CA63AB19A334AD5FE16D3526000D9D223445CED979116159F50066557C3597EG8CDFE5C17CB440A579E33D
	63ADE46EE230B767B1DF4ABA227625E220B38378820C60BCEFD09E294564E07A692AC57D741B9AA224AD9F2C2B9F82937CE59F71D774B377F78D89C981281F55D614B37FD6287BD6147F850E9F813848DBD1165DB6D779E7556A491FFA9B687AB6ACAB4006E595834EF99B1635702CC697C7754A8A867AB0DE56193368F71100CB7D8D16756CD9229B70AE035C5D64394FBF5D70ECECA834635ED8B9AF63E6BB6A194933CCD44B539F6882812682C4F11EC7998FCC2219FC7F3273E78650648EC3BA23034CD1EDA6
	27E866F354212B17AA4F827A74A33D0015730083F55682E58470F2CAA47D7E78AB896B0DG5A145FA27D12F66DF308519FEDC77AB2206D47694736238E98DD5AB914E39C5044F03ABB4F39BFC35E6034D9436119BF9C1F8929FB48154E4F393C37F4E07D7EC0B70D535ECD6372469631315543E30271FF6B443A12FED71DDC7CBB740FF7B85E8938E00E3F3D9371B3811791GF1BE75034A736887B5815836096709AC8E3329D111B76E824A6B8BF41383305CBBAFE039426D90BF5D0E781F3A105E8638405B393F
	F411B5B851E2AC07C1CE760344F2325686E33DD8E1375AC43B54393F05580ABD02F24CF01FD3A959C18D3BD418E38DE7E0BE2E03819FE2EDFB3F0B340D549745655AFC8965CD3B83667DF76018B64526767501F7B0DF8F06EB589DA83B5F252D4466F491A007DDAAC4FB93BC6BC5E396954350A1655035261C921AFD005CEFC0FFDFDBC346BE2358E82711CEA5D1B0FB6EB3595E6332C5C21D29F722EC96231EEC6510DFFFA77ACD4EF2D2364962296C3BAEF33FG1E60BB31CD0B69FA2AC9925BF2483FCA8946A7
	26FD37A69D06FC39C12C4E36B292D7B8C42944E9F254AAFD37C5603E8675E40CC0995B62D474B58AFDFA9C5257G2D2FC23FC8C5FFC2211F4669A7832DF0976A692C2E1E8AA03F7CAEEC6F4E787F198DDF3E3C5C4D06F9390AECFE716877C628F3982F771FB48623FD6AE8FBDB83441B4CC7F39350C7436FC29FEDDD41E30B3BA136389B4B784B0ACF300C8AF0F8911F658BD7E299DDF7E399BBD7E199A184474B98CE710DD0C62BE82C301AAC92AB6339D5D8C666C8AC6313AC54F39D607CC6221E57B56869F9AA
	64C70DC45BC5CB4B5D7CD12D27C73378B881BC3901A85F5A8D787CE5FB83DFE6EA4F893484AA7B19DD2AFB8436FFFE194DF382597EF9B2478F2678E0951E497399451374B4484B3F8777FC5BF712367AC3BA84E0AAC0B4C0623DB0CF3D9767B77F5AC6769C3A5DD3BFEC11E07AE3B0D73AAC8E635EF6BEE9FB2B58A9279F4CD70F97CC8F57B7756E0C4730AB66E36D7EEB81D91BAC06B65681C8GBEGC13C4DC55B333D35994F86480DE572A4B6772E9D4B2E180F3523381034E3AA48BD93C098D51D1C86D0B08A
	5BF175F62F36BB6054351D6C1FE734F2550CF275C9C913E6FC1B5C78F2B4E9FF8D9F6BD765DDC4EE4D7C313010468AEC4D1C75674527F16E9FBC8A677EA5754447E7C2DA8882BD84210F5F3C0B449C3910AE87B08274839881908A909D043A8A5F3E4B2B2E4843324A4A1E1C7B35BB9BF25BDFF4EB3B9674F5B643ABDF62E8BDBE5F565E55B75CABDF3AEEFD5F19FB6793B5EEFCDA1F485754476C37E4B731DFB96435G74839886908A9089A00CC17B2D5D313B07765B8F38B22B35555D02A86BECB7D9FB2653FF
	F8654B982347F7F7DB6F6A8B714AD720DB5F89CB6F6AEB714AD7B1C62FDF7FF75FD7026EFA5E0F8623494A265D023C07B7F93DF68F0F2C3F34C039DDE3B02E2FBF0263395F986C7FBBEAC97F1F8A69E800F9E3307F8F5EC37CA77577B08E831481988186820CG187CFB749F670EFD5E7C079F6B02E7G6E136AB89153D51635F7BA5E6115AF6A77FAFC113D2C6FAD2FFC311A7A188D3EB9014F6014E034C17B91E203B2C85783B80371FC4D5D36DE7A37D7BE5FE0BD596A0F22EC01DC3679B5C436A8C84782245C
	0732594E766EF9F6490DAFC7134E3ACF0FEF2F5DDB1B0A6F536BC39FB4F9D893AFB7B408E656F7465568751DAAA82F65BE6CBB5F0958F77A5D073AF9341168E69C2427814C643AC9F074CEB71F3971E9F5A37CC10FEF029BDF4F7CE40AD73EB45D7A86CA3DEB5F4DEEFC5A76656A56D7555E3B7A9A5C7834751569567755395E69B35BABDF3DEEFD33FAD95F47DE791C3A757D3623F77A9C65462755272FEEFDFB1D3DEB5F912FFC013A75FD504B7A62BA3D71056A56B752AB1FFEFDE33D72C56856D7F35E9BDF0C
	AE5F428B3D337B67EEFCDA3BA75E2F47F70F9BDF4F747220D73EF45D7AFE6E6ADD7BDA5D783E522473F56B7B1872154BF9759A9A37365E0F634336CB3D53CB09D73E019A99589838341244F4BAE3A0061072789FFF964738007BF10C9BCF473888C847GA405E09BBE6EE59B66DF769A6B076845A6F79B09ECE47F39A084E5BBEDA4328D03F48840D4AE5BA82FF5684B7610D73E6890BDBE0B503B7A3A3C724D532DEFF5DC6F6A4B754A17BAD60F6F05DE56976D15AFFB2C1E2D6FB1229F160EC5DBBB8C4456DD10
	7683889A0B363EAD3EF7FDBE500DCF5B6743F4F531BD0170C54AF9B1E33B6F73098F201CE7D774CE4E4BEEFCDAB9539E5063DB3C1270654AF9258FF4AFE78D17F3772A5E49793D9B1FD6CE332E1C91142F3F1C676FC54EA0AEE7CAD66FFC72AB2FFC218F68796429867449088750A7871FA2BE1972E0F5F296C07103A8DB18DB9DBD5361DF5C78F23465BC684A475ECB4A27E7FAEC10579F00614E2FA538C0C807F239862CA76B1E51101E8710BA2EBAB99B20F49C668F2579E4FF192C5D9B473133EB83F97E976B
	EBD47CFA3AA3E552FEAD175B1D1E35A0BF23E89DF8B65F939D3912BD5FABBD5F4E56ACAE6D74FC7EFB40CE7D735F03F66A1F7F9E3273B30607B254EF47E17E2DBB3BBF9FFE7BCE4F67432797F816F3D6013E1CF38A74657C3020FBB97FD5503D1CE5051EE5B9D628AF4B71C2FDD9CE96F6AFCBE321A7D93E243E71477FAE257C8E0768200B13258649A0677DCDA26FE9381D1FBFEAE8D34EBFD451F3C8046600E4BD12174B675F27557DAFC8633F21BA7E4C760FF651F3DD6163587ED19C4717D2FC148A4F76158E
	51B5F71A063C0A07F0ADADE017E79D0F5C252F63513BC8CC6430365B9BC52D9EC3F62571BCE5410DEC5992F5B01AC7A83FE430B70BEEF688237CAC4F937F533BBC590A697A53D697DD67A1FE12ABFEAB622FB2AFD2707BF7F2D93E586DD9B7DF6D5657CD66EE4F3A59345B3BEE72F7FB564D2E5D5EF5D33A3BFB5D2CE9F351418E443F620A5F0978A116E499DF51E43736D56C1047A6A18B47261007F0ECDAC04F2E4D06F462435549698F63B3DCBCC2FCBC7FE1D7DFAE1353F58FFB7271FB69BA316DE12D0F5FCF
	71DD8FEBFD3C2896FDFCA0644DFE98FD7C16BD1E6DB8FC0F3E9DC76C71EC47D1FB3C5BB1E40FE7BB0E5F635D0EE1FB085E9BCCC613DDFE5B035963345545CE85E82765B6D7BB6D141FAF6BCE68459E9563194E0D63BD69FE96DD9FF60E576A7EFD0A6FBFDE2B7B8BC7D0773E10B7F7BC6E233F22112BC016CBBC2AA7D74D84790C7984CFF2F5523561FE9334F27D0A62FDA6E865CA2EC1397CA1EF5E8414EB64D9D51FBFC27ABC0BE12A69F9B492AB55BF026B30B1B5686B52A3686BEF517306C1108E8308FC84FD
	7D1828572E390F3076A4BD4A2E690FAA6DE372EF25734A5CC7356D5AC571C50FEA5B9556086DAA033C20C731DD058E75332C00777B8F9CAEFE338D710FC9EABDFC4B6987352B71CAB9474F2971BBB8BE2343554EF9B2BE3CC3ADCFBE27BF67F4255FA663B7F63A6273E57C2B9A7CF659DE5673E82F1447D087FBAE286B5C466B0C3A60DA46D6996F5725265F4AFD61530B246CCCA8B77FB10CF16BA82E9452D59CB712620C1016388CE7AE297514A760F87F346E7AF77F47643988DC039EF375FD6687DB289F04BE
	26750F820A1F7A1856BFA6F27F08003C22D014AB6732DA2E2DDC2ED1469A9D3982C23B0F27C3A0FF3206A69252B1G099335BE7E9C15B5ED22368D11941FB9D15B865108ED4805BC3F09580669AEED584E6DFB172046AB3ED69B2746AB7E30A45E25CF6423AE469875EC94AB37E771635549990F6B5968EFF43DA07FF1ED7BE2A83E78F1ED7BBA8D583EF2488BFE1C1F210DD77B63F66E0F65740CD66A93554919CF206F5DCDF17910AE653899E984D785E96393D8E6608AF519BBF819EBD6E2199267372C44B27B
	F35C5815D8269FAFD3DA25AEB30F17B9E795761B911CFFD7BA761B900E7BD5BA761BB0DE6621AC971BECC71BB4B66859A47C89E60719F01D77041ECD62CE5379F21856A61FD0FCFA1856A6C3CF21CD32A04FA70C1F1B4BD237D5F9CEFE1FC94E931B8D1D56F6891E45CF12B29AB2F1EFAF8678131EE4F265BE497678587A68FD74F959E4B734C1F8D6E9939B054C27886F1035486B8B74A3G42G2281921FC2D9C69FA0321043086C248D4AF26DE622BBFA44CD4E107D69DBD297B9D2596E20DB10B2FE061D6279
	119DFCE61BACA406248721893E3251CE5EB9A5718B5B3BACBE6DF69E1BFC5784646B77941E4DBB5F242671FF0A51CC06EB64D3E87FACFAB6E8AE2413A6A1EEF4BD2EA1E4CF42B13524C9604F296FD477C76A751ED97FDB406AE87A856A186F328653856D761D24787208C91EE22173B45E9EB7C97B7D20EBA8BEFC12767BC10BA91E24E3A02FEAB26A3C0B1E5198C7529C37699841C5C1BA0663FC0F21ED66CDC65B8457AA76F8C8F53F2F366F75F632CF6BE0ED5EFD8275D07EC75443709328071ABF229E669CD1
	5A9E2B3A3F6AC85F6B6136BE2DC37611232807C02E07D70E229EC2389EAE57A8ED9F283A7F2C266F753031CF6BE04F46B6BBF9FE13F160DBDE6F07B56A7E1BB825BAB9ED0A52E73327F86A3F8D745D2462A92C1FAE61783394EFD461D97F0D21F38E129E88F9F327209D1A68B9117ABFD5A75B7E0438D891ED531F63CEB692DCB824677E896DD5E0D4ECD4223A1F52587776FA23CF6BE0763A7A7C8259DEE44DCDBE5BFD915FF74A1FCAE3931ACE1A0A632B837337317CEBE95A49739F457C2DACBF1C267D27221E
	239D58D746F15C81896D9146F193681ED36A535549D9CF23BD362BEC30C7F5BF699730C7D41F56415A7C3491F5137FB46AA1077AEAB1246BB82E165259A05D0F63D272D007FE9C37E29D41C5C3FA9E47BD5305FACDF986757A12CA1753D5772D3A731E7FDD3D766F53BAD81B1F64FACDFF8675300EBF8332B84E59083AF1F25D3CE3D07471116A7E32216FF5635F27F5307E5A18605A5F7B53F47FE730BFBF12605A5FA72511F4884F1F17665A5F172DA069F048E7697215A4BD1727EF21694CBFE37AD51AAE6569
	34F412B6723411267DF9FA94CD0F7BB35FD7EBC05BC6F05C4B8DE85BE80E9BFB9AED1BBF8DED3B7034E24F94557D2D277A5E36FF6853BA647725B3F13ED68CEDF6CE4379D5DEBDB9CB4C4F1F1037298A8B8F59CD46FD0666F2BADBE36BF813A8FFB070CD86081A065FA1F02E43F757036E3EC318B6C37FBB84D1D59763E32749EBFA4FAA6F7686EDE8C8E0EB071F536793612B01FC5FE789EE7FBA7577F6080FB5A630FDD7165F6E12CF66E2A490D072C73A6493F9EFF061FF49A51F6803481EA360FB5DFFDA0BED
	1B7727E041BC363F476F63C648ED1A07EDFB6656383ADBAA963036B9CF6379187C3F603A68B7F47E6C8F69E00049FFC1FB2C7F6FEAC167FD911DC9A6AB7B8FCD78BEE894AF7BF536FE74DCF5F2AEC059F358BF37E511B13E41EA270B6CEC8E7E831F2356831D93A088A074B9363F3CB81C2E215617F663DF8932CE92E408A03C4F31EFA3538FA107ABEB872C7F25E761FC36AA9C7B648F9B894E89E99F0E3BE593765D60F06C277DDA49B71604672B13D381F2814A1F473C41B42F65F9765D91720D9272BD931637
	2C55D39FA3E5DCC9FFCA15694B652B406B5F64310E05D7D0BE7AA27AAC6A1859F0A81D03BAC472EDAB51B86CF93A7FF384FD4067F934753EE3781EF7547364FB53198709284C1EA30F21BDB3DFF0EF3B5A16848A00064067F2DE798B0ABDD959078EA9E50FBD01E55768141D6025EC33DB59E74A1432679E45321DBAE54F77D2364F8BDABFDCDC0BFE687F827A5C55A7508FA7F05C24136807D1AF202DDBAC245F643E88BE86D083E086688F607FA252F4D01A209759F7FA48B7F848771F4837EE4877E464B8222D
	9E2E0427273E115B8D2DD94EAB15E521F66072FCE6A1F5AD3982BFCC68A68FFD13689D4FFAAC64FEFAD1C47FE3BEBA1446D853C016489771393234896DB9DB27CD5E6CA9C4D4A7EFD0796BF2415EC85EE1ED315ACD6749D7D94CA5E6D333053C4DAAB099FC9AF10CD99C017D64070B99F0DDED527F164B81765E7BEA795B62227AFB6939974A63715967E62388561EE2796A731FDB63D8FD3F3BC83E83C7E22C1CE6D1BAAAF6504F40E5ED40B63C6512FF4CEC64792CBFCCBB2C7407BA8975E70B38723E56BFC269
	8F2C6E670CE4FCE8034ACD965E7F482B7E727D60F201539E90099F596CE213E8370B46CA53F9F206036979943535AF14BF0C6B59E6A47E50849AE6B4D753B8FCB26407C720BF2C4F4376A43E645E1E05DE5A13761236BD396B08DF3619AC263676B6AAA12B3B0C469A19C01F8B405A96FCC4E9674C230A0EF70BA8D31D0ECC5AE7258DE888F09D3F24FD1EA5D7A8BA3CADA1339B5F2BD45EBDDFAD6F9127F56FBBD9ABBC798E4BEFD83946DBFD74BD7555B27D68155D57B7F7E5777565242F6D263E7D2AF75AD7F3
	1D1CCF6F3E4EC96B3B6F9F25BFA836FB3F81ED672BE33BC5DEECB7424DF621BF8A82FFC7556DBDF7EF407806DFB11F3C3F3D16465FAF391DE3227889AFE977E71E66717EE4484B7EAB3EBBF8E7A59913FCA19D8490869089B08FA06DE5BC87A26E4D953C3CB7D8E535150B67C4336A0898EB5F4AF5D75ABE76EC1D3890E36D10076F9546DDDD6A719BD859AF4B7117FC9DB77556B8F2E56D5BF11C342F8B727C81A6G04834C8490A231FD2377E633769DB01A2492C9B2B43650AF19719761CDE20702A61BCE2CED
	97CF6B45F72911CC0E2CC87DF139C887DF81B8A300D315476CF9931D9778C4EA6DBC1C4D97A235F6DE4F7761C6C0DE52ABB856BF586DF7844C2FF8DAEBBDCEFFBB215FAB5A7ACFD13C4FAB5A7A7F46771E7DA1EF5EAB78AD0ACE3AEFC87AD57D2BE00BD7F1FEB3BF03BC93346FBB6430C9C9E161812931C5B46E1327A8729CE762E99C37273D0AF31CFF507213DE2BCE4EGA8G781A5A96F002722707E3FD794F64D3AB326F3D3E98FDAFFD541D90BB15462F7160FB952FB13D853C264CE14B2A7297313954F7D9
	B8170AF80D4D25E2601A98453E8B451EDFAD9B5D77C1AFEFC43E74A8E59FB4DF66E34F32B11B70D9D69E25BF562B6325FA20112218CE88FEE014F6EC0CE8A2F250DDCEFE6EEFCEA29953CF108D537D6403C68DD6A7277F75A512D7231B573C1D6455EA72587E6644D66D9EA8E9139F48939805BAD94F66AA76F61159A320C39DE795FC72AB5D6F99938815F5919E2544D92C0CBF1FD41711F21BB9BE4EC3990BDFE73CE92FABB6E5FE97F18C5F39ADFFDD5F3F18AFBDC977EF984F1B7C9D627E2FE3ECB133D649DF
	4B4B1C407313CF12FC668B5B797749663E4EFCE871F47071696C5CB723797D8924A9182E78CB05CC437C65551368AFAD533D470644DF3A26AB7E62BBDD6BAFEB77F1FF6167C19750EF3E309715700C504EE285077B648D49FC3F1DED2B4B780F1A95DABC3F546F9B8537CD762151963D6F1A8D83990327238E6DF58217F52EC82E2BF3D74BBAAFEEC21DCF6674B77D2C505F59C8467CCA72A002B0057CD00A644859FF60E85581B26033F1E55FA96223429BFC8CA9A3B1CB35610CBCBA122144EA27A388A0497798
	589730506E03A514A1758D14A1703462C3CE03A24FD1A3F9BF43A2F6E4708F9C151AE0A8A2BF141235ADAFBBE36BF69E6F54B4A9FC09F92B35FC87A16C4ADAEDB4994C5666555999401B37F5834AD413477D1B4BF421D911E9F80BD27693DDBD110915EB91F99FF8233BFEB35124740BB50D3CDFF0D9224F10FCF94FED2DF27F1D6A7E394C3EDF1F1D5D27F5B0FF8A2A74FC76767ECA7D33378FD56A1F61FF2C327B7785A6D5FAFE2F6119CA75F76F196F073412F55239E01714686A64FC00B2003AE86C8BF5D544
	6F48AF913947D2870CB476271D8A6B5FFB5CF3DB8F9E777E1BC5470E1367C903951E91ED24FC7ECE43F1FA7654EA23C806BBF11C6848EEEAEE1198290C2FBFCE7C4DACB6D1B4DB67799D0DB31C502E0151387613C84F5978C1BA0863FE20F421100E643826D338C69443F18FD03A62995549B5B39077684F34DEC87B4C40D86DB72794FF9E213A5F7C8B6CBD9C6C53BA64FD46A654CDGEF73C9D1E927D1F57F4EAF304F38C06C7BBAAE1F76B68F0A1921771E59E02FFC5AF777985FD3DE79344062FA8BFD5FE571
	1B5AF83F0362535E54467B82FFBFA69372863E09734AE5EDA45E188D69243F41FC93209420864086509F409FA088A08CA092A086A0F1A64CBB8132G0AGAAE662B3A575A7323667E9FC15B728680345EEB011C70BAC1F1DFF834F88E58D1B09E753ED9BF08E91BE93679043B750364F2ACE4E84A81A05F317119B310DD5007319057451949F8669C8021B05E53F3689472E45EFDD69BC64DD8B39E7657C3D954BA9FD0BFFFF261C3E4381E9BF002037D05F3F31925AB0C8C73D05BABB795326EEF4065F6AE4D83A
	ECA2BF5FEFA61F2246F75EFEDA6B298CF81AFF87E3BF7BEAE71521197B5EAB47543EA73CDD1D1C7AF6776B590C6FED17F7AE32002728C7FC9BDD6A2BG9E2397BEE6571FEB51B71CC09F7CB65A6F2EDA740D19EF235E1F23349933E1EE89D0B19BFD634593689BAD008B180D7429A7693B78100E81C8FA874BDEDA07B64DF8C74FB7E276B2BF78682C6287B3AC7CBB706FE079DF50EF927BC2BA90A0749DFC0E9EF01967C7GFE76BB5D6BC29EE7CF11F85EA147282C2C9BDD3E81A33C8BF6FC37A77678B94F450E
	40D354A3BE074BBBA09540E36C91DFD6231A4F89BCBEDE78D81BA734FA0EBB1EE8759EF7CC257DD304F8212A53A63FFF74ECAB5123352949A1727866853A8F49F0079D95D607093C1844626887CE3B6E4B2DA0E1199CE32F2A276B558627E63DFA9B0DC182200DC16F72F504531E575F2F22F1C78450C63F0B73410B27F0BE18B2C7FF9DDB3D3ECE660384BE177DB0F30EF6BE7874E97D357599346EDC20AF1A0332BE7FF3777BB2F3FE467E57B287651D417706FCBC480B3290398300A6E48E131760A62B64E56F
	1E06AEA77AB2D94CA60B381F7D32A577A729DE607797D5778BFE01B34DDF77E99D4C9F5735F9767B4DED5E7DFEC71BFE3CDD54669EEF173469475B075A5471B6431537915FEA06313C06537D40F1359CD7CD4BA4381FCCC62905636B28DC84DFA6128A915FC0656A20389A99572C42554AB8F39B693B50E4F0CD64BD5BC67729CCE6337C7B951446E4012E4C75F11E4AE83299D4F2DF6638DAEE5B1C8D3D0B810B3C726947006DDE793440E23DE5B42E891F230D81D7D1FC549CED8CB8E283FFC79A72AAE2F0AC9A
	3D31F7FBA2632F180F49D7330948919223155BC07121B1DA395F62F15DD4484BFD8F650E5E242E5F8F70016F75E49C7A376E77C6A7483C53F44A105F9925B1DD74FBEE6F0CD2FC4CFBDA39AF14235C73A02F7EFD7ECE3A1514496779AC2443F7522D29026A77A2684F373095A9B6A71BCB57A1435EE7F5B15C5FA9AE528597FF521DEE61C9F73A921D728E3A14A73F1FD45B3BBEF156AB1FFE1F3857AB1F3E0D8E51B8AF76FD2D0DAAA8BE71832D0DDE626FD427C01E74817A56AB3A6F95FB772D372F180F49B710
	45219FE8659EC27151EEF22FBC09F247C0DE55DC14BB35CEDD7FB840CF1D5B13BE71166E77D423E45E39BAE5B079865178B669C32D5CFE941F7A21D66EAFEDA8F78664757F103FF75A646E0706A6F7FF3DC7F2279BA33953C9F96EF41DF96EF457096EF4B7086EF4FB9B5D69CA9B55F4ACAEACA2D3DAB956BAF83A1B35572D5BDD5603CF37ABFCA7CF75040F4DB9461C42B9474C8FF17D7566F3821767218E255C7BFF6EC939729E41296E5656D95D7FED66F3240F7467C81E67CD2FDD90386F25EDD46E3FD15D5F
	3B216F6338A7FE01BACEEDD25A542C3A0F595877F5AF5A54776B047F5C645EB704EC77BE74391960EA40D7DABE62E73F4D3846A8FD445FB5ABD7F4942B3A3F2A7C97F8572CCF6BE0FB3D06F56499A80F71B4B4E678F46792850F21B13E8BFAC251C3356A7E35DF60BD4458DF200E6BCFAAED3AC5F51FF1326F6B7E36CF6B105FB72DF36FA339F56EFDA40E2D8FC2DF8867FD24494A4F3172BEB244266868B6557D9ADB5F6B2B689728637ED36AF8A477636A64520FFB92472CF2797D0A9A60B1FB61E363DD3659F5
	FDA77EA251A9DB5398E246B50DFEBAE5E1FC036BB05A730DFE9FAB3F01426ACA333A56357612D257C5AB569520D3D702173AC2D4F5B15F19F24A5D6F7EFC4A5D6F36B6A35D1371085B590CF40D71B866BFEE46B1BF74E30CB74AAE937965F8440A7931BC3FD5D07CF3124B6F92644602DDE3FBE2577BDD3E8DDF83BCE6AFFC2C8D2F1A5D5B7F06593D7DD32CBAFA322A693E2036FBD07AB5B4AE689DE13EA4445754423F5A93706FC48D7C5B1C67308BCBF9ECF518AEBEC41D5BD61870461D8971C262E1E181DB0C
	B9ACA41295154342FC3A60F2D8C8102CB6A769457132728844C3111B729CE705CBC222FBD642663CDC17BC8E103749D39E474ED7039B167E39E0056E31129017FBA5742028E56EC1E84975AF3D98F43AB4B5DE0887DD3508CCB973BB4890C955C376BD3E865EA5AE87A51E3CFD7B1BD3DF2DF6A4888B8E8BAB48D965CA514EFEEE51C8BEE3D7AD5AC9698705C5B6F2E8152CFA02859C74B25FA1F51A45F2A13569C7729B5F8EC9B4729FD4F0C8426774E74F3634CBA67316B20323C5A28BEC3B4A05C48B797985E1
	994BA63F0A36C57E65B4AAE7DCC9B1EDA61D6B003C4B293C24149CDE4A7271CB57FE73DD743884A17E20700959EAB09EB4B4CAD67BE1E11154C2FE294FEAB6BAEDFBD9C1C99D4495C937CE0462D67166134666D44113048B5D6A7C2D4F1219CB8E02391DF6E18B25A40F1A9CCEE15C5FE2A03FB1A95A8F8398204ACC1EF755D7523A278FFDD197AF44490DA4667B42E91318423803539F02BB88D2CBFFFD670FF73CDC94B39BD88E8A73692FA9C145A98A95BB8BFDF550CDDFA67BC58DA2F25908FA28E32C120485
	CD06B6133993EE58F1970EE70BFEB479F53120B0AC126C860B037C1498C81321D185E67196658C7DE36ECD777C6384ED1142AA89DFB35B816B16E6515A3625242949E491F981E0C8A87ECBDEBC21495150ACF38E797C3B677F53G0ED7AAA4346566527FF9747FD672BF0FE272A8A6EFABD8B3C66876CF1B6FF412B6E7BA3B69DA4BF93768D9A71E6F061D5FBD963AF606CBCDABF4D2044B85BC5028E5CB140479646CE1A1581A9EB2AB64E4AEFF7AD8798C68064B6A730231839ABD1EB91C70EFF9FD6F5F4AF9C1
	360FDA61A41DEB71FF2A13337E435768BAB68B1E77D3AB5B8CE633E4B03716D80CE4EFF5DF27A4AA67F40EBBC9798E2411B36535EFA7117B0C0A677F81D0CB8788D3C893E88BABGG6810GGD0CB818294G94G88G88G730171B4D3C893E88BABGG6810GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGC5ABGGGG
**end of data**/
}
}