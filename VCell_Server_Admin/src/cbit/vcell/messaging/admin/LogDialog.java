package cbit.vcell.messaging.admin;

/**
 * Insert the type's description here.
 * Creation date: (12/3/2003 11:21:06 AM)
 * @author: Fei Gao
 */
public class LogDialog extends javax.swing.JDialog {
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JPanel ivjJDialogContentPane = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private javax.swing.JTextArea ivjLogTextArea = null;
	private javax.swing.JButton ivjCloseButton = null;

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == LogDialog.this.getCloseButton()) 
				connEtoC1(e);
		};
	};
/**
 * LogDialog constructor comment.
 */
public LogDialog() {
	super();
	initialize();
}
/**
 * LogDialog constructor comment.
 * @param owner java.awt.Dialog
 */
public LogDialog(java.awt.Dialog owner) {
	super(owner);
}
/**
 * LogDialog constructor comment.
 * @param owner java.awt.Dialog
 * @param title java.lang.String
 */
public LogDialog(java.awt.Dialog owner, String title) {
	super(owner, title);
}
/**
 * LogDialog constructor comment.
 * @param owner java.awt.Dialog
 * @param title java.lang.String
 * @param modal boolean
 */
public LogDialog(java.awt.Dialog owner, String title, boolean modal) {
	super(owner, title, modal);
}
/**
 * LogDialog constructor comment.
 * @param owner java.awt.Dialog
 * @param modal boolean
 */
public LogDialog(java.awt.Dialog owner, boolean modal) {
	super(owner, modal);
}
/**
 * LogDialog constructor comment.
 * @param owner java.awt.Frame
 */
public LogDialog(java.awt.Frame owner) {
	super(owner);
	initialize();
}
/**
 * LogDialog constructor comment.
 * @param owner java.awt.Frame
 * @param title java.lang.String
 */
public LogDialog(java.awt.Frame owner, String title) {
	super(owner, title);
	initialize();
}
/**
 * LogDialog constructor comment.
 * @param owner java.awt.Frame
 * @param title java.lang.String
 * @param modal boolean
 */
public LogDialog(java.awt.Frame owner, String title, boolean modal) {
	super(owner, title, modal);
}
/**
 * LogDialog constructor comment.
 * @param owner java.awt.Frame
 * @param modal boolean
 */
public LogDialog(java.awt.Frame owner, boolean modal) {
	super(owner, modal);
}
/**
 * Comment
 */
public void closeButton_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	dispose();
	return;
}
/**
 * connEtoC1:  (JButton1.action.actionPerformed(java.awt.event.ActionEvent) --> LogDialog.jButton1_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.closeButton_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the JButton1 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCloseButton() {
	if (ivjCloseButton == null) {
		try {
			ivjCloseButton = new javax.swing.JButton();
			ivjCloseButton.setName("CloseButton");
			ivjCloseButton.setText("Close");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCloseButton;
}
/**
 * Return the JDialogContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJDialogContentPane() {
	if (ivjJDialogContentPane == null) {
		try {
			ivjJDialogContentPane = new javax.swing.JPanel();
			ivjJDialogContentPane.setName("JDialogContentPane");
			ivjJDialogContentPane.setLayout(new java.awt.BorderLayout());
			getJDialogContentPane().add(getJScrollPane1(), "Center");
			getJDialogContentPane().add(getJPanel1(), "South");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJDialogContentPane;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.FlowLayout());
			getJPanel1().add(getCloseButton(), getCloseButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
			ivjJScrollPane1.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			getJScrollPane1().setViewportView(getLogTextArea());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}
/**
 * Return the LogTextArea property value.
 * @return javax.swing.JTextArea
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextArea getLogTextArea() {
	if (ivjLogTextArea == null) {
		try {
			ivjLogTextArea = new javax.swing.JTextArea();
			ivjLogTextArea.setName("LogTextArea");
			ivjLogTextArea.setLineWrap(true);
			ivjLogTextArea.setWrapStyleWord(true);
			ivjLogTextArea.setBounds(0, 0, 160, 120);
			ivjLogTextArea.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLogTextArea;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getCloseButton().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("LogDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(679, 484);
		setModal(true);
		setTitle("");
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		LogDialog aLogDialog;
		aLogDialog = new LogDialog();
		aLogDialog.setModal(true);
		aLogDialog.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aLogDialog.show();
		java.awt.Insets insets = aLogDialog.getInsets();
		aLogDialog.setSize(aLogDialog.getWidth() + insets.left + insets.right, aLogDialog.getHeight() + insets.top + insets.bottom);
		aLogDialog.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JDialog");
		exception.printStackTrace(System.out);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (12/3/2003 11:25:33 AM)
 * @param log java.lang.String
 */
public void setFile(java.io.File file) throws java.io.IOException {
	java.io.FileReader reader = new java.io.FileReader(file);
	char[] content = new char[10000];
	String out = "";
	getLogTextArea().setText(null);	
	while (true) {
		int n = reader.read(content, 0, 10000);
		if (n == -1) {
			break;
		} else if (n > 0) {
			out = new String(content, 0, n);
			getLogTextArea().append(out);
		}
	}
	reader.close();
}
/**
 * Insert the method's description here.
 * Creation date: (12/3/2003 11:25:33 AM)
 * @param log java.lang.String
 */
public void setText(String log) {
	getLogTextArea().setText(null);
	getLogTextArea().setText(log);
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G760171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DA8BF0D467F516C1BC0C059158D8820B998513D42995D74444E5B25421991C62DAC9688437542334EE8657444529DC130E1362713FFA7008A008C0096248096CE087ECAC73D026C4D1BAFA3A1259A0C55A2E96A4A1DD6D5E5D3D525D3D6B3BF7591504C44F799FF72FD63B12F1C1B3C7777E67FF1F731D731F7F5CA547FF19DBEEABB9CE082D1C703F7F3291627900102F3DE97B2260E5861D95447277
	A650D1227A4A60198BF555EB1C9515647BD78EC0F983360572CF617D9879611546DAF8C9B1CF9554D5973AAAE71F6731C1B14FFEDA7EED6FA1F87E98E8A37070D926617CFF6C2D627CA24E97E4AB819EED2376D6F3DEBB140700320172B556FE8BBC8F52199754DF646D7A176711BDFF2D179C46F1ACE38ABA99E2FD5B7933067C50D69C4239D652F5E21FB4A8EF84424D1712FFF97BDDF8B6F40D7A7E5BBD2C9835575D322A568664F0D872A9C1DF2D6489A8417AFA3B66EBD5A4D5739122FE0C63FD3B77G6DCF
	C89D14DF213C677DB8C7813CEF85FA5664BF22A03FC1F7D6B800D4DD6C6B773FEE606BF6CD7CB95969FB626011947BCA5759FE7275783E32CF8F177E0C6A605F07D0563B206ED058D9D183548A6481CA877AB9557D2B03384F26E123C58B8434E0D3A8542CFA74BFE89ED905777AFA28613CEE592D699EC218FE9F6CBD13E4BD33916B7779DB6E47E412F7C168BA3F7B91D2746883A57B134824A8EF22A4A74CE431A19C17891B7BBBA9675E9E1E0E4569F377926B5C643B677717A7193B7AEF4F6F5F454759EB19
	7B0C013A6E233A2E06F79B4787634B149F327099AEDF241841F29A546DB484B6DCBF96EB31172DA5156732124AA17B2B99A56D91360621C862DA5E9A4131B3A209EBB9C379B9114435ECD044DA72212E723A3302616B35E134D3834A19C0F9C01B011E855A8BD49995987BF06803CF0831AEC9B71AA30A6A11F5427A3EB6F4821EF24C50250EE0581002EE59A9690AB42C4AE1425B9C10D08643537A9D16907BEE1863FF64202CCB062285E1F4A9A09B329EE6EDCEC8C7310DAE53DA078256EDC8019091637EC2BA
	86CFD58A9B7F9B72C8069CEF416A5F11D0A757A5A70C888340BB134B998F4A6BAC6C3F9D48E54A61B3F43CCB329E14D5F49D5AE8A464401D103CA84A798754F728701E9E95B2BEA5A3EFB7144BE2E21C9D52CFAC6334AAEEDC3E240F899B13947445D5B101196F3984E6DA8FFF011CF9FAE5D24CE482FE4F46381F0CA55A4EA89D9357454AAF7BDD37E8471F042A783CEC0EC34A1D182314BF19FC9F70D27B03F9B30072CD999F9B2EE118ED164232C0E9278EG13BDF10933F51E9AA96372E46573343CA5A6E475
	E53A0FE47E7BF6901B63DBF40E52BBB4871349C1B71EC372F5B9E8344AA1B9680117B02F2BF4A356381DFAB5334F894A8F01DD3700A105CDFE359BEDCFB28CDD990E98F20FEC98F02C466BCF5239421161D05CA508395EF3237F5522E057E67B33EE348937968C4AD4B9E697DEFF1E5A242C4A81D8F40B96899A0CFF51033A9A154738CFE8706CA3E853EA847D8B0B858AA48CF8C23A92G15230BA20DE3E82F152EAA0B0CF6033EB126B98EF52746046DC5FFA5EC6F647867496641D0C93233A37B334BCA960FB1
	6C670C45ED0F2D69FDB9795AAFD05F4079E136564CDE1C579216F01CFF5307E3EC023137816D9A93B87FB3996B05AF61GEF51D415095114EF0E978340307CF1C486970CCE6B12A933073CBFC928F3F279317A073DA8BF55626FB60F237C5CA3A24EA3D02E823AB84EE4989BE7B2E0FB6A7E9857C8E33191693A942B8DC781AB75759F19FBE43157388B65017BBFB4A1E22C777BF05F2DD06E87B2A604DE7E663008316E9F4DA3C55FBD37BFD56C18B14156D2B091578B795726FDCC2EBFD3F04EE228A3B704CC5F
	71D97DFCD3B82C3995FA44F0F9BC6D336A0D711E717D881EDEC58F9B9DE0D8B1A13BE7FD38DEBC03B81B1F4999742CC6799C07F96DC0BBEFA07FD55FF14B5A5301178F348D28140E777248F934BB2A5CDA766812F52F2687E44FA914EE2D94B5EA290D57B6516AB6FCBFADF4F178C4BD5A192A05656608E1E841412604C16C29C7795DE9270829569EEB64EBACFCE4ADE938F92DA4D90C3B78083F644CA4133BE3B2AE7F4D4B07CB3783B15FF75305F1DD6EE47298EE8367EF654FA2F832F867B3949B451309F150
	4314CF269263208BFDA28E2A04BAE3CA1C51F9A36887F6C0F98F50211B4E0A13C02DC01E1B8293FE7F85B2C78C54910450A4A829BD531C1E08C514D26627F879AD25DC78A9A24E0095A30971ED5A4D69B249C9A833FE39B37A7DA2213CB9219F4342111E94F6491081F54CCFFEA0DB7D648E98EBAFD0CD1A33228E0859EE1D7FG9F571EA6ECF472C32B0DEEBAB2D9D21142C65353587A5625D9B022BA76B37DF42B68E7F6C29D398B7C8CD09D108B48G4A3ECB68A8DF797DDCBA22B0F6E8AD40EB87FF5612F85E
	C0FF964BBDC0FD51C6983B880871DE243CE2A89F18A7F86AD5641D01F223497B9265B9206C1FA7E208BF6943F34AB04B6BE99965486F5BFD37BBD642392663247B364FE10DD7188E560F240EB1B60EA40FB19E9FC99EE3EC99B94A78B00675E6A16A8BC7E60FC1360FA40BC15E206BFE724491BAF6B8AC07A9A8DAA5C362F54F9B7FC91244A21761724177FC0CBCC9570CED5A8C2D651CE9D3AF1F2ECAEED3DD921CA64C1E3E5317E8CF98175F0F7819A76C49A78BFB5ABCCF1C056DB486F8854A1573A1C619EFE2
	471F6CDE5CB81F7B5D79B37DAA332B3F8F60D963077AF4209C208DC05B678BFB9A991D53673545E671F97DEAEAAC385564D8D0D4BC4743DAC4F74B097A8E29D5E6DD5CF2BB8CB9002AE1ED46E8FFC352FD728C3C24517E2CAED57F3B55D418E2FA7F028B3161113DD2C4853842B15A996257D374836928272DAE213BBD73C5BEEAFD94FD1F97AE30B0DCCFC8F613328558366C0A40C2887A26832D835A8234B3DD1C79732F6298814DA329669C2B2F0ABC15FD01E8D7C85B990A21A2CE7B97E01E6FAF8CE22E7D72
	A50C73F8548582B028DD85E591FFED6B976B4EDDA0B037669AE2EE87140B018EAC9418D365C44C55AC0C632CEE61CC4C3133F99345F07B4244B37BEB146FDA18F8E6DF7609B35B8FF5058B050F6D22674D59C560F79719FE57AF7C33FD114070BF85D2E3F0D7A0B9863F97C86E0F7684E677C7FB8333E3679FE91CE3F18B353DCA5023C5C1951899B142352D9DBDDD1DBDED031D1787DB6C70424E515C28B5CFFA71C773125EC1A80696B1392773E746EB2BECCC376F523CB1765984F5FB96A16F31AB56D8935778
	A47C2BC55C527ADD536AF1EF90C6DA6ADF3FEA2D4735F616DB6B6D536A4BAD7D593E1EFADB4487FB1FAAA06A1752D366FF9B9673DC98FF56FCE3152DBF2BEB9F136B7A2B74EC55A3B29B771BFDD6F9D52ED6CBECA9464D66632DDB1C18AFF93ABF915FBB9647B13DFBF1AAFC9F9D2431675D8C4765A63F1A720FDB788C5F8FDD937700D3D017F1374072FC6A7F0B21DC36C470DE758AFC1FDAA26C702B747B0043AC9752B25E45D85961CBF566E31F7F6F794F6688241C63F664B3180EFDFE2AE3B0D666571E380E
	E2D61720DC8A7DD53374E7E71D9E255FCD207D36A542B714C45E0327D39A61A7DB1BC7B1B41D9EED406C52B5706C469863529BB15F6F52AB1FAE877E177B855EB7FC79CF4946052DA96361E22E1B4AFB58F3E361AADBFCAFC5B15CEFA35475832581E5836583ED39C76C2DA302EB44939A165FE498125BCFEF2B6260F6AAF2B44E468309670447F025EC0CE51137D34987C678887CD86770889C228E896F708C233B7B85EEF75CA3F0BBFACD60F66FBD8217BF9DC4DECD063362E206603DC5F9768CF667655F9B2E
	4D9633E25FCFA27F1A946D388D4DBAC779AD60B4B5FECB87B0AF25CAE3DA84CE64228C14CB3EF92F8AC1F9B1D08150963E7F0BCB314DF1DF4DACF31EDC4A764566780A8B7154923F5BF35CED9D307A591A77BA137A59D78646CB5278F86B16467DE11D236EA043C3B40ABC73FCE3A64131B295C5DF2F849583228BE51C86C4BD50B068E3387A6384566F00F177GD55D8BF7F82046FBCDDB0C3D45701A842BED9E1FAC4EC8B15FF33154677A6E585C5F9C3E9F43FC4D3086E28A6078027F9FB144042105A8137148
	984AD1D7FCFE03B5657CFDE3B45FAFFBA91B697475812153FE581B811483D4F0AF3BB3EF3D975B4C3BB61B3FE23A5C6640F361239E372E29AA86E967987F37BEDC9F3BCD1C6377F34720F53C4AE5EC2E86F8F68131F3E63BAC3E137A01173BCC4425974ECF4B81E05E273E7EC3D50B5AB9D4F9ECD86D9571430EE5A2B67C08665EABB361BC82EA4C94777E58BB82EF791FDBCB36BD17BCB7772CE332441549F0F6A3B30E377C534325EC2F67FC38469ED8061F889F9A154558558FBFC42AFF59D8F2B4495854E772
	B1F7DA460E7B50F7A7D1E6D54B1D95F5C0AE2090D0BAD04EF201493471D3A475794084C4F129CB0A4869DE19C80D4B210939F129CC505CA26049B19662F71260847A8E4D6B8D4BA67E439315A62FA35C25059534B8266B6681216B82584B2E65C2577FDC7B73193AEE56B0E74C354DF43DE4C0683AE6055075C6BA268B4AA12045AB042EC7C62D7AC099270A61F2D7706F7FAB266B032D4D577686C9FAEF0EDB0009458CFACE209D145DA7567739A17AAD9E4A8EA075BEF1FEBCB3631EB29731FE3BBEE53FB73D37
	5A0F45070FD3DBCA3F0F4507B6137FD7141FE961B39DF7F9050EF3200E5CAFF2195F18C2DCFB201C86148DD4G348DE8777D825787EE1CA5F35C6B9DDA488EA0D6AD579CEEB720B778DB692C2886EA84F28129C069C059C085AB45BC1DB7E6339F863CC47B39B0195AFE6AA767361F164964FE3DE3F226DF3FBC195C2FBBA62DFE1D6935FD6053614179A97BAD3B65FE7CB7G74BED138B291C73FE177781509B8FA5C7495BB212E7D81012395B644D1BE1437826D86AA4B02F39B68EC16506F731397E651EF3726
	516C82A69AC03FD6D573BDAE9F94FBEC05B1DDD953E3B4B5AB559D6BF589571C161518C3B8C97919D909B9047CA111C348053A32EC619B36F809A96F2FDB5E1D5EBB715DFA3AFE35BBBA87534F5FCD253625FF18CA1E7B58B915BC777142546C3956FF1BCA7D3D7787D3B33F777E0624DEDB83195B4E5BC8F2BB3FC4E65AF997C9EE67CEE235F3466B63636AE6421771A502679A0B5F7FA085A59F5D8B7F3D4035B8F6FEE7F95FB2F067F1746DBBBA875B7B0336543ADAEB1BDBD78F5B126BEA3DED262E9E33A557
	55A61BD5D76CDE19C763GBF58F3C63638EB5A0610178B652DA62FEFC85CBF0BCC5B2F11B01FF0E015A83FCB4BB5E6790BC337D32EB84FCC5DBDF5DB67C83CFF72BB61A07EC6743A2C9B0ADBD2D9B055AC69DD1A2A3847F8AE7999AA4777019AD709DCF255901E83FECDD74651FF4F68A97250F5D436CDC0E92B441DD59F2A19E51D1BD7D96F2C79A13C335AB51F83B054244B92E15F417BA4EB6EF0BB74413C40DEF3FDAF8D62B797EBAE5592A956BA5B3A9D9DADCD76411E166ECE3B3D3929FB30495E5BF42547
	1C77525005D97A37F7F6F7DC6D3C6CC8B6826B3FEC88E37296993F790A98766B1353626BF88CEB6E0D452FABA471BB074A5582EFD9921E056D2B63B869373C0760BDFD75F48CB1ECBFC2474A063A7C55826F83EE64ED06F211494BF38B9BA8B6F95F72A06F7803F0FFFBD0487589BA1E8A67F52FAE05180E1B5D62DBC303594EF023BF0CC21B9EE3CC15FB69CFCBB9A6161A6D6D501EFD67780A5B3C9783AF841489D4G344D9C73858F3B7BA8863A8FB616CD96F711E2335D953748773272BA334C647B1CDBFC47
	A84B91396EB7BC09396E1708B5D75D69C94CF55B26555F65C94CF5B7592C750FFA92F35D22BF37A799F9DEC98D473F773F603646F88D30562E1C5973D95C47D1B9F920AD2E017176D15E8D603DC4849E25F7B06E61B919DE45E378993FBAF6B84EEF175157C2197D167C57DE747579AF12F26099241CE613785D7B74CDEBDE7D15856E145FA1065630FD98EB62F7BD96D73A69B71A8260972E91F16423BE74BD29720CBD81C9D541830DB685BD18F3EC9EB364F85C61776378E15106D732BA4DFF105B386873FFD0
	CB878843B41D4F8591GG0CAFGGD0CB818294G94G88G88G760171B443B41D4F8591GG0CAFGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGBF91GGGG
**end of data**/
}
}
