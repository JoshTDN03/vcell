package cbit.vcell.messaging.admin;

/**
 * Insert the type's description here.
 * Creation date: (8/22/2003 4:11:19 PM)
 * @author: Fei Gao
 */
public class GatherInfoDialog extends javax.swing.JDialog {
	private javax.swing.JPanel ivjJDialogContentPane = null;
	private javax.swing.JLabel ivjJLabel16 = null;
	private javax.swing.JLabel ivjJLabel18 = null;
	private javax.swing.JPanel ivjJPanel18 = null;
	private javax.swing.JPanel ivjJPanel19 = null;
	private javax.swing.JPanel ivjJPanel20 = null;
	private java.awt.FlowLayout ivjJPanel20FlowLayout = null;
	private javax.swing.JPanel ivjJPanel21 = null;
	private javax.swing.JProgressBar ivjProgressBar = null;
	public int max;
/**
 * GatherInfoDialog constructor comment.
 */
public GatherInfoDialog() {
	super();
	initialize();
}
/**
 * GatherInfoDialog constructor comment.
 * @param owner java.awt.Dialog
 */
public GatherInfoDialog(java.awt.Dialog owner) {
	super(owner);
	initialize();
}
/**
 * GatherInfoDialog constructor comment.
 * @param owner java.awt.Dialog
 * @param title java.lang.String
 */
public GatherInfoDialog(java.awt.Dialog owner, String title) {
	super(owner, title);
}
/**
 * GatherInfoDialog constructor comment.
 * @param owner java.awt.Dialog
 * @param title java.lang.String
 * @param modal boolean
 */
public GatherInfoDialog(java.awt.Dialog owner, String title, boolean modal) {
	super(owner, title, modal);
}
/**
 * GatherInfoDialog constructor comment.
 * @param owner java.awt.Dialog
 * @param modal boolean
 */
public GatherInfoDialog(java.awt.Dialog owner, boolean modal) {
	super(owner, modal);
}
/**
 * GatherInfoDialog constructor comment.
 * @param owner java.awt.Frame
 */
public GatherInfoDialog(java.awt.Frame owner, int max0) {
	super(owner);
	max = max0;
	initialize();
}
/**
 * GatherInfoDialog constructor comment.
 * @param owner java.awt.Frame
 * @param title java.lang.String
 */
public GatherInfoDialog(java.awt.Frame owner, String title) {
	super(owner, title);
}
/**
 * GatherInfoDialog constructor comment.
 * @param owner java.awt.Frame
 * @param title java.lang.String
 * @param modal boolean
 */
public GatherInfoDialog(java.awt.Frame owner, String title, boolean modal) {
	super(owner, title, modal);
}
/**
 * GatherInfoDialog constructor comment.
 * @param owner java.awt.Frame
 * @param modal boolean
 */
public GatherInfoDialog(java.awt.Frame owner, boolean modal) {
	super(owner, modal);
}
/**
 * connEtoC1:  (GatherInfoDialog.initialize() --> GatherInfoDialog.gatherInfoDialog_Initialize()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.gatherInfoDialog_Initialize();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void gatherInfoDialog_Initialize() {
	getProgressBar().setMaximum(max);
	return;
}
/**
 * Return the JDialogContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJDialogContentPane() {
	if (ivjJDialogContentPane == null) {
		try {
			ivjJDialogContentPane = new javax.swing.JPanel();
			ivjJDialogContentPane.setName("JDialogContentPane");
			ivjJDialogContentPane.setLayout(new javax.swing.BoxLayout(getJDialogContentPane(), javax.swing.BoxLayout.X_AXIS));
			getJDialogContentPane().add(getJPanel18(), getJPanel18().getName());
			getJDialogContentPane().add(getJPanel19(), getJPanel19().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJDialogContentPane;
}
/**
 * Return the JLabel16 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel16() {
	if (ivjJLabel16 == null) {
		try {
			ivjJLabel16 = new javax.swing.JLabel();
			ivjJLabel16.setName("JLabel16");
			ivjJLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/planet.gif")));
			ivjJLabel16.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel16;
}
/**
 * Return the JLabel18 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel18() {
	if (ivjJLabel18 == null) {
		try {
			ivjJLabel18 = new javax.swing.JLabel();
			ivjJLabel18.setName("JLabel18");
			ivjJLabel18.setText("Please wait while we gather information for you");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel18;
}
/**
 * Return the JPanel18 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel18() {
	if (ivjJPanel18 == null) {
		try {
			ivjJPanel18 = new javax.swing.JPanel();
			ivjJPanel18.setName("JPanel18");
			ivjJPanel18.setLayout(new java.awt.FlowLayout());
			getJPanel18().add(getJLabel16(), getJLabel16().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel18;
}
/**
 * Return the JPanel19 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel19() {
	if (ivjJPanel19 == null) {
		try {
			ivjJPanel19 = new javax.swing.JPanel();
			ivjJPanel19.setName("JPanel19");
			ivjJPanel19.setLayout(new java.awt.BorderLayout());
			getJPanel19().add(getJPanel20(), "North");
			getJPanel19().add(getJPanel21(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel19;
}
/**
 * Return the JPanel20 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel20() {
	if (ivjJPanel20 == null) {
		try {
			ivjJPanel20 = new javax.swing.JPanel();
			ivjJPanel20.setName("JPanel20");
			ivjJPanel20.setLayout(getJPanel20FlowLayout());
			getJPanel20().add(getJLabel18(), getJLabel18().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel20;
}
/**
 * Return the JPanel20FlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getJPanel20FlowLayout() {
	java.awt.FlowLayout ivjJPanel20FlowLayout = null;
	try {
		/* Create part */
		ivjJPanel20FlowLayout = new java.awt.FlowLayout();
		ivjJPanel20FlowLayout.setAlignment(java.awt.FlowLayout.LEFT);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjJPanel20FlowLayout;
}
/**
 * Return the JPanel21 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel21() {
	if (ivjJPanel21 == null) {
		try {
			ivjJPanel21 = new javax.swing.JPanel();
			ivjJPanel21.setName("JPanel21");
			ivjJPanel21.setLayout(new java.awt.BorderLayout());
			getJPanel21().add(getProgressBar(), "North");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel21;
}
/**
 * Return the ProgressBar property value.
 * @return javax.swing.JProgressBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JProgressBar getProgressBar() {
	if (ivjProgressBar == null) {
		try {
			ivjProgressBar = new javax.swing.JProgressBar();
			ivjProgressBar.setName("ProgressBar");
			ivjProgressBar.setMaximum(100);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjProgressBar;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("GatherInfoDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setTitle("Gather Info");
		setSize(400, 84);
		setModal(true);
		setResizable(false);
		setContentPane(getJDialogContentPane());
		initConnections();
		connEtoC1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}	
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		GatherInfoDialog aGatherInfoDialog;
		aGatherInfoDialog = new GatherInfoDialog();
		aGatherInfoDialog.setModal(true);
		aGatherInfoDialog.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aGatherInfoDialog.show();
		java.awt.Insets insets = aGatherInfoDialog.getInsets();
		aGatherInfoDialog.setSize(aGatherInfoDialog.getWidth() + insets.left + insets.right, aGatherInfoDialog.getHeight() + insets.top + insets.bottom);
		aGatherInfoDialog.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JDialog");
		exception.printStackTrace(System.out);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (8/22/2003 4:15:20 PM)
 * @param value int
 */
public void setValue(int value) {
	getProgressBar().setValue(value);
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G5C0171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DB8DF494D516E6141F8CC60892B5B2C183848C8EFA585D4C18F5B84A6E60B12E2C0BF350E5F72203C7F499B763E6464CB9D907DDDFF7BA926C00A0F1B66B30E38FE61C6044A6884709B17C6487CC34A1915A96B58A15F4253B5255DD1D2A6A248389597B5E2BD7DD29D4A792A0675CD37D6E7B39775DF75F3D5FFBD5C115EFE615596C1588594A107677979BC22BBEC4E8C153269FB2DEDA4467C4063F
	BFG6DC42B3FF140B38B6A624BFC4E9D68CBFBB914F321DC1563F37E8F7C5E051EBBF166837811C4CE9D5465D4753BA716F3B14864ECA165BAD4814F6DC0F94043CF0704653721AA0DDF207199596C88EDA4EDFA50EE0D578665F3C0D9C03992ED3F861EDB0964998D75DA3B2E9BF2D071BF4876EDF89C43180CEA2334EF2776F42197EDA5D1ACAB1568097B24C0F995901EFCA97AD85E8F4F464ED060F0CF37203A87FAF8D1F407F9C56182C2A460667CE1A1525070912786F939BD52AB358A1CA885200F5A0F47
	DD074A49B8B08614110CF936981615876535C01BF4FEBE6137426FAEA0D5E673BB7427C6CD7FB3976EC19B838FECFDB5497CD2E5BA2FDCB9B1BF57BB5D257FCB5662BE815B3C886AAA951F33864883A48225827D0E78408341F76059542D36C8613094E90AC61BC53FFCC27273A27CEEE8009A0DF70A6F11E4BFC2F41DEFC435967ACCC434DF56A57723B649B94056FC79293BD1415F5CEC5FE2E113021C8B76EC055AE225123089157DAFC9E597A8E3FDF22C6C4F11D1B67A79FBDB4AACE46FFE7C3DADC55AB88E
	B5A17B200A57BAC6563A9AFE5BB47F207CD1420F9B7854BF3790BEAE27C0DD214AFC634CF6260B4731886D58FF0B259DB27EBE555E9923BA84E3E6DD9A87705869B133AE4789BFBBE6566591DD17DC282B9A70B929FFBD98427BF5984A99C0AB007201B681B986215DA073316D423EEF69E31D1C2CB64784514F4B0876FDD078ADBC7938AAF36D91C565A2BD3C0F13852EDB64952435D9ABE09BF40F697798717D9E1071919F61E5CE9524880C4E05F91517955A66C9E1A7EEA3732456AB40AED739F09431F11F95
	F641D364947533281FD379C48BDA7F3C0057E400734108B0G7C26F6A996313D6AE17E1DC067F4BB88FDF83CCFF8B9420B8D8D9EC98A4522DEBC9334E2905B3908448E95FE278EB29B9705B12F984A95F1B6CED65FEB06F1DA059E2CBEA78F31BDF6A106E332AB4EFC6679B34CE7DA375D05EA9F3B4952E75240FF9B6354D73CF1735E19C14644FA5172365819CB5C475BB51D3EFD2CF8FBCAB2CA3FE5BBEA5FEFA43CD64320D786D01EEE631F7639284FB6F38A4F3C34C38687637D890BD3BD1B879C1ABDE959C3
	4AEB634CD66B48BC2C627715A0AA6397C446371D7B2592354923A11C077881BE223672D1BE62079F0AD637BE04FDCD5B273D125E67C9420F423EEE010D24687C0DA13C77B8D515056E184A1F66D59552EB223E1048D2E25D51C4C8E032DE886178AB8D423E565B1704701E6811A2911EAC0E5EC52BFF116CC9DE644320F40B940B28140F42F82DC27C1096939C6117915E53E28C47970A89D6F09878C4E5A18CCB0EC394728C1198ED2BB2582884569BE39B97549D9CE2FBEF70AD36772A4FAFC32B4EC66DD639A3
	E349DCFB7A905D9BB9C3093DC7F57AF558DA775F10582071952A6BB575BB60E906A75457EF0962F172E17C822062A1666B0391DC4F62096664AD12A8D2D36AB676CBF8EC056F0F719006F1607AC437DBC8FA4DD46753ECC86B95895BD0B4443C60F9EC4311810679AA4ED37BD5EB4F4673548EF4DE277A310E841775F183DC5C2D8C023FB4B4FCEC42DF7DB6EC93ACAB77BC43D9AF9D4273AE043263024F397B82DB1BC737B11C159E4AC185BF5F3FA5990EBCF8016AF266C2E2EDEA0B1ADE26F6FD2A9F4B4C003A
	1C8B4C264FCB46D85F24A8D20FC0520CE60F85D1635AD15E2268AB706C95E4C5ED074D95E7364B09E2FDF19E5258DADEDECA72B5364FCA10DB8CD4CA5AEF9B44FCA1A228E09B61BCDF33175AF0DE776F6199B0794659F6C3C39F43BC0BF69D55663E666EC528F1749B3B9586CDF9B5E82F9D56F246F042B6EDB7F617F6815158B4E04338AB8B6AF30747477FFC0DD720BD0B60C97108F2984F43B1E246A9A304DFB9E246A9E50799CE29063A149116C3238A5E2705D0AE3F887B93289E688CD07CA2DB2F3A7E83E8
	920C529E816890614453E30292438A7D25B40EE865677A4BD89CC1ACC6AF9FB0634F740BE36D3142D4267D6E9D574FEDAA2FB3752373FEC445FB2B906A4AC7E15EC00DC06700060132C6595CD57950E4F3BF06033ED7EA81DE9B6C6196F31C453A938CF3BD59FF2BE06C0DC014778C6115C039E29A63ADA36751AAA857693C450D186705F2D06795925EB014532731FCBAF498476C9C3DFCADA9676BE5676129600609884B9A3BA655D7DC06B1F753F599D212675BE90AF53E1D29D8675BD4E5A7654398C6144D6A
	53150973F126E2150F7F0F687D50EFDFA5E3AB8A2F90C7E965D4CE2B7BB775F5E41117CF829057663C8BBDBD30D5EBF3CC15DA766BB2572B49677FB355FA7E4F28B806ABD2CC6E614DF3ACD42B743A0487372BFC982B2365DA52DF6564GBF4EC61BC9FFDA172CFFD9AC199D69DC33ED589EFE3E170B0930C41242F7C435638970EB3E03FD7EFE32DFF0ECAB1C46E27AE6F2B9238A2A086DA6FE875F45BCFD81FEEA79712F86F14E6B05838E08BB9D65FBD06BB5F82CD5F606D1D6C01F55C09B019CD0D7FD8D9B7B
	5EC6BCC6D872F3222E43230D6C9EA3D5EFD7FA885BDC669561BC49602C6D6F8EB1FDB375368D55988FE859990C25923F0BC0A70A1DF28F9B31530AEB6819E79DBCB769E3BCEE4367C6C33AF7FFAEC47C52A08C07CF022A62EE6DB8FB32435B56FE7223339DA74F36F8BACE9F5372D75620710E287E15EBACF197A6F4AD5D5B155AB37525DBEDF40CFF7A4AB8460E79225D16E48C0F56774C35099CC8714833F6E61BD428DBFDAD66D516D61A767DB2C4E3BA2DBFBE269E7B535EB17571B175D857BF149A6B6F9CD3
	DFE668CF6775709F996E597C708AA47EE0FA527B330A69F4BEF55A5375482D36140C4E17697AECEA44F1D715E33CD6BE04E575F222426BFE7942DE3C4E96388DBB03C8EDD4F838DCEB9F1C4EB05B5F9E4539BC8B4AF9C0EB2733DC5EB3025BEE0232E3864BDFB543FF06270F6B53B257B13F20CAB2C9DD406C14A558E16A906592D44A4EFE97113E37A343FFCCB686243F0FC1750E6EBE5870DE8EE3CD1A837E5DBE353B2C3F5B426C1FFB6F1DA8EFE62B5D19447E55B3285DDB35E75E1ADBED097CFE4FA809C7D0
	1786148B3486E883D009EE1B5CE12CA34E60B021A6D565FA0284F132197984FEB0414601034E6D17074DF32B181948012E1963F19C45E66FB661F5BBB813E233B21DDFCF78ED86BE45EC779FE598368B6AD64DE4FA87C77018FA9C254B262D15B4027DDB4737A4F81E0606916D1C73DF8857D74F72B90F82790162C029335858CFDC5CC3EDE2E10FE37EG4F628B1337EAB4F99EFAF074DB5CCF0DE2DC5FAD292A944663B37E632358562A94A5CC6D5EE11444D8A190D4E9D30D7F54A876FB116FA5EC0A0D4A0FE0
	DE8E4CEB65AC0617E69DE538EA43AC06078EB4E11EA345672CCAE13C4304D78B65CE1D7740D1A32641EDAF874FB8D22C306C13E3E414DD4678E64C1440CDE536646BD5E11BFC3DDEA7791787BBFB0722DADEFF43066F85245EDE05577D62CD5B8E1D572EF4CA0A00BD114642B70F6076A2B7A445207D06943CB66F9FE1B9CF05F2AAD0AED0BEA6D82F1A6F62B6379D2D1AE43E3B503B645CCFA3687EFA4A0B6CB170BE20B9B65AE44E31D8CE9464CC8722ED6E89D83549047A95C0F40FFEF3043DAB49879E1A4D5E
	151CEA43F6989F5B1B253807CE1C467725C7D88E2C1F4D627BBAB2E6944AA9C0D9335919BC7EB60B0D4B17AEC2EB1F31BE13EF700E5873E6EB674659067B6DF73ACB69B8FDA1B64E6E6FAFA6F549F2DC55F534FF63F509F1489A915DF31AD8EE9A3E0E691E5702F54F05729A200DC0346DFF84D85B4DFA5B1784928FD3415EC07ED436577CC726767EC41EE23F6FDFF2BF9A375BC8FC9ECE25F15B2673BFA57C94831F7A4A3F6A3E128EF5A529ACEFBFC3F0E85775900B015200F2007201B6DE2F67AADB9D1A649C
	6A15229E5858226188C347BF6240631740D815F360FC8F548964879A1E43467FEF9BBE63A7438927A409A0D48CD6B9A1424BA48D4870D355ECF8D7135906E9F392B1AEFBCE321CD85BCA5E7F4DB15FE33CCF7879F34C7798773530FB0C75D057B81779CCF140ACBFEBEEC2E66E5CE47215BEA2E72EB9A7DFA47C0239661CDC5647F2F29154F953187C13C7116ECF1F9BFEEFB8F2254F42637D77BF2F2A8C6D4E4E1EBCEF7C5AEEFD5E7C0D5D7A3CEDAB1D78BC3D35B4797D760E5271775BED0E643AF5B8A64FE9E7
	9C5698649B47F88C52633046A002E3BC86D9CD62E39E78481AB406C1DADA9886A952FD673DD6FCD6283C01159BC939C6AF2FEE19E8FDF13F4B7721A7A614F1396FCE685C1DC1BC77B650376B86E60F59823347B4FD3EC3FD18178D65BC1DB71D7056C039C867B97B12691C2759A47BB2EC235DE5A51541705965580662131FB60D47C33F5271C9650DBEE7AD1097A808FFC3FD7A0D643B159656E65A0D6367C947FECEA1584743F58376F93FF29E6E97EEB51E018B34B151BCF63730A7B8DE1F8F02CCD69734D301
	B201D64C2398196A33D0E0ED7267A55367170792D86C3DBA0D772E01371FE22F9F7619319716D3G63964DE3786C3A08D51B72F41FF3F7BA43E7EFB4331CFB90F8E2BA43E7875E9B734E444D8D2A8D8D47C5E9D0C3E78C63F4B7B3FC161D4EF0CB9A9933G4A45C095B7B10CB32D05E11C6A1B98E64B7F5AF81F607AF30765FDC24957676DDDB7D11BCD3BA90135161FBB38D53BAB68CDF2D7C0D6164AFF65F8396637393A7C11634677B8ABDF9DC9FA1EAE5464D65C1C103FBE6C5DC26D4885199DBDD0BF7DE6E6
	47E75DE3F0AE35E333045F130D41394B024C0EABEFE6F67CE7B2E6B114ABEE71B92BEFE1F6FCD0E0F6EC54F94F77B11EFA8B6BDFC85EDBAE0772EA20823D6D0FA32CED315EB61B3C5F2B4D70B9DB013AB2D88CF1B5CF8DB33A2758AFF0497DA89EF1905C23E6183166B6421F16E1461AB76BFE1F8AF5C57AFCE7349865FBEF0518F26B44B112E2483BCFE07F9B063699C0AB015681ED82C27399061C6529C149B1A4F50784F0247A3CFA9C6BD3B9FF2C8EB5DA39F17EF85D28BED59DB806F5C23D88B49DA893E825
	2E4BDA4F246F2C0E45AD5FD9E96B941C5A7A4626586F6ECB6EC7577F93F206AA18EF768BAF61EF1AEF760BA774FDDC8CF5E73E477CE20DE0143F9278EB3FB731DF50FEAF7419755EE868D7E2B186556F9CF9EFDF11E9467DFD043FBB530C7BFFA5B25CDF8BF5E919CC6F7C08D9FEF1E6C2E67902E4722B7A091C85E679FB883FF601D97E1DD1A63F916A3296B0792F34A05D963B8C3FB31B2FBE6E7F41D515C171D9A649E90E5BFC4E6BF55EC2425B8D3C27EC8C7F5EF3A2B9863F6F4464987C419356987C9FCF0C
	4760BFB9E10D41571F980F415FA6B9319EF4ED3B0DE1CE97390B6802322873E684988E0D5F46E2082BA3791C7E54E1FD66F937437A4CF320E362F70C9FF6A4BB9351357ED4C8785617065FCF872F3E1FED3E2AB2287D1F96181FFDD64AF81B84231FD15EABA1F606485457EE214856EE55EDECDF7612EF178A75F21414516D2CDCA2DA4D89373FF2F65B993612F1253EC323F37FD9045943F5BB334797D1E60FD6FD3E3F6F47730F6A659AD2CE514BAB22173346F85C496D7150E549184CEE940FF2EF9B3E6F79DC
	702BC14A5F9D5F16603771B8F6A0F6A6B9F49C5BC26811A2741D6DE992B3F2E0CE393733B351DF8264FD9EECF87AFE792ECE6CCE745C13991868DE1A1E1F8E04D81B72ACFA1EF34173A090BE531E4BA2F72722EB02F1BCD954465A992D51F02E2B27673A05E173398E0F1D837D288E659253E1E596BD432D036726ACFA2626BAC423936900969AF5D83E9F1FA5BAE5A9A0730A524C49086A71C53FD10F4A05F47C23702436FB7DB45247F0860E43B3428F3A0C6F325B43DC00EF478B02BFA7400134E62F9BFE1E62
	69978AB5FB766165D276C5C5B8B42A6E00503BE76FDE162B3F8AB10C638519298B5939E0F1083D37DF3D101D8B1EA7EDB7C339F2912C4BA2365E0F0958EFCECA329AC46C5D64A0EF3CB75F7D66D17BCEE4FD16EADDC46D94DDE4F5EF3EBE4C4EA7590B58B935CEE2BA97G2FF2B153B9AE31F313E7B153F9A9E9BB9D4A19C0390B194E57C771393D05475FE2317D30ED9F7E2E4D6A9D33E159B43D527A19DEEB96333840052606E725A9764B99534F11BDF9BC26382D1B60432AECB38E8E91FEF5369987976BBED2
	87F569596CAE7E08977BFF8914AB17781C75C01DC0FE20E120B4201CA58C9FFCF1FA22738EBD841B4FBBCF042D6C32FA891D677AA56367CB7B3DAFCD4D1E2DD36CB7F2497D283D5FA0B839F009F99D5EA27C12A566F5D82E7B3DE3A91CC517B23F7BCA35123FE6A9354F0625636DC4F35F7DE40F97AF25F268D8C17C690E763B5F707B45505547CE3BACF14615A26A079FFB136354CF3D13E36FAF3D56587B1CF7BC76663D5658BB64B5E2EF4A0BEA634A7AC7ED14BF604539185EAF1E60A2906A935FC8961358D8
	F1074F397B8E9D4FC4981E2939C33F3709A656F12F6177DFCBD7FFCD9F3E2AB2681CE5954F598373BD275B61C7AA3303FA077E9D98799F82CE9482917C2D865273EAE4ACDE597C99369145AB5148C4F805767FAE09D7E1AEAE04E3E16DDB36ACA27FA1202CBB98DE78096A1AE02C3118659E95BF775755A17ABF166E2F3D30C9177F82152948C9BF4BF76143944CC21151DBBDD258ADF4075D3101301B6BD65DBC04D7B776A33F8E8F3E7C71393C60C32F6F312332F6646C95F851FF1AG848F5AC1CA2D3C52A38B
	D17C6D010ADE736094388FA0C3E09F7DA666C38F5AC95AB1E001076FC797D129876DB28CF7DC9079C822EA3B216A33D39E95ED27A383945987658F6358A1EDAA2AF53B3BFCAD3CA83A38E8D494FA4857B8AE051787F8390BG182E8400D1514EF120864BFBB92A22FD1DA24FA93CEB1093D457E09034F18D72AE7A353ACBG1349E1BAB67CF2413622F8E56F28719B3D1299BDC93F73DB390C2E535AE5893CC273610F4E127DF8A76C3DBBD95EF31EFD97A57F9E6CF41893C51593C3CD91BF7EB62CF9C865936760
	D5E771788AEB23D5EAF7GE7315EFD06BE7F8FD0CB878807164E79B994GG68BBGGD0CB818294G94G88G88G5C0171B407164E79B994GG68BBGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGF394GGGG
**end of data**/
}
}
