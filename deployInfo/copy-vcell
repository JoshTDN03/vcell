#!/bin/bash
shopt -s -o nounset


#
# VCELL DEPLOYMENT STRUCTURE
#
#  apache:  /apache_webroot/htdocs/webstart/Alpha                        (jnlp file, jar files)
#  apache:  /apache_webroot/htdocs/webstart/Alpha/Linux                  (Linux client native libs and EXEs)
#  apache:  /apache_webroot/htdocs/webstart/Alpha/Mac                    (Mac client native libs and EXEs)
#  apache:  /apache_webroot/htdocs/webstart/Alpha/Windows                (Windows client native libs and EXEs)
#  shared:  /share/apps/vcell/deployed/alpha/configs                     (scripts for services, java sims, pre/post processing)
#  shared:  /share/apps/vcell/deployed/alpha/resources                   (jar files for services, java simulators, pre/post processing)
#  shared:  /share/apps/vcell/deployed/alpha/numerics/cmake-build/bin    (simulation native executables)
#  shared:  /share/apps/vcell2/rmi_deploy/ALPHA                          (rmi bootstrap jar files, scripts, property files)
#  shared:  /share/apps/vcell2/rmi_deploy/ALPHA/webstart.tar             (tar archive of /apache_webroot/htdocs/webstart/Alpha)
#
# VM TEMPORARY STAGING AREA
#
#  vm:      /vcell/staging/mssm/cluster/bin
#  vm:      /vcell/staging/mssm/cluster/configs
#  vm:      /vcell/staging/mssm/cluster/resources
#  vm:      /vcell/staging/mssm/services/configs
#  vm:      /vcell/staging/mssm/services/resources
#  vm:      /vcell/staging/mssm/webstart
#  vm:      /vcell/staging/mssm/webstart/Linux
#  vm:      /vcell/staging/mssm/webstart/Mac
#  vm:      /vcell/staging/mssm/webstart/Windows
#
# VM DEPLOYED CONFIGURATION
#
#  shared:  /share/apps/vcell/mssmcluster/mssm/bin
#  shared:  /share/apps/vcell/mssmcluster/mssm/configs
#  shared:  /share/apps/vcell/mssmcluster/mssm/resources
#  vm:      /vcell/deploy/services/mssm/configs
#  vm:      /vcell/deploy/services/mssm/resources
#  vm:      /vcell/deploy/services/mssm/logs
#  vm:      /var/www
#
VCELL_SITE=ALPHA
VCELL_SITE_upper=$(echo $VCELL_SITE | tr '[a-z]' '[A-Z]')
VCELL_SITE_lower=$(echo $VCELL_SITE | tr '[A-Z]' '[a-z]')
VCELL_SITE_cap=${VCELL_SITE_upper:0:1}${VCELL_SITE_lower:1}

VM_SITE=MSSM
VM_SITE_upper=$(echo $VM_SITE | tr '[a-z]' '[A-Z]')
VM_SITE_lower=$(echo $VM_SITE | tr '[A-Z]' '[a-z]')
VM_SITE_cap=${VM_SITE_upper:0:1}${VM_SITE_lower:1}

VCELL_JMSURL="failover:(tcp://code2:61616)"
VCELL_ORACLEURL="jdbc:oracle:thin:@dbs6.cam.uchc.edu:1521:orcl"
VCELL_MONGOHOST="mongo.cam.uchc.edu"
VCELL_MONGODB=$VCELL_SITE_upper
VCELL_BATCHSYSTEM=SGE
VCELL_RMIPORT=40106
VCELL_RMIHOST=rmi-$VCELL_SITE_lower.cam.uchc.edu

VM_HOST_short=vcell-pkg
VM_HOST=vcell-pkg.cam.uchc.edu
VM_JMSURL="failover:(tcp://$VM_HOST_short:61616)"
VM_ORACLEURL="jdbc:oracle:thin:@$VM_HOST:1521:orcl"
VM_MONGOHOST=$VM_HOST
VM_MONGODB=$VM_SITE_upper
VM_RMIPORT=40100
VM_RMIHOST=$VM_HOST
VM_BATCHSYSTEM=PBS
VM_INSTALL_CLUSTER_ROOT=/share/apps/vcell/mssmcluster
VM_INSTALL_CLUSTER_PRIMARY_USERDIR=/share/apps/vcell/users
VM_INSTALL_CLUSTER_SECONDARY_USERDIR=/share/apps/vcell2/users
VM_INSTALL_WEBSTART_ROOT=/var/www/html/webstart
VM_INSTALL_SERVICES_ROOT=/vcell/deploy/services
VM_INSTALL_EXPORT_DIR=/var/www/html/export
VM_INSTALL_EXPORT_URL=http://$VM_HOST/export
VM_WEBSTART_URL=http://$VM_HOST/webstart

VCELL_PRIMARY_USERDIR=/share/apps/vcell/users
VCELL_SECONDARY_USERDIR=/share/apps/vcell2/users
VCELL_DEPLOYED_ROOT=/share/apps/vcell/deployed
VCELL_RMIDEPLOY_ROOT=/share/apps/vcell2/rmi_deploy
VCELL_EXPORT_DIR=/share/apps/vcell2
VCELL_EXPORT_URL=http://vcell.org/export
VCELL_WEBSTART_URL=http://vcell.org/webstart
VCELL_DEPLOYED_LOG_ROOT=/share/apps/vcell/logs
VCELL_EXPORTDIR=/share/apps/vcell2/export
VCELL_DEPLOYED_BASEDIR=$VCELL_DEPLOYED_ROOT/$VCELL_SITE_lower
VCELL_RMIDEPLOY_BASEDIR=$VCELL_RMIDEPLOY_ROOT/$VCELL_SITE_upper
VCELL_DEPLOYED_NUMERICS_BINDIR=$VCELL_DEPLOYED_BASEDIR/numerics/cmake-build/bin
VCELL_DEPLOYED_CONFIGDIR=$VCELL_DEPLOYED_BASEDIR/configs
VCELL_DEPLOYED_BLOBDIR=/share/apps/vcell/blobFiles

VM_STAGING_BASEDIR=/vcell/staging/$VM_SITE_lower

VM_INSTALL_WEBSTART_BASEDIR=$VM_INSTALL_WEBSTART_ROOT/$VM_SITE_lower
VM_INSTALL_SERVICES_BASEDIR=$VM_INSTALL_SERVICES_ROOT/$VM_SITE_lower
VM_INSTALL_CLUSTER_BASEDIR=$VM_INSTALL_CLUSTER_ROOT/$VM_SITE_lower

VM_INSTALL_SERVICES_CONFIGDIR=$VM_INSTALL_SERVICES_BASEDIR/configs
VM_INSTALL_SERVICES_RESOURCEDIR=$VM_INSTALL_SERVICES_BASEDIR/resources
VM_INSTALL_SERVICES_LOGSDIR=$VM_INSTALL_SERVICES_BASEDIR/logs
VM_INSTALL_CLUSTER_LOGSDIR=$VM_INSTALL_CLUSTER_BASEDIR/logs
VM_INSTALL_CLUSTER_BINDIR=$VM_INSTALL_CLUSTER_BASEDIR/bin
VM_INSTALL_CLUSTER_CONFIGDIR=$VM_INSTALL_CLUSTER_BASEDIR/configs
VM_INSTALL_CLUSTER_BLOBDIR=$VM_INSTALL_CLUSTER_BASEDIR/blobFiles


JMS_SIMREQ_BASE=simReq
JMS_DATAREQ_BASE=simDataReq
JMS_DBREQ_BASE=dbReq
JMS_SIMJOB_BASE=simJob
JMS_WORKEREVENT_BASE=workerEvent
JMS_SERVICECONTROL_BASE=serviceControl
JMS_DAEMONCONTROL_BASE=daemonControl
JMS_CLIENTSTATUS_BASE=clientStatus


#########################################################################################
copyVCell() {
#
# recreate staging area
#
rm -rf $VM_STAGING_BASEDIR
mkdir -p $VM_STAGING_BASEDIR

#
# get the apache webstart directory archive file 
#
# assumes that webstart archive is already defined.
#
# 1. ssh into apache.cam.uchc.edu
# 2. [apache] $ cd /apache_webroot/htdocs/webstart/Site
# 3. [apache] $ tar -cvf webstart.tar *                             e.g. Site=Alpha,Beta,Rel,Test
# 4. [apache] $ cp webstart.tar /share/apps/vcell2/rmi_deploy/SITE  e.g. SITE=ALPHA,BETA,REL,TEST
#
if [ ! -f $VCELL_RMIDEPLOY_BASEDIR/webstart.tar ]
then
	echo $VCELL_RMIDEPLOY_BASEDIR/webstart.tar does not exist
	exit 1
fi
mkdir $VM_STAGING_BASEDIR/webstart
cp $VCELL_RMIDEPLOY_BASEDIR/webstart.tar $VM_STAGING_BASEDIR
tar -C $VM_STAGING_BASEDIR/webstart -xf $VM_STAGING_BASEDIR/webstart.tar
rm $VM_STAGING_BASEDIR/webstart.tar
rm $VM_STAGING_BASEDIR/webstart/Mac/UCHC_2012
rm $VM_STAGING_BASEDIR/webstart/Windows/UCHC_2012
rm $VM_STAGING_BASEDIR/webstart/Linux/UCHC_2012

#
# get deployment of RMI Bootstrap and Apache/webstart directories
# these files will be targeted to the VM webstart directory.
#
mkdir $VM_STAGING_BASEDIR/rmi
cp -ar $VCELL_RMIDEPLOY_BASEDIR/* $VM_STAGING_BASEDIR/rmi

#
# get the numerics and the java dependencies and configuration files used for simulations
# these files will be targeted to a shared file system for the PBS cluster
#
mkdir $VM_STAGING_BASEDIR/cluster
cp -ar $VCELL_DEPLOYED_NUMERICS_BINDIR      $VM_STAGING_BASEDIR/cluster
cp -ar $VCELL_DEPLOYED_CONFIGDIR            $VM_STAGING_BASEDIR/cluster
cp -ar $VCELL_DEPLOYED_BASEDIR/resources    $VM_STAGING_BASEDIR/cluster

#
# get the java dependencies and configuration files for the services
#
mkdir $VM_STAGING_BASEDIR/services
cp -ar $VCELL_DEPLOYED_BASEDIR/resources $VM_STAGING_BASEDIR/services
cp -ar $VCELL_DEPLOYED_BASEDIR/configs   $VM_STAGING_BASEDIR/services
}

##############################################################################################
replaceTextInFile() {
#  echo replacing "  " $1 "  " with "  " $2 "  " in file $3
  sed -i "s,$1,$2,g" $3
}

##############################################################################################
replaceJmsDestinations() {
  replaceTextInFile $JMS_SIMREQ_BASE$1          $JMS_SIMREQ_BASE$2          $3
  replaceTextInFile $JMS_DATAREQ_BASE$1         $JMS_DATAREQ_BASE$2         $3
  replaceTextInFile $JMS_DBREQ_BASE$1           $JMS_DBREQ_BASE$2           $3
  replaceTextInFile $JMS_SIMJOB_BASE$1          $JMS_SIMJOB_BASE$2          $3
  replaceTextInFile $JMS_WORKEREVENT_BASE$1     $JMS_WORKEREVENT_BASE$2     $3
  replaceTextInFile $JMS_SERVICECONTROL_BASE$1  $JMS_SERVICECONTROL_BASE$2  $3
  replaceTextInFile $JMS_DAEMONCONTROL_BASE$1   $JMS_DAEMONCONTROL_BASE$2   $3
  replaceTextInFile $JMS_CLIENTSTATUS_BASE$1    $JMS_CLIENTSTATUS_BASE$2    $3
}

##############################################################################################
configureVCell(){
rm $VM_STAGING_BASEDIR/cluster/configs/messaging-vcell64
rm $VM_STAGING_BASEDIR/cluster/configs/runservice64
rm $VM_STAGING_BASEDIR/cluster/configs/convertSmoldyn.py

replaceTextInFile "site=$VCELL_SITE_lower"         "site=$VM_SITE_lower"          $VM_STAGING_BASEDIR/cluster/configs/JavaPostprocessor64
replaceTextInFile $VCELL_DEPLOYED_ROOT             $VM_INSTALL_CLUSTER_ROOT       $VM_STAGING_BASEDIR/cluster/configs/JavaPostprocessor64
replaceTextInFile $VCELL_DEPLOYED_LOG_ROOT         $VM_INSTALL_CLUSTER_LOGSDIR    $VM_STAGING_BASEDIR/cluster/configs/JavaPostprocessor64

replaceTextInFile "site=$VCELL_SITE_lower"         "site=$VM_SITE_lower"          $VM_STAGING_BASEDIR/cluster/configs/JavaPreprocessor64
replaceTextInFile $VCELL_DEPLOYED_ROOT             $VM_INSTALL_CLUSTER_ROOT       $VM_STAGING_BASEDIR/cluster/configs/JavaPreprocessor64
replaceTextInFile $VCELL_DEPLOYED_LOG_ROOT         $VM_INSTALL_CLUSTER_LOGSDIR    $VM_STAGING_BASEDIR/cluster/configs/JavaPreprocessor64

replaceTextInFile "site=$VCELL_SITE_lower"         "site=$VM_SITE_lower"          $VM_STAGING_BASEDIR/cluster/configs/JavaSimExe64
replaceTextInFile $VCELL_DEPLOYED_ROOT             $VM_INSTALL_CLUSTER_ROOT       $VM_STAGING_BASEDIR/cluster/configs/JavaSimExe64
replaceTextInFile $VCELL_DEPLOYED_LOG_ROOT         $VM_INSTALL_CLUSTER_LOGSDIR    $VM_STAGING_BASEDIR/cluster/configs/JavaSimExe64

replaceJmsDestinations $VCELL_SITE_cap             $VM_SITE_cap                   $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_DEPLOYED_NUMERICS_BINDIR  $VM_INSTALL_CLUSTER_BINDIR     $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_DEPLOYED_LOG_ROOT         $VM_INSTALL_CLUSTER_LOGSDIR    $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_DEPLOYED_CONFIGDIR        $VM_INSTALL_CLUSTER_CONFIGDIR  $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_DEPLOYED_BLOBDIR          $VM_INSTALL_CLUSTER_BLOBDIR    $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_JMSURL                    $VM_JMSURL                     $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_ORACLEURL                 $VM_ORACLEURL                  $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_MONGOHOST                 $VM_MONGOHOST                  $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_MONGODB                   $VM_MONGODB                    $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_BATCHSYSTEM               $VM_BATCHSYSTEM                $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_PRIMARY_USERDIR           $VM_INSTALL_CLUSTER_PRIMARY_USERDIR    $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_SECONDARY_USERDIR         $VM_INSTALL_CLUSTER_SECONDARY_USERDIR  $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_EXPORT_DIR                $VM_INSTALL_EXPORT_DIR         $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties
replaceTextInFile $VCELL_EXPORT_URL                $VM_INSTALL_EXPORT_URL         $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties

rm $VM_STAGING_BASEDIR/services/configs/convertSmoldyn.py
rm $VM_STAGING_BASEDIR/services/configs/JavaPostprocessor64
rm $VM_STAGING_BASEDIR/services/configs/JavaPreprocessor64
rm $VM_STAGING_BASEDIR/services/configs/JavaSimExe64
rm $VM_STAGING_BASEDIR/services/configs/messaging-vcell64

cp $VM_STAGING_BASEDIR/cluster/configs/vcell64.properties $VM_STAGING_BASEDIR/services/configs/vcell64.properties

replaceTextInFile "site=$VCELL_SITE_lower"             "site=$VM_SITE_lower"              $VM_STAGING_BASEDIR/services/configs/runservice64
replaceTextInFile "$VCELL_DEPLOYED_ROOT/\${site}"      $VM_INSTALL_SERVICES_BASEDIR       $VM_STAGING_BASEDIR/services/configs/runservice64
replaceTextInFile "$VCELL_DEPLOYED_LOG_ROOT/\${site}"  $VM_INSTALL_SERVICES_LOGSDIR       $VM_STAGING_BASEDIR/services/configs/runservice64
replaceTextInFile $VCELL_BATCHSYSTEM                   $VM_BATCHSYSTEM                    $VM_STAGING_BASEDIR/services/configs/runservice64
replaceTextInFile "\${batchSystemType}"                "\${batchSystemType} \$4 \$5 \$6"  $VM_STAGING_BASEDIR/services/configs/runservice64

cp $VM_STAGING_BASEDIR/rmi/run_rmi_bootstrap_$VCELL_RMIPORT    $VM_STAGING_BASEDIR/services/configs/run_bootstrap
cp $VM_STAGING_BASEDIR/rmi/java.policy                         $VM_STAGING_BASEDIR/services/configs/java_bootstrap.policy
cp $VM_STAGING_BASEDIR/rmi/vcell.properties_$VCELL_RMIPORT     $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
rm -r $VM_STAGING_BASEDIR/rmi

replaceJmsDestinations $VCELL_SITE_cap             $VM_SITE_cap                   $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_DEPLOYED_NUMERICS_BINDIR  $VM_INSTALL_CLUSTER_BINDIR     $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_DEPLOYED_LOG_ROOT         $VM_INSTALL_CLUSTER_LOGSDIR    $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_DEPLOYED_CONFIGDIR        $VM_INSTALL_CLUSTER_CONFIGDIR  $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_DEPLOYED_BLOBDIR          $VM_INSTALL_CLUSTER_BLOBDIR    $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_JMSURL                    $VM_JMSURL                     $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_ORACLEURL                 $VM_ORACLEURL                  $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_MONGOHOST                 $VM_MONGOHOST                  $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_MONGODB                   $VM_MONGODB                    $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_BATCHSYSTEM               $VM_BATCHSYSTEM                $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_PRIMARY_USERDIR           $VM_INSTALL_CLUSTER_PRIMARY_USERDIR    $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_SECONDARY_USERDIR         $VM_INSTALL_CLUSTER_SECONDARY_USERDIR  $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_EXPORT_DIR                $VM_INSTALL_EXPORT_DIR         $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile $VCELL_EXPORT_URL                $VM_INSTALL_EXPORT_URL         $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties
replaceTextInFile " = $VCELL_RMIPORT"              " = $VM_RMIPORT"             $VM_STAGING_BASEDIR/services/configs/vcell_bootstrap.properties

replaceTextInFile $VCELL_RMIDEPLOY_BASEDIR/java.policy                       $VM_INSTALL_SERVICES_CONFIGDIR/java_bootstrap.policy      $VM_STAGING_BASEDIR/services/configs/run_bootstrap
replaceTextInFile $VCELL_RMIDEPLOY_BASEDIR/vcell.properties_$VCELL_RMIPORT   $VM_INSTALL_SERVICES_CONFIGDIR/vcell_bootstrap.properties $VM_STAGING_BASEDIR/services/configs/run_bootstrap
replaceTextInFile $VCELL_RMIDEPLOY_BASEDIR                                   $VM_INSTALL_SERVICES_RESOURCEDIR                          $VM_STAGING_BASEDIR/services/configs/run_bootstrap
replaceTextInFile $VCELL_RMIPORT                                             $VM_RMIPORT                                               $VM_STAGING_BASEDIR/services/configs/run_bootstrap
replaceTextInFile $VCELL_RMIHOST                                             $VM_RMIHOST                                               $VM_STAGING_BASEDIR/services/configs/run_bootstrap
chmod +x $VM_STAGING_BASEDIR/services/configs/run_bootstrap

mv $VM_STAGING_BASEDIR/webstart/vcell$VCELL_SITE_lower.jnlp  $VM_STAGING_BASEDIR/webstart/vcell$VM_SITE_lower.jnlp

replaceTextInFile $VCELL_RMIHOST:$VCELL_RMIPORT        $VM_RMIHOST:$VM_RMIPORT                 $VM_STAGING_BASEDIR/webstart/vcell$VM_SITE_lower.jnlp
replaceTextInFile vcell$VCELL_SITE_lower.jnlp          vcell$VM_SITE_lower.jnlp                $VM_STAGING_BASEDIR/webstart/vcell$VM_SITE_lower.jnlp
replaceTextInFile $VCELL_WEBSTART_URL/$VCELL_SITE_cap  $VM_WEBSTART_URL/$VM_SITE_lower         $VM_STAGING_BASEDIR/webstart/vcell$VM_SITE_lower.jnlp
replaceTextInFile \($VCELL_SITE_cap\)                  \($VM_SITE_upper\)                      $VM_STAGING_BASEDIR/webstart/vcell$VM_SITE_lower.jnlp
}

###################################################################################################
killVCell(){
echo "ps ax | grep $VM_INSTALL_SERVICES_CONFIGDIR | grep java | grep -v grep | awk '{print \$1}' | xargs kill"
ps ax | grep $VM_INSTALL_SERVICES_CONFIGDIR | grep java | grep -v grep | awk '{print $1}' | xargs kill
}

###################################################################################################
installVCell(){

if [ ! -d $VM_INSTALL_WEBSTART_BASEDIR ]; then
    mkdir $VM_INSTALL_WEBSTART_BASEDIR
else
    rm -r $VM_INSTALL_WEBSTART_BASEDIR/*
fi
mv $VM_STAGING_BASEDIR/webstart/* $VM_INSTALL_WEBSTART_BASEDIR

if [ ! -d $VM_INSTALL_CLUSTER_BASEDIR ]; then
    mkdir $VM_INSTALL_CLUSTER_BASEDIR
else
    rm -r $VM_INSTALL_CLUSTER_BASEDIR/*
fi
mv $VM_STAGING_BASEDIR/cluster/*  $VM_INSTALL_CLUSTER_BASEDIR


if [ ! -d $VM_INSTALL_SERVICES_ROOT ]; then
    mkdir $VM_INSTALL_SERVICES_ROOT
fi
if [ ! -d $VM_INSTALL_SERVICES_BASEDIR ]; then
    mkdir $VM_INSTALL_SERVICES_BASEDIR
fi
if [ ! -d $VM_INSTALL_SERVICES_CONFIGDIR ]; then
    mkdir $VM_INSTALL_SERVICES_CONFIGDIR
fi
if [ ! -d $VM_INSTALL_SERVICES_RESOURCEDIR ]; then
    mkdir $VM_INSTALL_SERVICES_RESOURCEDIR
fi
if [ ! -d $VM_INSTALL_SERVICES_LOGSDIR ]; then
    mkdir $VM_INSTALL_SERVICES_LOGSDIR
fi

rm $VM_INSTALL_SERVICES_CONFIGDIR/*
rm $VM_INSTALL_SERVICES_RESOURCEDIR/*
rm $VM_INSTALL_SERVICES_LOGSDIR/*

mv $VM_STAGING_BASEDIR/services/configs/* $VM_INSTALL_SERVICES_CONFIGDIR
mv $VM_STAGING_BASEDIR/services/resources/* $VM_INSTALL_SERVICES_RESOURCEDIR

echo "nohup $VM_INSTALL_SERVICES_CONFIGDIR/runservice64 Db     0 250 \$1 \$2 \$3 &" >> $VM_INSTALL_SERVICES_CONFIGDIR/vcellstart
echo "nohup $VM_INSTALL_SERVICES_CONFIGDIR/runservice64 Data   0 500 \$1 \$2 \$3 &" >> $VM_INSTALL_SERVICES_CONFIGDIR/vcellstart
echo "nohup $VM_INSTALL_SERVICES_CONFIGDIR/runservice64 Exprt  0 250 \$1 \$2 \$3 &" >> $VM_INSTALL_SERVICES_CONFIGDIR/vcellstart
echo "nohup $VM_INSTALL_SERVICES_CONFIGDIR/runservice64 PbsC   0 250 \$1 \$2 \$3 &" >> $VM_INSTALL_SERVICES_CONFIGDIR/vcellstart
echo "nohup $VM_INSTALL_SERVICES_CONFIGDIR/runservice64 Dsptch 0 250 \$1 \$2 \$3 &" >> $VM_INSTALL_SERVICES_CONFIGDIR/vcellstart
echo "nohup $VM_INSTALL_SERVICES_CONFIGDIR/run_bootstrap                         &" >> $VM_INSTALL_SERVICES_CONFIGDIR/vcellstart
chmod +x $VM_INSTALL_SERVICES_CONFIGDIR/vcellstart

echo "ps ax | grep $VM_INSTALL_CLUSTER_CONFIGDIR | grep java | grep -v grep | awk '{print \$1}' | xargs kill" >> $VM_INSTALL_SERVICES_CONFIGDIR/vcellkill
chmod +x $VM_INSTALL_SERVICES_CONFIGDIR/vcellkill
}



####################################################################################################
# MAIN
####################################################################################################
echo copying all vcell files from $VCELL_SITE_cap site to $VM_STAGING_BASEDIR
copyVCell

echo configuring property files in $VM_STAGING_BASEDIR
configureVCell

echo killing currently running vcell
killVCell

echo installing files to $VM_INSTALL_SERVICES_BASEDIR, $VM_INSTALL_CLUSTER_BASEDIR, $VM_INSTALL_WEBSTART_BASEDIR
installVCell

echo done.  to start vcell run $VM_INSTALL_SERVICES_CONFIGDIR/vcellstart, to kill vcell run $VM_INSTALL_SERVICES_CONFIGDIR/vcellkill



