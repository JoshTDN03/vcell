package cbit.vcell.constraints.gui;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import javax.swing.ButtonModel;
import javax.swing.JButton;
import javax.swing.JDesktopPane;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JToolBar;

import cbit.gui.graph.CartoonTool;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class ConstraintsGraphModelPanel extends JPanel implements java.awt.event.ActionListener, java.beans.PropertyChangeListener {
	private JPanel ivjFeatureSizePanel = null;
	private cbit.gui.graph.GraphPane ivjGraphPane = null;
	protected transient java.beans.PropertyChangeSupport propertyChange;
	private boolean ivjConnPtoP1Aligning = false;
	private JPanel ivjJPanel1 = null;
	private JToolBar ivjJToolBar1 = null;
	private ButtonModel ivjSelection = null;
	private org.vcell.util.gui.JToolBarToggleButton ivjSelectButton = null;
	private org.vcell.util.gui.ButtonGroupCivilized ivjButtonGroupCivilized = null;
	private JScrollPane ivjJScrollPane1 = null;
	private JLabel ivjJLabel3 = null;
	private JButton ivjAnnealLayoutButton = null;
	private JButton ivjCircleLayoutButton = null;
	private JLabel ivjJLabel4 = null;
	private JButton ivjLevellerLayoutButton = null;
	private JButton ivjRandomLayoutButton = null;
	private JButton ivjRelaxerLayoutButton = null;
	private JButton ivjZoomInButton = null;
	private JButton ivjZoomOutButton = null;
	private JButton ivjGlgLayoutJButton = null;
	private javax.swing.JDesktopPane fieldDesktopPane = new JDesktopPane();
	private ConstraintsGraphModel ivjConstraintGraphModel = null;
	private ConstraintGraphCartoonTool ivjConstraintsGraphModelTool1 = null;
	private cbit.vcell.constraints.ConstraintSolver fieldConstraintSolver = null;
	private boolean ivjConnPtoP3Aligning = false;
	private boolean ivjConnPtoP4Aligning = false;
	private cbit.vcell.constraints.ConstraintContainerImpl ivjconstraintContainerImpl = null;
	private cbit.vcell.constraints.ConstraintSolver ivjconstraintSolver1 = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public ConstraintsGraphModelPanel() {
	super();
	initialize();
}


/**
 * CartoonPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public ConstraintsGraphModelPanel(java.awt.LayoutManager layout) {
	super(layout);
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getZoomInButton()) 
		connEtoC1(e);
	if (e.getSource() == getZoomOutButton()) 
		connEtoC2(e);
	if (e.getSource() == getRelaxerLayoutButton()) 
		connEtoM12(e);
	if (e.getSource() == getRandomLayoutButton()) 
		connEtoM1(e);
	if (e.getSource() == getCircleLayoutButton()) 
		connEtoM7(e);
	if (e.getSource() == getGlgLayoutJButton()) 
		connEtoM9(e);
	if (e.getSource() == getLevellerLayoutButton()) 
		connEtoM13(e);
	if (e.getSource() == getAnnealLayoutButton()) 
		connEtoM2(e);
	// user code begin {2}
	// user code end
}

/**
 * The addPropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().addPropertyChangeListener(listener);
}


/**
 * connEtoC1:  (ZoomInButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonEditorPanel.zoomInButton_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.zoomInButton_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (ZoomOutButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonEditorPanel.zoomOutButton_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.zoomOutButton_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (Button1.action.actionPerformed(java.awt.event.ActionEvent) --> CanvasTool.randomize()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().layout(this.getRandomizer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM10:  (ReactionCartoonEditorPanel.initialize() --> GraphPane.graphModel)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM10() {
	try {
		// user code begin {1}
		// user code end
		getGraphPane().setGraphModel(getConstraintGraphModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM12:  (RelaxerButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM12(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().layout(this.getRelaxer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM13:  (LevellerButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM13(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().layout(this.getLeveller());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM16:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.graphPane)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM16() {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().setGraphPane(getGraphPane());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM18:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.buttonGroup)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM18() {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().setButtonGroup(getButtonGroupCivilized());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM2:  (AnnealButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().layout(this.getAnnealer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM3:  (constraintSolver1.this --> constraintContainerImpl.this)
 * @param value cbit.vcell.constraints.ConstraintSolver
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM3(cbit.vcell.constraints.ConstraintSolver value) {
	try {
		// user code begin {1}
		// user code end
		if ((getconstraintSolver1() != null)) {
			setconstraintContainerImpl(getconstraintSolver1().getConstraintContainerImpl());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM4:  (constraintSolver1.this --> ConstraintsGraphModelTool1.constraintSolver)
 * @param value cbit.vcell.constraints.ConstraintSolver
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4(cbit.vcell.constraints.ConstraintSolver value) {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().setConstraintSolver(getconstraintSolver1());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM5:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getSelectButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM7:  (CircleButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().layout(this.getCircularizer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM8:  (SimpleGraphModelPanel.initialize() --> SimpleGraphModelTool1.setSimpleGraphModel(Lcbit.vcell.constraints.gui.SimpleGraphModel;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM8() {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().setConstraintsGraphModel(getConstraintGraphModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM9:  (GlgLayoutJButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layoutGlg()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM9(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getConstraintsGraphModelTool1().layoutGlg();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP1SetSource:  (ButtonGroup1.selection <--> selection1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getSelection() != null)) {
				getButtonGroupCivilized().setSelection(getSelection());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP1SetTarget:  (ButtonGroup1.selection <--> selection1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setSelection(getButtonGroupCivilized().getSelection());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP2SetTarget:  (Selection.actionCommand <--> ReactionCartoonTool1.modeString)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if ((getSelection() != null)) {
			getConstraintsGraphModelTool1().setModeString(getSelection().getActionCommand());
		}
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP3SetSource:  (ConstraintsGraphModelPanel.constraintSolver <--> constraintSolver1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP3SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP3Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP3Aligning = true;
			if ((getconstraintSolver1() != null)) {
				this.setConstraintSolver(getconstraintSolver1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP3Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP3Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP3SetTarget:  (ConstraintsGraphModelPanel.constraintSolver <--> constraintSolver1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP3SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP3Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP3Aligning = true;
			setconstraintSolver1(this.getConstraintSolver());
			// user code begin {2}
			// user code end
			ivjConnPtoP3Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP3Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP4SetSource:  (constraintContainerImpl.this <--> ConstraintGraphModel.constraintContainerImpl)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP4SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP4Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP4Aligning = true;
			setconstraintContainerImpl(getConstraintGraphModel().getConstraintContainerImpl());
			// user code begin {2}
			// user code end
			ivjConnPtoP4Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP4Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP4SetTarget:  (constraintContainerImpl.this <--> ConstraintGraphModel.constraintContainerImpl)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP4SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP4Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP4Aligning = true;
			if ((getconstraintContainerImpl() != null)) {
				getConstraintGraphModel().setConstraintContainerImpl(getconstraintContainerImpl());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP4Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP4Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * The firePropertyChange method was generated to support the propertyChange field.
 * @param propertyName java.lang.String
 * @param oldValue java.lang.Object
 * @param newValue java.lang.Object
 */
public void firePropertyChange(String propertyName, Object oldValue, Object newValue) {
	getPropertyChange().firePropertyChange(propertyName, oldValue, newValue);
}


/**
 * Comment
 */
private java.lang.String getAnnealer() {
	return CartoonTool.ANNEALER;
}


/**
 * Return the AnnealLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getAnnealLayoutButton() {
	if (ivjAnnealLayoutButton == null) {
		try {
			ivjAnnealLayoutButton = new javax.swing.JButton();
			ivjAnnealLayoutButton.setName("AnnealLayoutButton");
			ivjAnnealLayoutButton.setText("anl");
			ivjAnnealLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setActionCommand("AnnealLayout");
			ivjAnnealLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjAnnealLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAnnealLayoutButton;
}

/**
 * Return the ButtonGroup1 property value.
 * @return cbit.gui.ButtonGroupCivilized
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private org.vcell.util.gui.ButtonGroupCivilized getButtonGroupCivilized() {
	if (ivjButtonGroupCivilized == null) {
		try {
			ivjButtonGroupCivilized = new org.vcell.util.gui.ButtonGroupCivilized();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonGroupCivilized;
}

/**
 * Return the CircleLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCircleLayoutButton() {
	if (ivjCircleLayoutButton == null) {
		try {
			ivjCircleLayoutButton = new javax.swing.JButton();
			ivjCircleLayoutButton.setName("CircleLayoutButton");
			ivjCircleLayoutButton.setText("crc");
			ivjCircleLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setActionCommand("CircleLayout");
			ivjCircleLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjCircleLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCircleLayoutButton;
}

/**
 * Comment
 */
private java.lang.String getCircularizer() {
	return CartoonTool.CIRCULARIZER;
}


/**
 * Return the constraintContainerImpl property value.
 * @return cbit.vcell.constraints.ConstraintContainerImpl
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.constraints.ConstraintContainerImpl getconstraintContainerImpl() {
	// user code begin {1}
	// user code end
	return ivjconstraintContainerImpl;
}


/**
 * Return the SimpleGraphModel property value.
 * @return cbit.vcell.constraints.gui.ConstraintsGraphModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ConstraintsGraphModel getConstraintGraphModel() {
	if (ivjConstraintGraphModel == null) {
		try {
			ivjConstraintGraphModel = new cbit.vcell.constraints.gui.ConstraintsGraphModel();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjConstraintGraphModel;
}

/**
 * Return the ConstraintsGraphModelTool1 property value.
 * @return cbit.vcell.constraints.gui.ConstraintGraphCartoonTool
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ConstraintGraphCartoonTool getConstraintsGraphModelTool1() {
	if (ivjConstraintsGraphModelTool1 == null) {
		try {
			ivjConstraintsGraphModelTool1 = new cbit.vcell.constraints.gui.ConstraintGraphCartoonTool();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjConstraintsGraphModelTool1;
}


/**
 * Gets the constraintSolver property (cbit.vcell.constraints.ConstraintSolver) value.
 * @return The constraintSolver property value.
 * @see #setConstraintSolver
 */
public cbit.vcell.constraints.ConstraintSolver getConstraintSolver() {
	return fieldConstraintSolver;
}


/**
 * Return the constraintSolver1 property value.
 * @return cbit.vcell.constraints.ConstraintSolver
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.constraints.ConstraintSolver getconstraintSolver1() {
	// user code begin {1}
	// user code end
	return ivjconstraintSolver1;
}


/**
 * Comment
 */
private java.lang.String getCycleizer() {
	return CartoonTool.CYCLEIZER;
}


/**
 * Gets the desktopPane property (javax.swing.JDesktopPane) value.
 * @return The desktopPane property value.
 * @see #setDesktopPane
 */
public javax.swing.JDesktopPane getDesktopPane() {
	return fieldDesktopPane;
}


/**
 * Return the FeatureSizePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getFeatureSizePanel() {
	if (ivjFeatureSizePanel == null) {
		try {
			ivjFeatureSizePanel = new javax.swing.JPanel();
			ivjFeatureSizePanel.setName("FeatureSizePanel");
			ivjFeatureSizePanel.setPreferredSize(new java.awt.Dimension(22, 396));
			ivjFeatureSizePanel.setLayout(new java.awt.BorderLayout());
			ivjFeatureSizePanel.setMinimumSize(new java.awt.Dimension(22, 396));
			getFeatureSizePanel().add(getJPanel1(), "South");
			getFeatureSizePanel().add(getJScrollPane1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFeatureSizePanel;
}

/**
 * Comment
 */
private java.lang.String getForceDirect() {
	return CartoonTool.FORCEDIRECT;
}


/**
 * Return the GlgLayoutJButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getGlgLayoutJButton() {
	if (ivjGlgLayoutJButton == null) {
		try {
			ivjGlgLayoutJButton = new javax.swing.JButton();
			ivjGlgLayoutJButton.setName("GlgLayoutJButton");
			ivjGlgLayoutJButton.setText("glg");
			ivjGlgLayoutJButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjGlgLayoutJButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGlgLayoutJButton;
}

/**
 * Return the GraphPane property value.
 * @return cbit.vcell.graph.GraphPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.graph.GraphPane getGraphPane() {
	if (ivjGraphPane == null) {
		try {
			ivjGraphPane = new cbit.gui.graph.GraphPane();
			ivjGraphPane.setName("GraphPane");
			ivjGraphPane.setBounds(0, 0, 372, 364);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGraphPane;
}

/**
 * Return the JLabel3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel3() {
	if (ivjJLabel3 == null) {
		try {
			ivjJLabel3 = new javax.swing.JLabel();
			ivjJLabel3.setName("JLabel3");
			ivjJLabel3.setText(" ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel3;
}


/**
 * Return the JLabel4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel4() {
	if (ivjJLabel4 == null) {
		try {
			ivjJLabel4 = new javax.swing.JLabel();
			ivjJLabel4.setName("JLabel4");
			ivjJLabel4.setText(" ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel4;
}


/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setPreferredSize(new java.awt.Dimension(22, 396));
			ivjJScrollPane1.setMinimumSize(new java.awt.Dimension(22, 396));
			getJScrollPane1().setViewportView(getGraphPane());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Return the JToolBar1 property value.
 * @return javax.swing.JToolBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JToolBar getJToolBar1() {
	if (ivjJToolBar1 == null) {
		try {
			ivjJToolBar1 = new javax.swing.JToolBar();
			ivjJToolBar1.setName("JToolBar1");
			ivjJToolBar1.setFloatable(false);
			ivjJToolBar1.setBorder(new javax.swing.border.EtchedBorder());
			ivjJToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
			getJToolBar1().add(getSelectButton(), getSelectButton().getName());
			getJToolBar1().add(getJLabel3(), getJLabel3().getName());
			getJToolBar1().add(getZoomInButton(), getZoomInButton().getName());
			getJToolBar1().add(getZoomOutButton(), getZoomOutButton().getName());
			getJToolBar1().add(getJLabel4(), getJLabel4().getName());
			getJToolBar1().add(getRandomLayoutButton(), getRandomLayoutButton().getName());
			getJToolBar1().add(getCircleLayoutButton(), getCircleLayoutButton().getName());
			getJToolBar1().add(getAnnealLayoutButton(), getAnnealLayoutButton().getName());
			getJToolBar1().add(getLevellerLayoutButton(), getLevellerLayoutButton().getName());
			getJToolBar1().add(getRelaxerLayoutButton(), getRelaxerLayoutButton().getName());
			getJToolBar1().add(getGlgLayoutJButton(), getGlgLayoutJButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJToolBar1;
}

/**
 * Comment
 */
private java.lang.String getLeveller() {
	return CartoonTool.LEVELLER;
}


/**
 * Return the LevellerLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getLevellerLayoutButton() {
	if (ivjLevellerLayoutButton == null) {
		try {
			ivjLevellerLayoutButton = new javax.swing.JButton();
			ivjLevellerLayoutButton.setName("LevellerLayoutButton");
			ivjLevellerLayoutButton.setText("lev");
			ivjLevellerLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setActionCommand("LevellerLayout");
			ivjLevellerLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjLevellerLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLevellerLayoutButton;
}

/**
 * Accessor for the propertyChange field.
 * @return java.beans.PropertyChangeSupport
 */
protected java.beans.PropertyChangeSupport getPropertyChange() {
	if (propertyChange == null) {
		propertyChange = new java.beans.PropertyChangeSupport(this);
	};
	return propertyChange;
}


/**
 * Comment
 */
private java.lang.String getRandomizer() {
	return CartoonTool.RANDOMIZER;
}


/**
 * Return the RandomLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getRandomLayoutButton() {
	if (ivjRandomLayoutButton == null) {
		try {
			ivjRandomLayoutButton = new javax.swing.JButton();
			ivjRandomLayoutButton.setName("RandomLayoutButton");
			ivjRandomLayoutButton.setText("rnd");
			ivjRandomLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setActionCommand("RandomLayout");
			ivjRandomLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRandomLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRandomLayoutButton;
}

/**
 * Comment
 */
private java.lang.String getRelaxer() {
	return CartoonTool.RELAXER;
}


/**
 * Return the RelaxerLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getRelaxerLayoutButton() {
	if (ivjRelaxerLayoutButton == null) {
		try {
			ivjRelaxerLayoutButton = new javax.swing.JButton();
			ivjRelaxerLayoutButton.setName("RelaxerLayoutButton");
			ivjRelaxerLayoutButton.setText("rlx");
			ivjRelaxerLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setActionCommand("RelaxerLayout");
			ivjRelaxerLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRelaxerLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRelaxerLayoutButton;
}

/**
 * Return the JToolBarToggleButton2 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private org.vcell.util.gui.JToolBarToggleButton getSelectButton() {
	if (ivjSelectButton == null) {
		try {
			ivjSelectButton = new org.vcell.util.gui.JToolBarToggleButton();
			ivjSelectButton.setName("SelectButton");
			ivjSelectButton.setText("");
			ivjSelectButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjSelectButton.setActionCommand("select");
			ivjSelectButton.setSelected(true);
			ivjSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/select.gif")));
			ivjSelectButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjSelectButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSelectButton;
}

/**
 * Return the selection1 property value.
 * @return javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.ButtonModel getSelection() {
	// user code begin {1}
	// user code end
	return ivjSelection;
}

/**
 * Comment
 */
private java.lang.String getStabilizer() {
	return CartoonTool.STABILIZER;
}


/**
 * Return the ZoomInButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getZoomInButton() {
	if (ivjZoomInButton == null) {
		try {
			ivjZoomInButton = new javax.swing.JButton();
			ivjZoomInButton.setName("ZoomInButton");
			ivjZoomInButton.setText("");
			ivjZoomInButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setActionCommand("ZoomIn");
			ivjZoomInButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/zoomin.gif")));
			ivjZoomInButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjZoomInButton;
}

/**
 * Return the ZoomOutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getZoomOutButton() {
	if (ivjZoomOutButton == null) {
		try {
			ivjZoomOutButton = new javax.swing.JButton();
			ivjZoomOutButton.setName("ZoomOutButton");
			ivjZoomOutButton.setText("");
			ivjZoomOutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjZoomOutButton.setActionCommand("ZoomOut");
			ivjZoomOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/zoomout.gif")));
			ivjZoomOutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjZoomOutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjZoomOutButton;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION --------- in CartoonPanel");
	exception.printStackTrace(System.out);
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButtonGroupCivilized().addPropertyChangeListener(this);
	getZoomInButton().addActionListener(this);
	getZoomOutButton().addActionListener(this);
	getRelaxerLayoutButton().addActionListener(this);
	getRandomLayoutButton().addActionListener(this);
	getCircleLayoutButton().addActionListener(this);
	getGlgLayoutJButton().addActionListener(this);
	getLevellerLayoutButton().addActionListener(this);
	getAnnealLayoutButton().addActionListener(this);
	this.addPropertyChangeListener(this);
	getConstraintGraphModel().addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
	connPtoP3SetTarget();
	connPtoP4SetTarget();
}

/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("CartoonPanel");
		setPreferredSize(new java.awt.Dimension(54, 425));
		setLayout(new java.awt.BorderLayout());
		setSize(472, 422);
		setMinimumSize(new java.awt.Dimension(54, 425));
		add(getFeatureSizePanel(), "Center");
		add(getJToolBar1(), "West");
		initConnections();
		connEtoM5();
		connEtoM10();
		connEtoM16();
		connEtoM18();
		connEtoM8();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getButtonGroupCivilized() && (evt.getPropertyName().equals("selection"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == this && (evt.getPropertyName().equals("constraintSolver"))) 
		connPtoP3SetTarget();
	if (evt.getSource() == getConstraintGraphModel() && (evt.getPropertyName().equals("constraintContainerImpl"))) 
		connPtoP4SetSource();
	// user code begin {2}
	// user code end
}

/**
 * The removePropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().removePropertyChangeListener(listener);
}


/**
 * Set the constraintContainerImpl to a new value.
 * @param newValue cbit.vcell.constraints.ConstraintContainerImpl
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setconstraintContainerImpl(cbit.vcell.constraints.ConstraintContainerImpl newValue) {
	if (ivjconstraintContainerImpl != newValue) {
		try {
			ivjconstraintContainerImpl = newValue;
			connPtoP4SetTarget();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Sets the constraintSolver property (cbit.vcell.constraints.ConstraintSolver) value.
 * @param constraintSolver The new value for the property.
 * @see #getConstraintSolver
 */
public void setConstraintSolver(cbit.vcell.constraints.ConstraintSolver constraintSolver) {
	cbit.vcell.constraints.ConstraintSolver oldValue = fieldConstraintSolver;
	fieldConstraintSolver = constraintSolver;
	firePropertyChange("constraintSolver", oldValue, constraintSolver);
}


/**
 * Set the constraintSolver1 to a new value.
 * @param newValue cbit.vcell.constraints.ConstraintSolver
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setconstraintSolver1(cbit.vcell.constraints.ConstraintSolver newValue) {
	if (ivjconstraintSolver1 != newValue) {
		try {
			cbit.vcell.constraints.ConstraintSolver oldValue = getconstraintSolver1();
			ivjconstraintSolver1 = newValue;
			connPtoP3SetSource();
			connEtoM3(ivjconstraintSolver1);
			connEtoM4(ivjconstraintSolver1);
			firePropertyChange("constraintSolver", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Sets the desktopPane property (javax.swing.JDesktopPane) value.
 * @param desktopPane The new value for the property.
 * @see #getDesktopPane
 */
public void setDesktopPane(javax.swing.JDesktopPane desktopPane) {
	JDesktopPane oldValue = fieldDesktopPane;
	fieldDesktopPane = desktopPane;
	firePropertyChange("desktopPane", oldValue, desktopPane);
}


/**
 * Set the selection1 to a new value.
 * @param newValue javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setSelection(javax.swing.ButtonModel newValue) {
	if (ivjSelection != newValue) {
		try {
			ivjSelection = newValue;
			connPtoP1SetSource();
			connPtoP2SetTarget();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Comment
 */
private void zoomInButton_ActionPerformed() {
	if (getConstraintGraphModel()!=null){
		switch (getConstraintGraphModel().getZoomPercent()){
			case 195: {
				// already at top, do nothing
				break;
			}
			case 156: {
				getConstraintGraphModel().setZoomPercent(195);
				break;
			}
			case 125: {
				getConstraintGraphModel().setZoomPercent(156);
				break;
			}
			case 100: {
				getConstraintGraphModel().setZoomPercent(125);
				break;
			}
			case 80: {
				getConstraintGraphModel().setZoomPercent(100);
				break;
			}
			case 64: {
				getConstraintGraphModel().setZoomPercent(80);
				break;
			}
			case 50: {
				getConstraintGraphModel().setZoomPercent(64);
				break;
			}
			case 40: {
				getConstraintGraphModel().setZoomPercent(50);
				break;
			}
			case 30: {
				getConstraintGraphModel().setZoomPercent(40);
				break;
			}
			case 20: {
				getConstraintGraphModel().setZoomPercent(30);
				break;
			}
			case 10: {
				getConstraintGraphModel().setZoomPercent(20);
				break;
			}
			default: {
				getConstraintGraphModel().setZoomPercent(100);
				break;
			}
		}
	}
}


/**
 * Comment
 */
private void zoomOutButton_ActionPerformed() {
	if (getConstraintGraphModel()!=null){
		switch (getConstraintGraphModel().getZoomPercent()){
			case 195: {
				getConstraintGraphModel().setZoomPercent(156);
				break;
			}
			case 156: {
				getConstraintGraphModel().setZoomPercent(125);
				break;
			}
			case 125: {
				getConstraintGraphModel().setZoomPercent(100);
				break;
			}
			case 100: {
				getConstraintGraphModel().setZoomPercent(80);
				break;
			}
			case 80: {
				getConstraintGraphModel().setZoomPercent(64);
				break;
			}
			case 64: {
				getConstraintGraphModel().setZoomPercent(50);
				break;
			}
			case 50: {
				getConstraintGraphModel().setZoomPercent(40);
				break;
			}
			case 40: {
				getConstraintGraphModel().setZoomPercent(30);
				break;
			}
			case 30: {
				getConstraintGraphModel().setZoomPercent(20);
				break;
			}
			case 20: {
				getConstraintGraphModel().setZoomPercent(10);
				break;
			}
			case 10: {
				// can't zoom out any further
				break;
			}
			default: {
				getConstraintGraphModel().setZoomPercent(100);
				break;
			}
		}
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G62FC71B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E15DFD8DD8D4D57A3836D6EC2121E1D15A2E392C51CAC6AB15993FDDAA7BAD25ED341111E1D1D2E12951AE3B39AD5565EB98959CCACCCAD4D4B45CD8440FDAC2CB94D0B0D4C2B4C3D48666821383C3B397990C747F1EF36EFB6E1D19BB8C307F1E67772C0FAF771E771C77733C67731EFBC74859B0A9BDB9A5C790125385795F3F1385A157D790B6CD093B97F111B61DC1D07D5B88701E70E6CE9ADCE3A1AF
	7B9DGA120D38F69C4C86B7F22B32C017BD542AD1D7A91F063C1CE6CE5C1881A90DCB0301C51C7D0CE86CDAFB91B895715GCB81C72E15F6A2DFF7AED7466759999EA1B9C5900AA4D2E66339BC996783E5A6814483A44965F3204CB2AA794A32D239DC5358A0A16A51700CAC42C74593C11298ED00FC95046A0C729EA26B7039CC19A692727400A346278A15FDFB603A376EFC7B172DADE62978C22BE8319437DA3B6C124DE86E126C456DBD6632328A85F148E66C6EB8E2B50916BAE317E89142A87FF16774141F
	A00C02F47585021BAB9019825C678214DCC0FCD2AA417B42FDA0C0588534730B0F774AF61C7A61DEA17E036E778C9E6C0C3A406CCB3A205899D1B2B565C3DAA70F9DA53EAF6D55991AG3A817C81C28122G5652D808BA72CF386EEF11AA2C1D1D562E7D5D5D87ACA69BB58B6E4B4AA0C746550B2DD61BC990D8FD571DAB5250E7A0E0F4E707CC47FC92348B6BBE38FE1A90B6BDAEA3C343A7E1C10FE4AC6AE53EC8F3A8BEE132EF74A83B40619C1B4E323F915432A35A6BE84C384A0EEB28B3144AFCEAD5327D9D
	242E9B13C9DDDB601E50117AE4786FA8BEDA05E7F19AC3E306B63CBE1D213F8FE36354CA5425B6ED3210D07212269F9C8F4E4BD85A47F4483E682A0BFFBA613D77A21379855765FE0A8FD76119AEA9E919F23A7287085F9FF58696DFF36BC83B4D3B2CB314825481F4G78G84824C380CB1366E6876C146D81D51A69D68B1DBCC22CDE034F30FFEGD751810D2E861A1E312BD5BCE934190DAD9651AE48E51EBFCAFC5062C497C7E33F95E49C923BC41BD1B2DB3B003B31D314C41B1D15D9FC74BDD246A6525C86
	F3278882BA3B85647B57232BC81D996D5209EE13D1921592AC7F6D2324CEAE98CF82C7E0G774CAF297534CE417E84GE1847A41F10C707BCA34C1F7D1D6D6EB351E6F69EEA01688F5A3081F27513EA3876E0BC6200F5F2DA7B8FFC887F3BEF79EFBDF4527525CCA54B75A7A300DB5A713FA89077251GCB896F11D0C7G27G9CA3B116161C42D82A4C3AC348FCEA01E6AC1DBAD1E718B81245D068C857B655CDE591FDE3A0AF89A06F8A1DE1AFC093C07F95B8BE3CA8F43B700D1675BAB5D2E9FB0E114E6D30D4
	CE939B865BDF042B4AB25949492E325365361D254299DC4A2CD071982C6CD455BD2B3F4E86928B93418FB3G222F40BAFC75D8BEEB93870CF691DB41B19B8430E8D2EA1469FFF33A832E2BD5BA137674AD40BE42836010DCEF6781B6831C8678B7409900DDGE4EC7B8620C6E06377D7G1F83EC81988FD08570A94077GD7821C83B882F00C7B70812AC382681F7BB31D219C2083408FE086C0AC00FE94748DG27GC6G8481C482AC85483F9246BC00EE00G00F000F8006C2BA0AE811A81FCGC2G2281042B
	F506C200BAG475598C37A3458E47778DCA6DF33DC702BBD5451C659C7DBB472364B57DD32BF7EAD7BE90F0CC7FF2F14FDF6C87669D7AAFF2979FDA35753E939AE4EF950693C6A7E7BC1465A15DE72478FA1EE7FAF812B6B1F513ADE6512172EAA63295D2961E3GB2677D17C69E464D86393EC93B7CC4E071017104FD428E2A930B19ED820B07AFDC781118A2FD86E9776B8496B7DABA29637253C17A645FDE72378F124F7FB5E0FDE1EC9D7133F8C16C12AA45EE314B84B7F6B96F15BAD2CF72785FE665B40BA9
	3E9B668B95B0C05BB97EAFF5241E0C12E4B33774C862F1D1124CDD6DCA7EBF28ACFBCFCB37B255C0D9A9DF1378327642FC01174F781A0C35308E6892E9274CC9647CE5F42C97ADE2A7A8DDE16D6912985ED0CF56C76745BEF92E312ADEA710390225074CDB581AA344C862255BE66E042E1ECCFD04042B49BC60E13EE6A2B089F0E46DB48B2E51D763585D3B99476E020B378B134E7DAEC3EBCE6A78757C0CD29FF9CE6A230C5DCC2734635A3AAFBF2ED770F626EBCD8AA9DB81CADA49C48AE69E294CAE3200948E
	74C812356B104D5A53DDE13EE03618AF0AA616BF3A0368FB9C18D177892C2D2E9292BF7E087053DACEB5D82D169DD86E1E029C27F2CAB1167F600977D87D4879472D168B22ED871773E56D9A27FC60A441D53455F4F6DB64B1FA4A89BAB7877F0CG887041B17A2A63A49F67D97260DCE135A836447A107A3AAFB9C76573909FD6DF643E6E67A47FA51EDF8869721FAB790C7E67A9EA7AG377C3B1D72E3FF6E4A7F851EDFF08D4C3D2EF14D3FAA9573EBA14F244AE7F65A9B32C91B903F6F91E1FACDA624DF7138
	3D58703ECB5EC9B906D97E958DA406AD2A39EC5CB5C426C107EB7A40EB585CB06C9AB6BF0C026BFA407BDDCB4ABD434B15DC4B742A3E1615EF3E1669D860CB4ADD1F0165E22EE5F310C4382679B2FE45004F99CD4A1D51E339EE4873818872E5FC63FD657D84DAEE63B2AC578CE947E825DC40E8D60E697794AFB7EBB44B0F01EBA2C04E9835FE37AD47F2C5E3581C28F28C1B871F9A4374E37C4E2D40F29D009F81B0E98C1BB3470ED14B5D1C09657457417C89207CBA2DF22F70F2A32ED374A365822ED3171B1E
	0565C2G9FF11DA7396DAB31DCBC14917CC0369FAB576C27AE7709814BB9G6F6767095FCB9FF139FE4E7AC5B8713BEBAD160B857CD20F7C44BCAC17BB5619DF49D8D60E455F076B301C6FD896F701E3D9397031AC7ED83DAD6265224732B9EA42D8D6EF42B8D6EF26F1245C4C75D8AEFB9C1B4F960EE372CB4729634036015BBB0E4DFDC99C10F846B8E07C3666E33908F1EC1E9CAB73CB107931F24F71F2F95733F9756E6BD9394A6B55F2EF580865246B599C1C48A5F16AAC7770A66E176B59FCBDD06697FA3D
	DAEE4AE6AC97F7BD1B5BA74965B27D55FE1E494B157A337CBAFF367633782B5B792882AC572F4A6F172F0A9D0737E0B9FFFF368EA0F61072417E4C8EA6B7E3AB160BD471A175966FA4F7AEAF17B91E71A9984F62E077F8A6170DEFFF59C646DC3A7F771D710251D1EC6F05F9C3D959E1BA56313D3D6D4DE4DCA463D95DF85C431B50CB468E9FC8CF8218B19E4767A732F08F4F7FFC109058F14C60E92FB2D256A3F13CB2BE1B5E58370C0DCD89A7094C5DB7009FEE40F1696D8675BE42FE3B5D5AEA26DB98F21F9C
	FCC2BDFEB35CDDA71643354DEC33CBB5B041F2E07FFD6F8922AF5963105132BF26EC5EAC2877C3696E2756B0AF6F117DF8D0ED6FC4436C0C959E6CBDF5833353F103E26F52A55F9B58DED3A61DE71031FB8664A7G945EC870B5A9E4BEC54690A62FF5974A733B78EB21FCFC3CC7F9169B199C5F9B95F9C5177E26E7F65A378CF15F17CEC064F9901929487E7AA66F332171D1CDF8F01FCD1F0A364F82DD13EEC45B2BD2096D24DD31F2F724629E766EG087BG5C433E3AE37740BA2865BBCD04985FD29D4A8F84
	1EB1GEC8EF5AE05785C6EB607FBC8C77412BA4CF6D6A7FF5EDFAE7BFC4E3449C2C0463C8C2DFD6B6A5BDE4E48390955455E1B14BA0939EDEACA82003C6718013A78C219D9B721AEE60AB7F719A5331144DF61B6E6FBC957A6389ACD2642DAD57BAD5E5FC24CED15D8646E59F69277F46FD82F56B53E79C9CDDDAD8B6F4EC812F5AC38D9517554CDD3D3ACB7212EE1DCD78B14893C99F55D2CA77EB15A5AF730F95C6C3D6AF9DC8C144B1CGFD70840C697EEFD12791F3C205256FBF2B2993014A89CC974B84C527
	8270DDA9775FD57ACC39AD07C119C4G26432D2DEA9D0AA6B29D9AA6224E0B75BB094E34220B5925CE3435D9ED1D222910F8365858AB955335DA71FE1ADDC56E37E13F71674F48FA7A22555AD953451CFEEE3F8B972884E66F64D56ABA483B9C2CE9EF07611E0C0E09729CE022E2EFC2405414B4DE870717213DB1D0A6679634F73BCE4B5E5ADB304D9CDF17AF6BFB2CC77228B013714EB22C67E6208F3885FDA6AEF70DC9A6BB69C7356CC8A81F84107F8B243BEEB969135B5D7A014865A8E7B714357C82F54D79
	12DC699A1237411A955886992D4F8A5E0601AE669768070502169FF2FE093A3C3E62BF2B777BAE117144E26C3376C82C8996DB0C50G0F43C23C2B1DB4BC26DFEDA656D3A148EE7EA56AF7A2D9CB3FG2E5F744C616A4764E6E721DF0201E79C67BBA1EB9956819969857E7C05174F1B846DE3926A9968505253F792764DFEAB11EE926022B9DDFC2396DD762D28471BAB7FB37FB7FD1B497DFF48524EE33641007A94002C26DBD11F57B475713F956DD839966BA90850F0BDEFDACB465996E5A2A07BEB5EDA1413
	BB99660013D1CE5186ADB9BE13D14E18BC14B391F0D113B156B7B6117DD43BA8E90E1805351E8759E2CD8A5A754B3A9ED8073AE67E8A66D53FC25BEEDF17456B00BC2AB2F619F8BB0BDAC75AEAA730E2910D3CD62FC7DE7D40A714736ADF0FFDBFCB872EF7EE278B56235D0B0026A090698EEFC0BA6607055F127E34DD1476F7F509C60BE8AB5C665E3A647E749F6B30BFAD288C94F2936F73B8FEB48532FEF4D420521F86E73D298F87E07ACD5800F6C5C1194CDFE3FD9D4BC73DAB81577FEB547B1EFCE73DF715
	4AFA57C24CDABC694DF8E6ECC41E2140EF9167593551196728AD1B994F8A332D3547E234C1DFBB905F5FEF6431BF85E2FF8A5AE05F04727C81B7E78A4A1B3749D95E663E0DCCDEBDC402355323B40C05CFB6A35F345BE0ADF29B729D3759196F611C75B2DF51E2F4F8E2AA4749E634C182FE411C6769D432E7633A6FA57B2D40B9566EA8C09EF1C01F97447D3085718D00738DC25E0B368C34E746E8CB367239AA50A5F15A7B37FA27FDF7AB7AE9776DB03E5D0E34A7F3D1EF163E142BE5A3FBBE303B991F65875E
	4EE2F8466D4AF33FB9F09F2BCA53F589FD46EDF09059093733E75C699C7F91456BFF2360192E3776222EF910B762B778DC76DCA3D9AF46C1DA182AB3648214G5481F4CF45F55A3E13643942004F3DEB3AA4D84699AD471DB624717973C9620773E21F1C7E7BC97578AF1F71B8CD7AD7DF109984908E908D30146BB0629B2FBAD4B9B4F5E0FEFEBF0578B9B7F8704FDF99DDBE25AB99829D6B4336B52A4F7844E587E424FA68431AE55E5D41CA9F46FCF2618C71C9886067G4481A481645D01BEF9741BA2EFBE41
	B38632B318CDABD307670B3C54217A0251CDCF9D5E991B8706C977254E9B5D5EBB1CEDE0F435DE691ADD68D8BD4DB9CB76E69C10678F908C90813088C0BFCDE7A81A067515FB6A00377A5A0F8FFC9A2C7C364275218D6A2B4F981E1D9FF8252B1C26E5677EE6E2E79364B9G7CG0281A2819681E45F09F6FEF7EA0FB7BB69248FEC1467A82E86B2BD9F9C26FD11DE69CA6EF426E363595FF3B5760A8E134D1183C6DB03353D1D34A3B2E1141FEF79DED6BF5F2A3E131DF769066BA8G36579631CFAF30E72E936F
	44BE7781A371239082ED99E0B7C09D00846087909A02FE8C739EAF7CA850E06245D76F6A17B9A14EFE5076674DEEF445AE697890ADFF9A68F3A70D3DC8590B02FC56B03A95FDA45C05BE7A2C157848846991G81G21G51G09G393FC59F993E7DE21031D68138EA2B753C06FB70AC60326179672C9B1D2BFFCAFF6BCC476CEE53913B495C366E37F8B6A4ED7970E27EFD2FF4213F552A236C8379027BDE9BDDC716159D4265A40B7751075571BE8778AD85481B8EF30669986F3BAE6139516A69E8535CE15A94
	6715EE44F4AD3AB1AB06A7EF22D73A0069DA75181F0C719B42ED2E4F9CDEACB53B513946D2CE28168E3EDC0722D05461032C61792140AB1DDF28965D0B4314176015AEC85366E79DE8F3B8377906154353A150ABDD415DDABAECB80DEDF86F5D28C373C74353214BAB5DA4CD9DB61DC6BF4C60BA642C9DDE7CEDF223F30D3F3CFB3468E25D6886E773922FF43B6F513239F5835ADCFB8F5A6C1FB7BC1BA73B51395A9C22E9F3753A6159FC52ABDD04263C356B07A7EF1BD73AD8CDF98B5D6886674FB75D68DC7D39
	54C59E9B736FB111B1BF7BDE18C781D482B4830C821884B06BDE9C73DB3EA5E79787BBAF72BE6E5F3AE1F8FE3D53ABDD5C3DDAF4A772076757D6B7BAD73FA6E94A4B5AB8BCF9EB5D68DC65654C5022FB580DEEF07EFC52ABDD11263C3ECD43336FEAB7BAD77BAAB5656D58BCBCF97B5C68DC65B5E94ADB68C6B7B8FF3E6915CE5214B73DE0F8729E70CA672BDDFFDB06A76FEA2FF4011A72BE5BBABCF915DE6942B46525FFBC3CF8D965C6375EA59D65A20F3DFF7195BD5F3188727477415A12621A8F90DC9E24CB
	B86E0BCA02EB003405634ED6911C9F24036E43F1F5B51DE705C1BA1A6372A90E4C7F49F390063B2D7714977F2C1479F8AB932DD10649889F148CCF672855102E01E363CBC72367F33C56C66DF33CBD0D5A67F8FFE8FC0F6101077A2DA04C7FD9634067FC2FED74FC4E7729531E750CB92D2D670B2735750CBFBD301E8927BD69390E7AFBAEBD6FE26B69124C1DA2E54D56172203BCFB0091393E270B8D57043B5DF5FFD240B9405FC432F71EF09F0E75D7B76D945C477AAA13D9325A10C903E8349DEBEB639BA047
	3B45D6547B52994FBE3A720C360F2EBD236D2331E7867651CDE7867651AB92B9B36FF6867BA84CD484FCBE5723DBA61729132CF5BBB86F39E7BD5BB17F2C369D8B4E126700F6EB0F2DD5F45575553339BCCF199955C8E2A7D1C7BE03CE69A5232DDDF43375ADCA4F72BC51271E234FD84DA633CDBEF143EC5C1701B6D6C956A31FF21EDFB5FB36313ED95B46D34D1EEDBC576C5D460EE64FB6DA1B3D5B68E876D4674C563F5373DC34BE5BEC56CE28D156AE1AAF13F3639AFBE372F6A32EF3E6DD4633FA19B3712C
	5E03FBC8DB2B04F49300B4937B5F4776E9750D3EB3D9DFBAC93E064ED47A5688380F81C818695C5F265D2FB3645E6F0CE3764EB6FA2E23BF99356BA85A68390E1EB7FA2F23F82367BAFA5D683D0E169ADD63103547C7BEB05076EC370BF63AC9D8E9140CF8A6CC2F0A518A528E190F6737EA7938C876D539FCEDD0792E836E7B6FF79F4F7CG9788B0C3154774ADEF756C63C32D5ABEBE526A59478D2D5EFDFC2655330FCD2D5EFD5C59BAF0BB38FA195A1FBB39BF4F6B347CB9C776C92CFCCDD479C89F26B36405
	397B3384F015AEF8A6FB8FBD1F047D4D0E925C7BEC2FDA275D860F375A2C960BFC0E066DFD56BBDC5FE5A1FB7D27C01EA58C77BE9FBE2C176D9A9506ED75500F242D06C1BA8AE0D198365552CB834DA5537E475DBEE6CB568A677E24D446BF3C4249461D685FAD49DA7E4D1579974957F297F98D106EF04175C35A8FA0D005E732FF1E296E4F1536B2D6D3768C19FE0EFC0DF5111388E97D6F1CF1F910AE81287C1D2B6CA3D9CEF6FF06788FD72AF57AB757A956212553A9192FC53E0EF0116F8F69A097DC9824A3
	81625CF4FA4CC97667DCF641E9AD59CBE57A4C5FEB4F0B73813F5BA52F9A52CDG5D3FF715FD63C7CE7E580532BF5614BDCA268F102F41AEF242A19D65020B07F492C0F6382B6C2F56BA49AEC57C1ABC35BF14365F31C1CB278219EF29FC2D8DF7165F8CE9498567836909GA1EEBA4DF612DD4A7117572967D9BBB93EFE3DF37B5AA96373B7B861ABF649FDE33849F3DF7D8713F6DF7D1849F3DF9DE5725ED74FB7F96E2B63CC5E7B6A4526017B6AE8FAE6CAB5E7A9E1F85FFCE79FFCAE172F5C680C5FAD63131C
	71F5D8BEE413F3F974F147E6E7BC76ED79856A3A5A4575FC35C0DD378ABEE40B335CDDB23EF32B1A4FEEDE3EA8D74DC741375039E137CDEC93EDB651F45CFC110C87C96124DF7F012E31E741FDE4B81E7B69BDC05E0DE4E79721ADBDC05F4BB90063C6B924CF810CG70FF000D9FEC9C3A2B17685BE6B3F6C2B550450B4F03744CE3A552A6C2F9BD608A812A81BA9EC419BDD50496884D1DBD1DD4C326DF45C122DFA4140B61E57F50C74EA19D940DD20FCDA4E5D56FBF663CC7FC0033CFE55D711618250E95F92D
	425A6FA317499826FF0835393C071C5BE409CB3A92526C0C52053DA43ECEBD444EA811F3D68CFF8D457B29706C6CD2841D6F12F484640D1A05FB952F53E76B658FC37AE144B51493DC9324A50EDB390660FCA09D48F197A8AE845233B86E7794978D69F80E1BE5A138A4C8677EAF5FB751633EC99147CD2238BAC8F7F05C3B7439F6BF24FDB92E59C4F081108E61388FA86DACC847F25CA50ADB8469A40E3BDDA4386CBF005CBFA02EB083F5A96738EBA94E8469FE0E6BB752FD9DC887F25CE89D6A9742F1CBF428
	DF98473DF58E750B6438534D28DF0C42CF0F7AA5F05C4D0D28DFDA8462E6B622FE0591B8F73A46016B1C3D91B8F77AE59529F789523EG0191B8F7FA74B04E1D42A25C474CC840453960656F42503958528896DF299C7FB0456B9FD170AC6E0E7C484F82C3DE7FA3287F31CBE8D3AC479D224FDF539E5599F29EC5DCB04565C33A14632EEEC4DF56F2DCBC451D023444F123859A33108E6038C785149B4CF12FD2DCA42463DD4AA5C1BAFBB66226A7E3DD67F1DCCE8A56F5A14775F37D76F25C7CC62C57EA0EAB60
	7AB5A9653EC67D3AB96E6D2F312E7DB96E460D28DF9047257421FE219C575A077A05F35CCB6928DF94479D5421FE319C7778B954AF1163569621FE7AB9085BD3047A95F15C475528DFB9479D244FD8EBA15D44F1D3A92E8352A3B86E8A8177DE7DB92E3791F5896238602D28CB98474D590AFB2F319CF7DBA36A1248F1B5D42E70985CBF0638E9941787695D9CE79350D7559C77A40BA1C8F7F35CF5DC3FD19C77AB2EDFG47BDC4F1E1100E6238A327D13FF80E3B06BE1BCD04F45A9FF9DFCDF15910AE643827F9
	3F321763CAE93FD28DE993473D1B0E7AB9B8EEAAEF8B3E9CB71B62C2A09D41F1D54928DF8C60627FC83E81B75FA288B8461FB8C04EF7F7093D797C6504CAF32758C5BE04D478696E227C5DBBBF5DA61F691C542BBE53193BBCD273DB85F4DD75383C2E122F851FA669D81F12D3016F3CB9A0AF64F11C833CDCCC46DB3E96A50A14159D3012F775EB5904027513CD95FA19BE7EF16CA72F21BC73A3211F81280B4477309CDB715D4260A91305G13763B1B618D33B3BAA2191E3E72153E47D6B2B505493CD809B2A3
	A0DFF8026002AA556FC390DF9EC9E54F33D87EBC27FCB25FA45F9BD172B32B5479C45F3B1C683FF44AA7BEDAA753B35BE6EFC15B12E6078835F77F4963B7742A1F1057F672F5C6EA12EE6244234BD8AC3C5D254442255E4144820B2BD83AAF9788BC431E40D87B047545100E63382DFBF81F73A77E0C0562F6C33A76CFB826756FA5E3DAB3249DG3EG01G61GD1G09GB9CFC25B86E8G101EC4BABFCAC73E9F6077A47BCEG7986C048136CDDFB72FE7CD2793DF6720EBEF98F1E517DF1CF88297BBF390F1F
	C40656BA54D723AC8107873CA473E970400F4EEBE55AA879CAECEE16ED55AA4FF4FF1B6A3EC2A35F75BBBBEABAAD3C56B3A082EB642B27EFAF9140EF6A60771A1649F1741E0772AC46F465745DGD89432784B6FD6626FFCB91D4B9B9DAEF3791F51B9EDA478A466C91C4BEFD923750E8F63D9773D42F3B41D5332F7DEC593639738864F686923105F5CB5C4AFB3AC02D819C534CCAE649770B24FDABC2F079269BC5981E5C7814C0A22F3F1BD2EDFC222BC6DE75D2B57DE3FBCCE671219CF413C7BA9143F315559
	F7F61BE2E72FC95BF7575179F6A5702863FC7E25776C3B9B6C8A4F71FAE71FCC25BA75839F9F4EABDC746C13E768FCBD864A46BF05BE591701BE49196B49A713B334FDB2134E6B8B01EE77DC14FF3DD1C76D36351B3B5006D5BD823767338B8257E78D25EF86DA4BDC9C8B2D3DCA7EA8BA7686C0DEA0G435DC3EDDE8A69342751063B9AF3854F6D0251AD20F30A9220597BB476B957B9F05E5E71B4333D7FE94587FEF09F7834563CFD55C1B23E4DF85A75DD177594BF67E957F7DDFEDD056F3A44C2DEE5B4763B
	AF9C4639D99047B57571F998470D6F43F9D8FCB46A7E400FA49612F8FAB6CD136FD23074719F55FBD9241CA77F8C87188C0B130C41BC639E8A30BD0736CBBCBE1F01399AC0B5C087004FB398F3E7131D5B61B80752E69ECA56EE074F52F9D8907088FD86E36F6EBE056E5DC64F6DA8174EB1E301EE9157E10FC0F4E833F6C9F21C5231B7F79E74D773B0CEDF90860AD346A7B9D93B2DFDC875EDGDE4D73D066340D6EEDAD7A2252567E710352163E20EBABDF208D180776CE7BD14957D11BE6C1DE64BCECEBCF53
	F9EE9224754F228D09DFFBEFEBDB6937B5CB012672D914357A3222971935E2D9DF9A5B5DD02E1F17BD1D2C64DB69DAAA8872C21FC53D1652F9FAAC2497F13DF696F9574BC457D6F9B190C7B1A86BD20AD267E7CEBB47512D29CA5E03273563E89E75DB8370EB0EC17D58DA409752819CB7092DE3A19D9903BABF34553B4EFF25EB9CE13E4E10B99FF51E152668556C2273AB69CA5E439EF41ECFF5AE85FE151C67728C056ED541F36C2752B86C863A7E79E85B8CEADB9024C36723EDB38734CDFEAFF42BF62C7F19
	5A9C873C9238FE7F52AB7A5D3A4159667EE5CA1EAEDF5B667579346E1F033AFF8EF97EF239C2F7EC003D558EBA8EB5GDD73F3E8F3A10DCBDFC887BC07B6BFB808767D2220ED73DBB4E6A200D794576FC1D2D4DEDFBCFEDA3D56CB38E9E686E9A4DA6B8B61F979794D734A5A091DE5894D247B1300EFFA9E4F33EC6AA45FE6BCE97C4E7DA48BA06BEC56EE51A675B1AC7DC2195C77FFD4B13CF7618A07C9E79CB29D9B135F21EB517E6759181C4C719915846F23424B5F99606BE1FF48DB7ABC3E7F73D296295B26
	D8D84FG78818481C4G444522AF4FF71688DE4E81B7D83B690B5B2A63BA4C3E4B15C3350F45458399386E8C1D799BA1602AF19E3F5733B41645C36E8B6CDA171224A3D7E61F43C06C2B06BC93008F40A400D000B9AF20FD53BB6577BBC9B86C17A4E3EB877D9292BFBCE596FB95B4F9F0A0FF0361B251354DE2B5CA7259AA96738681577131AF6018F6C0A0E3DA8B5DE840E7965F72F6158865B2DF54994A819ADEE4E77D7ADF24635B1E7C81FCE5F91159ACBF2358C3FCE43519C1CB76FDA7264F68BD388E1975
	A26AD33C1B44837B4EA2FBCD0C617F1CCF6A6DF02D31C53460731C19BD24EC236A9BADF29F2D4B12717CDBA8DC17D9DFAAFC70B9D5CE9379B6A0FBB91EED36A0914BCFFD0F64131775AD22D63E6FD6124FBEEC2015FF43A7E4AF83BFA020AE4172172DA66BD679A5FAA786AC7F1D0B64394DA1CBBB4B13DF1FE35F253837C53DCF12A857D16E827CEE05D5504AAFDA00FD5EBA7A5A1DEC679AF23E54437E474E52227C1D255B306C7DF43DA859FAC446E75EAA054F1D16C3AABE7889231ACEE33BD8830B29C272E8
	129C2CAB5CD6CCBF9E401EF696EE5AEEA6C56C5B59EA35385D5C36E95BB6F98E73F60E42FF27FEB0FA4AFBD7F47DC257868BF0DFAC620CFA6FC87864964D3D2368B391990E85AC0EA7AED07AF64B6A17D6B01D448F941DEEEE990CCE0C4EE70DC237E2D036B03ABD9FAAF47E62FF66E37225A0F317330F4FFE2470DF17B1F89F0B996863C89ED7A357AA3C3EB78E5E46BB73943A574F8D1EEE53FA054E212F7E0FFD836DCCF68E63DF35C161FFDD6360756A48D7686A05415031B56894872ED575F138AE2D3FC867
	D410AE6138A7FE4075EB8347AD6F47756B08B8DC1FFEC81F877BC3BA08638AA8AEBC0EFD4F096126D68DF43E1A508FE62C8C72D00E4918B5200C412EEBBD6D5D3131E579D7F4CE8BFAA4446118E56F4B9F00DF5ECBCCE7C67FBB3ACEAA815C5E17F0EC2AAFA47D47A155B71664F7AFAFE17CF73C047B6333AE396E0FBF13225E5F7E5BA5577DF1527FA8790517DD774797BA51B7DEF65D9FC7FA96F757EED4622EFF8871BAED13C2F745206215517D2CD0217B9D7D7638935DC1D82897EE5AEFB39BAD1B0A72F740
	7F12EDDC57A95B945A5F8FC166A37FD4683E9F020D0BBED168BE9C023C6AE2056E092F07E663796D8A2D6F46414B9CD322504DCB9FBC5DDDBB943AD9C368C7EFA9D5688CC5C333B17CF305B62FFA70B29714A9F43DC3288F5DDE054EB2047AEF79D2211B34F5E8B6DE39CF211DB88419C1658ADD7B90EC1C3DDF219BB584F99FD7AAF4B78E51462EAA05764069414B9CFBD0211BB304188BBD2450A58EA146338FABF43F9CE21F336BAB0536ACF9B0B2593AAD1652317519AE137C0E0266DA9ED6E707015731166F
	E0A65BE0EC67B477E5127E1A1F27E2CBFCBCCB18C97AF47E7DC53AD4E21F51123F8DC16BD4FE27D3F5FFC345E05E099AAE486F3A7E24B2187DCB32BC1F257CEB1676D94AFFE4E93F2B133CF260772A162D747CDED576CA756FA730FADFDCCB6AE6920C6FE1G31G09G7A17F12D7E0B15E460E4DF70F1DD27D7195AC57AB1BFE3170472C79ABC5B6AE3707EDBD1E38DE4B32D458AAB41CE429F71B752F91CE46D26C8061BC857BDB6F3FB07440A4A784986B2EF3108ED944D5A42D6BA17E8B3DA6C4AB7A4C78A7C
	7BF3E0EF534BF8E6A1BD1F443F6B7979E23619D0D6D6A535F6082683725602BCD7FA046FC1783F0C67975E247C67C0BA8EA069E51CEFB56EA1EB4CEFC43BA47FD604086B363C293F9212560F4940F913EBBC653CA21F3FF8C5D937A97B9101FBB643D52D72F172972B48DEFC322A3E2126E2FFADFED33B4D43B73569AE8233EBC98B4E8125D770CC5B9481F1412F607C7A325337F462G3F7415016754AC7E7A696F00E5466B8C05G35GA6G8700DFBC46607E55E49266E9EF11ED9EA89F15E47AFC67742D24C0
	60B5A3FEE0FD646733F4FDB2874AC64773EF9ADFF4BF7FBA62A26EA525ADE467DF7360DA3210FDBB064D4B63FF489FC0DE75C2753CFC97DD5BB4812EE3A1FFF61DCE77F468E9569DF29DBFD7CEE2CA75A6478E769E4749032E6FF190BD7C01D750C27E6C24CE603172F55FGE7C2F66EAC4A5F7579E75B6432FEFD447E8A11FC8B8F47190A2F95DE7F7CF1B03C64F7A71C5E8F89875D22968EDCAFF2BFD96B39DFC92A755E2F249FA17E9521BFE8686B164F0BAFBFC26C32363559C55EFF990EE4F3DC0D3D4EEAB7
	1351CAFEAFDB7036379A6FE28B239B6F154E757DE779AC0BD7BAD7E0FB522F141198C9FB55F52FBA016233DFF55D2BFEDB403D6ABC489B71AA6ED5975613780D0334701A4ED0G3097208E2083209F407FB5EC23379E99280D324E52350D7E25C54B3E1057188FE73D6669DD69291AFE09164BAF5220E37B87B750BDB3E1114E70B547CD2038DC99A73FBFFB54F32C798E62778E479F559E43A69CF59F43A69D559E43269CD50FE1CC5711996E7ADF1521561F354D4863CA5BBCF4F1B0ED1345C150C50C035D404F
	32887B7B040BB83685AE4231ED7D8F24EC8C249381B297E31F155E6F5ED77C25C151670A2A416843640EB90863CC41E214BB2F0648ED023484603B98770602AE21EF76A423EF6E38043EF9CD40F71543D711BDD1F317455CA5D630DF1F64F135182E57587D5FD477291A6FFB7D7F82799B14BF298C96D33B6ABD47F5D93D77382E28570E6B1AFA7738BEDA2F9D578D756A38E638EFE53EB67E52387C1EF3BD29ABB66E9EB1F6995B69FCCB5E8B646FA08472983036621EE18847BDA8E039A80E5B1C0C65E297631C
	4FC83FF9AB2FD13EB11B248E064FF3E4A978EA1158436BEC5A4561BD038C9BA65DDF07CC477A7DF1342D26ADF19D8FA6D0FC76925771206087BE9EC05E08A5B8477B7BA1D779F1CB143EF6699277FE1749B9FA18704BFC5DD57EB7941F7B3A2B7C589A14DFGF9BE2F637C65837209F001BDA33F2AF520E7642C7C675FA8654B1287AA4F6C8B2067DC64EFA7296E7F7943CF5F7EABFED299AC6E3369797FC560CFA1011F112F4136D01000755CF0D8317D0C6A7E651A1F5E8F6F7E24B2589874F1357BFC7E4BEA0C
	0FBA70C387009FC0A0C0B85FE71FD213BFG6F3084F9ED463E01D90DB19C89F87D9B584F6C205F1AF5B98FFF48E6B69DB04A0FC15958B72D9A475C72B7F06C0B21BC9D10768388FA83475C07EA886F63C05B417DE8299EDE9FF3F118F45307CC477A00BA5A56435FF06D9B3E2578B9EF38768DAFF23FC6C35E5EBFE34C1E2CD162741C6ABE3E7A270F59641FB4E65750BAFEB37BAD98A403978B69F61B703E7B5CE97F18E71E8EBED71913A22454883A8EBAD05588693DE4A4F3F40347EE87B61F593F97AE915F30
	94843FA46858D3E9F64F4E9C00848317GC9D13247DE58D5163A60D729A9C29A30E7D3009AA10D0C63A0454624254294004892D254C0B9E7482796A4A155E6F1C8C2165329G2AD606BBE12A2D4BA489196A938C9E0B365ADA21287AB00347226D16F60FF9967102A42CF4BE53603130314B82B25587A4340B225B857AFB6C605E4D2D564EE2F3CBE7F14F054EE2E30BD4AC42F229184CFDCC7CF1EE63C34DB3BA9ED93DA9C5C82F91D63419C50B69B8FD20DBABE453D425E8EF35193B497AD4925E27BFD1301D7C
	C441F679A78AEA0577E8B9FC90CC5893C556578A2BD46C8E1AADE2171235D215F5223E16B803F26E92256D105EC3ABB8D992BEAAAEEE229F55EDE2CF171B14538D200D7B118742FEE3370BA73C2556B1D99BC156498A1015DFE1A107EDD0247230DFA5D2C1928E9F8FD3642681C44A4F50A5E1154613F54263DFC3952A0E0DAC270D7E07EF7D7465B94F1D34278A3A9A61C3F2AE7838E8E3BFE3E4A21FF511FF5B7E20302C5BCAFE02817050AE6D7412EE177A20B188B9ED756477C16D12E8625F1232CB42EAD631
	BD1259323D5AE86F20072AA0EA52F8B4303A5E1FCF75A3F374E450EF95550FD095F32AD5779B36ECBC9CB7A3D5C8B9A8AC37D80D260346D6D87F57884B248E1BE86F30DACC0E6EFD6514113E178CED6468D49A30DB4B4DA54695B7409204ABF95EF10BEFD6FC56C1E8C48E1B301D16A447B50BF989D3C507117CFE18E82B81B00248821EB7F23D347531C3EB1AD204E4E723A466A05E4D515F75B8C80E154DDB7C4864E777A6AC821203C2BA7DA587901C2D14BA5A5359A25A2E8A9E3FEE05FF6C35C42FEE629EDA
	092550013699BB4D16BE382904BA3236F3FCAF6D10E9F2AF7182E6AC0375D6171D7C0C90E8136F628A4C629695DF7FC849785B5FEA2496A924123001D5A510EEEF972D1D5B773735417A16B300C68B6C57F17624CC31CB19779DE3D79FFE6A5D968834CAA1353324047E5DC17F6EA4FFF7D04C8E0A593193EAB3C198701FEB3E43C1EC5E6F98E25358659602847B19FBAC91F49973B0A9CEEE76710AA0298364CFA579D3C50B9D22FF8F8F4F0E7A7F92BBCE7F1758E17AAF3123733F440E8B9E6CC87605BF9F8CBE
	A589497984786F4FDCD61FDF0F3E72AE0F6FAAB73C4356E39D6F381EDFDF321A3E638A7870F7F07F7A4B557F92BCBF73BE5EE934D8A423657C7EAE93F97EFD20CF92D53FE93F1A7037E399B9D37E4E48EA2277F7AA1A7F87D0CB8788F3211418A6ABGGC00CGGD0CB818294G94G88G88G62FC71B4F3211418A6ABGGC00CGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGE0ABGGGG
**end of data**/
}
}