// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package cbit.rmi.event;

public final class SimpleMessageHandler_Stub
    extends java.rmi.server.RemoteStub
    implements java.rmi.Remote, cbit.rmi.event.RemoteMessageHandler
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_addRemoteMessageListener_0;
    private static java.lang.reflect.Method $method_flushMessageQueue_1;
    private static java.lang.reflect.Method $method_getRemoteMesssageListenerID_2;
    private static java.lang.reflect.Method $method_isConnected_3;
    private static java.lang.reflect.Method $method_remoteMessage_4;
    private static java.lang.reflect.Method $method_removeRemoteMessageListener_5;
    
    static {
	try {
	    $method_addRemoteMessageListener_0 = cbit.rmi.event.RemoteMessageSender.class.getMethod("addRemoteMessageListener", new java.lang.Class[] {cbit.rmi.event.RemoteMessageListener.class, long.class});
	    $method_flushMessageQueue_1 = cbit.rmi.event.RemoteMessageListener.class.getMethod("flushMessageQueue", new java.lang.Class[] {cbit.rmi.event.RemoteMessageListener.class});
	    $method_getRemoteMesssageListenerID_2 = cbit.rmi.event.RemoteMessageListener.class.getMethod("getRemoteMesssageListenerID", new java.lang.Class[] {});
	    $method_isConnected_3 = cbit.rmi.event.RemoteMessageHandler.class.getMethod("isConnected", new java.lang.Class[] {cbit.rmi.event.RemoteMessageHandler.class});
	    $method_remoteMessage_4 = cbit.rmi.event.RemoteMessageListener.class.getMethod("remoteMessage", new java.lang.Class[] {cbit.rmi.event.RemoteMessageEvent.class});
	    $method_removeRemoteMessageListener_5 = cbit.rmi.event.RemoteMessageSender.class.getMethod("removeRemoteMessageListener", new java.lang.Class[] {cbit.rmi.event.RemoteMessageListener.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public SimpleMessageHandler_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addRemoteMessageListener(RemoteMessageListener, long)
    public void addRemoteMessageListener(cbit.rmi.event.RemoteMessageListener $param_RemoteMessageListener_1, long $param_long_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addRemoteMessageListener_0, new java.lang.Object[] {$param_RemoteMessageListener_1, new java.lang.Long($param_long_2)}, -3357966082440156970L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of flushMessageQueue(RemoteMessageListener)
    public cbit.rmi.event.RemoteMessageEvent[] flushMessageQueue(cbit.rmi.event.RemoteMessageListener $param_RemoteMessageListener_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_flushMessageQueue_1, new java.lang.Object[] {$param_RemoteMessageListener_1}, -1411291762573474153L);
	    return ((cbit.rmi.event.RemoteMessageEvent[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getRemoteMesssageListenerID()
    public long getRemoteMesssageListenerID()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getRemoteMesssageListenerID_2, null, 1858369097222795574L);
	    return ((java.lang.Long) $result).longValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of isConnected(RemoteMessageHandler)
    public boolean isConnected(cbit.rmi.event.RemoteMessageHandler $param_RemoteMessageHandler_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_isConnected_3, new java.lang.Object[] {$param_RemoteMessageHandler_1}, 910024853747659973L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remoteMessage(RemoteMessageEvent)
    public void remoteMessage(cbit.rmi.event.RemoteMessageEvent $param_RemoteMessageEvent_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_remoteMessage_4, new java.lang.Object[] {$param_RemoteMessageEvent_1}, 3843840463193847441L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of removeRemoteMessageListener(RemoteMessageListener)
    public void removeRemoteMessageListener(cbit.rmi.event.RemoteMessageListener $param_RemoteMessageListener_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_removeRemoteMessageListener_5, new java.lang.Object[] {$param_RemoteMessageListener_1}, 5686936430209330470L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
