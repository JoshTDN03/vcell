package org.vcell.util.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import javax.swing.text.*;
import java.awt.*;
/**
 * Insert the type's description here.
 * Creation date: (1/18/2001 2:08:36 PM)
 * @author: Ion Moraru
 */
public class WaitPanel extends javax.swing.JPanel {
	private boolean ivjConnPtoP1Aligning = false;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JTextPane ivjJTextPaneMessage = null;
	private StyleContext ivjStyleContext1 = null;
	private javax.swing.JLabel ivjJLabelAnimation = null;
	private DefaultStyledDocument ivjDefaultStyledDocument1 = null;

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == WaitPanel.this && (evt.getPropertyName().equals("background"))) 
				connPtoP1SetTarget();
			if (evt.getSource() == WaitPanel.this.getJTextPaneMessage() && (evt.getPropertyName().equals("background"))) 
				connPtoP1SetSource();
		};
	};
/**
 * WaitPanel constructor comment.
 */
public WaitPanel() {
	super();
	initialize();
}
/**
 * connEtoC1:  (DefaultStyledDocumentFactory1.this --> WaitPanel.updateStyle()V)
 * @param value javax.swing.text.DefaultStyledDocument
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.text.DefaultStyledDocument value) {
	try {
		// user code begin {1}
		// user code end
		this.updateStyle();
		connEtoM2();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (WaitPanel.initialize() --> DefaultStyledDocumentFactory1.DefaultStyledDocument(javax.swing.text.StyleContext))
 * @return javax.swing.text.DefaultStyledDocument
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.DefaultStyledDocument connEtoM1() {
	javax.swing.text.DefaultStyledDocument connEtoM1Result = null;
	try {
		// user code begin {1}
		// user code end
		connEtoM1Result = new javax.swing.text.DefaultStyledDocument(getStyleContext1());
		setDefaultStyledDocument1(connEtoM1Result);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
	return connEtoM1Result;
}
/**
 * connEtoM2:  ( (DefaultStyledDocumentFactory1,this --> WaitPanel,updateStyle()V).normalResult --> JTextPaneMessage.document)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2() {
	try {
		// user code begin {1}
		// user code end
		getJTextPaneMessage().setDocument(getDefaultStyledDocument1());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (WaitPanel.background <--> JTextPaneMessage.background)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			this.setBackground(getJTextPaneMessage().getBackground());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (WaitPanel.background <--> JTextPaneMessage.background)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			getJTextPaneMessage().setBackground(this.getBackground());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the DefaultStyledDocumentFactory1 property value.
 * @return javax.swing.text.DefaultStyledDocument
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.DefaultStyledDocument getDefaultStyledDocument1() {
	// user code begin {1}
	// user code end
	return ivjDefaultStyledDocument1;
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelAnimation() {
	if (ivjJLabelAnimation == null) {
		try {
			ivjJLabelAnimation = new javax.swing.JLabel();
			ivjJLabelAnimation.setName("JLabelAnimation");
			ivjJLabelAnimation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/planet.gif")));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelAnimation;
}
/**
 * Return the JTextPaneMessage property value.
 * @return javax.swing.JTextPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextPane getJTextPaneMessage() {
	if (ivjJTextPaneMessage == null) {
		try {
			ivjJTextPaneMessage = new javax.swing.JTextPane();
			ivjJTextPaneMessage.setName("JTextPaneMessage");
			ivjJTextPaneMessage.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextPaneMessage;
}
/**
 * Return the StyleContext1 property value.
 * @return javax.swing.text.StyleContext
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.StyleContext getStyleContext1() {
	if (ivjStyleContext1 == null) {
		try {
			ivjStyleContext1 = new javax.swing.text.StyleContext();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStyleContext1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	getJTextPaneMessage().addPropertyChangeListener(ivjEventHandler);
	connPtoP1SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("WaitPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(339, 76);

		java.awt.GridBagConstraints constraintsJLabelAnimation = new java.awt.GridBagConstraints();
		constraintsJLabelAnimation.gridx = 0; constraintsJLabelAnimation.gridy = 0;
		constraintsJLabelAnimation.ipadx = 10;
		constraintsJLabelAnimation.ipady = 5;
		constraintsJLabelAnimation.insets = new java.awt.Insets(2, 2, 2, 2);
		add(getJLabelAnimation(), constraintsJLabelAnimation);

		java.awt.GridBagConstraints constraintsJTextPaneMessage = new java.awt.GridBagConstraints();
		constraintsJTextPaneMessage.gridx = 1; constraintsJTextPaneMessage.gridy = 0;
		constraintsJTextPaneMessage.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJTextPaneMessage.weightx = 1.0;
		constraintsJTextPaneMessage.weighty = 1.0;
		constraintsJTextPaneMessage.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getJTextPaneMessage(), constraintsJTextPaneMessage);
		initConnections();
		connEtoM1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		WaitPanel aWaitPanel;
		aWaitPanel = new WaitPanel();
		frame.setContentPane(aWaitPanel);
		frame.setSize(aWaitPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
		aWaitPanel.setMessage("Test message\nsecond line");
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Set the DefaultStyledDocumentFactory1 to a new value.
 * @param newValue javax.swing.text.DefaultStyledDocument
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setDefaultStyledDocument1(javax.swing.text.DefaultStyledDocument newValue) {
	if (ivjDefaultStyledDocument1 != newValue) {
		try {
			ivjDefaultStyledDocument1 = newValue;
			connEtoC1(ivjDefaultStyledDocument1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * 
 * @param text java.lang.String
 */
public void setMessage(java.lang.String text) {
	try {
		getDefaultStyledDocument1().remove(0, getDefaultStyledDocument1().getLength());
		getDefaultStyledDocument1().insertString(0, text, getStyleContext1().getStyle(StyleContext.DEFAULT_STYLE));
	} catch (BadLocationException exc) {
		handleException(exc);
	}
}
/**
 * Comment
 */
private void updateStyle() {
	Style style = getStyleContext1().getStyle(StyleContext.DEFAULT_STYLE);
	StyleConstants.setAlignment(style, StyleConstants.ALIGN_CENTER);
	StyleConstants.setFontSize(style, 14);
	StyleConstants.setForeground(style, Color.red);
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G61FC71B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BA8DF4D4551981820685CB40C8930D90B055D8D07194B54713EDE9176D09A5BDE225DB6A32EBFA4495FBDC1BD6DCB9AB5B3D64EFC0888392B42DD12926B6216C90AAF65998FE9314C010A11944847949CB664D4C03493C613DB749047C6D775D7B6E1B1764CD0630E7671C6F3CF73FFB6FF73F7F7B5D7B0614FE10D634A93F1410CDC5C47F7D77A6C2EA7793729D4739CC0EDB29945B09697787001D64
	7546C2F866C25F418545769D44795EE6E82F07F64E7CE27BBB703E0B549E4D5987AFD156C9073E6A4B37BFB67EBA67E43E0E0D36D31C5B60399DE0836070D92F627A0FB84BF4FC394A709CB6659332D943B1B94EF29D17GE352G16832C56476741F38BDDF9EA4DA1FD5C455999E4550F1659CA100E09A687274666EA7A1310D33672902E759A659367AC063E35GA8FC81B9C0792CF5DE739E696A14B407B7A45554FCA5C81AD388087EE4BA7770794DF4ACA19D502E68C11CCC105E9AE82F8758564371B96D08
	7741FB9CC0F28F1761701FEAF59E5B7A9FA76B5E8E6E34C711E1C98F63FDF5CFC4066C6AC5793F237A1E95C4FECBFB0B6D07G9A8102G09GCBG5E25F61EAB6F056771CE2DCE6E6E168347034193FE37F2D6F60BFEF82F29019E9D57A4F6490A1B90E64BB71C7BAC78998F583CAD67A7BA0F69A46393EE5745CD8F112C6F2C3559ACF412157124AD3B1769A237B7229336760928EB1370C83F9B3976D7443CF63657C97DE1745AEBDDCEFB29CE27B29CD93BA30C36FE1E7A40A9F85F246B0261FFC57169A6BC73
	419045E3BB8B7A7674F15FE85B4EF9E9ACDCC8722ADF3054C378874F5A627B988F29FD23F9293F0034337B581AA586AF4D947F32894FF8798975D3EC6F38D1EC9FGE07EF52F02B1398E5A057D4576F20003GAE00A0C0FCBF773167647DB769E3CEC151CE04A43FDBD4881B1B9CFC9B1EE2D8D30406002A8901AE31D5D0A42153AF2AC49F33A008BA689CB16FBE6A7BDD304697E2C0D484CD1283C0DD6896B5D1D159180703BBF10CA252DE1754AD42825DC14269BE9E5C85CF3F20EAADC137200911912C7FFBC1
	34C90F508A9401G3CB33D2CD429CDC17EAC009CC38FA72FA33DB3228259222626D1162F0502AE1404148F201E5BE96E4805719B7A390EF3B444F5C0FFF8005399387E1609CE3D54056C8BCA9F0F3117286F4C047169G4B86386F3C5246FD273E64C1326D274FDB7ACEDB0B533EF600794C460151B1749A250D7CD58C965B6B87F9EE6FA7ED70DCB6B0B20EE66A6D74816B781AD86EC822EB58C67595684F227F837D6D066DEAFAD0BEB748958710B648F57E7875BD4C07CF882A483D761C828EA73AA396E0FC1E
	3ED0266B35C86797E9208D369A323453B119C0BF97E073D0313D9A208DA0EE086BF4F5FB0749BE1C9627B31EAC6FCED8372F52358AC62D056B1444183FE582EBB1DDBE2860FEA67608812DDE8C0A81B73C28FA5FD2856969716E110DB9CFD0FC9072C39D8424EA6017A998430226A9D2E7C8931BC5CD13825EC8FFB6DDCB8DF586A329052F751402F24A3D109F0C712B940C2DAEB9909029D10DA9FA7FBF5058967DE2B7B0DDA707829A432FD1315639A6766939A5D7ADA6189B7CA14CD32CFED8A220BE030A548D
	2E02290EEC9842386FBFDFE652D18660308E4A01E76E900F5D5E0FF86CD65CF80024DD792E4DEA8F8AFF6B1FEC4706D92C3906A3314BF8FADA33667DE7B44768F81571CA0AF0DD233851FDE397790F927407E62D4FAF5649818D8CF540682BBF03393ADE7488A13FC607386B652E90D2BD4063CB6DC59EB460AD81A0ED1847D7F3887BF9CE53832BCE767B199920EF5DB06A6A2F6D25A6F9B307192E369B7D1DA37A2B63D8FFC79CDF67D84F8E748771FAC8042D84136F9943E6DF743CB52A2FD5379F6BBF570376
	731B727672B8DCF35685DE1BEAF1ACF74F04E7FA9CFB3E8F7838C9B86E7B9779389D1398DF1513D88EBDB60949D0B8197A43A5BEAEE7924B8FEBA731FC3B9E1E8E40A751F18D1779B867E4C647B719518DCFE674583A1B2E70F13913D91E59B0197137E30AF95DA70CF195D3D8AE2A1D92216BA05C0FDF2DB26A602BC20F90F6283D90F3B5B527CDF5708BF4AF43714EA93C5E5D590236CF00F69AC066946E5BCF1770FAB769DA86C9771D33C72B59D76A7C2E1F9271ED772F0FEEE13E7537E1DC73E0BC709C4F6D
	7D239E731EFBDCD565AE09EE773ACD7BFA4D3E4FF0C33DEF4253A3A92A56G49A94C6D9F5F0B7CE2BD2023F5FD9CFC77A38BFDB8B0B8EAEA4C21225713031F1B65CD352F30ED0DA2EFDBBC13B39C9F11F743AB577573C8795E8F793ADDF237C36A6CF604FA3A9DC22766905D922C7D39502549D897B01B24347333C9A650E335DDA62D79901787384A2945F6964B9FFC0DBA68943A2EF9954894EE9EDFDB4266786A184A7CBDE1AA3765EF0E9F633E7B50C212ECFB56E6F5F6B9F57F3F58D227B21916CF0D483666
	7EC579F9G0C37DFDE643C15CE03734BB44E5B79CB08178212A689FE6906D8D94574617C72E0347CD3B95AB08E33DD2A986F8F3EEF66FDDD47B3163C7BDFFA5496BF0D713CF8DA04773614C5797E944EFB7AA54E7BFA98336FB64E7B564B38CF880A77GEBFFC25B1ACFD2998F836D1C07381C25E443DB7FE84983027BB636764C5BA2BCD4006E8E997AD3AEEF53FDF48D0CA9CD60BC7C5CD813692D32836707E80DCB55D2D9554A4FBE8BF719F5D2BE3C58129F1F7DB1DBE302FE1ECE087013173CA83F5050495E
	ABDCA74BE04C0684FE2EBEF29E7181D969967CCD228A46E3FC5EFB857D552D1B1051F85E20D1BD9D7252F4CE237488BE69FECBF8CD734BB1673D346911BAF4697431B5A9BB87CD25F9AAFBBABB87959978C40ADFE342B31E5EE961FA4E03BE575F705ABD311F56F850DE8570B2C0618C4805G75B3F8FE5A967E0444B89BB5000FAA81415FBC220851F3528F42288B28BB74768F43E6BDB0BEFEBB00B15B81EB8EGA481AC8648B1F8B85B97130713E1CB9E181E6735C7BBD73FBC433A6EE7733EFBA156DDG19B9
	F2BE1B1793F3DE4528F94CC72E76233C967B168BF2G6EDDFA1EBC9666FBD76DCCEECB57906E0D9A349381B2G16832C83A83C9D72666DDC1777741D08254B633CD8F54946EB5D6802134B1AF77156F4745B18730E5DBEF29E137349E114338D7AB40019G99GB9G6BG36FD034B792B3E4FE27A8C9678A0A395EB2C000C4FEFDF3AB579B2E34E5B778DAB79125DA8DFBD74F5G048112GB281D681ECB064BBFEA3269D0D6B041B31E37872E8FEF74C9A491F351C53464CF30C16F316151CA59EAAA774F5G04
	8112GB281D681EC184565CC3AF178A66DD88738D3D07BDA082873DAFD6556ECF9A4663C32C42BF9AF5D62FA2F471CD7BDEABDF6BF3329897342A9683B8840F07F5C0C38B8E8A7A772F37B0C9644E5C1FB35011BCBF16B93D95D4DF06F3534697433922D732499D65F441831327E55D82360A666CC748E0579D0CAFF7473FCDA3F75F97E3EFE6B737C627E1D8C8FB44C37013CFFE97F78677D2C7E68677D624168FC168CDA7339EB501A4F5F8D0E4F679F862371497C66D1DA0B174E063D8360BDEA1F97355D4462
	6E61CB48B2041F31DF3B30C59F6354E46781434EA7436379F4872C214D9E69BF0C4F4BC351F5A28ED96B645A901E4FD4B924F4092365D6064A0C3EC826E85044EE94030D692773B5A80245B1FA1BCC67333EE873E78C61F929D3F2CB0AFEBB40F47327CBDCB7A7B5796C810366B34351E5FCF658DA465C6168B23EB89CDB463C6168B23EBE9CDBC63429357FB0D9FFF1E9AB77830FA2F703A730F98B5D51E5FD40EDAD6B436E6832BE660EAD6B775C51E57D21BB362CCF39C75B13454313EF5BE90C292A2852CD28
	DE5084DD7E07AF1BECDD973175BB1E68723F6F31163F4293DD7EBFFBE24BFF5093DD7E4FBC31652F770CEFEB6F9533DF7F45406F69986983FF5171E5CDF87768977A641086FB4EEC4CB77B1B789DE3823453G3281564CE667F7D69FBF520B74BCD05540724DC1310B2C1CC33F07B673393550F68284819281164C61E74A14CFD16F279B05CEA89C82D237E00A4B1453F867E6D459E7C5D5953CA23BCF48EEB15FA7145D4178293D03731468437C56A3DCF57585C53D0E1F75BF186B225C37D89E7FD94E3D9866FB
	35738E3EFF6FA208CB037652BB781D48D7CD7C7BEFB660C812717D37235C3C2EC36805753ED0A47789415BC8354D4E8F73E91D00738FA5713B2F9FD31AC1E8A7G24A5717B1270477CAEE871FD8B21BA353E7BDA66DAE14BCCE279FBCD12693E24FAD1BEDB73DD97DF336CCE106FCEFABF68B26B96ED11C2D87D487A7BC774238FD60D68FFF0C4BF72FBFF3E397F39917DC52679CC3695FF6432EDDC3104B4BE7A13285F62136FE4B2E5694F4C020D452929DFEE516F9BBDD16E9B2937B1797F33051F5956830D34
	3908D34375BA7D3639E3EB27821D17829D7CB0A68EE037CEA7E9AEBB6773B13B48DE6AABF83506173F9B699A4789577B3A393C2E3B54F4EB5F462F5D623C74894FE37799731B51A70FFDB3A2A743E7D0FC23894F626299A3AE5A20AF6B1B7CECDC6AC37B6CC9063885F0817881E682E4A473F3460B1EEA92631C6112030D10387D26F20A493747F5EB7F99783E0D7B5F52A73ECD12274D09FA4F1A152C47167EF466EFAC46A7136FFE89655B1682359AC0A3009BA08C101842655B6F5D4764BB896E8147C1214BC7
	EF1439F02D12589BC1E3F2E532953636CDD03674946BF3C026851E45C63AF11F1183E3BEA02C3E58CC78AF6F28952E70AE7CCF4FF378B9DC5767AF36F1FD16AF3A17D47CEC0E6D23A87ABCF59763A5792EC82E0A5B7D42D696C7ED14970F60D7C503F6DA2F79FFBBE5EF2E347C3E0530D22739D6FFD6FC3A31186972DB4DC8093DBFE4FA7FF953C4F5BC71987C4D7F6B9A4C475E73C52FEDAAFC56354DDE1F7579255AB77EB96A10AF7AB96A284F7C5D144548E1857702723B0B6D07GAE828481626F667171E39F
	FE2BE037DF23E363245B0B35957E3BC3636BAF11224B7A38947BBFA14BA47A7DC256B4399B699B752804765264A0C5B25C8A89F524C8DE1F46066A7827A50C873F6821E8D6AFFC5CCA6B8510EB495D3C0618C3F8DD317CEE3E87BCB062BCD61A8A39A3F57C73BB0B03273EB647C1DE4A93B61E03C70F2F55691DCA0D449833C52E0A7B5EG60138132GD6812C83A077945BCB81AA81EA81DCGFE00B800A4008C00CC009C005CFB386DAA2E633E5EAADC5533B626B8D921568324DEGD183AA0204A654FD627390
	3D73GBABB66F1DA572E7FF99CDACEC58E0A0A564730746B2BEE0B13637CE720D1096D8FAD8A5B3B3DA296128CF7C141BAD976F8D451703BAB4A8E835720BAE5D542C216652D432D785DC402021B6D7D4D54972AC1365AF93C66F800701AA3E15ED8FB1B6B8904D49833E49E2BB9903FDCFF47FD0A7956B21A3BD74EE3FBB1437DBD452D53F1CC5747FB0861373FD67E98CD4790ED272104BA57F9958EA2AE41EB4CD92FC6576F9BEAEC7D96EA56717626B6B65E6C1AF53C6D564C7146F03F57B057F841475A0CF1
	9F9838F683D7C1E9A26EAB492D79A2790F720578D3A2AEE864BF4AD7AF45356938CFCD38F69DD723210F0048BED961F30FEA68879E496FE76DBABAC68A004B987AB8C5F9140202096F3386AE427719907A051107194B6BFDCD21D2E27A4EC90FD44DB0B060E5FB737BFD04705AF4189C03E7C06C5DE3BE92B5F443C12B819C36920F1F3881D4D6B96035C9E4A75A4A8F77877DF0A4539CDE4973E1D5952B971EA53CDEA81CEFD5AF90E205E3BC355EA004FFEF91BEB6FD2725E6513FDB07CBA2F8EE96FD9FFD0E18
	73E6AD2C6F1CBFFE5EE4B171EFE4EC1C3CC14CF1427E57FC654C5750D87C2F24C8D5081D9F639C8D54F839BD1F5494BCFFEFC1BEA9ECA0454C199BC8A1FAE483A9228E5BC08A401943D895951A8128FDE475915E0147FC37E1078BFF571169FBF2770779242801EC75C8225F5DCCAD51C8F650D63D28F6A9D290CD2D11379A11417DE0A16FFEE6784F9A49CEBA0EDB9049DFA7C32420116CB2117BDC720B01C857F6D3D7CBD323C636B34AE0797D507E0C4A33C9A3E58E474556BA516F5F5322C97E0B915F5048D6
	1327A05562200A8F7C650FG360FD58D1B773155D39F09DA4F0597685F31970C5E47DEB90B764B867C5A85FC7FB8F2763F4649ED4D5D025F2F897EEB4783EE4CF3A77AB4B1D2533CFA96692BFC0C5E497A7E7DAC72FD55B467FF81D0CB8788820F2403E191GGE4AFGGD0CB818294G94G88G88G61FC71B4820F2403E191GGE4AFGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG1B91GGGG
**end of data**/
}
}
