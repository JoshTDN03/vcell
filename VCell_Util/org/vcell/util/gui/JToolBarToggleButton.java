package org.vcell.util.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
/**
 * Insert the type's description here.
 * Creation date: (7/12/2000 1:35:57 AM)
 * @author: 
 */
public class JToolBarToggleButton extends javax.swing.JToggleButton implements java.awt.event.ItemListener, java.beans.PropertyChangeListener {
	private boolean ivjConnPtoP1Aligning = false;
	private javax.swing.ButtonModel ivjmodel1 = null;
/**
 * JToolBarToggleButton constructor comment.
 */
public JToolBarToggleButton() {
	super();
	initialize();
}
/**
 * connEtoC1:  (JToolBarToggleButton.item.itemStateChanged(java.awt.event.ItemEvent) --> JToolBarToggleButton.updateBorder()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.updateBorder();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (JToolBarToggleButton.model <--> model1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getmodel1() != null)) {
				this.setModel(getmodel1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (JToolBarToggleButton.model <--> model1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setmodel1(this.getModel());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the model1 property value.
 * @return javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.ButtonModel getmodel1() {
	// user code begin {1}
	// user code end
	return ivjmodel1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(this);
	connPtoP1SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		org.vcell.util.gui.BevelBorderBean ivjLocalBorder;
		ivjLocalBorder = new org.vcell.util.gui.BevelBorderBean();
		ivjLocalBorder.setColor(new java.awt.Color(160,160,255));
		setName("JToolBarToggleButton");
		setBorder(ivjLocalBorder);
		setText("");
		setMaximumSize(new java.awt.Dimension(40, 40));
		setPreferredSize(new java.awt.Dimension(40, 40));
		setSize(40, 40);
		setMinimumSize(new java.awt.Dimension(40, 40));
		setMargin(new java.awt.Insets(2, 2, 2, 2));
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the ItemListener interface.
 * @param e java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void itemStateChanged(java.awt.event.ItemEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getmodel1()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		JToolBarToggleButton aJToolBarToggleButton;
		aJToolBarToggleButton = new JToolBarToggleButton();
		frame.setContentPane(aJToolBarToggleButton);
		frame.setSize(aJToolBarToggleButton.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of cbit.gui.JToolBarToggleButton");
		exception.printStackTrace(System.out);
	}
}
/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == this && (evt.getPropertyName().equals("model"))) 
		connPtoP1SetTarget();
	// user code begin {2}
	// user code end
}
/**
 * Set the model1 to a new value.
 * @param newValue javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmodel1(javax.swing.ButtonModel newValue) {
	if (ivjmodel1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjmodel1 != null) {
				ivjmodel1.removeItemListener(this);
			}
			ivjmodel1 = newValue;

			/* Listen for events from the new object */
			if (ivjmodel1 != null) {
				ivjmodel1.addItemListener(this);
			}
			connPtoP1SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Comment
 */
public void updateBorder() {
	BevelBorderBean border = (BevelBorderBean)getBorder();
	if (isSelected()) {
		border.setBevelType(BevelBorderBean.LOWERED);
	} else {
		border.setBevelType(BevelBorderBean.RAISED);
	}
	return;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G5BFC71B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359A8BF0D455B548C710DF40B0E3B5F52200440298C77C16215131A38A2D54220D3F8ED35396E728CD9D2603B3345EECB63B7932A1D9A1C204C4D103469084DAA7C6A7A48109C4331A15C6404A4B6E4B66416E3E756D5BE4735B741CFB5F5DFDD95E92E02619B93CF74F39777C6E39671CF797E25F1B161FEB3293121BCF343FFF6792127196A16DEFAE39116356A9969B517D55GECA70FFDE706678620
	2527D8ECE5242633G461BE1EC3F5EE25B896F95645DCEFBB53CA41033E9AFA12B9EF842F2E9B9E7C7399CAB9DDFA8AF0167B600AD0043E7DB9065CFAE2F5470D5C1066710EB8295D41CF3F3F915061B8EF352G5681E4EB7337423310CA1E5A7831B66F6C3CF4327E71CCEBA972517164F0D6E5EB1334A7A1A72C35A11475A85593575C8F349CGB4BE0F3CDA79B6BC1B9C97BC1F39FAA4355E93129A9B3FF04A3237C5D01C32476395DBC22AAA7B49A24A47D6D1C057916205F1C3BF621A461077C6989398D776
	F3FCBAC13C8A6F33G9675F3FBBEFD2FC95337FB78BE32F1C7E03BAD01BDAB7B199D597DB1FB1ABFDBEAFA037ABEB502BE2E9E30585AG3A81C6GD281D6826C26FB3EF074FDF89E6DD1DBE51FCF769F8D84DA3CEE65CB59ADFA613D3191A89A6E9B51A5ABEEC2583E7E2A3C4EC01FCB81DB775C952FE3BEC9BF4477F859B74B494A3B332DD6831F2CCCFF4C3AFE0079E253C04CA7CC363DA2116C127078989CAF7BBFC4AFFB3547C1E3A3DEF63653E12B56789C8E47E47705F12FB3E88CB8619D5761FA067FB945
	AF5361D9BC36D0BC0EB30136EF1047C677B62ECB0779D6125370C7C3BF049FFE56BAFD106910B6982FCBD5AE72DEBB982F4BFB943FE1B0DE1765046B3299E85DC3969B0B2F45844F67CA98E78164G948CDBEC35GEDG5D43BC46B60D9E384C98F3880A5A92123CEED1A1EC6D62488EF80AE1D5915A7DC1D5703B44D302A289BDDEB1C834B94BA368031EF16B6E26316F82991F0BFED191D4C97683F741A72A2292E4F3D6C636639CC524D4276493C100AFC0B85FC7A29570748AC1755B00DBD045588CC6DF9B41
	BD6997CE81C7E0G6F4CAFCFD2BF06417EE40034289FBE9FC3FEA7C545AFFA9B9BBBE479C2A860C4CB4826E1747387B4F72C007735435C473FB6A12EE144E2BBB14279C4464AF5FC5AA4972AAFA8037C0C5DBB06EB4E427C11919EB7AFF77338E9AB3D0314BC7522E15CF4FF6B30A50F30F8C99F09BFBF8FD13E285B3A911E5FCF0CF5DF61F90E66629163B307B02251188C612AE564DD02162FBD191F1B4C38E7B9A037E454E22B9B653EFEE02C1A45EE0B9094F934F6AA90E822BB66F92667DB39BC776F0C6A7E
	A1453581BF6FA877598A52FD997A69E16795582C6567AB1611FF85B218EF6EA4D81744FE512F360981516F061720C63B1766CE6D5C764A51B5ABA9BEG673C958ED6B00AFF1860D994D4D511FAC22A58A52A2A647744680FD3D941D0CFA016A2382C5FD05D6581B8675179CF93BCA3AE596F9769A6C517E874ACFAC6C52F688325DB6510DFE5785F67E27FF2C19C54F2449FF2316169973CA14CB72CA748900A5186C5724156E34AA26923B4E7D758F5BE42FE85FB1B14D1FE86875E66E7F05F506DA46D07D5D623
	BA92DE7C02B5E714453FB992BB03CC1F5F1A0C75FE0666898D9FE4FABEF58675B1EAD672681A3C885A6643BCFC101F03D0BE725F87F2BF86F0C478B978B68F69BC67E88720D576FA19FB01169CC19F64936E03BE98A7C5188FE2B153E2AE43FD94FF8C09104AB1791D0C7A3A5DDC9EC7BB25791D513FB6235F3D3A3CE99FC3197EAFF91F1895E139B3A742F2149968FBG3F0E4E3B39134FBBB7466861B1265F0AB126A36B611652BC0C71D6154477EE74B86F49D2AE2413D45B9AEB31415EA1A4A5E9F5B7A936F7
	A3FF7DD14B673F30A06F8DC04BC9623EDDEB5657052341206C12E8C9526C9E4E576FAD43A565974133D7D202EABB9C3CB0775134FC5497EB160656EAF89D2D61386F66C996DB9300BA89719241F8C7FFB1BBDD07381D49C30BC973020D896D3CFF9233AFEBD24C4E3A485F8B183CFFFC456515DD83358B00455C98BDC3B466B4FA85195E09BA28FDD21069704A51E6CD465A6537129B2C4FDA0D7A5F93CB7EE4CD3AC62BD55744F4F05E335454872075751D3CF75982F39AA6F3BD6A9D5813C82A682B47FF3AD428
	6F2DFD025FA33AEB4F8B7DC23DB020565354D65F8E74E37836DFBB7F23A654A7C4FB0296990FC26D7ED3DA2FF8EB05DE772A31E5063A77596E3576CDE6BAA7CF5675E737ADB50DG309C1ED1212FFB4FEB73F23427F90AF17D2CB44057812E9940292331F8FC29G4FEB9F6027G24822CGD8BF054766B64BA1B2C16FF6AC8CAD15DF70F60DCB4E3C0732203FA11FEA63559674A14D2704572A0F8876651B9358133846B553F5A5D3AFFF9D5B237D27755F0B59E5B7D8739244F813463BE3EAEC0F185F6697215F
	E681BE9DA093A08BE04BD46E37AF2DF593790D77311A4318CDF91D93FD9FD5CE9BEFAFDB37FD42F5CDF16B189D9B0BB1A7BA0196G188E3088E0B5C0B6C041355C1E1B2CAD9359F31497EF279CFDED0DAF40517E64A2FD2B2F9D2F1F311D4FDD342EBE5E4EEB0D6C7C3E145A8934G40F400C5G2B8132818A26F3BBDF36FEBAE13CE3AEF04A2D00BB81354840C42D1FFF125611DA605D8440F0ADA1441D03F1A00ADBC2F1A3B0CE09624E8FA1AE9D460FC4F16F1CC4DC960CF32238639D08334F001EF58647FDCE
	57B64358B9035B753702443D5A168263DE6D1F85463D1A39F0BB43838F7D979B271794A66A655EA418BF1F26BD0C823D8BFCD0D156AC2F0A619A667BEFC2FE66FE649E0CBFAF51BD7D69B62C9B6722B6AEAC7C48E06F0E39A5D5D6B89327A8A81D3D3D51G6D8A08AE2E770DC509FDF4CB11310F1694997B680E22CB7B681E22CB7B684F6A6B4420FF7D8ABEE0892F1B0D1D055A9C07AABB8EC6F93FD21C580ED70B0D6DF82D986F4C02F2C8F109713ADACAAA2334D834E3D9C4F5589CDB892ED78545A3DEE46B8E
	3A1E51922D5FDB02FDC60F6416942D23E4FEF8EC070D7AB1989403746035892A2059EFF6F07B0F29F2EB4CFECFE9E27B7D2546762B25096D9FAE1D587EA925096D1FD9BA317DA925096201597AD285766ABD345B007CB2834FB93173BB54919827GE4822C1F41FAE0366E3B906D2D4060435761FD2D9343CA6339AA04BE7789E1499772F5C9C3A249388E79BECD73D1985E27DC4779CC9AC27B820A58ABAA50795359C41B6F9826F74948FFA63FB73DEBGF977AA028F4C2007ACF3A63D8BBD49F52E03F1B340B9
	00A4003419DC56779DD4AF499F27D708663A02D9961BFD961F7B5FA17A8D833E1560A304597894DE9971F33B2DD46FD76D7C305E30564EFB54E660971E45F5FFF497FEB3445D7936C0BCF9D93757A28AFE7E2D903073EF7E0CD97CDEF72ECA6FFBE1CCE6DBEC1533F9EF9DFE1777564BEE033E565DE9B33A274EF42E31B64CE6B54CB9DB5757FE36544478BCF1C65F3F647C64C1EB2E819F5ADBEA6BD3F5FC180F1E2F0C45418FC3E82FDF9C280EF63EED10197DF829D5FB38212E7AF043FE5EBB258D68E5D7962D
	B37C06C5D827494C561E7B0EEC35B05947F745E46FBAF9B932192FFBE87DC3D9D5F320364DC1DC72C97DB7B7727C1A301E00519F9EC747B336FF9CFD73B8FA61C56B5F6D505373F56B19BF563C4377F46B1A8C52F14F1389FFFBC81D437C1029BD6F4F5BEAC9FB702BC266130C5DB11FB4DD56FE30FE285EBED15F37E50ED19F55B4613ABDF1E336AEE4384EBEB7F18F4E6E1673C2F8A6EA67323B655CA83E04628F6B706CECAED0796FB14DC0DBB4175F07DEDF0501DB10EC316D83E882F08228G49493C8F285A
	59C0A668611CF220838F342EB4B37E77E15951F207EB67BB70BCA51CB76CA43E003D696CB98F495CA9F8886FC9EE5903B13A88F4490C6AD37346870978G52214881D1D18799165EF8E83E761C3C3A5FCA9E327218DC71604F488D5366A77C065F102C6505F96C69B0ED3544FA6662EA74F58350BAG82G5381D281D64C63364D5C25FD67207A50D5892EBEFACB91ED5AA4F1A00646C2406AFAE6851E93496F157CE2AB3B25A73CEF1EC5F36AEA10717CBCFEE7DA98A25198AC573D5F24DE6D5D706500F6DF7BFF
	15417C18DA1538E7D9D8E55C335CDEE55CFB5ED9F5693B547B2A925F252E2A3A78AE7536BD5B747CD80872BEF70F1D6E2324CA02D79A2257D6DDB0516FE1B174F58D52F3E09FCB66C3FD84E883681E4F6367605E37D87C98444EB137877BAD7C55C765726C55097D343BFA625F0A76D5633DD90F2C2A328F79F37C7B5538572A9C20C806BBD00D7ED5A4CF1F4A26EA78A355981FDE311722D94EDEE8C73F39E42F0CFEE37DCA656BB8CF85DB132276FED713D87FF3B5936BAF55503BC0106B9C8CE83D233F86FBA0
	3937B7A8C67D942CA90B625A038EB9A8614E30DA73827E242D559AC55DCB62EACDAB9AD1FB70DF8DF5889F9DB9321FE87FBF20FB9AA411E5FFA179A0A62890DBF48928AB2A418D7D079A73DEDC18E7A266F6E2E1BEEEA7E6F4D4BB4927FEECA7F96063B07E46E65283F0AB3F38589D1D734C6F167D50E6B79193B06C9399077C81492D76D19E3588419FC904DAE3B4D24836710665AE5EB939EC6E211009949CA716DE419B689300A73D116AA045BDD4CDD10139AAA96B403587E06D813A76138EE2F285D532BB06
	27BB4E28DD8141A54214C23720DC209CD01502B32430D77174D081AAB11DB9FE86445291120BBAC8115A07E10EBD3ACAF646D8BB84892F78A96193EAAEF9ADAD6D35G7D0B5EE50D697B312C29F7A56C47B625E839FEC17CDDD666E90C29A640F7AF60F1DAF67AC3123876F579842FD7953C970E7A5DD887DB86D5B116DFFEF99A7987799C0D285DF51FC63D4F6B567C8FD0CB878899A9CD3E2F8DGG58A2GGD0CB818294G94G88G88G5BFC71B499A9CD3E2F8DGG58A2GG8CGGGGGGGGGG
	GGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG698DGGGG
**end of data**/
}
}
