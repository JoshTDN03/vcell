package org.vcell.util.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
/**
 * Insert the type's description here.
 * Creation date: (4/2/01 11:20:10 AM)
 * @author: Jim Schaff
 */
public class ExpressionTextField extends javax.swing.JTextField {
/**
 * ExpressionTextField constructor comment.
 */
public ExpressionTextField() {
	super();
	initialize();
}
/**
 * ExpressionTextField constructor comment.
 * @param columns int
 */
public ExpressionTextField(int columns) {
	super(columns);
}
/**
 * ExpressionTextField constructor comment.
 * @param text java.lang.String
 */
public ExpressionTextField(String text) {
	super(text);
}
/**
 * ExpressionTextField constructor comment.
 * @param text java.lang.String
 * @param columns int
 */
public ExpressionTextField(String text, int columns) {
	super(text, columns);
}
/**
 * ExpressionTextField constructor comment.
 * @param doc javax.swing.text.Document
 * @param text java.lang.String
 * @param columns int
 */
public ExpressionTextField(javax.swing.text.Document doc, String text, int columns) {
	super(doc, text, columns);
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("ExpressionTextField");
		setSize(190, 20);
		setColumns(15);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		ExpressionTextField aExpressionTextField;
		aExpressionTextField = new ExpressionTextField();
		frame.setContentPane(aExpressionTextField);
		frame.setSize(aExpressionTextField.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of cbit.vcell.math.gui.ExpressionTextField");
		exception.printStackTrace(System.out);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G480171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E125D7EBEC94D594A626189AEBAC91210D0D2924E2D5A0D5B0B40690A428C450208122C9C978C1A29A227DC122B1C46EEEDB36D09EEDE988A88630988A545217CA9AB4FD228DA5B434AC9BC2424E6E5E163133B3434C6C2B5BD24FFD6DCEF117CA5C644B1DFB4E1DF34FBD67BB674E223A9379958EE79DC20E8A44FF3FB990DAF488461DD7178AD9366A2EC2365FA9C08D7AB5DA8EE3BE68DCF47EE973FE98
	8F820AC1C646F24DDDD50DF6B79F657292AE97F0B891DACB57FC57F21C4B7E0239971087A852126B77521DE7F7DC64735BF38A514E778C6781E247E6D320DAE76F367371A47A46D122133DFADA7673F7941897G48614B505C7A1FE13CB4B8B67A075FA7DBCDE1BFD6142620E45DED9A8D499D9DFDD15D4026A9EB6AB00EDA17E52C84E03D679E3179E4CBA535817B40FC9B157D50CE76490367E50075GF6065F4FDC62BEFA624B51365137779ECAF306860379BEE8A44F10F14ED7F60C46BB9CA3F14D82DD91E0
	8DE0BB2052F4D7B5G3E875DE1B499BD87E3174F6A5102C1CD6D5275EEA5E0DC5582D801670E8E50F059F56C578CB8904BE5FFCBE38AFF9E86765E4DC7FE0F452430CD64F55175A528E469BC27ABC5CCCA8A634ECE134542E3A6E342764ECE3BF7541C4E3B69FB5FC4763D51E72D2E0A94FB9F5F5C6A4A62F672EDFBEFB0C92E6750DC2F02E787678113BFC765F5D6D24EB8D8CF65E4FE9AF419166006672070E520FC812AEE191FB28EB92B331CBBACDEE32124AF0C97D3F1D2CB4DA09FG84G9300BCC0B1E0FD
	C8F0631D68057F480DC149303AC332924086E26FCE450E4088E5E0C87D2AE9C92A9F3BA5C316FC8AB691DF1399A33E7B263D7794652C9F7678932B5810AC28A630AE8531058D132D19972BA1EB8CCC3543F2904386C19D893B4F478E135A15CC6B069E10AC1CDC41748BE3A416E1498D9641GBC3338AC1AA0B15F8167AF8F3B2B6A42A28E2746093DAB58D0315251B120E9E3A1FD181C84F943A4D7AF515AEE0067CEG33D5B8C9E485B0DF113063992F355969157D44FD4908095A185FCE7A6506304875979E11
	6B5E830BD16326E7D366BA9BF8D79AE6B92E0CBC48799728CD62971B1FED77BCE27D5931A11C3ACE2657F8777F5A23EC86BD0B6F11A9122BE6B86FGC0090898BFB3FE12F136DBB231E069B58388068349083335CF44C9DF45E12CDA3DD847EAG9ECC4E116C785EA4FFC734843766D1398EFC6F81021989F9DE1CF0D232ACC37605ACBC04ADCBD6C7137A823A1799726949D291FB3D9AA77DC40BG5F936B0B6235348ED495D327932FF07D6B142BD841C1F03AC78B29961397CF10FC0F61982F159593FBA85715
	9029BBF60F95C96432568DB98821A0250BF2A20447ABDB6AECF1A6F7AC390FB3A2020F11FA41475363AF23D5F7F4E72ABE187362534E2D1C07BBEDFCE47EAC1ECC6D77D2DAAFDCEEB2BF7735103ACBF52BB28EDCC334F7C661BE83F4C68587AE5CBFE62BB31E7C9ECDD1D8A893B1BEBED5CDF2026F05B034A7D250D792F12B1F2AFDC06766B1E47A73D3A4060A2D9730FB7ECCABB987715F9395F11B3CAC6E7339E305E84521C9E7D50A3851DA0E32F895C513F16B5406DD6C3C398EE23B94F4A8A64E3AF04A5E1B
	3ACCD3734B34ADF2BFEFA0FBDC196C965A876308EC18D6BF10BEAA4E6425779D691BDC4C6B393175E1F7F6DDECFACFE808099E3809FCB822CBB077GF4C0A620B0617BF65406E638DF7A225076D5C9991AD6B8224FBB4A985779FC817DC825DCA77C253D390766E3AD6C399540E42B5B082CFC5CDDF5F4DC783245193E97ECF3266E851FBBD37702D2E78D13038D7B4DA874DFBB53758A467B57A2049FA3F06901F8C847FE34EA1C78FD2BD5FCA7B7423C9360854C8264834A286DCF5ADC34EFA82120EA2223F172
	DEA9BD6F89C0A54C99CFE75138908E5E8659DC3AEEC92B3D7E093D3300A642DB2A5FBACDDF73AFFDED1BDDCFE2B369306B97CC53D7585EE7F5326EA7D1A73B5695A1650D0C345F6EA5F146B9B4416B6403DC470E1C41BDAC862EF6785B00DAFE91F673A3767F849777BD1632EF91DC647686781835BB175F23339FDA83693F9D5FF209B3ADFB7395D47CF8EF5A5A4F60FB967031F8FD2EA3F95FAD71125CEF84DDA920EE52DD55886884F8A68507334A9AD9BD7585E42B4B32A47FDDDA7522185CB20EA44504D84C
	760792610282F6B29336326F1C0751AD7D4D2B1218548CEA8904030626E3430AB1A96D0C5C4FAFFDA44705E0E78DE0BBE097207A3E303B714E0F4C47947E7585C6F10FC63F96ADD1AB4B3D696BF225F766EF4CF73D245779B44B5202443E103F6FA5F935B41D8A196CA3AF4919A10F5E3558D2AE7F58CB6303C7281849B6CB876DB54CC24057EF11C88CE4D536E4C91147E9BB9E02056AA853FF65CBFF26EFFDB31F496527BD9DFC990E695C1F7DFEF24FEBA3A3A6CE442E46DF1D10751B031AA993CF7E81D0CB87
	8844C141295B86GG548FGGD0CB818294G94G88G88G480171B444C141295B86GG548FGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG9587GGGG
**end of data**/
}
}
