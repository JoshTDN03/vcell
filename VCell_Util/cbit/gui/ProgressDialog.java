package cbit.gui;
import java.awt.*;
import javax.swing.*;
/**
 * Insert the type's description here.
 * Creation date: (5/18/2004 1:14:29 AM)
 * @author: Ion Moraru
 */
public class ProgressDialog extends JDialog {
	private JPanel ivjJDialogContentPane = null;
	private JLabel ivjJLabel1 = null;
	private JProgressBar ivjJProgressBar1 = null;
	private JButton ivjCancelButton = null;
	protected transient cbit.gui.ProgressDialogListener fieldProgressDialogListenerEventMulticaster = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == ProgressDialog.this.getCancelButton()) 
				connEtoC1(e);
			if (e.getSource() == ProgressDialog.this.getCancelButton()) 
				connEtoC2(e);
		};
	};

public ProgressDialog() {
	super();
	initialize();
}

/**
 * Insert the method's description here.
 * Creation date: (5/19/2004 6:08:36 PM)
 * @param owner java.awt.Frame
 */
public ProgressDialog(Frame owner) {
	super(owner);
	initialize();
}


/**
 * 
 * @param newListener cbit.util.ProgressDialogListener
 */
public void addProgressDialogListener(cbit.gui.ProgressDialogListener newListener) {
	fieldProgressDialogListenerEventMulticaster = cbit.gui.ProgressDialogListenerEventMulticaster.add(fieldProgressDialogListenerEventMulticaster, newListener);
	return;
}


/**
 * connEtoC1:  (CancelButton.action.actionPerformed(java.awt.event.ActionEvent) --> ProgressDialog.fireCancelButton_actionPerformed(Ljava.util.EventObject;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireCancelButton_actionPerformed(new java.util.EventObject(this));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (CancelButton.action.actionPerformed(java.awt.event.ActionEvent) --> ProgressDialog.fireCancelButton_actionPerformed(Ljava.util.EventObject;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireCancelButton_actionPerformed(new java.util.EventObject(this));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Method to support listener events.
 * @param newEvent java.util.EventObject
 */
protected void fireCancelButton_actionPerformed(java.util.EventObject newEvent) {
	if (fieldProgressDialogListenerEventMulticaster == null) {
		return;
	};
	fieldProgressDialogListenerEventMulticaster.cancelButton_actionPerformed(newEvent);
}


/**
 * Return the CancelButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCancelButton() {
	if (ivjCancelButton == null) {
		try {
			ivjCancelButton = new javax.swing.JButton();
			ivjCancelButton.setName("CancelButton");
			ivjCancelButton.setText("cancel");
			ivjCancelButton.setVisible(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCancelButton;
}

/**
 * Method generated to support the promotion of the cancelButtonVisible attribute.
 * @return boolean
 */
public boolean getCancelButtonVisible() {
	return getCancelButton().isVisible();
}


/**
 * Return the JDialogContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJDialogContentPane() {
	if (ivjJDialogContentPane == null) {
		try {
			ivjJDialogContentPane = new javax.swing.JPanel();
			ivjJDialogContentPane.setName("JDialogContentPane");
			ivjJDialogContentPane.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabel1 = new java.awt.GridBagConstraints();
			constraintsJLabel1.gridx = 0; constraintsJLabel1.gridy = 0;
			constraintsJLabel1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJLabel1.weighty = 1.0;
			constraintsJLabel1.ipady = 15;
			getJDialogContentPane().add(getJLabel1(), constraintsJLabel1);

			java.awt.GridBagConstraints constraintsCancelButton = new java.awt.GridBagConstraints();
			constraintsCancelButton.gridx = 0; constraintsCancelButton.gridy = 2;
			constraintsCancelButton.insets = new java.awt.Insets(4, 0, 4, 0);
			getJDialogContentPane().add(getCancelButton(), constraintsCancelButton);

			java.awt.GridBagConstraints constraintsJProgressBar1 = new java.awt.GridBagConstraints();
			constraintsJProgressBar1.gridx = 0; constraintsJProgressBar1.gridy = 1;
			constraintsJProgressBar1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJProgressBar1.weightx = 1.0;
			constraintsJProgressBar1.weighty = 1.0;
			constraintsJProgressBar1.ipady = 25;
			getJDialogContentPane().add(getJProgressBar1(), constraintsJProgressBar1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJDialogContentPane;
}

/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setText("We are doing something...");
			ivjJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			ivjJLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}

/**
 * Return the JProgressBar1 property value.
 * @return javax.swing.JProgressBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JProgressBar getJProgressBar1() {
	if (ivjJProgressBar1 == null) {
		try {
			ivjJProgressBar1 = new javax.swing.JProgressBar();
			ivjJProgressBar1.setName("JProgressBar1");
			ivjJProgressBar1.setStringPainted(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJProgressBar1;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getCancelButton().addActionListener(ivjEventHandler);
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DocumentLoader");
		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setSize(341, 116);
		setTitle("Please wait:");
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		ProgressDialog aProgressDialog;
		aProgressDialog = new ProgressDialog();
		aProgressDialog.setModal(true);
		aProgressDialog.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aProgressDialog.show();
		java.awt.Insets insets = aProgressDialog.getInsets();
		aProgressDialog.setSize(aProgressDialog.getWidth() + insets.left + insets.right, aProgressDialog.getHeight() + insets.top + insets.bottom);
		aProgressDialog.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JDialog");
		exception.printStackTrace(System.out);
	}
}


/**
 * 
 * @param newListener cbit.util.ProgressDialogListener
 */
public void removeProgressDialogListener(cbit.gui.ProgressDialogListener newListener) {
	fieldProgressDialogListenerEventMulticaster = cbit.gui.ProgressDialogListenerEventMulticaster.remove(fieldProgressDialogListenerEventMulticaster, newListener);
	return;
}


/**
 * Method generated to support the promotion of the cancelButtonVisible attribute.
 * @param arg1 boolean
 */
public void setCancelButtonVisible(boolean arg1) {
	getCancelButton().setVisible(arg1);
}


/**
 * Insert the method's description here.
 * Creation date: (5/19/2004 1:06:46 PM)
 * @param message java.lang.String
 */
void setMessage(String message) {
	getJLabel1().setText(message);
}


/**
 * Insert the method's description here.
 * Creation date: (5/19/2004 1:06:18 PM)
 * @param progress int
 */
void setProgress(int progress) {
	getJProgressBar1().setValue(progress);
}


/**
 * Insert the method's description here.
 * Creation date: (5/19/2004 1:06:18 PM)
 * @param progress int
 */
void setProgressBarString(String progressString) {
	getJProgressBar1().setString(progressString);
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G5DFC71B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DA8DF0D457F5D60C30851691E0918BA3BB9ACC9BA5D08FCE312DA134A6194C54ADE4CA925AB20D5B2A93B2D59B62D19A37E69A593D5ADDF6A5A4347A81D7CE94A3E39C23C2E4E16289D6818312C042B25AC1EB109DECF852BEC98F3D5D373C77D63B7A031EF3FF5E3E953B1270A41AB95CF74F7DBF67BB671EF39732F7FF5E2ED247DEC2CAF7917E775BD2C22E9EA664496C5C750237C5F7FB096D6FF5
	209A725C6BAEA88B214D7F085BDBCDCE6DAB037A8BD04F4EF5FB7F873E6BC85B3E6CA678C8310E8AED5E1F7D76FBB32F73D2C82C632175FF73D4C2D9853493F8D8369B383E232C1E739B8C4697D46AA0245A44BE3FACEB603C8C68138734992810775F89E5B9DDF9FE6BF15E6F6A12FC32752FB6FA7660BC36B9857519EC6CA4AF8969749C0C60DA674AAA7918F5503683888F6FA4A7BEFC8D4A933E1121D3837D0A599CB19535355527EBC33AEC986D0A24EAC3046451B996151551B1048CC37D48A8721EA0B86F
	F62817G6D9D957CD8A97243701D8114B7AA4EF2722D93E22F93CF1322D742B55E94E7A998E5E7A89C0D1F655916550ED7295CCF06D13E8DD13777B4109FA8861483D4G748B2A6FF66DFF21BC53EF36E9412096BA938E1FD5837A07DAC0D6613B3595DAB86F12BC206981C218CE3B4B0EA4594FCC4446FDF2576318CC720F897D2E3974B85970275BBD1EA4B259107F171EADD1A60B22E8DCA6EC6D87D32EDD96CB44DF625AD708FD6DE707FC949753575E6E77F99B78BCAD31785A57E3286BB7292EFD70DD4A71
	4178EFD37EAA9B1FE171E90A992C2F03367AB1010D3EAA3117EE57CAD25C724324F208FD736FBD13E3EC8F59E3537732032E39F10C2D394B5A4B0B143F5546E7FB39C579D8AF02366EF13717616B1C0E3639966A1B01368315GB5CC383D47013AA784469E505E1EA346FC12EE1E0DA8EAC056899BFBAE7C8A14F24C54252E10E1CA2181793224ABD23FAA9B04776989238C7A934679A97687E00D73F2C856A5D351C2B03B9414CDD9B7D81FCF43B558C717E92BDF894A30C0B0CC443CF2388ECAD5B24C0F428149
	1463BDD8FBB00CBA9915AE430CB081FCB33998864ACB05732783E5DBF2A82273FDA06BA1997CC737260DC442FEBC8959BE01F27EAA759D79703DF1C248F85CC45E21C93061C9B14F7E1B3536F95A15815C3E240F899BBBDC0A7E57BFA9B073FC1F40CC7B1EBFA115FF73032418697B48678DCFB22CE4CCCE371DF7691C38AFD67FB352B7C77B75CFA6372D59FD455F4EF98D67DD4EDFE5692AA8023ADA8BFB5C8C34431271A7B79B99E64FCA06ACD05A23834064C0DC62EC1F7FDEDA46656934767E926539264057
	CF8919251776597A5D6DFE67A633C7689AB87F2EBF409ACCB6BE9D6FA3F9D48E196DF2D88E85604360EDD7F4449C3757C14D9A73A96507413E5B40208C0BBF20238DCA2629AB7D91D36E15CDD3898D455BC768DAC624BF9CF78DE2ADDD47B3EAD130EF2BFFD4C75B9850C2A119AA499A425B4728ED4A2A9C04CD37E911104978378D447708BC46FD43BC43CD503655887A9996872C15AA708C3A928455232BA279D3E8375F3062980AF760E1BCB3896562A9E10351B7048D9E9C7F8A493B76671EE4F7C86C0F7E41
	D3BC456C45F5ABEE03FC0FE6723D4F27BE02738D3657775E21762E8DC410592DC9689AB966DF0F62BC87E17E63C03EDB82732591EC97FE05033DCDD3D5A6CACB464FC72AD1A7724D088C6E989D5887165C7EA3D2BB2D6DB217A1EBFFA902B2D4ED3E6F44EDFA8FBAC41CB78C7BC9834A3B4564D88865A168437A0DBB2DF870761D7D72EE0B186D52CDBC8B0D59EEC823D22C5908822EDADBAF08F00D47EB074B4B386D2C3BAD6232AFD620FCF6C05D1586F327899DFEE70F084B32C772492A619EEF2A9873B7E9CC
	F7FDE9F19D86FE72FEB9137FC88C574C01367CB4A17B58287DEEB8E3985A00C22FA5AE373722F69DB35E1168EEA887955DB03B4088E3C2466FC4F13FF8EFF1B63F477B9CA22658G6B3EG1479859A07576D356D7D88707CC0B1A0A71D6F9947BBE82394844D2C70497A2026876540A114EE3394B51B29BFE8BEC31BBB703BC9580DFC21156DD3EE437BDBBD9BB1CDADF4ED7ACC5DF4AA8C2E1B69781E7E9BG3C7FEB3AACF47532C34456DB3FA0F432326EB45F776647D712065BEBBC49E265E16FD31E4AFB18AE
	FEF3CFDCA745B92B9D2E652B9DCCBE0FB905FC5220CF8190DB77BD17D837789E614BDB4AB116BCB4AF795DF6E29A5F87F596E36D2E44B58273264701FBA95F1CB7BD8E4C2D90FBCA073622F9A2AE782FB174B95D69EE6FB0D09AD08ED0815036F401297551E3E416382BAB8461D0C8D2FB939CAC47D1B866E4BE11574D58AE61930938EFBEF34C964F3F101EA88BB6CE1DF5DC7D7C44F18CCB5E5E94F64DC085ED4CA7FFD0E97749AD73D9CC6507F2F83E2557BAE17BE973851E264E59EDBC573B49D31142468B78
	7E364D0F63E96773B7B9BE1CCEBCDF7D3DF30FFD18DED7CD20FFBB8263BA012E83CD826581EDGAA3CD7687665584959F4CB0D482F35812F937CED5B74BB515245D71C1FCF07CF4FBA0E5C17EC5CA997154DFDF3178D0B0F4FD3DFFD84467900986FCB1497007A2445FB2D82F9F9D0DFF71F30576ACA9A3FDA751F53BA7AB9D6DFD9B157D8F32E3451F6BE364657FF6FEB5863C8068B67F86A58EC77F872582CFABCF9EC764AF88D63439C764CCC343FB6BEF36C762B71E4315BAF693E7F455CC71244E997A1C163
	672AA34B9C653CCF0729359DA542877C3489EDBB098F70C9F0FBB25B1ED7D9467B975EA76EF53797FDE9FD065B5B825419A1F4FF2AAE990E2FE7B07D19D0E6E4A4E215596A61A93CB7F3212DGE88BD091D05982E1239B46E7753F9D31247E17617867CE1A7B41FC472DB99F1FC82D5FA7A7126B776B93982798DAC49F10276B701B9375D6DB5CC3F419F290D5417AEC2263CDC99F126F4040F769F85616EA7C77A7D26104693950E95773BB163DFFC46F5DCEB8FB5F82910BFCD60E38894803D2C48538EA065C93
	6669BD70D7AD40F1E365A29F9BDEA06241A722684787F5A988CB77066581B239907BBED5AE6E09A268DB8254G7C93C0D7970AB55F2D40B9CC45D4911B5FDA08EF1E3F68A7567E1FFB95E3DE9ED90290CCEAAFA1D958FDC665F4FC155D9F47D3437DF77AC196930CD33C365C4FE2820F453F1772BBEDFC96ABD4D2BE6D87ED5F3ADF78430F68BDF7A893F014A9F86B6B045FEC37F82F56A0AF9B6A791982EF4726D2632DF5AAB95ECECFA577A76726E676A79727E64649D1A77AEC005A5122CCFA9F507A06CC21A7
	551558FE0FAB31FDF1B93EC359DCC67395A594502220B2FCD9B20D66761EEB97FB7C1DDD974FDF6B39F82D2D3B2737033F8166C56D6F4B753B37A44D5F100EBC4074F91A17875FADF1B31F741C054B98342DFDGF9433B6D31B76E73DF011A01D87B43896DA89FEFC27B6604F65C6BEA073D7D650476DD5CF7B59371363969CD916F14ECDACB3A1F7CEE4AF7731D7CBC8D0BD8D960ACF16766DEACE7737C756F6C72A9DE3E5ED31AE29EBF9FFFFDD1BCEE62F7B9755959404FDFA4B03935CA60F473A2612F53A84E
	0B216E4A82FB4D927CCC4ABF1E457242BE0BDF6B9577AE76356F451515BA86A9DEB43778043F39D9EBF826354F748EB357F7A00E6FBA4433898647FCD0CDG25171305F27ACEDD7B8C6345FB2E13D38C46A06D63ED19D94C1714DAEB355460B9C695C3419C1D795573B5A28FAA4C92B67529F3BF14A1B95A18B4FBBBE48EABC693475AC9590E116A0907BD4E9498A966FAA10B63B6446E5CD2997750827C6E4542C7DD6FBF8C65E569863FE1BB820A2969740A8526CF576006B04798173EC6F01D3D3F7B737D9671
	8D0F3019F56B3FCAF26EDD1AB2C7D0797EB3F969F3143863714348A05EBD9B20ED9BD089505EA5EE6FA12053CB44593E5C0FFB44C88136FF46B42501E17A82A082084B0A9C0D3371E2E3F3AF42A78E6ED7FF5C7FE6AA79408C97C0EFCCD9FEE948527FD315787E25CAE3DA4404D8F6896A7F5BD6CE65073A8A148D143F043D9714AD45BEBF2A2ACFA207C49C9F1DC279DF68167AE575A867AD3F0A36EBFF9FE07C5EA174C797440FEDE7A59D63C076EE710C576E5BFCCB59BE4C2562DD432C3137E77076F5D06E27
	F343BDCC62FF4C26BA94E269791FAB051E9BD6BFC68E7E5DD24F9BA9747C6CD2265F7A8763BEADED5F8FABF84CD2C36DD60F48CCB76F5D403A6FC121E3FF60408C78457C2D972E4450105027DB46B52CFB12C11A376D11714CCAC8B1A19AD146E9E044C633353BC730BDGEB27812D82AAG5AEC6DE509FC0061AD8956BA82C33238AB45FA66E06A78E0E2F0765FEE5287718D2BDF830D87F1FE41DFB80898B135B0E5B2DE56A06AC5D70606CD561573178D229ED5F91032D9AC34FA0F78AD37884E5618AD624023
	57B13F36F287FC39EAEDBD2FAB013352D0B7C5BB3B2BFF3AC75C55FD59A2FFF83D8A67DC8C75FC200D59624DA076AB0113B5FF3C126484123F8BEE74EF72EC4BE678A8490E63643916558EB64F0D91BB5E30AD55DDFCFC999BFFF5D9FC9EF157C0FEB418A2BF2296474E771F5EB20E735CE5C2B6FB5EFEAD79B81B7509373855B5A23F5A3ACC3CC93D9F44BB28720B6043003A0182C0B12045C02B008A00B683ED87AA812AFE486DBD88F49C289368AAD078A1014505CA538CF64115C68129CB8AC2126361648D74
	DDC6024D78C7D26374F7A33363B4B0C25FDF81DF7E31B04FEB1491DCC79B9CB4E44B9EC2A355962F4B70E9060296486E1BA776FC3E5F4C1F791C63F65E75B816DFAC23B8CFFFA89E93B07E238C7FB6BE3335372A042D65C29B4991F878FE88F19800FA9AD08E50DA20ADC0BBF2040E1DEA8B19A5C776EB61EED01CEACB99587C6F525FF849F2088101CE83758129C0694B457C9F2A47E64050A5CD23199AA6EDGA1D93721094970E75EE4B24CD94E6CEE8DAFB7C23915FF33F1EBEBD2493E887A15AC3FB336E47B
	6D8D264669A74159F1BA90CC6ECF15601D7EB494CC6ECF4D205D1F725F4D02E86BC3E0F3FDD63FDB966FE30BB70F4E093CABCA409C36788B683E105FA96302021FC57795253CBE4E4B3671BE663C65C134B5B87230260B310F86719E9DD4D41555D752BECA88CC4F124717699E1530E45B779A0B7731252F95540D326FD5366FDFD77D3E5F6C6E3453F3FF50B558193707D2636AC72164F97CCFC249737897C3B33F7B7DF7A875EF36EE6D4E5FECCF05D36F2DE38E7F7F63E2B8B9667D61BBB17FF1B8B9662F056D
	18E739E7EDB5722A9F067861E1110FC62BC5BEFA44621D2FC55EA454F3AD5E8A4ADB8B752D966FAF681DD984F5578A412B2D9573552F90B9D5D3F5E21ED7012262F95E226A5972BC114309BCEFF8854B73D06E13AB186F5ECFC4AC7ED9AD4641E0D44AB87AC0750C2A8C05B06A63B9DF2CD644C199567E3ED67BCA4298BF6CD45CF4628D6E5B563882EB5CBF5650F7C8FAAF7B50474A1840327EAFDA39E59174E7E7ED2A1D6D2CCE9B6D04F115397133B66632339E6367CD0C770B5FE732EDC658F2D9E455627FDF
	343F8F75623F716721360E0B7E0ECBD67F6DF7593F2AD66481497613FA0F0FE3E8C3587F4F8CB5FE8D4AB5BFA63BCCD269D3E549109B2312E2361A44BDC033A7C3A7DE6BC759AE6A8C8BC70F35BAFF701853C1DCDD444D8C250B38906DDDE497B506AE6284C30961FFFEF211781F4BA42FDE119BA5DDEE8CE8F036C6C38B4A105343D91B1B0D1B6496F110E9FF4939A227EA3AEDFF8358B67F09146FE8B90F70BB7611F80C4B6E7D6F9D20F684FC5723621EFF63402FC96A9C37B7A829AAA0F564CCA800796E59B1
	D30E7B2BED87F0FEC374610D2C6D1F8E14F39D0BB17F8FD0CB8788F6BB23C5D590GG04ABGGD0CB818294G94G88G88G5DFC71B4F6BB23C5D590GG04ABGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG0F90GGGG
**end of data**/
}
}