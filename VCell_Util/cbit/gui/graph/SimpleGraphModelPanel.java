package cbit.gui.graph;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.gui.graph.GraphPane;
import java.util.*;
import javax.swing.*;
import javax.swing.plaf.basic.*;
import java.awt.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class SimpleGraphModelPanel extends JPanel implements java.awt.event.ActionListener, java.beans.PropertyChangeListener {
	private JPanel ivjFeatureSizePanel = null;
	private cbit.gui.graph.GraphPane ivjGraphPane = null;
	protected transient java.beans.PropertyChangeSupport propertyChange;
	private boolean ivjConnPtoP1Aligning = false;
	private JPanel ivjJPanel1 = null;
	private JToolBar ivjJToolBar1 = null;
	private ButtonModel ivjSelection = null;
	private cbit.gui.JToolBarToggleButton ivjSelectButton = null;
	private cbit.gui.ButtonGroupCivilized ivjButtonGroupCivilized = null;
	private JScrollPane ivjJScrollPane1 = null;
	private JLabel ivjJLabel3 = null;
	private JButton ivjAnnealLayoutButton = null;
	private JButton ivjCircleLayoutButton = null;
	private JLabel ivjJLabel4 = null;
	private JButton ivjLevellerLayoutButton = null;
	private JButton ivjRandomLayoutButton = null;
	private JButton ivjRelaxerLayoutButton = null;
	private JButton ivjZoomInButton = null;
	private JButton ivjZoomOutButton = null;
	private JButton ivjGlgLayoutJButton = null;
	private javax.swing.JDesktopPane fieldDesktopPane = new JDesktopPane();
	private SimpleGraphModel ivjSimpleGraphModel = null;
	private SimpleGraphCartoonTool ivjSimpleGraphModelTool1 = null;
	private cbit.util.graph.Graph fieldGraph = null;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public SimpleGraphModelPanel() {
	super();
	initialize();
}
/**
 * CartoonPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public SimpleGraphModelPanel(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getZoomInButton()) 
		connEtoC1(e);
	if (e.getSource() == getZoomOutButton()) 
		connEtoC2(e);
	if (e.getSource() == getRelaxerLayoutButton()) 
		connEtoM12(e);
	if (e.getSource() == getCircleLayoutButton()) 
		connEtoM7(e);
	if (e.getSource() == getRandomLayoutButton()) 
		connEtoM1(e);
	if (e.getSource() == getGlgLayoutJButton()) 
		connEtoM9(e);
	if (e.getSource() == getLevellerLayoutButton()) 
		connEtoM13(e);
	if (e.getSource() == getAnnealLayoutButton()) 
		connEtoM2(e);
	// user code begin {2}
	// user code end
}
/**
 * The addPropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().addPropertyChangeListener(listener);
}
/**
 * connEtoC1:  (ZoomInButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonEditorPanel.zoomInButton_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.zoomInButton_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (ZoomOutButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonEditorPanel.zoomOutButton_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.zoomOutButton_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (Button1.action.actionPerformed(java.awt.event.ActionEvent) --> CanvasTool.randomize()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModelTool1().layout(this.getRandomizer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM10:  (ReactionCartoonEditorPanel.initialize() --> GraphPane.graphModel)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM10() {
	try {
		// user code begin {1}
		// user code end
		getGraphPane().setGraphModel(getSimpleGraphModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM12:  (RelaxerButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM12(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModelTool1().layout(this.getRelaxer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM13:  (LevellerButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM13(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModelTool1().layout(this.getLeveller());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM16:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.graphPane)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM16() {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModelTool1().setGraphPane(getGraphPane());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM18:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.buttonGroup)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM18() {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModelTool1().setButtonGroup(getButtonGroupCivilized());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM2:  (AnnealButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModelTool1().layout(this.getAnnealer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM3:  (SimpleGraphModelPanel.graph --> SimpleGraphModel.graph)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM3(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModel().setGraph(this.getGraph());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM5:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getSelectButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM7:  (CircleButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModelTool1().layout(this.getCircularizer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM8:  (SimpleGraphModelPanel.initialize() --> SimpleGraphModelTool1.setSimpleGraphModel(Lcbit.vcell.constraints.gui.SimpleGraphModel;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM8() {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModelTool1().setGraphModel(getSimpleGraphModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM9:  (GlgLayoutJButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layoutGlg()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM9(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSimpleGraphModelTool1().layoutGlg();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (ButtonGroup1.selection <--> selection1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getSelection() != null)) {
				getButtonGroupCivilized().setSelection(getSelection());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (ButtonGroup1.selection <--> selection1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setSelection(getButtonGroupCivilized().getSelection());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP2SetTarget:  (Selection.actionCommand <--> ReactionCartoonTool1.modeString)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if ((getSelection() != null)) {
			getSimpleGraphModelTool1().setModeString(getSelection().getActionCommand());
		}
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * The firePropertyChange method was generated to support the propertyChange field.
 * @param propertyName java.lang.String
 * @param oldValue java.lang.Object
 * @param newValue java.lang.Object
 */
public void firePropertyChange(String propertyName, Object oldValue, Object newValue) {
	getPropertyChange().firePropertyChange(propertyName, oldValue, newValue);
}
/**
 * Comment
 */
private java.lang.String getAnnealer() {
	return CartoonTool.ANNEALER;
}
/**
 * Return the AnnealLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getAnnealLayoutButton() {
	if (ivjAnnealLayoutButton == null) {
		try {
			ivjAnnealLayoutButton = new javax.swing.JButton();
			ivjAnnealLayoutButton.setName("AnnealLayoutButton");
			ivjAnnealLayoutButton.setText("anl");
			ivjAnnealLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setActionCommand("AnnealLayout");
			ivjAnnealLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjAnnealLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAnnealLayoutButton;
}
/**
 * Return the ButtonGroup1 property value.
 * @return cbit.gui.ButtonGroupCivilized
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.ButtonGroupCivilized getButtonGroupCivilized() {
	if (ivjButtonGroupCivilized == null) {
		try {
			ivjButtonGroupCivilized = new cbit.gui.ButtonGroupCivilized();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonGroupCivilized;
}
/**
 * Return the CircleLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCircleLayoutButton() {
	if (ivjCircleLayoutButton == null) {
		try {
			ivjCircleLayoutButton = new javax.swing.JButton();
			ivjCircleLayoutButton.setName("CircleLayoutButton");
			ivjCircleLayoutButton.setText("crc");
			ivjCircleLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setActionCommand("CircleLayout");
			ivjCircleLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjCircleLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCircleLayoutButton;
}
/**
 * Comment
 */
private java.lang.String getCircularizer() {
	return CartoonTool.CIRCULARIZER;
}
/**
 * Comment
 */
private java.lang.String getCycleizer() {
	return CartoonTool.CYCLEIZER;
}
/**
 * Gets the desktopPane property (javax.swing.JDesktopPane) value.
 * @return The desktopPane property value.
 * @see #setDesktopPane
 */
public javax.swing.JDesktopPane getDesktopPane() {
	return fieldDesktopPane;
}
/**
 * Return the FeatureSizePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getFeatureSizePanel() {
	if (ivjFeatureSizePanel == null) {
		try {
			ivjFeatureSizePanel = new javax.swing.JPanel();
			ivjFeatureSizePanel.setName("FeatureSizePanel");
			ivjFeatureSizePanel.setPreferredSize(new java.awt.Dimension(22, 396));
			ivjFeatureSizePanel.setLayout(new java.awt.BorderLayout());
			ivjFeatureSizePanel.setMinimumSize(new java.awt.Dimension(22, 396));
			getFeatureSizePanel().add(getJPanel1(), "South");
			getFeatureSizePanel().add(getJScrollPane1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFeatureSizePanel;
}
/**
 * Comment
 */
private java.lang.String getForceDirect() {
	return CartoonTool.FORCEDIRECT;
}
/**
 * Return the GlgLayoutJButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getGlgLayoutJButton() {
	if (ivjGlgLayoutJButton == null) {
		try {
			ivjGlgLayoutJButton = new javax.swing.JButton();
			ivjGlgLayoutJButton.setName("GlgLayoutJButton");
			ivjGlgLayoutJButton.setText("glg");
			ivjGlgLayoutJButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjGlgLayoutJButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGlgLayoutJButton;
}
/**
 * Gets the graph property (cbit.vcell.mapping.potential.Graph) value.
 * @return The graph property value.
 * @see #setGraph
 */
public cbit.util.graph.Graph getGraph() {
	return fieldGraph;
}
/**
 * Return the GraphPane property value.
 * @return cbit.vcell.graph.GraphPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.graph.GraphPane getGraphPane() {
	if (ivjGraphPane == null) {
		try {
			ivjGraphPane = new cbit.gui.graph.GraphPane();
			ivjGraphPane.setName("GraphPane");
			ivjGraphPane.setBounds(0, 0, 372, 364);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGraphPane;
}
/**
 * Return the JLabel3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel3() {
	if (ivjJLabel3 == null) {
		try {
			ivjJLabel3 = new javax.swing.JLabel();
			ivjJLabel3.setName("JLabel3");
			ivjJLabel3.setText(" ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel3;
}
/**
 * Return the JLabel4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel4() {
	if (ivjJLabel4 == null) {
		try {
			ivjJLabel4 = new javax.swing.JLabel();
			ivjJLabel4.setName("JLabel4");
			ivjJLabel4.setText(" ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel4;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setPreferredSize(new java.awt.Dimension(22, 396));
			ivjJScrollPane1.setMinimumSize(new java.awt.Dimension(22, 396));
			getJScrollPane1().setViewportView(getGraphPane());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}
/**
 * Return the JToolBar1 property value.
 * @return javax.swing.JToolBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JToolBar getJToolBar1() {
	if (ivjJToolBar1 == null) {
		try {
			ivjJToolBar1 = new javax.swing.JToolBar();
			ivjJToolBar1.setName("JToolBar1");
			ivjJToolBar1.setFloatable(false);
			ivjJToolBar1.setBorder(new javax.swing.border.EtchedBorder());
			ivjJToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
			getJToolBar1().add(getSelectButton(), getSelectButton().getName());
			getJToolBar1().add(getJLabel3(), getJLabel3().getName());
			getJToolBar1().add(getZoomInButton(), getZoomInButton().getName());
			getJToolBar1().add(getZoomOutButton(), getZoomOutButton().getName());
			getJToolBar1().add(getJLabel4(), getJLabel4().getName());
			getJToolBar1().add(getRandomLayoutButton(), getRandomLayoutButton().getName());
			getJToolBar1().add(getCircleLayoutButton(), getCircleLayoutButton().getName());
			getJToolBar1().add(getAnnealLayoutButton(), getAnnealLayoutButton().getName());
			getJToolBar1().add(getLevellerLayoutButton(), getLevellerLayoutButton().getName());
			getJToolBar1().add(getRelaxerLayoutButton(), getRelaxerLayoutButton().getName());
			getJToolBar1().add(getGlgLayoutJButton(), getGlgLayoutJButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJToolBar1;
}
/**
 * Comment
 */
private java.lang.String getLeveller() {
	return CartoonTool.LEVELLER;
}
/**
 * Return the LevellerLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getLevellerLayoutButton() {
	if (ivjLevellerLayoutButton == null) {
		try {
			ivjLevellerLayoutButton = new javax.swing.JButton();
			ivjLevellerLayoutButton.setName("LevellerLayoutButton");
			ivjLevellerLayoutButton.setText("lev");
			ivjLevellerLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setActionCommand("LevellerLayout");
			ivjLevellerLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjLevellerLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLevellerLayoutButton;
}
/**
 * Accessor for the propertyChange field.
 * @return java.beans.PropertyChangeSupport
 */
protected java.beans.PropertyChangeSupport getPropertyChange() {
	if (propertyChange == null) {
		propertyChange = new java.beans.PropertyChangeSupport(this);
	};
	return propertyChange;
}
/**
 * Comment
 */
private java.lang.String getRandomizer() {
	return CartoonTool.RANDOMIZER;
}
/**
 * Return the RandomLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getRandomLayoutButton() {
	if (ivjRandomLayoutButton == null) {
		try {
			ivjRandomLayoutButton = new javax.swing.JButton();
			ivjRandomLayoutButton.setName("RandomLayoutButton");
			ivjRandomLayoutButton.setText("rnd");
			ivjRandomLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setActionCommand("RandomLayout");
			ivjRandomLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRandomLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRandomLayoutButton;
}
/**
 * Comment
 */
private java.lang.String getRelaxer() {
	return CartoonTool.RELAXER;
}
/**
 * Return the RelaxerLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getRelaxerLayoutButton() {
	if (ivjRelaxerLayoutButton == null) {
		try {
			ivjRelaxerLayoutButton = new javax.swing.JButton();
			ivjRelaxerLayoutButton.setName("RelaxerLayoutButton");
			ivjRelaxerLayoutButton.setText("rlx");
			ivjRelaxerLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setActionCommand("RelaxerLayout");
			ivjRelaxerLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRelaxerLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRelaxerLayoutButton;
}
/**
 * Return the JToolBarToggleButton2 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getSelectButton() {
	if (ivjSelectButton == null) {
		try {
			ivjSelectButton = new cbit.gui.JToolBarToggleButton();
			ivjSelectButton.setName("SelectButton");
			ivjSelectButton.setText("");
			ivjSelectButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjSelectButton.setActionCommand("select");
			ivjSelectButton.setSelected(true);
			ivjSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/select.gif")));
			ivjSelectButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjSelectButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSelectButton;
}
/**
 * Return the selection1 property value.
 * @return javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.ButtonModel getSelection() {
	// user code begin {1}
	// user code end
	return ivjSelection;
}
/**
 * Return the SimpleGraphModel property value.
 * @return cbit.vcell.graph.SimpleGraphModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public SimpleGraphModel getSimpleGraphModel() {
	if (ivjSimpleGraphModel == null) {
		try {
			ivjSimpleGraphModel = new SimpleGraphModel();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSimpleGraphModel;
}
/**
 * Return the SimpleGraphModelTool1 property value.
 * @return cbit.vcell.graph.SimpleGraphCartoonTool
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private SimpleGraphCartoonTool getSimpleGraphModelTool1() {
	if (ivjSimpleGraphModelTool1 == null) {
		try {
			ivjSimpleGraphModelTool1 = new SimpleGraphCartoonTool();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSimpleGraphModelTool1;
}
/**
 * Comment
 */
private java.lang.String getStabilizer() {
	return CartoonTool.STABILIZER;
}
/**
 * Return the ZoomInButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getZoomInButton() {
	if (ivjZoomInButton == null) {
		try {
			ivjZoomInButton = new javax.swing.JButton();
			ivjZoomInButton.setName("ZoomInButton");
			ivjZoomInButton.setText("");
			ivjZoomInButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setActionCommand("ZoomIn");
			ivjZoomInButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/zoomin.gif")));
			ivjZoomInButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjZoomInButton;
}
/**
 * Return the ZoomOutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getZoomOutButton() {
	if (ivjZoomOutButton == null) {
		try {
			ivjZoomOutButton = new javax.swing.JButton();
			ivjZoomOutButton.setName("ZoomOutButton");
			ivjZoomOutButton.setText("");
			ivjZoomOutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjZoomOutButton.setActionCommand("ZoomOut");
			ivjZoomOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/zoomout.gif")));
			ivjZoomOutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjZoomOutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjZoomOutButton;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION --------- in CartoonPanel");
	exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButtonGroupCivilized().addPropertyChangeListener(this);
	getZoomInButton().addActionListener(this);
	getZoomOutButton().addActionListener(this);
	getRelaxerLayoutButton().addActionListener(this);
	getCircleLayoutButton().addActionListener(this);
	getRandomLayoutButton().addActionListener(this);
	getGlgLayoutJButton().addActionListener(this);
	getLevellerLayoutButton().addActionListener(this);
	getAnnealLayoutButton().addActionListener(this);
	this.addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}
/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("CartoonPanel");
		setPreferredSize(new java.awt.Dimension(54, 425));
		setLayout(new java.awt.BorderLayout());
		setSize(472, 422);
		setMinimumSize(new java.awt.Dimension(54, 425));
		add(getFeatureSizePanel(), "Center");
		add(getJToolBar1(), "West");
		initConnections();
		connEtoM5();
		connEtoM10();
		connEtoM16();
		connEtoM8();
		connEtoM18();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		JFrame frame = new javax.swing.JFrame();
		SimpleGraphModelPanel aSimpleGraphModelPanel;
		aSimpleGraphModelPanel = new SimpleGraphModelPanel();
		frame.setContentPane(aSimpleGraphModelPanel);
		frame.setSize(aSimpleGraphModelPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getButtonGroupCivilized() && (evt.getPropertyName().equals("selection"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == this && (evt.getPropertyName().equals("graph"))) 
		connEtoM3(evt);
	// user code begin {2}
	// user code end
}
/**
 * The removePropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().removePropertyChangeListener(listener);
}
/**
 * Sets the desktopPane property (javax.swing.JDesktopPane) value.
 * @param desktopPane The new value for the property.
 * @see #getDesktopPane
 */
public void setDesktopPane(javax.swing.JDesktopPane desktopPane) {
	JDesktopPane oldValue = fieldDesktopPane;
	fieldDesktopPane = desktopPane;
	firePropertyChange("desktopPane", oldValue, desktopPane);
}
/**
 * Sets the graph property (cbit.vcell.mapping.potential.Graph) value.
 * @param graph The new value for the property.
 * @see #getGraph
 */
public void setGraph(cbit.util.graph.Graph graph) {
	cbit.util.graph.Graph oldValue = fieldGraph;
	fieldGraph = graph;
	firePropertyChange("graph", oldValue, graph);
}
/**
 * Set the selection1 to a new value.
 * @param newValue javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setSelection(javax.swing.ButtonModel newValue) {
	if (ivjSelection != newValue) {
		try {
			ivjSelection = newValue;
			connPtoP1SetSource();
			connPtoP2SetTarget();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Comment
 */
private void zoomInButton_ActionPerformed() {
	if (getSimpleGraphModel()!=null){
		switch (getSimpleGraphModel().getZoomPercent()){
			case 195: {
				// already at top, do nothing
				break;
			}
			case 156: {
				getSimpleGraphModel().setZoomPercent(195);
				break;
			}
			case 125: {
				getSimpleGraphModel().setZoomPercent(156);
				break;
			}
			case 100: {
				getSimpleGraphModel().setZoomPercent(125);
				break;
			}
			case 80: {
				getSimpleGraphModel().setZoomPercent(100);
				break;
			}
			case 64: {
				getSimpleGraphModel().setZoomPercent(80);
				break;
			}
			case 50: {
				getSimpleGraphModel().setZoomPercent(64);
				break;
			}
			case 40: {
				getSimpleGraphModel().setZoomPercent(50);
				break;
			}
			case 30: {
				getSimpleGraphModel().setZoomPercent(40);
				break;
			}
			case 20: {
				getSimpleGraphModel().setZoomPercent(30);
				break;
			}
			case 10: {
				getSimpleGraphModel().setZoomPercent(20);
				break;
			}
			default: {
				getSimpleGraphModel().setZoomPercent(100);
				break;
			}
		}
	}
}
/**
 * Comment
 */
private void zoomOutButton_ActionPerformed() {
	if (getSimpleGraphModel()!=null){
		switch (getSimpleGraphModel().getZoomPercent()){
			case 195: {
				getSimpleGraphModel().setZoomPercent(156);
				break;
			}
			case 156: {
				getSimpleGraphModel().setZoomPercent(125);
				break;
			}
			case 125: {
				getSimpleGraphModel().setZoomPercent(100);
				break;
			}
			case 100: {
				getSimpleGraphModel().setZoomPercent(80);
				break;
			}
			case 80: {
				getSimpleGraphModel().setZoomPercent(64);
				break;
			}
			case 64: {
				getSimpleGraphModel().setZoomPercent(50);
				break;
			}
			case 50: {
				getSimpleGraphModel().setZoomPercent(40);
				break;
			}
			case 40: {
				getSimpleGraphModel().setZoomPercent(30);
				break;
			}
			case 30: {
				getSimpleGraphModel().setZoomPercent(20);
				break;
			}
			case 20: {
				getSimpleGraphModel().setZoomPercent(10);
				break;
			}
			case 10: {
				// can't zoom out any further
				break;
			}
			default: {
				getSimpleGraphModel().setZoomPercent(100);
				break;
			}
		}
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G57FC71B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E15DFD8DD8D4D57AB85BEA31C90605651695A999A635D8D6E454D25926C99BEDD4D4D6E4D4E65472EC34392D3BDD3E068F8771839593F4B4B3AC9791D0095C128F95DBAA92B2C2B286668223438C4DDCE4B4527FFB4E396F39F7E66EB0407EFA7E4F33BD3D5EB96FB96F67F94F773997A1FFD3F0C6CAEA3EA024E48872FFFBD384A1F02CA08C5E7E4515080B316B728455FF1B81D68A2FFD178E4FF84873FF
	CB1737C2A82D4802F4B2247D92F5F96B6077EAE1F7055FE97861C5CE8B644DFF24E8E0E8B95789A8A7132667976961399CE0896048334EC1643FD0D4A0638B9D8C0F10128AB8091479E7D1210C7307B241GF1G09F279F4A813CDA50F2D2A144B35CD8895E29F0C4A4CA5FCD4BC91CC922375171F02D01FD95ACFE4FD30D1AF53C4C15E92GE2FC1AD0F374C3F86EEBBC597DE9E707D9AA696EB717F45B0DFDBDD5D5CD665EBE0BF808A43E3019C4CB2351AADA84A10C7233ED4C227402A0C13A7294417DD1A0B2
	12A01D85E943A9445F1FCA700370BB88A06C945A756F8F7649FA377CF43B30E8ED5F4ABCAFF64DB9456CC9BC2558357F5399296BE99D3C18C2FCDDBC204BEBGE88798839082B087E0832D7BC40158D95DA1555AFAFBED566A3E3E9A0B49CE6D025FD5D510A3630E081DB63BC990D87D7EEB638E8DFD0682C67749086918CFC24B312E430E5CA4C45E1210192961134850F9198B8618AF1287941FB05912D75979CE57D8F4157D2D2016BD373B1146083B6C0466463CE2194FBE27A2FB50C96A3AA60554F59B7CA6
	F44BC83DD3FCA345C72970ACAEE3E94C10F4BC64551D4658E8D90E3AB424CF9112CADF547403735E27B2C3CFB39D22CE3B6B722FF442BB71B41339DB5105625B4FA8F8264BFC9A27A49D8BF9FE033ABC96DF2F2711F63A632CAE2F9E209D4089B089E096405C3398E33BD3F68EB3469A0DF629265FECB109F601513E1E32961E22D3329B8FDB9D12515AA99EB55A4D468E0B689064B2EF25909FF43850AD25315F89B28E09D651EE144CB6ABF0B7760A12E8F730B29929ABC9993BC8F31B4D3DA288686D9310EFEE
	6AEAF8DA0C8E691BBE13D1921592ACFFCDAA2913D3462340919840EF66178D9944DF0B40FE619C786F9C7AA110727B0FE8077E222A2A41E6BB595F57CCAC915AC9B9E19C6DBB36426FFD6750476BF484978269C84E670154D5AABEF566CE223E51FE9A5BD8FD8AF462C28C14DF84106587FD8EC01D9F46506BAD98C3F539B78A7A47DE500C2116EF9A735A7DD86CB87D5C5B52D1AA0368998CF9D1G71G422F307FFFCAE899E1BBA73AAE1775C6DC1D1FEB3BC4DB180CB7C6ACA3C3FE2629F04B5C4A905E593CAE
	47E6123AB400DD7BG5AFE05F5101AE6E0B1DDE3F4089845DF59A1GC513D2A3CC4F72749EF82E117912B10A34076FGBE93C86FA28807G5E83B8A95743B1003DG1FG1483FCCF6ADBE0E36D47G87GA6823CAF374B43GB6220F00B1F0144A14C05F49GF3G9281724F83BBGCCG81G33G96G247FDA1737832099E090A084A09AA09920F08C448E0085A088A092A081C0BFD617D78150B6966B63115460944FB84A161F39EE78B5DE6AE8336C0B77B572F64A4FF2596E3D32BFBE11711F49BED8AE7B68
	106C1B7FF811752DDC8F47E49FFB0B1B137253B642F89B8AA67E9F729A89303A5A17C66AEA1DDBDE062A0C9A1F66059729A352277DCBA38F6BFD13DCEF245DFCGD0A4A87130DB7E3D1D6AA4883B643A5712C566C0242D12F639F9887BB02E4A7F8FFD76517F273AE2FD4D12B4E23BF8CA34CAF5E21FE8B5418F071C77CE9A7133BCBEF659B8CDC6BA417741F8DA8B83180363172593BF9BA549EE6E681744A6D1124C56EEA5FFF5BA1165686F68D306E21475EEBA098F5BG0C273C7C26F4B296F55A2CD611F6FA
	1CC44E5FCC47C251A27602523536FE2B44709FE4107542C97134BC96FF14219348D8EA69A763BA1B03079BC9FD77594D3D501512290190BB160C13D3B69628FCB486F0E4AD918A4F4831B8468D3C07E35C56B35305609F6E4E541A33B92FFBA63370FCB646141E2F0CF1CC27C21D366EDB6818AC639DCC5743F40ED48BCA5A48C483C666B466CF322092EA7AA549E6BDE4377577551ACF19AD66B3220965DF54C374ED82E654FD82EBEB2B05873BC99C3BAFB51AEDB64BAEDE662193ABB44A30F16B6EAC22CFA358
	E48298BC9F472D2BF5A49F678E7200D5EB33A872671CCFFCFC959D5F51CFC167B39F135F9597107CF9BCDF8F692D97A8790C3EB7D5CDBF68117FDB177CA8D5BE53F3DCA6314DA17E58AF42140FCC127E43E365124CD5EEF9C76538E179D7E41238312866D77B7D094C60F4DCD78A7EEC5ED2604F66AE25705C8868C4DA6EC486168B70E7FA054865A37D190EFE3FA165366A30DC65EF58B85B884F765FB0FEA5A4F6AFA465DE676522A1AF81A07DC246376EC2460F153BB9934BC5C2BA76C225DC32DC0E6977E396
	16B30CE3791570EC84689B474AB1FBEB3379BAFA9C33B3F89C1B27C50ED35B3BB6874B4582BE91C09F404AB5842865BE454BC9008F8870D6EE7CB2AC97962068C74A4DF1A9572A47F28BG1F8C10FF11963F0D39D82E9972ADG81F239680B54659672F28900DFFA11B77DAEDB0E658A473B6AD7B1DEDD6E73BCACB786701347FB63173E01571B9B3F58716AF809616592473379D57A45F29CDE4C62E570E2D24E3F904B95DF4C66E27BAFE6FC9BAFE67CD8397DFC1FE46E45EC6E96AF17CBF2A9370417AB8CE4F3
	3D0AC0B97E82557A05EF64759BA84F8BAFE6F1652A1FE993EF9F01EC8E99A2731B952816DBE860759148661BCB65F27A89EA39313CDC6584B67FEC1C4056926D9318DC6667A91B31DC5F844647DFAEB759051FFD8B168B1F40663B448ED28E6DE0FD769B5B49B8C277F8CE98CF991DA50E81988B2B2ABE277DB75B4F51EFA2FDBD692367CE40FD1B3F7FCC7AD661926087D0FA890EB90F64623ECD5049D0A124672BBCEF7BD17517B0FDAD17A8E3CEC2767EEC56F7E7659019E11097F989765BEB3254EB47EA0743
	56E9264BD6394F1B13259E1398EEDED68EBC3B4CF607F498A68DCE6C9F9F4EA27A12F52D0C167DB16D3D778437BD2F2AAA2D21CB5E977979205A5E49F973E93F2BE5EF0CECE7124A5E41BF7F1847769712689E889953CAAF556575G84DFCA77A9D2499C017451CCDEE7B94A8BBCF31D30FF62A22F7292AE15778A0394F9BB4E7EB50B59F9B4E32F0B1D27BAC50B258466B08E18C51941FD4CF25540AA0F6BE47815FD652F5FB5C29EF4F096F0CFE5DEBA5A3C8FF414G5818DECB77949C9E7301E6BADF12FA4C8E
	660B3FD46F17ED0D3EE90AB0A97329CC2DBD427A6BDF4A8C13FD902B72C5732DB3D2FBG18AE17E620AEDBA742FAEEA26A72B6451B2DE649ECA475DE3C1D59DEEA5D82CF2349D45C20EAB7A5559D4476CE09C54CA75B0F627E590D9B553AAEEAFFD4D3D74BAB37E686CDE4BAC6CED4F40D19B6A3B5E19A6A7A058EF5CD3F8C5A76E5286BAC9D710F515E3D0B4DAF2E5F2B1EDFC8D0AE84E06EE598CB035F21CEFE513304A52B1E5654090ECD174931F439225364D9B3D243E721CE6B689E8171CDB31489GE0BAD4
	6628F518F3B953A171F25479ECE6995119D6F489FBB40A76AE1B3DD7B495934F1698872492BA6FAF29265987486F6D58DE7F32072C2D4E58EC3D072D4C69BFD43BF101CAE076CED92D2E0342F3E11A7676645D16A9CCE2F696CFD26C6D817F8F72BAF81A5BABC11930C9E86F23C6ADFB93A6611EFAD311C156772BFE492B42CC4695D9D84FCB003E7437683314EC7718E4321B4B5432FB20FC90C084277BA81B74055D2A064864D832D1CEB414CD3F824BBF1A1D4B6B06ECDB9A2DA65E967FC9F975821BA6D8C6D9
	3B1157E7B93CCD839F698A744B2B0216DF42382CE9B97FDD9C5CF116746B9663E9DB3F441AE40945888D12E9C79AA253AFED996A97853217F07D9276EA69D7FA25CE6E1FEF67F4F5009B3C92752E51E723CF4908A9209FFE2D47781885E5932FC4B9530FE94959BA9979AD560F568FCC6E21DC543392F876CDC639C92DDAF2C3395C1BF27FBB7F37FD27677EBFE46966B13CECB96A9389321239BEF7EB6A3363AA74776F17237F76834EF995361F68EFEB85B2B6C86E23CAF10377B128443D30928F275FC57D42C1
	46222BD03F14D5DA7A992EC67D7E358169AAGE7399A7D9831010C479D4A04C11673B7DEBE844AAE389A6D497F14BC691A1F37ADFBA10EF30CF6E6A17AA27F9A18F7DF03328A0A303FE73CDE790E74055D22D4ED350AC60BE8AF5E6E5992643E706FC55897EE2D8B918A126F705A770F39067501E157A8FDE1D86EDBD9D1GCCBFF3916A37944AD48423FEB1EE7A15D74A7AB5C09CD93C6947F8EE5E08BCAD40AF0473745F684A733D531B994FA350BB59FA21B754660A6D63490DD88F8B00E77E35D81F97EDC2F9
	8D009BF3AD4ACB5E64AAEF4C7B6FB1F935E6FBE73F45E877AA1171BDE0C03E1140B319738DB338727DBCFF23EC07E8B1BA3D9941F87E4300B66C18224BB3CDC11E264D48132583B63B46517C4D284BE4200965F4E5DBB2308F63B1F84C8547682F5C02F275D3E15DB495773CD7EE42B3454129ACC68227AAE796A170BBC215266568D91B6DAC6197BD151D35E5F07C990A0FD761197C143328FFB2643504607950C0AED943C4C2BA8EA089A06BBADDDEB1C07DF538F678B61B6C058EF97EF658AA415242E8E9F259
	7843F3309CE277C971341CDE1923EE3772D973F252E718C0269F40A400F000982E43249C1FBA9CF0EA6A407C7C57946267246B344FE93500512527923A2CE94327E3FD4476D6755D02049513B2533C749115B26F7AE9CA9F41FCB2FE857109BF60C3GA281E281122721CF96666C706593BC6B141D41ECFAB85D5799FA7E752E76B23AE7FC52D53A51B1BB92D61275F4A364D9G46G84834C810887C88FC5FBCA17557832279AB71E1BED7CE72D7B66B16A7B5B0C5159F93DCF3A42D0ADBB3FDBCD6C2C003CC600
	9E00B1G21GF3G96F1BB4FDB76094FD8A6938430D11EBF3A9B4874EC520D4EBE23CF3A2C692EF42C1F7DDB01467A7EF332282DB15A1BED5D5DA44E4860AD6F33A7142B77598D535939F4BDBC5BG587EC8C8D516404EEE246958A7BD19CF7C988769E4G7D8D509F81B4G74G845C00FE0C759DAF7C48FEB871D214696E17109BDC7D206D4F0FBC68CA5C52D1B7E879B32FE93D2039FFA4FB115F894AC19F455D00BE7AF2AD71513E99501783748184G0483C483A44DC09FFD207F77B0E32D96F075B65BC98D
	7748F6BEBFCA7F7C5927FFD6043952B13BF3BA085DE4EED59C0663E5F05668E27EA61FF481E1DAF5342246A0F86E5348B7398E61520545FB55C1F53C07G3F9800E4002C9BB15E4715617DAE430DE813BDFBF4B6797924EB39D10B6EC04E6864B579246B3BD12B9E3724E07C7AF31B33170DCE07F5BE6992B5F558D009BA245F04BA5CB5CA9D667B246B39C90B6EB77A51351F4BBD685C5B0F5FCDDAB6479FC31BA7F11B3F489D1D4D47FC52AD55546103E3580673FF47673C4BC72743A61FF44E5FE96970E6AB7A
	A1106BF03F872F615545239EF46EF5117CBBAD3AF36F0E4E660BFC52694335EC2EDC05B6EF8DC71B4BB70CCE07EA1FF47E61DAF46F0CD2DEEE21AF3AE0CDF937FB508D2FCE6F7720F32F5388B7F9EC8C7E63BAB28647C0DEA2C07ACCDD1E81208E209DE04CCC9C034F68491D22614ED3FC0F43362251597933871D3B1DA1B33568BE703877BABCF93BBD685C65C5EA4AFB4E679DDFEDF92F79240B5514F769265159F72D871D3BFD091A727EE3981D3C6FBC685C65255F2CC51736F9F47EDC69132ED0D35EA39EF4
	43336FB98F3A0DEE698ACDF957EE991DFD3F73C95760A60F5D33AD26E73AA6487383E0387482028B02F4A847BD3F1E6022A11D40F1299B88AE6B9668ABEE41FE397FAC41D5C03A11637CA80E4C9F495EA943E51E9D4EFDD54247D719C60DB2CC06E1D8B23C5D67D3C306860E7507FE395E6F23DD102BFD9F6D22DC6D7BE817662EE4F860213E7D0D79D7668EFDDFEDEA2E777BEA2FAD772EE772F2EDBD5FDE2E2D2710B7341ED9F95E74AC227EFE1C5E8F3377DBA5F32FC8D933750968A4FB38B0029C6937326105
	F0F7386F7F88B8E6ADDFCF76B5FBEE4131691A3CB241F3ECBAE0B2CBB6BBB2E9960D762F3A3A78823A29CF6CC43DAFDB615DC7D72D50765154955ABE1A3EE2E89F4DDCB1340FDE16481DB70F3B04DF4248AA605E2CAEA3DBAE53A8599AF7F15E2F2F74EE471BAB356D787BCAF2466730755BBBC5F7DDD3D79570BCE5A4BFAC093DC49D79AE65AAC2AF996D5D22072D2BA8BD4B73C63FE195BDAFB11B4CF67934DFBEBB60B69E10ECDF6C66BCBBD7FB377144EAED9B7BD6FB37F1E035EF9B7DD6FB377102553EED8C
	DC6D2D4E192D976A16E1FDF659ED3DD0232CDD341FFBD7505CDB11372BF01EDCD80177F3465C0277F32E5EC35ADAA424E38192F91FBC3DCA2BEFCC1F457A52827939E31652376E075F4DGBD33DC7B5BC1C8873A61183DAF64FB2F2345795AF514146F3D0E5E4A77DDC7429A6FF5143946F79D2DD8639E072CBD4EDB1BC75B3343A1BA68A6D31DD1B262FD14CCD50C5612F6A83FE3152365639059D79172B3DA653BF8781DBC4BF3BC4B3AD517D788D0FA2B124774EDD96B5D47BF2C55763138563B0FADEBFD7B38
	FF2DF79F8F2E756D6331EB07EE876FE5297DD9467D195721654FBA59A7AD72532272119F7C8E3A55531F21000BF443B359CF50FBE2585F6CAA453D336E83C55AED302953EE33D864B3FF36F7F673D977BB59E42FB88664A55C0AFBE77603D932DDCBEF4536FA4DAE52D6ABEE5365B5G18EE43369AD8B6545CEE70B6CF7B18AD53335563C399478F663858D84657C6A9DA7E8D147907484F88B7F951100EF743A5C3BA6BF608595B95BC133DFF193ABF5F4B6B56D029A53BD4262F131FAD373B4A31C05A4F8D9784
	69D000C88F59494BDC6C5E0378A83DDAA7257D3EF8CCCB279819EF027CDC62A6DF9F81736188D7DC85246B815AA25CF59A132B167DB1173DC3D3F61FCCBFA642334E89CC82FC18DBDE9424E38196F9482EDF6E620FF2147DF62B166C25B27D0ABB58F36B9D2EF2AAA15D6006EB07348460FF073B6C254B55F6D7F27CED6F2A71CA5B7F77AAAD1DA64BFC4365679CB779F110CEF4438933F5F979G45335DF5BA3141459F15085FC36FDD284665D206FF3D50E53C2EAD177B4038F55E7B646756E97749AF2E735EA7
	A72E735DA73F394EFB1F3CF41D6FBEB923E068BEF9DA112B2D9F4B78639BDD71E5B2FE6DA657398C16FF5095DFDBA1634FB33862ABE5FC55E6D7BE48BFEB0BBACE4A391EF1DBDC4BA31F4FB6917F745945AE51EE97CDCD66B3243F16E613FE37052E0177416F7A59F897E2C381F987075DE302D83F13148BAC40FEBD824A45GAC81505F497AF7B6CE4C9CA0723B6C46DEF09FDBDCC452FB676B115682657DG028122G626FC4196B691DA1A0B4777677D28D19FEAF53F5F6BD70E90E44328F1CA66F049C940DD2
	3FDDA4E5D56F596453B9BE4E8E15F5412A75396ABA1657922CFDED2EA0E30CDFA4EB93C1112EEDA654AD9D89E9F6C76348DE52B6E2A2599D8D728E9D43F7D1FC56DD8A1E5D5D882173D1125E8FF9CB6F423D0479746CB462EEDD5E5C3B91D77A894145C2BA116376B6931C70FB98DBFE0F38EBA82E98527BB8EE9145B512B447ED7F1060A4C887F25C4B826EEB04F05CA0BD571A8B69F80E3B0C1EDBA6C3BABD8AF1EFD15C8AC897F3DCB1BD675B8769960E8B24B89324A50E6B51931CBF24C3B86ECDA36A9241F1
	AD14F6812413B9EEFCA65DF73987FCF08F62F6F520FE459CF7C9876AD741F125BA542F1E63A668D03FE60E5BE3C27DFAB86EA16E2BC10EFBCDC07D026F41394D6233388E19F58F4EED9A2A69FB7610CE3F97743E9767B68387F1EED3F12F6718D68F38B6B7BC0B2F55E504DF5F3DAC3E52B83E08627DD4F896F7576D42BBCB011017FCAF6AFFFD995A54F29F628E53B33EC1C887F05CCD94B78952619CF7C1AB7AF28E47AD223898C8A7F25CC554C7429C78BD87F13338AF37F2DCAC455513B4475DC5F192247DB9
	2E26926BBA086326D6E2DD87F35C3C6FD13FD99C7761F12C57A80E7BF1AF6A974BF1E7FFC27D96F15C55BFE1DD6B6FC71C3E9B75B3F0DCE69B6A370363FA5AD03FCA0E1BAC20FE8D9C778F8175EB61389D2D281F0563C2EAD0BFBF0E1BD3037A05F05C766328DF8447FDC94F7166C0BA1663EE2138F8C8AF613873845C9B557F81F13F663A98B8AEEC9B6AD241F1515BF0EF340563EEE9C5DDAC9CD7C865BAA16D4FF13F2238A0C807F11C1D7BAA0A639EE5B18469C59C674775DB4AF1D339FEAB9EC05CFD94D781
	69860E3B1F6B574EF1BF5033B78B2487B9EE8E4579C3BA1863661D643146F19FDA88AE8A528BB86ECBBD6A1744F1E3F8DBC81F4B6B17620AA13D1F63AE61ED2119606612EF6F3CC92E124AE37C5F561104D59CB0700B4AF566DE51CABEC8D13C3BE2072122EC77F679CEDB70007ACEDBC1CE0C66BB31F45DB3D7DE77484F2D3B176AD81F92D1005F4BC9023C62F9B887F829040C37FC2DC894292A2A311177CB9B5804027513825DD3A7746D73301FACD9CFF8CE02F4B8405CF9780E06F39B3E6F93B6ED0AB04924
	7DBED5D4737C4C78F9CC4F748715BBF84D1F4EC8E5B2B73E0BB277C33E73C15AB73F2B3E63CCFC79C59ABB0FE179E7DD7249BC113C232E64073B6493FDE73A50AFF449A7BEAA126919ED735FC75B164E8F979AEE7D1357EF97C549B6A5484F0834253A6059DFE633D8D833C50905E7FF9ECEAC30382A247BE60573217D4E676D1C626AA15D46F129FBF81F43F1D594978669B973F1CCEB59CB4634B8C8A78124C743F887D08950GE08188G88830886C80CC6BA8B25A36F4CE6BD445E0DA56F3D96BF445E87A56F
	181277AE493B1C643DD4726EA7233BE1CFB8BC89FFF7FF05E960E8ECF84193FD357009F279E8AFF4F4DEAB67B548CFE2B371C100979A267B13D4F7776F0EAC27F528AD477DFB8C6A38524263F79D3CFDE303C01E7C446FF2E44BF13452CBF996E38B2B683DEAD84C31782BFCCF093FC31F50393C5169B6177F014EE96B21CE1B9F42397C174DDA6F57B01EBDDB951E3751B9ADFB9FCEB4B1FE8FB5639DACBF4E6F1DE622179996C12C4C1AEFC819C0481F4C4B6C7F507BFA68BBBACFCE0232CB81767D11607EA960
	7A25780F5E761BAEAD53DE3F4C20F32CB1C09778C77EFEC4362B6F463D2F5839FC19366F36ADA3FCA20147DC4E67338E6F3E3BE91B42737A8ED71F5C45664B40C7F898F91D53FB7749A4BAEEB5C359760751A77A8E74C940435EFCE26B50764985D4FEB05005F17957E56A285D76EE3395ED0879C160763C51AEF0FD6E2474F1C01B70B00E05BBBA147C59F4CE3FA2867A9EGB976681C3E8F5203B1E8C302D0A0F8EF970CEEAD1D7B06824D2C986CF37EFC96676D71B14C7664984587D90F005CC734666DD1F49D
	D07A087BDD7F7994DF77087BDD7FA355F8573F8572A29F61EB2003B8B7B37C094F250E73F99847FDF39C67E16DFFC25D57175158636977E81A3C5B4D52B3F629771AC8B9EF7E998DB099F3DCE48C678CFAA440769C6EAE637189B68483C4814483880FE24C35273836432FBA15B6F3FF0AF6BBFC06460381F86CF894E30FFC8D8F695EE9755E0E8A685C368568CCDC075AD622C397B4CDD666B6BA4F8B047C490FE21C4E9FB2CE991FD7856D3616C6750D86DEF1DC667E631EEDED2228343508AE25ADC55335D5FA
	AC7C0EC5FB5BFB147CA69AE37BA02FBE965B5A95F4CDA5C15AAF96ED1878136F3676GDDE30583CDA4177500D951EB7189C56E843A26DA846512F959DC0B123F0D5553E3D0CF0F21DE4F7DC07D8FE953E328571DB53E75FA0D2E2D0200A678B114D55A2B5439F84CB50E0EDB153C870FE94751C29A8B5140AF0E6BB70356FD7A63707BF1440531F5B6246B9FC71D6F5B66DB67B7699A4789B4E39EC71DFFE5D374AAF753B924CF491B64C567F02AF3B8700B64BC9F78D121DBACF80FFD96070B00AE195BB61D5AE6
	F8826A688934ED761036B1B9CFED530E753FD01B5B00D74F93285FE23B225F29D52EB6FFACA9F9CF2F5236798D3A5E8B82FE411CE7DB3FC2D7ED71EEF3ABDD83C683DD5C93E873G9DCB536360F79C5AFC65B05A771DDE5AB7DB876F87DE8DF1285F39D3C4BF363EF87818FA2D17745B5919E40C51DADFB863647315B8E56D446E1A7CB8C077A7819F9B0777CD2A8C64DBD8C70DA7BCEF1AG3251EE6B936D52E90625DF65117B7E3B8BFC5D55529EB322C7C91731FE24F4ECCC1EC2572249F1ECCCCE61789994AF
	BC296059D8DD319E5743FA486BFB925F6F1862A4F59B8B69A4002C27E04C86588F5076947A725706D241473D52E6DB9FFDE1D4F51DC69E3FFD5EABF687969777E4623AF3566C9B04C967DF62759B9AFDCF31F888141F0D29CBF564496C5BFD06589785F98BG0427F5F985GBBG6A1EC67B669B64775BC8B8D4CB12313307FE1D04DFEEB20B838A1A9C9C30187F2A02685AE53199A5796E930B796E8ADC4737BC0DE35A9595E4CC6B209B8DF8E6B133021FBBC039B1G91G51CF333BF849CF13B26B77980670D5
	42534CE6A6636BBD44C7B63B9934E45FDCE17A187760BAE45F825427240244837B1E97FB8D08617FE2A07576F90331C334144BFCE77713322D2A6FB7487393DD2E0C675FC9603A4C79D4610367C879ED64FBD86CA5E0365902C4ACBFEDA549A7AF6DDAC42D7C00EDA41F3DB82D15FF59C7E4AF83DFDCD617E07959EB483AD5FEF95705017C3D04B3645C6610251B65492FC731F74D3F4CD66F13D89630BA8ADC006F225F572A159F32G7B3C27FE9238EFF6B4137B26DE76BF4AAAF7984AAA37E359843ADE146C7D
	A263F379D905CF7E0707D4FC7073A607FB0D5D62E1D8CC9513A3C5F2712DF8FB89FDE9191DD296EF59E9A6C59CBB59EA35245B5C35E57BF6F98EB37B1C42FF01B09CBD595E55D6BAFE1235C044825C971B7B3DFA6FC87868AA4D3D23386F67E6A6ADE0F11C7F0C5237A7D5BC391A6934A5C551E9D776F0F4E2F4B7E6AAF4C59D4327BB192D50B5697FBB9F132F08182D2EBE9E1F2370DFEC9C3E0F4BBA5047754FE0DC4DDC26707AF56670ED0C55ABF46F6B06CFF7E839C23759D47FDF7B865A196C9C467FC41E42
	7F5EE1459F233BE805C2B72DF5D8F4F48D2ABB07EBD53FE778D9G4585C1BA14634AD2F07D9A4DF167FD0D6B57A54F607A748F558427FF964651E77977E6A92E72D9762D97F99F32FA287B4F04FEB8E32541CBB9A66347A1E58CF7DD6BED6F0E0DAD375335FE9B685173AC0ED965478DC3708B12F5E674E7697AAC94F0331E453169C8B1E90007D45FEBE1711FD006719F7FAC6E0F97163B6F0FBF192A5E5F7E325CFDFF1CF4A6CA3EDF397B7E78ABAE74B7173B6F0FA3BD0B3B7015CA5C8D8EAF6EA85D232B943A
	73C6906721858ADDA87D3E2C8B5DC1D82897EF29361B0D16ADBB8C3B607F526DDC57796B955A1BC7A07375F7953A3B3F9FBE9DFD9DDF266B5ABBFC3A5E0D8A1D7D2711599828BAF3CA699E3E4CDB8C8A5D04917866714D8A5D6691547F7B5FA8F413EAC6E6E37DD105F66371910CEB5FAAF483A330F1FC0BC2679C010D0BDB953A60EDA333B137CD9567A310D97A3DC257BD829B1B0EABF47DA310773BF6056E72915A78D723C2BBFB84B2572B76816FBEB9FC3AFD2AFD40DA7D7069A6F5296AFF04FD4E9F3A955A
	8B06D59FEC5D6620FBF8ECFDF65FA9F2G21391607555967406B2B0E93B013EDB6F6F31AD383243F6677295892DF4E7BF90074697C5BECF42944BE5F43464DD05ACF325FB3D53F2B560F74BB7EA381795D77DFD48633FF06537B9D481B1D5AF7A0A31C5A6F525C6D9C7A3D27BFB83D3F777410D37D1DEED66FFEE6D2B7854F6972AAGDAGACGFE4F61DA7D58E9F2104C3E50623ECEBFE06AA6F7B049DF5F10D07E27E73C5BFA600C6F3F59716599B2D96F3041CA301770C7FC7399D2DF122D0FA2996E3BB344C7
	F6F3F70F440A62DD7FB3741E0658C5512CAD1C2DA036F799AD8E65FBF4CFD660BD2849E0EF6CF3F8E7A143C0625F7DFEFB895BCC282ABAA0F57608269AF9EBC11EABED5E0DFB907AF83C3F7055EEFA0E8369B6GA99E67DBFB7610B5663722C3123FC9AE623A2DF046D4E169467119B8EFF20F2700F8792CBFDED937A97B91FEFB48212BDA65A672AFD61123646801A34D07EB2B9B70BB37DDDE3EF3CBF79118DDE333F18E18980FF75A5EEEC55C5667F1FE3DBDC53D6F5486783E67071ED333784BBBC9F49883E5
	038166GACGC88248DA08B1784FF34502773DC536F9D04B3FEE4774595B21562790F815AE9CDA9FB6BF5EC957A2F5D036F1A156570367BC6F3FBEFF8E77128697327B2FC1708CDDA8FF9B044E4B5B3FB68CA1AFEA21FADEBE032EEDE281974F65BE1EC177F468ED56DDF817E3BF09A9551B963B58FB96E9AE679664BD8B22077E85D8973D00EB57D0FA9E42782CBCBE441D1032329D06720F77EC174BB6527321DA11FC8B0C4FEDD5679D676D9A8EAFD6AF2F383C3FD1893AB53CB0F43D309870B7FB6FD7AEB67B
	6ED7A61909FFC5688F1ACF7749773C2FB2933BECDDDD8E1177DFD34CABB86E30235166B01351CAFE0F3942575EEA3B1BAD727B6BBE695C5F07E6F45BF60FEE2F7ABE5A6F8C3E603ED79DCD717EAF386FD5FF339B772A03A0EF498B38D79DEEA5715B16GEBBF0049G33G66824483A48368DF44B6DAF1E228B64ABACB77B6FA2166F7EE0ADFE4BE5C772237F7195FE95522EB144B1BB46864FB03F4BD6B047C2FB9EE006282E59C3325602477D85BF452F72C951F549E43CACEFA0EE165A73547300FCF2A47B079
	3EE007277ECD9DEA7DD95BECD11D5D051E9BCE5BE4F110ADE09C04813F0497313F7FDA40312D70A59C5B4E51324D1036G0CF9897B2C1F3F766CABFED21D896E2C9E0EBECC6EA7B5B84ECC66F2AFB8C06446C2BA91A07DE55C9B924A51B71F2420EFB24A51B72F8A78AEF194FDEF55EC35182DE2AD7BABE0BC2E6611D7EA655FFFD27DBE367B171F07CA3F288C96D3F7DA3D47753DD65FF1BD5F2A9D570FD8BD637AF12BF6DCAF302A631A611E17795A79CB5D8C7F321554959BF73FB0DA0D5DF43E456A765AEC3C
	D7DD48E3C01703FB06459C37769816EB603801E3D82E65E51C73993769853EC67956EC12FA983E50192B606BC5E28F2F33BCE1F4E710C52324BBBAE2BA566F3FC15B6A604B6E6341D20A77FF59FDBC984B7B01A048DB72B24E7126553A4BEFDB247435FD0BBC7BDDA6676F344D0ED964AEBF7DA04187AEF217FF518114BF997204D7F07EF2B5BD3BE7E764C5B9C31D11337277B81472630F8DD51E5977B7D2DC7E1D1A227C9EB7623FA7B7723A8D79C5E5486FCF54523DF770277395EC8B7B8EE0DB187C8A56F34A
	C145769C556FCB8F7C72FE887BC5E530B1A83656F3BE7FEAAD4647DC70C3BCC056E268DBGAA79BEFB538143903CAB963378E7B13C3A8EE3389E70FE0B311F5955CE3F6F68FA9F7E105DEC2AB14A4720EC6CBBD607E3EE44E29C7BFEC3F9A6C1BA6BD518573F0AE3EE5F81423B89E8FB389F57570D2E0F79E014F46DA326E3FD40BF28CD152F3A778DBA5A87543D6A5EB7DC4C7D5A88F933DE4518CDBB204429DE75FBE25DAF9F33B77D22B2585FE2FE6D1B37E1108CFBCD48F05805D51EF3276A71CFBE9176C3DD
	FE2A10FAD8507550016A3010B1C0C6B2A74C87D326831BBD0E9F85FA1E4DD2907C1220E327526CB73BF3G92723884C80A12A37ED4F9D55A8BD353D205F4E04F26G0705F4B20E0394BB131686D3GA2CBC8D583651CA95FDA1004B43B45A98939AE378228DA191E04E91D76CEC9502BEFA8F8ADEA371A20287A320357225D16EE2FF9967114A4ACF73D5360353051EA81196A8B925AC5516D82E97B05605E77BAED3DA5660E5E127ED33DA5468E29C40465D289197B1878F1EE6BFD6D91BD7356ECC995B28E8B4B
	3A4C224554C48FF49B0495B4D5A7BABA6D66BE32BE1504D5745368BB492751F74A1FC6EF90D652F2F890CC5893C5B6B6882BD56C8E1AAD22D549DA2E4A7A66C883F18665EC95251D107E04D6F00AA43CDBD252C6BF1A5A46CE175B145B8D200D67158742FEF31F1BA7FC250A182C4DA06BE8AD48B254DA48E59B94299C762BC4AAC8426103D10A5CB204C8798CDD92D6EB1C2C939E7F9A29D0F5EC643AEC745FFF6D6E17221FBD6AC893F407057564DEF013E8E7FF6244C4BE3BA27F0D6103C2F61F8D965664A6A0
	34CB87FDE4B8245350EE047C2EA364EF62B9A451443F75641004B52CE27BA533E5E73D5151C3AFD5C1542473E8E0F5DDED207A11B9FA8A68371A6AC728CAB8556ABB735E5F7CF9C2C41A10FAD04831580C260346CED87F9F9632259E3B686831D9CC4E3E4F76D3C6D9747AA039C7118E6CB6F0F309F1A54D308461CA1EF4DE95103BA877A0B4A227DD58C9CB126B1AA53C04293647C87E3610E8BFAC113F66EC33EF65F93F5AA8EDFB68503A36D4A14555A809B908F7F3746F899CA4574A1EFAED5E142777A5A526
	12B9D0867D12BD88DE21147A323F37C3341F9FB631E8D9D07CB822D79FF18F2D44CA68C03B0C3DE64BE978D187F5E46B6678815AA15364BE62854C4806751655C17E2488E8E3F0F385E6F10BCAAE1DD7BAF17A5B2D54A205D492B6312A84521D5D222DF7E7F5D7972CEFB983E834403E0833A7E5CA5C4A2CF2CED87379E36FF4C0205589E93D2525745FDD745FB2726FAE0A59C5B13B4A20B61304A17FF34FF7BA094D554E91B60DF20F90A458BD1E31C450D54C4324B87971992F88122AA17F5411FF8E50E20768
	3F1F0F4E0EA37FA3F69C7B9F314374BFE2C76F7F089D273C581192G7F2C9DFECA92D28C84785F5FB8273E3F9EB7F62657F715235FE26B3178375C6F2FA750732B42A5302EDA42772FDB495F2A76F6665D54EB34D8A42365E43555C44E3FEBCECB22F2667ACAAB616F40B2F2267C8D37D6227789954D7F83D0CB8788DF0A6CCF36A9GG3805GGD0CB818294G94G88G88G57FC71B4DF0A6CCF36A9GG3805GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GG
	GG81G81GBAGGG70A9GGGG
**end of data**/
}
}
