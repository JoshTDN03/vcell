Index: src/cbit/vcell/message/server/manager/ServerManagerDaemon.java
===================================================================
--- src/cbit/vcell/message/server/manager/ServerManagerDaemon.java	(revision 12073)
+++ src/cbit/vcell/message/server/manager/ServerManagerDaemon.java	(revision 12072)
@@ -33,7 +33,6 @@
 import java.util.Date;
 import java.util.Iterator;
 import java.util.List;
-import java.util.TreeMap;
 
 import org.vcell.util.DataAccessException;
 import org.vcell.util.ExecutableException;
@@ -246,7 +245,11 @@
 }	
 
 private HtcJobID submit2PBS(ServiceStatus service) throws IOException, ExecutableException, HtcException {
-	killService(service);
+	try {
+		killService(service);
+	}catch (HtcJobNotFoundException e){
+		log.alert(service.toString()+" not found, unable to kill");
+	}
 	
 	String executable = PropertyLoader.getRequiredProperty(PropertyLoader.serviceSubmitScript);
 	
@@ -440,33 +443,9 @@
 }
 
 private void killService(ServiceStatus service) throws ExecutableException, HtcJobNotFoundException, HtcException {
-	 TreeMap<HtcJobID, String>  jobIdMapJobName = htcProxy.getServiceJobIDs(VCellServerID.getSystemServerID());
-	 HtcJobID foundJobID = null;
-	 for(HtcJobID jobID : jobIdMapJobName.keySet()){
-		 if(jobIdMapJobName.get(jobID).equals(service.getServiceSpec().getID())){
-			 foundJobID = jobID;
-			 break;
-		 }
-	 }
-	 if(foundJobID == null){
-		 return;
-	 }
-	 htcProxy.killJob(foundJobID);
-	 long TIMEOUT = 60000;
-	 long startTime = System.currentTimeMillis();
-	 while((System.currentTimeMillis()-startTime) < TIMEOUT){
-		 HtcJobStatus htcJobStatus = htcProxy.getJobStatus(foundJobID);
-		 if(htcJobStatus == null || !htcJobStatus.isRunning()){
-			 return;
-		 }
-		 try {
-			Thread.sleep(1000);
-		} catch (InterruptedException e) {
-			// TODO Auto-generated catch block
-			e.printStackTrace();
-		}
-	 }
-	 throw new HtcException("Timeout Error: failed to kill service "+service.getServiceSpec().getID()+" jobid="+foundJobID);
+	if (service.getHtcJobId() != null) {
+		htcProxy.killJob(service.getHtcJobId());
+	}
 }
 /**
 * Insert the method's description here.
