//Create a local maven repository entry inside VCell project for jars that are not accessible from a public maven repository
//Reference:
http://roufid.com/3-ways-to-add-local-jar-to-maven-project/
See section titled "3- Creating a different local Maven repository"
//General info for creating repository entry
mvn deploy:deploy-file -Dfile=<path-to-file-to-be-installed-into-VCell-repo> -DgroupId=<group-id> -DartifactId=<artifact-id> -Dversion=<version> -Dpackaging=jar -Durl=file:./maven-repository/ -DrepositoryId=maven-repository -DupdateReleaseInfo=true
//Reference repository in project pom.xml (Don't use this one, see below)
<repositories>
    <repository>
        <id>maven-repository</id>
        <url>file:///${project.basedir}/maven-repository</url>
    </repository>
</repositories>


Examples for VCell ojdbc6 and ucp jars:
(Do this only if necessary) -> in eclipse, rt-click on 'vcell' and create folder named 'non-maven-java-libs'
in linux terminal, cd to {eclipse_workspace}/vcell/non-maven-java-libs

mvn deploy:deploy-file -Dfile=../ojdbc6/src/ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0.4 -Dpackaging=jar -Durl=file:./ -DrepositoryId=non-maven-java-libs -DupdateReleaseInfo=true
mvn deploy:deploy-file -Dfile=../ucp/src/ucp.jar -DgroupId=com.oracle -DartifactId=ucp -Dversion=11.2.0.4 -Dpackaging=jar -Durl=file:./ -DrepositoryId=non-maven-java-libs -DupdateReleaseInfo=true


Edit {eclipse_workspace}/vcell/vcell-oracle/pom.xml, add:
	<repositories>
	<repository> <id>project-repo</id> <url>file://${project.basedir}/../non-maven-java-libs</url> </repository>
	</repositories>

Then save the changes to github repository


Example for VCell libCombine jars (different jars for same lib depending on OS (for JNI)):

(Do this only if necessary) -> in eclipse, rt-click on 'vcell' and create folder named 'non-maven-java-libs'
in linux terminal, cd to {eclipse_workspace}/vcell/non-maven-java-libs

//get the source libs to install into the VCell project inline maven repo
wget https://github.com/sbmlteam/libCombine/releases/download/0.2.7/libcombine_java.zip

//Install the libs into a VCell inline maven repo (these libs are then referenced in the appropriate pom.xml)
mvn deploy:deploy-file -Dfile=./libcombine_java/linux64/libcombine.jar -DgroupId=org.sbml.libcombine -DartifactId=libCombineLinux64 -Dversion=0.2.7 -Dpackaging=jar -Durl=file:./ -DrepositoryId=non-maven-java-libs -DupdateReleaseInfo=true
mvn deploy:deploy-file -Dfile=./libcombine_java/osx/libcombine.jar -DgroupId=org.sbml.libcombine -DartifactId=libCombineOSX -Dversion=0.2.7 -Dpackaging=jar -Durl=file:./ -DrepositoryId=non-maven-java-libs -DupdateReleaseInfo=true
mvn deploy:deploy-file -Dfile=./libcombine_java/win64/libcombine.jar -DgroupId=org.sbml.libcombine -DartifactId=libCombineWin64 -Dversion=0.2.7 -Dpackaging=jar -Durl=file:./ -DrepositoryId=non-maven-java-libs -DupdateReleaseInfo=true

//Download the libsedml jar file
wget https://vcell.org/webstart/pipeline_files/libSEDML_binaries_2.0.14.zip
Unzip above downloaded file to non-maven-java-libs directory

//Install the libs into a VCell inline maven repo (these libs are then referenced in the appropriate pom.xml)

mvn deploy:deploy-file -Dfile=./binaries_ubuntu-latest/share/java/libsedmlj.jar \
    -DgroupId=org.sedml.libsedml \
    -DartifactId=libSedmlLinux \
    -Dversion=2.0.14 \
    -Dpackaging=jar \
    -Durl=file:./ \
    -DrepositoryId=non-maven-java-libs \
    -DupdateReleaseInfo=true

mvn deploy:deploy-file -Dfile=./binaries_macos-latest/share/java/libsedmlj.jar \
    -DgroupId=org.sedml.libsedml \
    -DartifactId=libSedmlOSX \
    -Dversion=2.0.14 \
    -Dpackaging=jar \
    -Durl=file:./ \
    -DrepositoryId=non-maven-java-libs \
    -DupdateReleaseInfo=true

mvn deploy:deploy-file -Dfile=./binaries_windows-latest/.bindings/java/libsedmlj.jar \
    -DgroupId=org.sedml.libsedml \
    -DartifactId=libSedmlWin64 \
    -Dversion=2.0.14 \
    -Dpackaging=jar \
    -Durl=file:./ \
    -DrepositoryId=non-maven-java-libs \
    -DupdateReleaseInfo=true

