package cbit.vcell.graph;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.gui.graph.*;
import cbit.gui.graph.Shape;
import cbit.vcell.model.*;
import cbit.vcell.model.render.ReactionCartoon;

import java.util.*;
import javax.swing.*;
import javax.swing.plaf.basic.*;
import java.awt.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class ReactionCartoonEditorPanel extends JPanel implements java.awt.event.ActionListener, java.beans.PropertyChangeListener {
	private JPanel ivjFeatureSizePanel = null;
	private GraphPane ivjGraphPane = null;
	protected transient java.beans.PropertyChangeSupport propertyChange;
	private boolean ivjConnPtoP1Aligning = false;
	private JPanel ivjJPanel1 = null;
	private JToolBar ivjJToolBar1 = null;
	private ButtonModel ivjSelection = null;
	private cbit.gui.JToolBarToggleButton ivjFluxButton = null;
	private cbit.gui.JToolBarToggleButton ivjLineButton = null;
	private cbit.gui.JToolBarToggleButton ivjSelectButton = null;
	private cbit.gui.JToolBarToggleButton ivjStepButton = null;
	private cbit.gui.ButtonGroupCivilized ivjButtonGroupCivilized = null;
	private JScrollPane ivjJScrollPane1 = null;
	private JLabel ivjJLabel3 = null;
	private JButton ivjAnnealLayoutButton = null;
	private JButton ivjCircleLayoutButton = null;
	private JLabel ivjJLabel4 = null;
	private JButton ivjLevellerLayoutButton = null;
	private JButton ivjRandomLayoutButton = null;
	private JButton ivjRelaxerLayoutButton = null;
	private JButton ivjZoomInButton = null;
	private JButton ivjZoomOutButton = null;
	private JButton ivjGlgLayoutJButton = null;
	private cbit.vcell.model.Structure fieldStructure = null;
	private cbit.gui.JToolBarToggleButton ivjSpeciesButton = null;
	private cbit.vcell.clientdb.DocumentManager fieldDocumentManager = null;
	private ReactionCartoon ivjReactionCartoon1 = null;
	private ReactionCartoonTool ivjReactionCartoonTool1 = null;
	private cbit.vcell.model.Model fieldModel = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public ReactionCartoonEditorPanel() {
	super();
	initialize();
}


/**
 * CartoonPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public ReactionCartoonEditorPanel(java.awt.LayoutManager layout) {
	super(layout);
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getRandomLayoutButton()) 
		connEtoM1(e);
	if (e.getSource() == getAnnealLayoutButton()) 
		connEtoM2(e);
	if (e.getSource() == getCircleLayoutButton()) 
		connEtoM7(e);
	if (e.getSource() == getRelaxerLayoutButton()) 
		connEtoM12(e);
	if (e.getSource() == getLevellerLayoutButton()) 
		connEtoM13(e);
	if (e.getSource() == getZoomInButton()) 
		connEtoC1(e);
	if (e.getSource() == getZoomOutButton()) 
		connEtoC2(e);
	if (e.getSource() == getGlgLayoutJButton()) 
		connEtoM9(e);
	// user code begin {2}
	// user code end
}

/**
 * The addPropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().addPropertyChangeListener(listener);
}


/**
 * Insert the method's description here.
 * Creation date: (6/14/2005 4:13:34 PM)
 */
public void cleanupOnClose() {

	getReactionCartoon1().cleanupAll();
}


/**
 * connEtoC1:  (ZoomInButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonEditorPanel.zoomInButton_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.zoomInButton_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (ZoomOutButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonEditorPanel.zoomOutButton_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.zoomOutButton_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (Button1.action.actionPerformed(java.awt.event.ActionEvent) --> CanvasTool.randomize()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getRandomizer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM10:  (ReactionCartoonEditorPanel.initialize() --> GraphPane.graphModel)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM10() {
	try {
		// user code begin {1}
		// user code end
		getGraphPane().setGraphModel(getReactionCartoon1());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM11:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroupCivilized.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM11() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getSpeciesButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM12:  (RelaxerButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM12(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getRelaxer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM13:  (LevellerButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM13(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getLeveller());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM14:  (ReactionCartoonEditorPanel.structure --> ReactionCartoon1.structure)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM14(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoon1().setStructure(this.getStructure());
		connEtoM15();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM15:  ( (ReactionCartoonEditorPanel,structure --> ReactionCartoon1,structure).normalResult --> FluxButton.enabled)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM15() {
	try {
		// user code begin {1}
		// user code end
		getFluxButton().setEnabled(this.isMembrane(getReactionCartoon1().getStructure()));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM16:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.graphPane)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM16() {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().setGraphPane(getGraphPane());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM17:  (ReactionCartoonEditorPanel.documentManager --> ReactionCartoonTool1.documentManager)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM17(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().setDocumentManager(this.getDocumentManager());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM18:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.buttonGroup)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM18() {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().setButtonGroup(getButtonGroupCivilized());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM19:  (ReactionCartoonEditorPanel.model --> ReactionCartoon1.model)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM19(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoon1().setModel(this.getModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM2:  (AnnealButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getAnnealer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM3:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM3() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getStepButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM4:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getFluxButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM5:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getSelectButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM6:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM6() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getLineButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM7:  (CircleButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getCircularizer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM8:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.reactionCartoon)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM8() {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().setReactionCartoon(getReactionCartoon1());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM9:  (GlgLayoutJButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layoutGlg()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM9(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layoutGlg();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP1SetSource:  (ButtonGroup1.selection <--> selection1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getSelection() != null)) {
				getButtonGroupCivilized().setSelection(getSelection());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP1SetTarget:  (ButtonGroup1.selection <--> selection1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setSelection(getButtonGroupCivilized().getSelection());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP2SetTarget:  (Selection.actionCommand <--> ReactionCartoonTool1.modeString)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if ((getSelection() != null)) {
			getReactionCartoonTool1().setModeString(getSelection().getActionCommand());
		}
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * The firePropertyChange method was generated to support the propertyChange field.
 * @param propertyName java.lang.String
 * @param oldValue java.lang.Object
 * @param newValue java.lang.Object
 */
public void firePropertyChange(String propertyName, Object oldValue, Object newValue) {
	getPropertyChange().firePropertyChange(propertyName, oldValue, newValue);
}


/**
 * Comment
 */
private java.lang.String getAnnealer() {
	return ReactionCartoonTool.ANNEALER;
}


/**
 * Return the AnnealLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getAnnealLayoutButton() {
	if (ivjAnnealLayoutButton == null) {
		try {
			ivjAnnealLayoutButton = new javax.swing.JButton();
			ivjAnnealLayoutButton.setName("AnnealLayoutButton");
			ivjAnnealLayoutButton.setToolTipText("Layout Annealing");
			ivjAnnealLayoutButton.setText("anl");
			ivjAnnealLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setActionCommand("AnnealLayout");
			ivjAnnealLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjAnnealLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAnnealLayoutButton;
}

/**
 * Return the ButtonGroup1 property value.
 * @return cbit.gui.ButtonGroupCivilized
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.ButtonGroupCivilized getButtonGroupCivilized() {
	if (ivjButtonGroupCivilized == null) {
		try {
			ivjButtonGroupCivilized = new cbit.gui.ButtonGroupCivilized();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonGroupCivilized;
}

/**
 * Return the CircleLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCircleLayoutButton() {
	if (ivjCircleLayoutButton == null) {
		try {
			ivjCircleLayoutButton = new javax.swing.JButton();
			ivjCircleLayoutButton.setName("CircleLayoutButton");
			ivjCircleLayoutButton.setToolTipText("Layout Circular");
			ivjCircleLayoutButton.setText("crc");
			ivjCircleLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setActionCommand("CircleLayout");
			ivjCircleLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjCircleLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCircleLayoutButton;
}

/**
 * Comment
 */
private java.lang.String getCircularizer() {
	return ReactionCartoonTool.CIRCULARIZER;
}


/**
 * Comment
 */
private java.lang.String getCycleizer() {
	return ReactionCartoonTool.CYCLEIZER;
}


/**
 * Gets the documentManager property (cbit.vcell.clientdb.ClientDocumentManager) value.
 * @return The documentManager property value.
 * @see #setDocumentManager
 */
public cbit.vcell.clientdb.DocumentManager getDocumentManager() {
	return fieldDocumentManager;
}


/**
 * Return the FeatureSizePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getFeatureSizePanel() {
	if (ivjFeatureSizePanel == null) {
		try {
			ivjFeatureSizePanel = new javax.swing.JPanel();
			ivjFeatureSizePanel.setName("FeatureSizePanel");
			ivjFeatureSizePanel.setPreferredSize(new java.awt.Dimension(22, 396));
			ivjFeatureSizePanel.setLayout(new java.awt.BorderLayout());
			ivjFeatureSizePanel.setMinimumSize(new java.awt.Dimension(22, 396));
			getFeatureSizePanel().add(getJPanel1(), "South");
			getFeatureSizePanel().add(getJScrollPane1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFeatureSizePanel;
}

/**
 * Return the JToolBarToggleButton4 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getFluxButton() {
	if (ivjFluxButton == null) {
		try {
			ivjFluxButton = new cbit.gui.JToolBarToggleButton();
			ivjFluxButton.setName("FluxButton");
			ivjFluxButton.setToolTipText("Flux Tool");
			ivjFluxButton.setText("");
			ivjFluxButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjFluxButton.setActionCommand("flux");
			ivjFluxButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flux.gif")));
			ivjFluxButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjFluxButton.setEnabled(true);
			ivjFluxButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFluxButton;
}

/**
 * Comment
 */
private java.lang.String getForceDirect() {
	return ReactionCartoonTool.FORCEDIRECT;
}


/**
 * Return the GlgLayoutJButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getGlgLayoutJButton() {
	if (ivjGlgLayoutJButton == null) {
		try {
			ivjGlgLayoutJButton = new javax.swing.JButton();
			ivjGlgLayoutJButton.setName("GlgLayoutJButton");
			ivjGlgLayoutJButton.setToolTipText("Layout GLG");
			ivjGlgLayoutJButton.setText("glg");
			ivjGlgLayoutJButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjGlgLayoutJButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGlgLayoutJButton;
}

/**
 * Return the GraphPane property value.
 * @return cbit.vcell.graph.GraphPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.graph.GraphPane getGraphPane() {
	if (ivjGraphPane == null) {
		try {
			ivjGraphPane = new cbit.gui.graph.GraphPane();
			ivjGraphPane.setName("GraphPane");
			ivjGraphPane.setBounds(0, 0, 372, 364);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGraphPane;
}

/**
 * Return the JLabel3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel3() {
	if (ivjJLabel3 == null) {
		try {
			ivjJLabel3 = new javax.swing.JLabel();
			ivjJLabel3.setName("JLabel3");
			ivjJLabel3.setText(" ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel3;
}


/**
 * Return the JLabel4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel4() {
	if (ivjJLabel4 == null) {
		try {
			ivjJLabel4 = new javax.swing.JLabel();
			ivjJLabel4.setName("JLabel4");
			ivjJLabel4.setText(" ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel4;
}


/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setPreferredSize(new java.awt.Dimension(22, 396));
			ivjJScrollPane1.setMinimumSize(new java.awt.Dimension(22, 396));
			getJScrollPane1().setViewportView(getGraphPane());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Return the JToolBar1 property value.
 * @return javax.swing.JToolBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JToolBar getJToolBar1() {
	if (ivjJToolBar1 == null) {
		try {
			ivjJToolBar1 = new javax.swing.JToolBar();
			ivjJToolBar1.setName("JToolBar1");
			ivjJToolBar1.setFloatable(false);
			ivjJToolBar1.setBorder(new javax.swing.border.EtchedBorder());
			ivjJToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
			getJToolBar1().add(getSelectButton(), getSelectButton().getName());
			getJToolBar1().add(getSpeciesButton(), getSpeciesButton().getName());
			getJToolBar1().add(getStepButton(), getStepButton().getName());
			getJToolBar1().add(getFluxButton(), getFluxButton().getName());
			getJToolBar1().add(getLineButton(), getLineButton().getName());
			getJToolBar1().add(getJLabel3(), getJLabel3().getName());
			getJToolBar1().add(getZoomInButton(), getZoomInButton().getName());
			getJToolBar1().add(getZoomOutButton(), getZoomOutButton().getName());
			getJToolBar1().add(getJLabel4(), getJLabel4().getName());
			getJToolBar1().add(getRandomLayoutButton(), getRandomLayoutButton().getName());
			getJToolBar1().add(getCircleLayoutButton(), getCircleLayoutButton().getName());
			getJToolBar1().add(getAnnealLayoutButton(), getAnnealLayoutButton().getName());
			getJToolBar1().add(getLevellerLayoutButton(), getLevellerLayoutButton().getName());
			getJToolBar1().add(getRelaxerLayoutButton(), getRelaxerLayoutButton().getName());
			getJToolBar1().add(getGlgLayoutJButton(), getGlgLayoutJButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJToolBar1;
}

/**
 * Comment
 */
private java.lang.String getLeveller() {
	return ReactionCartoonTool.LEVELLER;
}


/**
 * Return the LevellerLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getLevellerLayoutButton() {
	if (ivjLevellerLayoutButton == null) {
		try {
			ivjLevellerLayoutButton = new javax.swing.JButton();
			ivjLevellerLayoutButton.setName("LevellerLayoutButton");
			ivjLevellerLayoutButton.setToolTipText("Layout Leveler");
			ivjLevellerLayoutButton.setText("lev");
			ivjLevellerLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setActionCommand("LevellerLayout");
			ivjLevellerLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjLevellerLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLevellerLayoutButton;
}

/**
 * Return the JToolBarToggleButton3 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getLineButton() {
	if (ivjLineButton == null) {
		try {
			ivjLineButton = new cbit.gui.JToolBarToggleButton();
			ivjLineButton.setName("LineButton");
			ivjLineButton.setToolTipText("RX Connection Tool");
			ivjLineButton.setText("");
			ivjLineButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjLineButton.setActionCommand("line");
			ivjLineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/line.gif")));
			ivjLineButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjLineButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLineButton;
}

/**
 * Gets the model property (cbit.vcell.model.Model) value.
 * @return The model property value.
 * @see #setModel
 */
public cbit.vcell.model.Model getModel() {
	return fieldModel;
}


/**
 * Accessor for the propertyChange field.
 * @return java.beans.PropertyChangeSupport
 */
protected java.beans.PropertyChangeSupport getPropertyChange() {
	if (propertyChange == null) {
		propertyChange = new java.beans.PropertyChangeSupport(this);
	};
	return propertyChange;
}


/**
 * Comment
 */
private java.lang.String getRandomizer() {
	return ReactionCartoonTool.RANDOMIZER;
}


/**
 * Return the RandomLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getRandomLayoutButton() {
	if (ivjRandomLayoutButton == null) {
		try {
			ivjRandomLayoutButton = new javax.swing.JButton();
			ivjRandomLayoutButton.setName("RandomLayoutButton");
			ivjRandomLayoutButton.setToolTipText("Layout Random");
			ivjRandomLayoutButton.setText("rnd");
			ivjRandomLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setActionCommand("RandomLayout");
			ivjRandomLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRandomLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRandomLayoutButton;
}

/**
 * Return the ReactionCartoon1 property value.
 * @return cbit.vcell.graph.ReactionCartoon
 * @deprecated
 */
public ReactionCartoon getReactionCartoon() {
	return getReactionCartoon1();
}


/**
 * Return the ReactionCartoon1 property value.
 * @return cbit.vcell.graph.ReactionCartoon
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ReactionCartoon getReactionCartoon1() {
	if (ivjReactionCartoon1 == null) {
		try {
			ivjReactionCartoon1 = new cbit.vcell.model.render.ReactionCartoon();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjReactionCartoon1;
}


/**
 * Return the ReactionCartoonTool1 property value.
 * @return cbit.vcell.graph.ReactionCartoonTool
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ReactionCartoonTool getReactionCartoonTool1() {
	if (ivjReactionCartoonTool1 == null) {
		try {
			ivjReactionCartoonTool1 = new cbit.vcell.graph.ReactionCartoonTool();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjReactionCartoonTool1;
}


/**
 * Comment
 */
private java.lang.String getRelaxer() {
	return ReactionCartoonTool.RELAXER;
}


/**
 * Return the RelaxerLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getRelaxerLayoutButton() {
	if (ivjRelaxerLayoutButton == null) {
		try {
			ivjRelaxerLayoutButton = new javax.swing.JButton();
			ivjRelaxerLayoutButton.setName("RelaxerLayoutButton");
			ivjRelaxerLayoutButton.setToolTipText("Layout Relaxer");
			ivjRelaxerLayoutButton.setText("rlx");
			ivjRelaxerLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setActionCommand("RelaxerLayout");
			ivjRelaxerLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRelaxerLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRelaxerLayoutButton;
}

/**
 * Return the JToolBarToggleButton2 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getSelectButton() {
	if (ivjSelectButton == null) {
		try {
			ivjSelectButton = new cbit.gui.JToolBarToggleButton();
			ivjSelectButton.setName("SelectButton");
			ivjSelectButton.setToolTipText("Select Tool");
			ivjSelectButton.setText("");
			ivjSelectButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjSelectButton.setActionCommand("select");
			ivjSelectButton.setSelected(true);
			ivjSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/select.gif")));
			ivjSelectButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjSelectButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSelectButton;
}

/**
 * Return the selection1 property value.
 * @return javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.ButtonModel getSelection() {
	// user code begin {1}
	// user code end
	return ivjSelection;
}

/**
 * Return the SpeciesButton property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getSpeciesButton() {
	if (ivjSpeciesButton == null) {
		try {
			ivjSpeciesButton = new cbit.gui.JToolBarToggleButton();
			ivjSpeciesButton.setName("SpeciesButton");
			ivjSpeciesButton.setToolTipText("Species Tool");
			ivjSpeciesButton.setText("");
			ivjSpeciesButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjSpeciesButton.setActionCommand("species");
			ivjSpeciesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/species.gif")));
			ivjSpeciesButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjSpeciesButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSpeciesButton;
}

/**
 * Comment
 */
private java.lang.String getStabilizer() {
	return ReactionCartoonTool.STABILIZER;
}


/**
 * Return the JToolBarToggleButton1 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getStepButton() {
	if (ivjStepButton == null) {
		try {
			ivjStepButton = new cbit.gui.JToolBarToggleButton();
			ivjStepButton.setName("StepButton");
			ivjStepButton.setToolTipText("Reaction Tool");
			ivjStepButton.setText("");
			ivjStepButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjStepButton.setActionCommand("step");
			ivjStepButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/step.gif")));
			ivjStepButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjStepButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStepButton;
}

/**
 * Gets the structure property (cbit.vcell.model.Structure) value.
 * @return The structure property value.
 * @see #setStructure
 */
public cbit.vcell.model.Structure getStructure() {
	return fieldStructure;
}


/**
 * Return the ZoomInButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getZoomInButton() {
	if (ivjZoomInButton == null) {
		try {
			ivjZoomInButton = new javax.swing.JButton();
			ivjZoomInButton.setName("ZoomInButton");
			ivjZoomInButton.setToolTipText("Zoom In");
			ivjZoomInButton.setText("");
			ivjZoomInButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setActionCommand("ZoomIn");
			ivjZoomInButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/zoomin.gif")));
			ivjZoomInButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjZoomInButton;
}

/**
 * Return the ZoomOutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getZoomOutButton() {
	if (ivjZoomOutButton == null) {
		try {
			ivjZoomOutButton = new javax.swing.JButton();
			ivjZoomOutButton.setName("ZoomOutButton");
			ivjZoomOutButton.setToolTipText("Zoom Out");
			ivjZoomOutButton.setText("");
			ivjZoomOutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjZoomOutButton.setActionCommand("ZoomOut");
			ivjZoomOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/zoomout.gif")));
			ivjZoomOutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjZoomOutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjZoomOutButton;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION --------- in CartoonPanel");
	exception.printStackTrace(System.out);
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButtonGroupCivilized().addPropertyChangeListener(this);
	getRandomLayoutButton().addActionListener(this);
	getAnnealLayoutButton().addActionListener(this);
	getCircleLayoutButton().addActionListener(this);
	getRelaxerLayoutButton().addActionListener(this);
	getLevellerLayoutButton().addActionListener(this);
	getZoomInButton().addActionListener(this);
	getZoomOutButton().addActionListener(this);
	getGlgLayoutJButton().addActionListener(this);
	this.addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}

/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("CartoonPanel");
		setPreferredSize(new java.awt.Dimension(54, 425));
		setLayout(new java.awt.BorderLayout());
		setSize(472, 422);
		setMinimumSize(new java.awt.Dimension(54, 425));
		add(getFeatureSizePanel(), "Center");
		add(getJToolBar1(), "West");
		initConnections();
		connEtoM3();
		connEtoM4();
		connEtoM6();
		connEtoM5();
		connEtoM11();
		connEtoM8();
		connEtoM16();
		connEtoM18();
		connEtoM10();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * Comment
 */
private boolean isMembrane(Structure structure) {
	return (structure instanceof Membrane);
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		java.awt.Frame frame = new java.awt.Frame();
		ReactionCartoonEditorPanel aReactionCartoonEditorPanel;
		aReactionCartoonEditorPanel = new ReactionCartoonEditorPanel();
		frame.add("Center", aReactionCartoonEditorPanel);
		frame.setSize(aReactionCartoonEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of java.awt.Panel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getButtonGroupCivilized() && (evt.getPropertyName().equals("selection"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == this && (evt.getPropertyName().equals("structure"))) 
		connEtoM14(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("documentManager"))) 
		connEtoM17(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("model"))) 
		connEtoM19(evt);
	// user code begin {2}
	// user code end
}

/**
 * The removePropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().removePropertyChangeListener(listener);
}


/**
 * Sets the documentManager property (cbit.vcell.clientdb.ClientDocumentManager) value.
 * @param documentManager The new value for the property.
 * @see #getDocumentManager
 */
public void setDocumentManager(cbit.vcell.clientdb.DocumentManager documentManager) {
	cbit.vcell.clientdb.DocumentManager oldValue = fieldDocumentManager;
	fieldDocumentManager = documentManager;
	firePropertyChange("documentManager", oldValue, documentManager);
}


/**
 * Sets the model property (cbit.vcell.model.Model) value.
 * @param model The new value for the property.
 * @see #getModel
 */
public void setModel(cbit.vcell.model.Model model) {
	Model oldValue = fieldModel;
	fieldModel = model;
	firePropertyChange("model", oldValue, model);
}


/**
 * Set the selection1 to a new value.
 * @param newValue javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setSelection(javax.swing.ButtonModel newValue) {
	if (ivjSelection != newValue) {
		try {
			ivjSelection = newValue;
			connPtoP1SetSource();
			connPtoP2SetTarget();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Sets the structure property (cbit.vcell.model.Structure) value.
 * @param structure The new value for the property.
 * @see #getStructure
 */
public void setStructure(cbit.vcell.model.Structure structure) {
	Structure oldValue = fieldStructure;
	fieldStructure = structure;
	firePropertyChange("structure", oldValue, structure);
}


/**
 * Comment
 */
private void zoomInButton_ActionPerformed() {
	if (getReactionCartoon1()!=null){
		switch (getReactionCartoon1().getZoomPercent()){
			case 195: {
				// already at top, do nothing
				break;
			}
			case 156: {
				getReactionCartoon1().setZoomPercent(195);
				break;
			}
			case 125: {
				getReactionCartoon1().setZoomPercent(156);
				break;
			}
			case 100: {
				getReactionCartoon1().setZoomPercent(125);
				break;
			}
			case 80: {
				getReactionCartoon1().setZoomPercent(100);
				break;
			}
			case 64: {
				getReactionCartoon1().setZoomPercent(80);
				break;
			}
			case 50: {
				getReactionCartoon1().setZoomPercent(64);
				break;
			}
			case 40: {
				getReactionCartoon1().setZoomPercent(50);
				break;
			}
			case 30: {
				getReactionCartoon1().setZoomPercent(40);
				break;
			}
			case 20: {
				getReactionCartoon1().setZoomPercent(30);
				break;
			}
			case 10: {
				getReactionCartoon1().setZoomPercent(20);
				break;
			}
			default: {
				getReactionCartoon1().setZoomPercent(100);
				break;
			}
		}
	}
}


/**
 * Comment
 */
private void zoomOutButton_ActionPerformed() {
	if (getReactionCartoon1()!=null){
		switch (getReactionCartoon1().getZoomPercent()){
			case 195: {
				getReactionCartoon1().setZoomPercent(156);
				break;
			}
			case 156: {
				getReactionCartoon1().setZoomPercent(125);
				break;
			}
			case 125: {
				getReactionCartoon1().setZoomPercent(100);
				break;
			}
			case 100: {
				getReactionCartoon1().setZoomPercent(80);
				break;
			}
			case 80: {
				getReactionCartoon1().setZoomPercent(64);
				break;
			}
			case 64: {
				getReactionCartoon1().setZoomPercent(50);
				break;
			}
			case 50: {
				getReactionCartoon1().setZoomPercent(40);
				break;
			}
			case 40: {
				getReactionCartoon1().setZoomPercent(30);
				break;
			}
			case 30: {
				getReactionCartoon1().setZoomPercent(20);
				break;
			}
			case 20: {
				getReactionCartoon1().setZoomPercent(10);
				break;
			}
			case 10: {
				// can't zoom out any further
				break;
			}
			default: {
				getReactionCartoon1().setZoomPercent(100);
				break;
			}
		}
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G480171B4GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E16DFD8FDCD4D5763835D8D6340BCAC5ADFD174CB6DB2928582216EDE923DDAA363556DAAA3EC6C5C5C5C5C59B99EDCF7EA88A86A69A2E24D4EEE1A172D781D1C1D04150C88831D019E19EB0B94CCCB30F44D66BF76E3D6F5C77664D9BE620DF3F4F67777DFC7DF8F86F1EFB4E39671CFB6E1FF75FFDF7044275A1590BB28A85E1D136A07F5B3AC89024DF8B42D9C58BBEC6DC0035A7D7D07DFB8FE0051036
	A48B2EA110D7D6F8A837C0083564C0BA9C527E0B8F653E8377AB854361580B6046C3B933A1AFBEBD7455714B3166E0B9CBE83AE7E39EDC5F8208G9C39E659FA20FC6B46A2999FAF639196E588C2A225B9E7E3310CEB03F4BFC088C0380D514742F5A9ADF9EAC31DCC57B7FD0E10FA17A3E3B911231209D0E6E73C1D7235C4D838A84DCE4A3A1E6AC9F826C1BA8A00981FA9EC2F2B04EBE36771219D83C633D47E6D00E831148FB98C766106060322E1C0B25B2CAD8607E433D9F71B4C124D51E9300A9660113EA1
	F297EE4C21F2C08624858741B5EDA2E5C5C0FA9EC09247EF5DCC702DF05F87A0B9503E6D9FB54A7A777E67A6A1F1680E25799E6C73F7B03B429D0AFDFE9F9BB357503A38E6A971F98A6495BAFBF2CB81BAGACG7EGEBE98C7CB60784D233D1EA310D0C582C4DF67BAE0B49315FE692ADF05F50GB9B26E20B8E0F318840155F34446B29DFD46834677278973B11F4C2946BA8FBDF80D90FF430599CBF4FC92BF67BF99331D4C9711CE45A72C6CB7BD169D6FF40DC957328F896A3205272B16E46B14DD7CC05512
	94D9CE1624145DAA113A8E27B130816E899FE9C88C7FC70A1F264233785CC371A4BD877272C6B1B6FA5FC2DDBA32E689851597697AA1680F7E9976D1264334D12DAE5BAA096C70D1D666E7DC1763945F772D02E73AEC27F1CA52D9A7FAF2271C6C49E571F5D3AEE92F697F6949ADBA5513DB815086B08C608790F48AE36C1FB91BFD0C31CEE8D83BC64D96136890986FCDCBD743D59C139C06F62BD3B2D887449E0343ECB0DAC427A053C4ADA5BEB03A705DC1E3FFG4A58ABDAC50701B4DB10EE9891A55161E4B4
	77ACDDC1E89CA24D6DB60F08D04008DDC0398FACDD89D70B41A9FDE1B799A4D121E0798B1612BA7956508392C1G5CB33FA46651768E764F83C860FEB83C0C487BD4F4C007515050E1339D9F35F793CB040A53444F2BBFA6FDC7AA50671DC69FA7ACA7B889527E27D1CE403237D5F2DA4D34CFB2B8CEE29B3BE593F466C28850C7G44812490795FE38CBD5F0BB1543A7CEA216C7E8BF4E3A8G62396CFB96BB2D5FEB5BD28CAD0368E901BCFF00D000586FF19C6858542B12C54AA757026F755B999DAFE41A1053
	1EE96264BCD60668D246D2791A6B0117C036FC4D9C07E609FCE57EBF10CF6AB299744E79817A509F308E6EDED642E2FA1741A9E294FF6600G94CDCA0DB0BD1BAB03653217487A65D3BC11A3882BE45F937D49B8369B20DAE0636B87G7F86588BD08B3095209E00342743GDF8134G0CG1C81E083E887B8A610DECB903681EC87B88E70B300A3A4EEG76836C84380058407D798D553389EC9C8688G08GC8G4819826D9B2097E08A409C00F9GE9GA5E7C03B8730838481C481A481941C5913DB87508FB0
	8DA08CA08EC0789978912093E08CA084A086A08520482FA73789E098A0GA082A081A0E7AA14BF95E32BE533BDC309D7746BD259374BF57C2BD74FEA7FEA73B64B57EA0D5F511FBBE53F35487535D776BB7AD6AB6F102A3E0E4875232753F139AEED6344A74299F21DFA233B40871A7F856F40E26FB19AFBAB84259FA17137D24EA731260DC3BDD9248FF997E03DCE5EC6C169FFB0BEBF921438A3B1C646E29223E49ECF621844A74620D69E0959CFGB689ACD66BBD68C462194CFDEBFD7085E997ADBE50693505
	7F0509839BF3EE4BA571A4FEABDA25D651AEDACDF0631473E26858AE4F1386ED1C679E0A37433C2A85A6B2CE0E1F1FCBE258A0C98E33F1D4923BC4C9B2DB07147CF8DA16F354E8D726E4D8566374D949F68266D51CBEA9174CC986ECD62BC887BF4EA267BFC367C422C59C8125DBEC23D60961D372487363F17124BCA7CB4DDBAC10B915E5144C6F58B3D9180134A73B43BC82C3AA19A28AF326127952260F0BD4BE6A859CF936BC85570029B857B971814EF5B6FCF71590F54C1E21B7F78F3A629799A9D365397B
	D94ADC07697444F2FD5D1F25F3B3996FE43A36E790DA798111BE9AE6D25A156481DB58B5AAC9B66BDE07ED545EE27E56ECB1FFA71AD87E7943C45FAE90C65DA7303EE52530E8B56153BCF8F65BEC16CA167FC0F601FBFEA51B3B1CDDC01FB9401EBA004E33F06EB2749649477923BCE9E931D91432034EA27E4DAFAFD479E878AC66DFF21FF3B6FD0E6079891017264AE77C0F3870F71E2D4D4F5D2C4E1F264AE7FAF667935B1C62B723A2CC7B49C479D39EA7DF653F2D496B11E306658F641318312866584553C8
	19B115384690A917B77FECB607CDBE1B154D684E2CC23A61E96351ED29C63AA99E68D2A85DB31CAE8852E40E958657A8008400F2CE97D103F40D6730F998216BBEC7CB77FDAD52C96730399A2173D751451FC368DA37A0DD68B9CC2F68F358FC1D502D63F6AC5B0AF4256702FEG7D6732B9FD4839EAFB6F61F4B1670EE76F19F5C817F0AE1BB3927D524ED574331FC7685A6A112E68BCB63F2CB80F49EDBACFDD2E50406B8D707381D24FF3550F490B66F4B57EECFE5A614F6475792B651D5A06F453G9F626FC9
	DEC5A352C57933F9EE1CACAF49C5DE9227ABBA9FECB85F133C606DC857F9BE1BAF8F1F4F640D1D2F16573D8369E683BE52233C1C1DC897FFBE1BF7274A7232FE4E68667F1C50C5F13A8AC837818C7F1C514DF12173EBC23A12DFC03F718B052E7797EA7D6A1A114E8F7041G113FE07A253B5025F33A42GA627ACC0AFDEEE5C05F42D816CD9210F5081788730F8E1727CDA10AED816979E401EBBE38354657634A2DDE2GFB66C88FE06D28F03A5AFF793BF95CCFE74FA5CD53195C6E69EA7D2E63F47E5359334B
	6C69CA39CAFB7B4F9E248B1F4E5AD96CF4661724696A76F6E0AF5289B3D8F9C5B398DD458CF5396F35A1DD478C761C54A417EB1A21764B031CCE5248731F21764B956DBC2EE43AC819AE4E056E64BE24CB55484B1B2956EF7727C837E1A6FBEEA37AD95C74FB0D53B54E147DBB1359B1BCD3DD6E1D9DC8F7EA26D2EEA05CC73814FB41FE241BB7D3FEEE1C4E6830DCC657FEG6912E632E7C92D7F58387DB2DD1F266B3EDF9B3EB50C15BBCF40FC2821E19F9D43595A6EC5F4FD064EAB82F18D776AAF4898DB8769
	CE0061C01CF75C3B9C57F0830F4F91621F2EDC62E90DFACAA033EBF620B26F88C8E9DE4C4670FBD710B293A1AFB590476F85796AF524E62753B6E026CBD87258F7FE01FADE42F0B38A1641F5506CF0CA6DB0F19C43F1B2280068CB5638E4346C0FDFFF700120DE879F9AB5B7B468CDDF64B55253FB5476C6661F4E4875E0EF4E854C4E528B94FB1BEC5DCB58DA2331BCCFE0F31FE1488F81083B0060FFD5CE6609E46CE2658DD4E3F9815FDDA174DFF00947720AAFE465B4DE2814D776FDDAB63373265D9F8B3E2E
	7713E9977A276D338FFD6643F55497AB51B689F48985E0F3385EAA02B7DB4D1259C0FCDA3A1115D1E1FD9F2E86132934C39513654DC6A74C7287A4D69B5BB67660BA75556B1AE41BE32F19A5649826E6683DB770FFFAA8A3D176C55EC50ACF8AE79AB3CB81182EF32BD057EE207187E078E355080F86DCBA472F2CC1FCCD90347FA0346D3B9AD2EF8647D0A51B739D9655F33E59C0B79FA00D534F227452305949ECBAF598ED1A929BAE942DBCDF57A6EA4B454C161A0B951B92C20C1929A1E85323DCC7BF200984
	E0BAFDF7D4CF27540B5136ABEB11AF679268BFAEC13ED983FAFCE317A05F4896647387DC74A5E863EF4B09EDCE55DC1F597AD2333A7EA216786B5ABAFCE5D0C67AA54C468D3FD4EC8D3A4C1899FA995ADA3DB5CFEE4B9250047E92F50EBE2256B97117CC673CE0546D122DD5243E28E2656C52A9BA86ED0E9151D4CA22305CF0C2AA274F20654DB4FBB7395F086D62666F57527E6424EDD4E2E1DBEEB1C050F6410326F50884AB536F552D681B92A83BB798FDB6378E7181000B89C63D739A75FCADDC0AFC5F5423
	3D05006B38946D092B4778E37AFDF0122C178C0952C10355E49B015666A85D682EA72F13575F45BA5950BADB28CBBD6EB17E7CAEE5F591FA29D2A7214BDF4B0E82E0BAEEECC05B520126663F5036293AF5E279AF34A120E132F5424AFD2E81FDB385E4C6F0395D5BDCFD737461754CB74D7094EF30F8708C13F945B634A58564157E8AED7978281EAD7D3F42FABA5C486392F0213FC2DD229ADDF5717B7787CC179633E3E054E2F0F82CA9A6F745F654A791E4960720BEF6DD5FF60720BEF7ECC7FD06819792027A
	146DF055E7DF61BAB9EEC40BE14CD350B01927F720AEF1A02F60B25465282EEF5AAEC3DDAAF722AEFD008B3C8CF5895A692ACBF51DDCCF9DD06716716B69E9AEB39664E54DC2DD7EE3525325F19616595974637A011736909D3F3359C65A2DEC20BA562C1182FD81EBE333D62A7B3D469F0E6A3631E97943991D33D85B9A1B25EAE3B30C19D1B3305F3B3A896D0D861AF4EE6FABC6BDFBEBAE47777EDD6F16487AFEB6AAF9D41815E1E8467AED837EA917E399B716691591F1B97AB426794779346FF09E6FDB77DA
	0638BE7F5E057A44C2D9D93331BC7FDD5AF98523FF0453B7822D44697734380E55D387757A5CD0CEEFED4131DA76FD8B7ABE8AE852B8DDE1AB9D6FA4476800B46A9085DC5B5A6106E7F2FEE8C57DAA2E00B97595D8C7BBBEA7F8AB784BE0B9A8BAC7AD92131356CA565EC5ABD966B149B26AF623AEA1409F47E5946EA0D73A3EA820DF9F4CA5EB6EE667FEF144680069FEE907EACAB7C2DED313C645145C3671CB2E67C33BD14F02DFC3BB7EB55A5B3C877D4868E66FC13AA9C0934169F277AE6771C0DE0D430844
	FD33E5AF192F1342D9FB46B2CF6C657DAE48A93D92E5AD582B2DEB064FE9A3ED49211910B2D97B5AD0D6BF48896232EEEFF32D570CF6241B87B4B9F3106E7CF6D2FFF44ECB1E1238DF6EE9C75FB7816D98272F5DC7F4B15986C6490349FE0355B0A4BAE4FB7BF573183CD97B307CB010154465ED7A144C790D4AC309CCEF7D144FAD2E023945D5583F3E5F01FA85GAE66AA14F3CEC7366CEB8B777F75AEB8467FD2874A95FE5313DB874056217FD22BDE073683BE98A08AE07EEF300C537B17212F76B321CC662D
	7BD1E6B250EE180B3ABA8EA03E8FF001F3715DE770473807A5F6AE6B839366AA6F4BD361BEA754757DB95B5B71DE8F11D79C4A76F6E4F3FC9945D728702C7C9B3EC0DF35C25E1CD05C0F50340A581AF7B5449EC093C0AF4098C0505578FCDA32023C9F9AF73FC73BD50247D703254B6585836E3BD8C16CBEAE1E14538F2DD037D9F9EF93DD978F07B26781A4818857746416DC03BA985E762A436EB1DD9D181F074B091F1B2E713C97C18B0C6FDB4A57BB81BEB686EE7CD23D27ADEB453E8C62833DF966B4D9F650
	B54A9848FCF2280878A48E7029GF957C2BC8134DE0BBE197BF619B71F605E9A59994C26D7AB3D6D59B2DD6BEAAF634B2E7246B7CD43476C38FA8DD93389013CC80079GA9G05E1BD3995G5DE1E84F2BEFEF73DA47E4G6D36B54BFD2C666D142C67F5DE7554376F8FDE7924B0BDBE31FAF265B93D72796B163726E6F265FD6415EF3626BCB61E3ED62433F6340F2C1E6CB2B83AEDC3C3A43EC827AD3F47DBD1276EBFA343587E27C4382681303537GB1C7E06F5D8B2E433EE853DA92A7922483G66GC483A4
	81E4DD8F7D537598A76DABF7F90B933EB58CE2855F093A070B6C1727A6694FD73C72B5DD6F4A47EC3F6EE80E40769874DE0F63405535135361F7DE79A2F5F5F8F0G7DBF1F6B605CB2B99D4E704AD7F703DE3FB02B1854F7A764D9G7CGC2G228192G3242313EAF75DE5F3C12FD296F7A2DDAFD0B43DD755337F32F9BDF39564EF03D76135F35C650DD0B16DB8D56496BC7B0AEBA4331CE5EF0AB5337BA492D7346979E2E47F71DD7BE8FFD27D73E58F03DB8DC3A93EDCE64B61F281FDC7DCCF5635356CF5BEF
	756230E49D0943FE48BB8590889086B09FA0852070C60C4397D7B6FB0BC3D53F538278B61B6D38CE984A7AEEEE181C2F37FB652B39D14F5711BC3EBAEEC4DF3F6CA64BB7DFAF5A664D57E1B76A714DF563734D661B3D7245685AEC60FDED823779D86364EC9EF163535A5CFA139E5FBB5BA7E7733F3D72755D24E773153C1E251B50663B5DE479E67303EEFCDA1B63F4ED7E590E4959BC5DABDF0A2E4D9770FA4E09C01B376E1C1C4D3B5D7834B6DBA27478DE18E4F9EFF8AD4FAFC24F666BCDE8F3F0844E21AEDA
	CF7AB261661E5CE2009A00CEG89A0GA07CE66C4BDA8B497EC3DF665A5E7B319B1AA6E777EDEEFCDA3B675F2CE7F7991F3BA45F0CF5BD54BC39F89B754A57F90B1E8E4F15218E4337208E1F6C1A1C8E75DE79E2EF5163FBE212653D6C15AFD1576648C134B91D5BFCC34BA46B5E0DEF1DA65D7FBB5DB13EF5F2B64F744AB726DB5E0E5D13332F430DCF9B5B813A65A5387179E65F73DE79666816771BBD13ABAF42ABDF14EEF92777CE2E3C733C724569165759B639720EFA65CB51ADAF27FDF2652D764A179329
	47B75F0D4F3778FC4C0DCF5B7ECAF44B1B33EFF2765D68152FCE37BC69534915F726D73ECE5D72CABBA6674FADEEFCDAFF8E6B16176646671BFD0B77FB631B22A90FBD0BDE1EC374F2D94B41DDAEFB1505FF360EB33DDE3D0E938472228112G52A3F19DA7FB8BFE9FDB78FB5CC3F5146E856800348960546FF12C08762A333E2D77F9658B7C3D9E5F58014915F716D73ED0CDF96CFB3F9B68FE32E848CBGE0388FFB68B700104E3995F1193D84D78669D60E5BF0186006A1BD65D67457C714B79052E19CD7C5F1
	249E483BBB7959680BDEAF7A3EA54B71C69326C3A35701CFE50C779D1EBA8E35B8F9DDEF15676FA1BAD769FF8F5133CA7FFB083ED5AB989EE4283FC245FC532A713F17302C727C3D440D2BBD6B797B557AFA5E3EDADF4FBBD70F2F673D2BBD6979AE757783747B844728D5B20F08D4B4EB67629859978333780323D6B645A7521D5A7782822E017C3D043CA30C39951F8F065F29925C1F8F589772A824DBB4B8BE9B9C648BEEDDF6F1G75BED66459C703C57ABE3294697B48D1B43E0F3EAB9A5FC7CFC964BBAE37
	EFD98E98C614F75765D5CBE51A5D12EDFFB517FD539A4FF65C3AC65F0E68B564BD3053B66A9890353A5E3D260867A9CFD46D12B8C254113F65217C1241B1A43A597AB065E7F91E789357F8728733B54945569A0E8F2ED66337F0FCE7CD2E0C6F9CF458C6BA2B6431247F07FF893A6B1A722B81FCEEE82F43FD3609376298F1B75D43D47C87F8C68568788376E59708241FB17D41359F9A13537E72B5C4159F8E77B1FFF06F376281172241B37FECDD6B39CEF72C552F5356351E6B7453355E6B34FB2D67BA7DEA2D
	77BAB52D256F464DA633C35EE5486AE6DD2DEB5DD463FC6BA871E3D6142B7DC5F23ACC3EB629723B61FEB84A5D0F27G97GB0DB15474ACE5414DDA3173DE000149D211195AB279364EB2AAABF67361E5C625B5C4B2EGDC2B864F4A7E4D960C55CE4956D949FD99DA6C39EEEFA8562F5B1B0BBD57EDD431773A3D3358F35D4EAB76DE378F96EB6B1675DBF752F1468EDD2168240BB12D8649A05BEF5F2AEE2B44FE66FB0156FB2F46E796B9BDC53E86EA7267C0BAD2031B8769C400345B3475DED327AE3BD669D7
	6ADC6321D256692D1DC4273CBF3A4AAF1153B57235CD155F8777F6GBF8DCF9024C37F28978F57543B145DD2A57B7F63F51E6321F21DFEBCECDD67B99EF62C739E8FFB57F90E07836B3C474321F563775F038DEA7FD7713A3F6D8871F31446BF7365F412FCCD5764975C5E133B61F6D7DC9D24BBG7AEF57567D475BDC7DDCAD639F5B2656E9AB57E91046232411BFCDCE874B57B0CDFEB42463B438E4C88B51BD390551DA1DAEECF45529C6469F583ECC5DC62AD027D06A2752E8D7790DF23AD33E1AB479E31076
	5760C2A09D8E906326D3468ED71D6AE47CADBBDCF42AC61DAE21FE0A5748CF1153D9F730EB519D2E79E510EE52603AA1BD8CF06A8E2DCE561D2EBA554B788F1BD4F5572274A5B71908CE819A793365F404FC0DD565A740FD2A061E766FFF027E9D2062CFCA9E0B754B56FBEE1FF3566B374FEB56FBEE1F3FDD6F3DFD5E3A5EF37B3CE33D7776F94F7A715B67B3AE7ED45AE7A59D97DB7F646A1FDEB9ED112FD3D47901F0BF67CF6E7E0C845CBC8D1E157DDF4D6AF6D84F4BFE290C141D2861C91353F9FF56FFB6AC
	81FC0DA62F8D52FDG76BFEB634B384BA536AB91DF5C62BAAE54E2FFB5C8F47253488F12532172B5CA15BF9F6E13F4F4CD87DCC10C1EBF1EE9F151298671112DAE78DA440F6EF6EDA335B27E1DBD2EB6EC15710F6ED14FC32AF83961FB5575D04771E737394A59A263F7363B68338569F377396037A27E91D7FC9D6267523D122AB13802610FF5385057A37D667DAE788ADCA79A5ACD66A0BAF37B2E81074DE211770732F5A2D30F763BFD325FE78354C7DD8C2E935DD91FA347E2E78CBE8394516FF026C1BA84A0
	A2861F81160D3B1FE4DE0CFB7D333D0F7751F52744983677F19147BFCC71A9AABC5B93E922F812CE073C7EBBF1EF676B7BDD6B887B49EB8F386231CF3F6BE3521F589D622068F00826AE73F744B769F712B29EE7EBC2F0BF0F4B5F5EC34EC4E07B3EA14E6F226F72388F1BA05D8BB085A070AE66CBD6A7571DA0658FBA8CA3D09574E1FB5A5D0477DF3D481B8A74B900AB85E883983E9B4B5CF618708223F9E4F404EA4874DB7AA551EF9E5045F35ABF1FA45F696F918DE403B421D51DFBD0380244B5BE61A9736E
	07CB685EE76C9365E7EBD61F87685E101CD8D6EF45311A35B3CD3A95522C5E2E255F24744632FADB4F6B734F949F2242337A3C17BED312F49264A57E855756EE22FB4D926E01396CBD08AB226F32327E8A73093FA26EA44515C03A0E638669BB568EC88FF35C1FA9CE02349F47AD9EA638A0C807F35C0681DC670B613833A9AE9952D9739097F79475AB62387AE3285F860E3B64986AD741F1DF9FC17DDAB96E6EA328DFA747ADB622FEA60E0B6FC37D46B86E8ECA978C69B00EFB0B6B9C4DF10289F50E63B80389
	F5CE6438BF1AD067940EF39AD1672CFB91B75F08BA97F05C2EA154F983478D9BD167BA0E3B5B087A75F15C7B5C27F60E7B99451D0234BF47A5D2DC902443B43C5110CE5070A6C3BA67BE9ED754FF4510AE63383BB2D13FA60EFB0662CC10BE45F105340E82A0BD1B63AAF6224EE19CF751CE74E9A447256FC41F46F05C63156853F80E7B340A6012A01D4EF101D55C4FFFC35C3ACD5C4F9CF7B41F7B1963EE4B67FE6638470FF0BFF3DCAB73B3247DB96EAA66E7C807F15CB26E67E80EBBCEF173A01D4CF1F9C750
	4F42FC5E3632D03FC20EEB2538BAC8F7F25CEA6EE79347CDD3E203631E6631F10A63769D43581846F199C7D067E00E9BB80231B1076362394E119C77C6866ABC0F635E6531114AF1EC4F9251B967FE445D437DDC48F11BA9DD89C9F3DCA045B5C23A1B632A391F07B5F4922483B86E7DE154F9B647AD2CC31DA3B86EDFF4AC0F07F4AA475DD64DF5FEGF1115C4F059C77AE6B43C81A634E2438C6C8F7F35CBA6E67E10E7B0175EB108E60B856D6294E9C371D3741880EBBC2F17110CE6538C1454FFFC75C033CDF
	AB64388691E3230463FEA9E2EC14F15C9F0C28F39347FDC47B4E8EC877F15C5CA10C97BB477D0E77EBFE9C37EEGE3E38E475DCFF111101E47F1DD8328F3BC47058F204EC99C374A04BA27F21C5286F362DC5BA0513910631E69C71DCBB9EE5DD154391163F69CC51D7BB92EF0936AA7F15CA845CD01F4G47BDC4F141108ED76471F7EAB19C37C040BA0F673864FA54A50563729A701DDA6103082B2A42BAAF65384787D13F9A0EEB25F5548469CE0E3B0A627AA0ADF15CE29A8753A0BD1B632C94978669A80EBB
	E1A6387910CE61387BCD28F356C3082B233C2510EEFA88674E41BD38FE5E7D904E1DAF4CA2F39DFFC84F8608FC88674E7770BD30739FF21FA7A781AEDD03E7F3AAFFBA97AFF8184D29B2B97EC20AAFD16159DCEB9D7F063E8272829FC67D5F5B02B625BD0CBA451165A0F9AE78286A7E6B2D3E3CD31CAC487B90FF52B20A6349995A3712637C64E70135BDE47EE995CF14708FC0DB4DA322159CA8DBDADBD3D6D2D3D53BD17EC6A864047A9B213AE5E76A1EE5C620BF1E5519A4DF7D5F3CD8BE777A219EFC068905
	3C44F8FCD6F8321C4C4B79739BD12421E1170D1C8D56419EBCD8EC3DFFA8C766AF7EEF0C2D4EC3C4E6B724ADGFE7F0DE7F40CFD08E7F4047EFA16B06F897DB3D0923ACFE7847F377C6CAEDF69F9869F9BB3D919CD3DD8E6BA6457AC20ED26D77DEDAA71657ECC36E70A65073864137597720D2712FF1FCBBE5177BA977E2C436AFC6223F7E5FEE65B5D7FC65B526F8E93AC3F7573F88679298572BBA879DAF24F450B1203BA9733D8D830D1090500AFFC098556EEC4BA4E46014C1485581642A8AE6B91F8AEF804
	0F798D3C4F6538A1564FC1FA4AA35866FE3B0D58938869D00098008400B4000284186781B4827482D8G7C81C281E2811281729EC5B9FF21F248B9DF646C26A8796CB2F2AED969236C5CA9F226D45B236C0CB1F26E96B94BABD2BEB30B1CA345647C3DA10544ED82AB1F1469EB9B8B14755762B7E8E4A428E8C265BCE2FB2CFCCFEC6A75215CB4CDD949AA1E4689682D74C12B37915B49591EA426BC1DDF2B871902F2FE319A346710AED55D2FD14578DA79FE3D407689FBABCFFB56723B2A7B95BE70EBF5DFA96C
	25EB4E124DE669B65B3B45B1C96EB397FD223413EB68F98892E432BC7AF9221C3732092EDB9846B46B96336818BD8CF5AABD0A6B968BAB753E3FE6B23BB7A9B267D611724C83B6AB1315C247619010934AE555EE723C2633194E130547201DGF4BCC6F05B86F08D266EB17798114FAE4957DF038923F335C0608B81E07A1EA0DD132C7BA564E8D81976F6BAD70E853AB8CEFBDF05121FCA6748D90F43BD002CAF1DDB1AA0EDFF9C75FD398F758DFE5C133E71C675F778CC564BD4967DF61B4B5FCA750F02F46C63
	2893BD62C4565FD92D6877AC75F59A50E5A5A26D05B5CA7E9BD4FE8564B5A6227C63F45E95G6960C4547F87A36A9F1328339E4CFCC1E545C3FE92AF6B66DAA58EDE9FF00D3B78ADCA5E7522FE5CAD277EAFFC821E851E40D8F94068B96E5E5C2A487C631067188AE5F3EE10594B655E53C7749B34D9A5C613C8579B7CA0BF608974432319C50237B6D8BB209FF7AB6973F294480A65E5FEF2E4B1355BB1E436228D4F56ABF57956B6653E32D12937CF1AE83D021C2CA751575D5B955B0DF45E4D4EC892CD0C67E4
	9546D24513D85737D1DC9324BBB86EGFDAE8801F46813E877E8BE5A9D7724277ACFE16B95101F46F5BA31C351692B232E75FF49CEA5AF6A28FE7D33353A8DCF417876944A7CFD1342F766D14FF57CCB4A5B87FC43CF21ED35343D86C2BA64A95E17E4F92F532F32746B54C96BF49E480A677AA5B4ABF51659225C9FECD56A4FC963BAA7891E151210EFF437126FCF75EC023C0EA454BD1B5AB386E93FA4543DF05CF8E4FCFB6833F8B870C471320276A8FA7DF92F624FBD1ABAFA26CD491B6B210EEEE7EBF5A0BB
	0D4BDF3ECF4D67390E22D97DBE8D757BB45A79A96D6F7BA0BD7CB45A39225EFB9DD5566B57D1BBFDD68D82D9331FC67DAABED56C8F6AD0F42DB966EA7F6F76ABF9979F53377FBADA1773C0F6BC177F78E78A5F05C7BC5BFFAD2D671CE7A08E1E6176D31FB4C13A6399343F5B07FEC74A54375F1F567FA910B56D9954EF71670A7D9B8FAA779DDDCA8C5EC51F0D4301A70A73DD5B2D5835E340F5DC6FE66B56C01B46EDF9180EA59D4FC2BF7BAC5AF29F9FCB7C1E7554176C273202A0FF763358D7A68F38771577FD
	21687ECA0FF2DF542B5831030E0173C0CE7C33E8473643CABEDB1B4BC906BAC8C63DD79A68FC8752D2B26ADDFB54FBDB9B2232C200A7B4994BBA7A2562B37FCD2E71F546D7CA5E0B1B7463EBE9B9FDD681F909DC3FA13ACED3709C14719C6216ACA238B6C8F7BF07BAE7B6F8573916BE4F7881CF40F328736CBED57FF0C451712BA1CD7FF0D4490B9A7250075398088459B14FE1DD3EABFA9E431777ABB2270A2EB1465681D3C10E70BC4A7A3959F37B3A122E83F583ED7F736813E4937A447FF9CFF3314FC47D36
	B4C44B8F813E506771D96B329EDC830A1365A52B648AAFC0DC3D203786D4CC57F4CADF501EA9739145B73E20BDD3A6B88B4F1469043C709770F97409FADC33ABCAC1DC90FFEEAD6338FB797ADCEF8A6ABE23167857425341B4CD4E01E5698D356A759CC2B711E792EFA0FFDF6DD206AFFB5AA7826C1DED5D965E67008DC1G91GF1GE9A9385E72572F546BC38517D8B2707D35D6E6510B4C8F9BDED456DB583E6EB7693AEDAF602597F1EFF7E6A9F9786AB1FC6D3E2B9B101D8E1BDDF4C8A799161E420E5F2675
	F87BAEC25F1F4FCF126F23C39365E3719ACD572F82DF546E83788B45073C285D8750F3082F21C1DE41CB78ADED859D97A4C887G4C810882C8GC8FF89FD59D1CA9E3E467D0E365BE627877B29362E4B5F9977CE54BE969737AD41352A70DBFEA3C41C556A712C5C0217D9BCD4485708580B9711AB336FF67A4C5A8FF927GC2GA2GE28192DFC67B82CB65B306C8B8B4CB12E1E0181EC24CBFA4B00BA794B45914407A2BD3F40F682045E610646F8C64312D8E577E52DE667B8D6A48B8EA240B13389FE281BFC3
	A6AF35A7F783C0AF00A515FD779218CA67118DA563784AAF15594C4A783E01784866B003166CECE5264F058D788C921F0A7A1453F3E559EFB730A3BA64BDFD27C93FCEECB40BCEFEF6874B1BCE7793F5C9229DB398BE5FC670FBAC23E32E781F517DBE9DE62B680AFF290444463E8E03D134605E4ADBC609BEDF2A4EDE144FD8DB3CDC4673B38E39BE51BB94B9389F32300F7C4682BBA815AD823B161D3902641383BAAD22DE3E7F07A41F9DA62A17FF61A7E40D958F31D4D3307C252B489A14FC60260BG167F4F
	6F483E133D16A116A79F0F424EAE1C6EF2B6EF5EABAC8EAADE41339A97746965373E027307BE9202B8E7B011EF60BC2C4BD6551515D455ED44317F2F038A5F0BC33BD5FCF8FCF37B08E1C8EC0789C1A959B2C8BEDCA95DD8CE8F96E53B90CB5F5FECA6A44E4DCE080E72A173607B9B49A231BC6F9DD6642F9970C5AF79DC8BBA9FA5E3EF6FABB8DE449CD12FE117FC72196E9AF65A116FB282DEE1EDA37C95E53CE89D2CD94AF4321A951D0E9C755DD7AFFC2D709DBB62BB5F10D565E3430F7371A034B42D0F4F35
	A9726F6D735D47EB0E200F13DE413EE199DBB3F20C0ACC7655F6C576D41F6A0F71FD61D078060D3E7345B8953ECDBFB29EAD507BE8FD752C242AFB1F74E23E3A42083EAA79873639373ED5E4C99370CD6589056F1D8944DF771842976AD3BD4BF5789F056F564C7734FCFBECD629747DE60759E0F93F2C24927ED7A87E1AF7CA61DDBA0118FF79344297D7698B1F7CCE294AB57E86FFD0153FE96F0F6B1F680807914164972856443A72FD0F07DF66737E0947C3F513AA6687FD77D5CF3342776684FCFCF2174237
	E882FC7737AAFCC5D9930B0762BD8AEF6E844A5C29DA73FAF58231EBD42D075DBB0172EED52D073D18B1B19B9F7DD4616D19C07B4CD22DDD15CE006F23832A7EE058F73EE91FABFC4F57CD4C463987955E9B2BFDAF731EAE05EF65846A63C555BA56C47A3C353D8ADF65847B2E9D07955E2FA6D026C135FE94BE0131EB3EEAED6942219F57D711133D4DD6573E6A55BEC5FE5884462EB4BEF685703E6ADF2AF5243BA6B0F6EDBFB6393EAA2CDF613B3F3F6DC77B86664F32F3187C3F99D4F1B9013A7E07D1613BED
	827D529A1342D77D316FFC0D2AF97A5F845F790206943E047A0935035F2966609FD579DE668255BC797589BCD3FCFEDC61B31AFFDCDDBB595328CBDDCB96D56C7A2497EB87EF0B588EE2F8BB38E8C41155A87AA20B2D6DC574609A2070AA2E7785F451F72710AE65387CAFF0DD3003635A3E40F54131D7F15D6F7DDA027307F48847ED223808D759795C8CB7ABEB3C7DDE045F17F516908FF4721E181A714A70F53DD06F9C8C7A6CC657A55E226B927120C7522B385EF16D386B9D05E972771D14FFA165AF85DCCD
	9ABE3B9CACA54F092AE3DE64FABF3A856B3DBF8D77E3DD38C53B9F6B418C75FE2A18AD5A7DD864B9D349DF38C53B9F6BE9977E322D5A7DD8484F5626DA69B3A1DB037A3C1F7CE62E6EFAE533D15A8731781971EB1839F69B06B8CF160148655F2330E5CCB9AF57C04A66E76B5365A0F6AABF2B5F3B484FBB4BF57DB755FD5F211FFE3F6268CFDA86333F5E68791B4BA6237EB717FB0C7AE7F3F49847BFC7255B68799C152F0C6A5F1DE5757E390D54CD9044E1B8C09CC0B200709A2EC7BEEDA43F2145CE7C552EC5
	6EB68D11EFBE1D1241AAE17931831EED7D5B40EA45D642B5A06239A87CF7C7638748BA1D51A6C93691A29F710F8D107A12ECF60AE4382786080F9C6621E109114A786768DA0DC59C24E8799DF49D31FD50E0F1AA3F3330389E775496033D5D2F61DE4E6C92927F5AEF714A5902E9C343EEE9E0D8B46D1217CF65B6FD209E57D97DDF43FD1D27287CE8C84783243E067D42C083F926BCA4BAA579B7F6C5DCC7AA1EFB39D03C3EA9835B37B61E729632BE27EE21320E047D45CA616A068F602AD6390B7C45AAF21677
	6CBE585D5E525C013F59B76861B77B68AAA633AB062FFBD996627E68D5FC1DE676C29C87868754EB6B7100CFD9B8FE5F4F62AF41CEF448FA3DA737842095208F408EB06DF50C41FD4325026777A7EC71129A69B0182D9253E736D12DCFB0488AFBFDFCFD647379DC782201A74EA73E10FCB5DFB27088693E703D61D2DEA170147A44770E2866EB841ECEAFFCEC1CFA144E93CCC0EBCF47F83C324B7D7B48DB3B78FE35F476FDE4B8DCE3525919E4ECFC7C700B12F14ACBC8D70F0F5F50B9C6AA6004B778BE2EEC3A
	E6CE3FF62C14E3F8817D7DA155D72F156C1B57E3AE3F91C23EF9A5FA14012C26B7F06EF4D23546F7FE43B8FB012B2A4ACA2A6B37EC14E9E39B087DADA279CD8D1CB3862B567DDE2F71C5962B178117EFE9FBC1B74B9B63578B0B7143B64F7DE63F4DFB3FE936917F0A505FF51F344B5F4DDBED44AE5B6020D3647D3353D640F16D4ECE1B53CCC6E326FB1E5BF95EDA18223105717D4BAB1F76ECBE46576515CF8B6C3DE28A6DD7035F503EEFFC0D62673C21FD5FF8E6BD3EEF8C073C22FF627B46B3A4923F27A09D
	849089B09FA089C0F833A73790206CCD6C03326D6375C1ECB05076C1FF9950332F6DCD66433EB75D63C2766791BDBE3BCC6F274347667127591E99487F1C634E2438B099A70F69F64F3116E2779EEB2F59754768B76D6EE3F456B77AE37432EF54E3347A1BACD77D230CEA7D65EF5FF4687E24C3F7D33EBBDDE43EBBDD210E5F568C3853150B6EF455221ACE5ECF25DA071F5A65CB5F41627449AE0C53D81017A59C12475B72EE1CDBB4820E4DAD7A3A892D84E9FF0059G2C3C16AF5C7B328E557A7E49ACDF7411
	FF2F37964779C8DE6E827A7B1229104EDBF4A8F783G7343F7DB50B7195CB7BFECC15F909CBBE3A9EAA5F9C7E63612F7A164246B3D2215477DBF683ED7F67F266AFEDA7DCF7F9CF059CFDA860BF9FF49F33B1BA9F9EFF74112FE3B1BA539373BABA57DF6F73524EEF78CF73DAC57418F69E378880954951B9760AF0AE15DA6726F9D9BF98C34736F6B5AB82E728852D9B8EE4691249B839C1B0B9ABE4C9378B362A133C99AE6786231658A3ECDA47670BACB6E1A5CBE170513642B6E1E5CF8B50F3655E03055F53C
	FA106267287072EFB8F773718A720AB28E49F36C8C375FA6B985F9F89F203AF7AD7FA09D7FE6E7E84B7F0A6243B23465A756E1791110D712F9C81EDF59687BBE36072E5FB45E3EC2C6BF6324C2FF5511716819FD8F50B5F9F67F086AFE387B27EF7FE77C24E548E34AD6BA877EFDCF2EDFA63605197CFB6FB919D84F3D2A3E4F203AFF266E2777C366CF5A8F32E70BDDDBB19666034D49G05D907F2CB81A2785A5BEF6ACA4611531445E21D456B577CDC19EE407BE7E11FD259CFFE1BC173CD66DE0759344BA0EF
	F911FF57E1AB0E2F51D9B84EA5D0196910AE4CBE14DB16FD086F1DA2323B00F7187B4C6E75B70374FD7D7DA479EE1AB09FEB6F5D34DD37E6EB7B01A3945F192D6D871E64FE6D033C28EC0CCF7AD3FB783C233ACF7EFF70FDF176CF5A865E21F5FCB0F3868CBA214F8959CE0770367BBC2979678F7EBD74D8EBE1061051AEAC9E2603D23B10FD020CDAE3F67058D5A0E60B739B61FB629B16120465782B76A564B09F09CC5E32488EA5C9D8CA362B2930E4CF0DA43CFD3037C4B991CD15CD26CEA00EC5F0895BDEA6
	89198E2BC99272543B4DC07BFC2EBD4CAAC4491970EDF5C3666317E7E688D920BA1BCA3403C8188F00858EE6C9A6CCA5089DC2069AA4A117ED51D3D4D94CF6B0C8C2012C8C5B2BE6368E01BE86AB906529F72FD10F643B4B4D173971272A01F940B1G4C6A2DF11E185FC2BF30EDEE449116B16AED5536B7EF4CF48F9DE536085F92344B1EBACF5CCB48D64012F6AB73855BAF6809B60752FE86DD8EA1DEA2EFA21404E53286FBBB76C269C316A1CF827264FD100A7717486F22B05084525B95C325FFB0E09BA9B7
	9BC74AC73F9DA9B79825F2919ED64B494C4E44DFF4FDF9FBFF44701D2B5E4F90325B055CC133E8B1F551D7DD9DC281CD350A4E810759CEE28FE2117EBE76E6727B581B655F476E90D6D0BAFCC5C64493C52ABB0415AAF1FB4C96512AE43D254A7A62E087F1B5158C913D99525BE858AD1204227272BE7A7B41FD6C3DDB9F6E6503D853EE6FA3223758B5DE70162A72D08E6EE7D31503A8425678FF2B9C5C8B26AA87D104ED57C44BD1577FF2175730F7DCD67BE46C029EE7263038DDD8C33EEE6C929D6CC70ECD64
	005B9E51C1BA35BD42D23B4D8C1900079E41C9AF59CE69A4B4C021F07020784D28889EB77153471D12300AD55E28E436ECEEB3B8076956E3080CACDE632CBE1BCB28FE64A9E3916837126AC7384AB9574A5F657F7B3DFD099119C2469EE11945E6B06D015E5266E89716CA438E51B9EC3318466CBB1B28201C93E440A69B0C33C05CDAEEAEB12E1CFC744C15BCBEF6297F722465FB20910DB9044D1412FC3CD24EA9CCAD43868794A5BA5A818CD064861EF746BA69433F6CFD27AFC3D864EA14449C44BBD87A4371
	FB48666B071E3BF356430DA9494032C748263F398B8597A8D487C6C70C22632C508B5E4D8DCCB80F68E5A76E2115389F3A11C1430859F292EEDA210EECC39CFF028EB3B479B97182E6AC05A7C62B137C88BAE8D322F185E6F10B4AE75ED9F141D58B3F2496A92C12301ED5A530EE9E92EDA31B1B8787A19C39GE818A07EDDAE1E5014EBE85E9E1B3EEA5F7DEF9AA150DA054C110A8A7A37127E2DA2FFABA92612E2AA2B20B6D304F17FE9734746084DBDE33EB63AFF39F5A2FC439DF4E96E3B70882BE9728D0F24
	5A5C421DE0BFF50FDB027E0C55A6A1A7B75D3C52C96A9079F3187C79121275513F47A66733916FBE7B7F420EEF7F075871437F90BB26795C965F0336585382ED312445C23E8941A6296CABD3B5C985C9A47CFC12E36E7B6394A9EF57120415BA1B38080C407F117D4025BE5757DA373ED3597824721A8ACB18AF7749EB0B7C614FEA5FD312302804G7F2D779F545F6925CD9D70F80E133D102D937849D765BB3D97F268D98C000F87E06B1DBBF34821A51E763DF40D98AC9649E0B95EECB511BDB03BCECA22326F
	A2B50748F7A20D1C4972DE4FA1FAFF2D6279BFD0CB87886D58325169B1GG1C26GGD0CB818294G94G88G88G480171B46D58325169B1GG1C26GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGA3B2GGGG
**end of data**/
}
}