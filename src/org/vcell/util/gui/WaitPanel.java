package org.vcell.util.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import javax.swing.text.*;
import java.awt.*;
/**
 * Insert the type's description here.
 * Creation date: (1/18/2001 2:08:36 PM)
 * @author: Ion Moraru
 */
public class WaitPanel extends javax.swing.JPanel {
	private boolean ivjConnPtoP1Aligning = false;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JTextPane ivjJTextPaneMessage = null;
	private StyleContext ivjStyleContext1 = null;
	private javax.swing.JLabel ivjJLabelAnimation = null;
	private DefaultStyledDocument ivjDefaultStyledDocument1 = null;

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == WaitPanel.this && (evt.getPropertyName().equals("background"))) 
				connPtoP1SetTarget();
			if (evt.getSource() == WaitPanel.this.getJTextPaneMessage() && (evt.getPropertyName().equals("background"))) 
				connPtoP1SetSource();
		};
	};
/**
 * WaitPanel constructor comment.
 */
public WaitPanel() {
	super();
	initialize();
}
/**
 * connEtoC1:  (DefaultStyledDocumentFactory1.this --> WaitPanel.updateStyle()V)
 * @param value javax.swing.text.DefaultStyledDocument
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.text.DefaultStyledDocument value) {
	try {
		// user code begin {1}
		// user code end
		this.updateStyle();
		connEtoM2();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (WaitPanel.initialize() --> DefaultStyledDocumentFactory1.DefaultStyledDocument(javax.swing.text.StyleContext))
 * @return javax.swing.text.DefaultStyledDocument
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.DefaultStyledDocument connEtoM1() {
	javax.swing.text.DefaultStyledDocument connEtoM1Result = null;
	try {
		// user code begin {1}
		// user code end
		connEtoM1Result = new javax.swing.text.DefaultStyledDocument(getStyleContext1());
		setDefaultStyledDocument1(connEtoM1Result);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
	return connEtoM1Result;
}
/**
 * connEtoM2:  ( (DefaultStyledDocumentFactory1,this --> WaitPanel,updateStyle()V).normalResult --> JTextPaneMessage.document)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2() {
	try {
		// user code begin {1}
		// user code end
		getJTextPaneMessage().setDocument(getDefaultStyledDocument1());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (WaitPanel.background <--> JTextPaneMessage.background)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			this.setBackground(getJTextPaneMessage().getBackground());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (WaitPanel.background <--> JTextPaneMessage.background)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			getJTextPaneMessage().setBackground(this.getBackground());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the DefaultStyledDocumentFactory1 property value.
 * @return javax.swing.text.DefaultStyledDocument
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.DefaultStyledDocument getDefaultStyledDocument1() {
	// user code begin {1}
	// user code end
	return ivjDefaultStyledDocument1;
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelAnimation() {
	if (ivjJLabelAnimation == null) {
		try {
			ivjJLabelAnimation = new javax.swing.JLabel();
			ivjJLabelAnimation.setName("JLabelAnimation");
			ivjJLabelAnimation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/planet.gif")));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelAnimation;
}
/**
 * Return the JTextPaneMessage property value.
 * @return javax.swing.JTextPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextPane getJTextPaneMessage() {
	if (ivjJTextPaneMessage == null) {
		try {
			ivjJTextPaneMessage = new javax.swing.JTextPane();
			ivjJTextPaneMessage.setName("JTextPaneMessage");
			ivjJTextPaneMessage.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextPaneMessage;
}
/**
 * Return the StyleContext1 property value.
 * @return javax.swing.text.StyleContext
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.StyleContext getStyleContext1() {
	if (ivjStyleContext1 == null) {
		try {
			ivjStyleContext1 = new javax.swing.text.StyleContext();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStyleContext1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	getJTextPaneMessage().addPropertyChangeListener(ivjEventHandler);
	connPtoP1SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("WaitPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(339, 76);

		java.awt.GridBagConstraints constraintsJLabelAnimation = new java.awt.GridBagConstraints();
		constraintsJLabelAnimation.gridx = 0; constraintsJLabelAnimation.gridy = 0;
		constraintsJLabelAnimation.ipadx = 10;
		constraintsJLabelAnimation.ipady = 5;
		constraintsJLabelAnimation.insets = new java.awt.Insets(2, 2, 2, 2);
		add(getJLabelAnimation(), constraintsJLabelAnimation);

		java.awt.GridBagConstraints constraintsJTextPaneMessage = new java.awt.GridBagConstraints();
		constraintsJTextPaneMessage.gridx = 1; constraintsJTextPaneMessage.gridy = 0;
		constraintsJTextPaneMessage.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJTextPaneMessage.weightx = 1.0;
		constraintsJTextPaneMessage.weighty = 1.0;
		constraintsJTextPaneMessage.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getJTextPaneMessage(), constraintsJTextPaneMessage);
		initConnections();
		connEtoM1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		WaitPanel aWaitPanel;
		aWaitPanel = new WaitPanel();
		frame.setContentPane(aWaitPanel);
		frame.setSize(aWaitPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
		aWaitPanel.setMessage("Test message\nsecond line");
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Set the DefaultStyledDocumentFactory1 to a new value.
 * @param newValue javax.swing.text.DefaultStyledDocument
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setDefaultStyledDocument1(javax.swing.text.DefaultStyledDocument newValue) {
	if (ivjDefaultStyledDocument1 != newValue) {
		try {
			ivjDefaultStyledDocument1 = newValue;
			connEtoC1(ivjDefaultStyledDocument1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * 
 * @param text java.lang.String
 */
public void setMessage(java.lang.String text) {
	try {
		getDefaultStyledDocument1().remove(0, getDefaultStyledDocument1().getLength());
		getDefaultStyledDocument1().insertString(0, text, getStyleContext1().getStyle(StyleContext.DEFAULT_STYLE));
	} catch (BadLocationException exc) {
		handleException(exc);
	}
}
/**
 * Comment
 */
private void updateStyle() {
	Style style = getStyleContext1().getStyle(StyleContext.DEFAULT_STYLE);
	StyleConstants.setAlignment(style, StyleConstants.ALIGN_CENTER);
	StyleConstants.setFontSize(style, 14);
	StyleConstants.setForeground(style, Color.red);
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GBBFBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BA8BF0D457F534469EA74135BC31EB616004E2A5A1369C53C6CE641456A4F1BDF2A1E3D70104362225B61D62A9ED981B1952164EDCD688D6C1000C302D0C312DG8E9208158482E4A10424DD01BEABD8A421DF0435CF3BEFF79FFA7B716E93120C6C741C7BF97B34FA2B85BA5D19B3773DF36FBD777C6F3977ADB9706162026D168304ECAFA07CF7F6BBA18DD5049407776F92383A23390544707B8D40
	DBE46D648EE85B20EF51355C42E2D2BAE60577E1F82F6D4DADFC971ECB487BE32BAA61A149BA9950777D32AF774F3DCEC507D8E797FDEF7294C13B97408DB8ECB30F627A831ED20E1F4F718236DB88091463181867A047ED06B1D640D582B41533718350B2866E2D2F6363069FDACA367CF55432876998E88A4866F373F8DBC67EEB7B7C8ADCEB916593679C00F7A7G8A1FCFEADC48E703EB4C5F6899D5B41BFFDC292F6F17944DA505E4159C43399BBCD6BA16109C18370062A62DC84F814F43G5AB1015FF981
	712F4073C6GF2DC48F07EE88367F160568F486A13419D7B1248D0FA1C715EF4BCAE433260BA4B2F293E15CE64F79A7A9683E4812C85588AD0DA19DB789E35F3246398344D231ABD9C8C06C34D11C80B6A0DF6053D328A4F75755043F15D32A79C759242EC3944D3E9424FDC4066AD3B63F9CCA7CBCF893BE6F6FF1764FD6F0FAD3BCCF412377416253A1269222DB22E9336766BC9578ED44E743B19EB7793635A87AF7DBC3F40E46D3A5A1F67CFF3BAE90635F3AA51563FEEC4DBAF03676DDC978C7F9145971D08
	63198FFEC1FD865F0FC05F7DA704EF8C6C953CB8F7ACA145B50F1A6AA17D478BAC1BCEB09EF65892F979027ADD350D2D39C76765810A6FB56099AFC5940F6F135037810079D7348BE352D515DB28824C87D884309CE0AD4026AA61E34FF5D45D260F39242856B22E28DEB9CA585CE867BB504A13DAD4EA8F45B4A964117B2428A20D2AF20C70B137BAD18723B3664D233E6F01B5AE49A1B9AAE9CAB8845425202C4951989B73254E37F0CCD4263D3DCAD006850291A268BE54D9822DAA4534EB912F244971912CFF
	E1A75A642654879401GBCB33DFC63B235E9F5EE6191005AEA210783CE2457A9C7A1DB5457BB43613171C8AFCAC266D7231E0997F3C79BBC3B2B050E3FF685F1B9703EDE2753695CEF2063D0BC483E941D92B176A17529ADB03E28A637303CC6784E3F8F885FF16CF91AD42EF94454F7B2410F1DB54CE73CB509B1F41C52C67E96C0DFE60D486D732D835016574C0CA364815B229A73783A335C71B8DDE3D7C2DFBEEF8B7E8F74776A36AB3C0A722D82FEB782D8CF8A1D5F67ACE3BE5CA245E46135D72260F032B7
	EE812E0B8B25DC2F851CDF2401B6582D4B72D5BA268C683781C4G5281D6GECBCA9F43A7F025BE09FC1CB5019CB16776ED837A768DA7989EB61BAFBD24CAF3C033518AE273BF0BF13EF4AA14DA1C76410979EE23C6F1EAE2447635D975667FC0962A3109F6C9010B19D7FE097463024E9D1E5F4DC13FBE4CDD3C27EF87F23F42D5878E8A41EDA44DADF6FC2B94393109F7471CFF4E1ECF9422110CC0D2ACF617D5F2431AD2BF29018360747C39A43BFF599EB1DB1F90A6716E7AE6FA4189B54F14CD32CFED8A621
	BEA3D1A5882E02290E38CFE15C3F6BADB5682898F0D88755C25BF6CA446E44E1913BC7BE7B8ED9B19231186DC1695FFC503274940B35652762314BF8DAFC451C77EF519C4371B146ABA940F563458D730D9272BFFB509FFA34A9D53607C39A982AC66FF350DC6D10FD52382A51A1DEC758B30ED4EBC4FC35F4A38FF9405BE6GEB2D082FC3AE6C97B90D8716BD2C2A4C8C50672AC5DDC59A8F9864AD2BE53A5A2B77AF1A511F4E7BF374F576DDADC6FF10BF9D17E1AB41645B295B6C1D2B7B937A7A387DD87F87D7
	51FE2AA1EFD71E46B5DF3AA0EA533CDA163B37C0DBF41A359FGFEA39D775F4DE25C64E946D75AE916C3171EE6B228E7F05C33ADE2DC6D99169F1CE7D83E9D06568678EDF45CBDF6B1AE7B8C23734A99C6F77D99C60F2DFB4EA146351DE5F946FD1671B7F956386E96FD5C0233AC97E51C0D5335916147EFD668F5708D6926B4E90BCDC04C5557F7986A60BF20FB990E4FBEAB6A5D277DE87B4D70EE2D4BADAC2B933E7DB7FBC43D7B7058D23275521A7CE4B5FBDD9D63F738AE6E5B534FCF64B35FDA5003EBAE02
	3E4CBAE16F05D70DFBEEF3AC9676A8F43B67B6ED6BB67ABE43F5F57F8ADA1F920DE96D101CA6057DFB3A11DF2C87B81A6B23763D43A67A30E1F054579BC30557131FDFB44A3BFC5F67165DC964DD4165DCEF10B76F70FF6433F58F9EBBA456750403B6E5B4E89B3F9934C9231ACD76AA3076C549230531AEE0B679D923B81B14FD8CFEC2EB3BB7E8ED07388140258130D89EECC29D0CCA1EB1FF94B205D744D7EC5098DFB99FB3FF5F7C3130659B4DCD3CEF55F717106CDD8BACE6E717403753ADBB6A19CC1575F1
	5952DEDBE749GE03C9DE9913CCD43182CFA415BD7A8DE89A91AA2294AE7F2F98553076BF2ED327CD31EE8981B51AE950C7727BFB072EE156EB565FD416BFE4BA64E7301F3F15E0B562C33142D913C7F034E7BB00CF9781C603D550E7B049475573077A0FD5782CA0C71B0BDA8F81837AA0B1416BCE04A8365112F3D4540435AD757D9B63DAAF8483497F19FF5B46496CEB7889ECA9CE2CD2637F2B74E9F27B5AED5CBF9C51FB87BACA9B16A2461771F1872F37F3E00A52B011F279B627CE42CDEE749DEAD7871BA
	04CE4A4F035F1C97676AC6DAF30542512024F64BB1B09E63F31D837D554BCD48E83C5FAAE824437CD7F49A879A31257BAD91B54DFD5E44731E35B1DE079EEC1CDD1332F350EF8274FC54484EC185BA3E12629D86BC6369FBFE21678168DB5EA8EA7711BEDA63DD48ADECG6885D08196GE4DE9079696F3BCF1194E723F67051E8C8D2FBE694B1620C52033A003A033FBF52E354836363277D9833B930668600EDG871A203EE892BC9C6CCD49C36B24A98FCC4FEB9B131D2BFB1B4C6BFEB6EF6B05D4F781010479
	EC5E4E26D47396A44CE3BEF263964AEB32EF75C28E403D0B6749A787455E1551A4ECF9F8907746BCF85F8AD05C1CDBD8896082D081521A05AE555E16D43AEC9645EAEFD8FF34A7961CC256E3ADF727233A147316B64F1C4764CC9FC2B9D7C0DF9E40960062967095G970056A2647C4B5EF3A9FD868BFC10110AB5DBC04667063B146F0D14739EEEB1132FF498654B043E9C0075G5BG4A6C9023GEE3B102F78DACABB6A578937E347BF33A772BBE91F491F391CABE64D33A54AE9B71373016BD4CE684B81D88F
	308D204C81F282389DC2CE4F357337E9C7BB605A2076B5911173FA43F1F7361CCCB9EF1E43EC5E61563BDB2FA6653C740475587D4C633426DD86FDAFGB05CE7BE44ED04F752AA4E6DC78308BB826FCDBA6EA4458D37323A1B611E738FF07AB8F6AEFE901AEEE34CECD9F375B572EFE34E1D5E21B09F8A74A5BF4F077B4C4F7363FD666779DBFDEFB1BC50B05E860A7EFB7A66BE6FFF25AF79F9FFCDFFF2BE737A4D79FC355F1C4F0D7DF3733939BF991F4CEFFEC9EB71E930E99A407B54BE7F223DCDCC6E9EAEC3
	16A1620CDD55D448473834302BC63773B303F379F48E2C111760BF0C4F930349F5D2BBE82E137AC1BC1F454263D10F1CA8F773E0295E974F946D1A9CC4B158188EBADF03A2D81E25372BF4BE6BCBB6FFE8904FCB230AD709725B81269B29C56826D58BF75568B4178CA51771BBC366B2BEB314DC466F8F251671792164B23EB814DA46170712798F1375BD7BEE61873EE8B8881E406FD106134BDAB1ECAEEB55F0F2D94F8C27167542F0F2D9AF8E2716754AF022BDD9BC3C744EBE9AE331189C231B10C352A4AE7F
	6BF6032D6DF1DBBFFABD397CDF3FEEAEFF46756472BFF5BD357CD957134B7F6757D34B7F427539ED7DA78E23DF1F5471C32DB3FD60A447E7F9716ED1152642639A6CB997B15F2C546F98B7C39E30822E9A40F1111D5FD9FD7C2793C84F87D58DAC5F9311BD246E924EFD48A766E64078EC0035GDB81CAAF09B365425328778E27B48A05C3C889CA0638DC5801F7EEFA155DA547E212DFE677895E0071BEE15EA546CF46A541D3DAG735BCD69C66FD4C466F57C039FE32ECBF25FE2FA7CE7B97745C131D7E7DF92
	7B77C1AB622CED3905875B441D481BDE717D379AF001B67D7B2F7B20F1DD1BB4816BDD0AAA5E96496FE45A266707F332154FDF5CA66E3E9499E92E05774DG56F6F1DFB279DBF19714792DA5E4135D7C6EEBFD6F671632F6163F9D6D7173758B41F59636668FFCE24DF9501F5D0E38FF7699F50B36D8C8D87D487A5F759B7B5187ABE674374F68C7FE3FEDB1765F1A51DFE0184FE4DB791110ED5B4AE5C4FDF6FE52EF71240349F40437E99B96EE2F5BF70B5FF33D69CBF25FC83D0D497F3500B8338D838DEBA762
	568DBAB87D959D33EB27FC4ECBBE0755B0E6A3405B1C4E368EF64E97E3CA48A96AABF83506173FDE3AC607D5685D55A96A3A7F1CF56FF0FB355AAE796E66B55D71BCF61FF14E07BE3934B3AEA743BBA8BE4B00E7F19116C5DC2C003EA3CEF1B6FEF8846DF3BF3CE7GAC87D88D30852038CB1CB37C1FD41394670C5EF0448909DBB514D3CC3E653E3B7B4F400FF6897F4B7A6113A47BBEC752FB56A3DDBC36F8DB7E5A426D58B2790ECAB407C3DF9AC09640AA0075GDBF5791E79241249578A6E8147C1499320B7
	4AC238BEC51E0823B139B2599687866ED036224B666700B293BC0B0D3DC3A2B6EAE14C0714DF48F9C47CB6DFB043291771BFBDA381226B731F0A04BE8FBE7584F17C42E1B91CC41F4BB8AF64CABCD72D0A166573BA4D0A3C78A4B5A66B3497CF987F37D3772BBFB47D3E05D047E9BAF93B6D6D47783769E69FD2E24F9D0667F179CEF5FC67B178C77F2FEBB09FFBFCA4F9ED13B1E2DE5BBCB9E2FEFED9B6B277B9AAFBA479B96A799163F7D396A3FF2160DEB09FEC329860850035G1B2E087868F263378AF67B15
	989B2DDEBF56D6786F8ECD2CDFADA517752C147ABFA1CD927DFE915634F090696B752804765242910A647F2710D0C7D1459F5058D0F19611B09ED459C7512CDE78B15DE72CAE28FDDC2206F039C5DDD16992FBC04910B1E7CD83BE4DB577791D45414B3FB346C171E32AC564604471991C5EB2D7BC4618AD5CE3386FEDGBC398AF99A2081408590G1886C88348GD88E309AE0A340B600626E5C42B200DA0036EEE13B0CG6E6BFD528D1E35B145052354FA00648590B5E0D4D250045CA7DED4691D87501954E9
	7DEB60789C34DC51F0C40EEAD38CCB3F3EF2DB7C15125C9FD6A9297DE10D4276EE3F0C05A4437D1D02F5F258670B493A5F7D23D22C635AE32EF0CC41C216652D3F8D60F793858AEE36777F127AC2BA481651ADEA8E3FDB549C1B3BE75B5BD8CFA06C6881BF6AE1B58762AB79B36ED34C370E515CDD574376E2062B22B89747B1DD7FA8C8F43F7D7446C749F48C515681A55415519BF09069157C7A9CEDAC39FEEF0D25566F7CB173F87B72586CF8FBF04CBC5E9E99B3469B43BDB60639468FBEB6200F7B060E9B54
	F19914A6627A952F960867BF4A97625BE4DCD04FFF142F890A9B6038E78D38C10E7B61987A88089C88C7455C6747508FFC0A2A32771F50B1CA88DCC657C78E65D109C8863EFF2A6362FC2FD451AF74BC4CDC1E77652A870861BBA7BDD2754040101F6D4DDF453F2A715A743C3B895A10BCD1E6BC9235876120558E8EDB0E47CF5CG4AABEC7058AD3393ED79212A088AC7B24D66D7FC07AAAAD83D106E9675025AE3D6AF90E206E3BC2D7C1490713DC57A2D61BBADB58B7FEEBD39A70E97E6917F71F29B73E6862C
	1F5DB3F75EE4B111651E9DA74F390DF1427E575CB471BBF8497CB7D2900B12FD6298E7EB2746DBFF73D4FD7EEBCF64DB480EF63213B9F3BB59019E59CE8A28433613FCF066C9547C8EA3G3543E69F61EDF84C776AF6987A09BBBB70525B07AC24201D6C76A9326A6D2116F012E27A6610E31E2892C1D3EBE43F93992C828B792B18614FB949DBF41C30A0127F14FCC1721D2444C06E22224A21F857DEC35735EE27C676B24AE079AAF8BFC765592E11D21BED384FAE2BEA59B5CDD107633E21115D86CFC12ABBA3
	B1EC70E71981EC9F2B783DF19F5BFA2FA7E9BD377E9A7F0EFDADF19FFBF98A6DD75D17DB686C937B4707D3A76648EDBDC1C9D5B5C99DEB8EF9B14F35CCE9F23C26D9BD0574E3E28C6F645FE127106F9B06B97F8BD0CB8788C6522FEBDA91GGE4AFGGD0CB818294G94G88G88GBBFBB0B6C6522FEBDA91GGE4AFGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG1491GGGG
**end of data**/
}
}
