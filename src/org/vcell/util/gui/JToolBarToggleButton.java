package org.vcell.util.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
/**
 * Insert the type's description here.
 * Creation date: (7/12/2000 1:35:57 AM)
 * @author: 
 */
public class JToolBarToggleButton extends javax.swing.JToggleButton implements java.awt.event.ItemListener, java.beans.PropertyChangeListener {
	private boolean ivjConnPtoP1Aligning = false;
	private javax.swing.ButtonModel ivjmodel1 = null;
/**
 * JToolBarToggleButton constructor comment.
 */
public JToolBarToggleButton() {
	super();
	initialize();
}
/**
 * connEtoC1:  (JToolBarToggleButton.item.itemStateChanged(java.awt.event.ItemEvent) --> JToolBarToggleButton.updateBorder()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.updateBorder();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (JToolBarToggleButton.model <--> model1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getmodel1() != null)) {
				this.setModel(getmodel1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (JToolBarToggleButton.model <--> model1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setmodel1(this.getModel());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the model1 property value.
 * @return javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.ButtonModel getmodel1() {
	// user code begin {1}
	// user code end
	return ivjmodel1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(this);
	connPtoP1SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		org.vcell.util.gui.BevelBorderBean ivjLocalBorder;
		ivjLocalBorder = new org.vcell.util.gui.BevelBorderBean();
		ivjLocalBorder.setColor(new java.awt.Color(160,160,255));
		setName("JToolBarToggleButton");
		setBorder(ivjLocalBorder);
		setText("");
		setMaximumSize(new java.awt.Dimension(40, 40));
		setPreferredSize(new java.awt.Dimension(40, 40));
		setSize(40, 40);
		setMinimumSize(new java.awt.Dimension(40, 40));
		setMargin(new java.awt.Insets(2, 2, 2, 2));
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the ItemListener interface.
 * @param e java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void itemStateChanged(java.awt.event.ItemEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getmodel1()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		JToolBarToggleButton aJToolBarToggleButton;
		aJToolBarToggleButton = new JToolBarToggleButton();
		frame.setContentPane(aJToolBarToggleButton);
		frame.setSize(aJToolBarToggleButton.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of cbit.gui.JToolBarToggleButton");
		exception.printStackTrace(System.out);
	}
}
/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == this && (evt.getPropertyName().equals("model"))) 
		connPtoP1SetTarget();
	// user code begin {2}
	// user code end
}
/**
 * Set the model1 to a new value.
 * @param newValue javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmodel1(javax.swing.ButtonModel newValue) {
	if (ivjmodel1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjmodel1 != null) {
				ivjmodel1.removeItemListener(this);
			}
			ivjmodel1 = newValue;

			/* Listen for events from the new object */
			if (ivjmodel1 != null) {
				ivjmodel1.addItemListener(this);
			}
			connPtoP1SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Comment
 */
public void updateBorder() {
	BevelBorderBean border = (BevelBorderBean)getBorder();
	if (isSelected()) {
		border.setBevelType(BevelBorderBean.LOWERED);
	} else {
		border.setBevelType(BevelBorderBean.RAISED);
	}
	return;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GB7FBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359A8BEC9457B1EDC9C49514D009348E0AAAC4CC63A6EE642834252993B9A9D5E892A98881A5AD3428D802C6A4C1ADD1E90A1AF7F7F6304141861CC08BC99CBE098946789B0CED086D330D8DF67067CA2E85826B3B353D30F7FB6C6EF1F7BEFFBA735E3E3D733107A1D2AD8D3BBB735E7C5E4C3CF96FA0459F4E4935590B89316592636F380D100C7D042CD89BBC41F1F51FAC49A7F1FF9F816CA0FBA2B9
	706CGDAD1A7G897873607BA2FC0F1EDE123F9B5EF711203F3884DE1248D97FA1A1357B1FFD7E56F2DE384E65EC215FF3C385705C8EF085F078CCC79D481321BD86FE1A0167E03393B2DA0AE316057699388DB0A68FF0F5GDD25EC3C971ECC013B6B6B0CF1973F13C6B6BE2F5A5FC1BEF1BCB9ACB4662EB31EA564CD5B4C43A86B9FD4CF1CD3825FEEGB45EC17E3667GBC9BFB2E8D1D728CC8FA79D0D02A2FBF63D29439C5D0DD4A5010AC3684F5DD711302CF11CFFBB80F4EA3E4A970C82138CD91645D836F
	43GF7FD4A715EA862D7427BC60002A35C1E131FB49A7A3A23BFA3CB2BFCB905C96CB9F8045951F5A4E6CF06EF157D1F54775BB47471F4202583E481E4836414AD49BF8830172E79CE75D3F8B68F68CE4567D37C4D01C00B6CD53B952FA843FBFDBDD08CDC1F68D1D4AFA1ECDDF342E5967A5C8A583C1DF7BC0F79A42D1A2FF1FA5F63E4650F3FEB5FE2611315E9D1FBE39973052BAC6693A67BECD259FA5964981CAC7BCB92AFFB5F69650EDC8B59F5B54B9D538DBE8F4549DEDC06EBAD0F60DAE742BB4E43798C
	9F22786223B13C910FB4E6703B94E8B30E7258F0EF673AF4654CA5C5155F3374C34A33B36C9B0EB29D724A93F5D9C1632E26BCD117B5945FD11E284B55A85765A25032GD8FC9587B1BF8F9EDB125F84608688G4C84C88748BA46E36C02FA6CB6E32CC7D0751620A4FBC5153039455AFB7094433AAAF47AB5DD70FB447302AA8983322891E34C7B9A7AE0E0523C7DB476BDA063346897D5C11794BFF097FC22AE2A9A9BF3C45B01E3D411D2DD12CF84813EG61FC2B35DD701485CD7FF740AB68E2EC8423B7E838
	A6B7047340919840BB73CB738D7457EA30FF93C0DE857743CFA93F33226A97657A7AAEC539968C385092622AC0BF8F505A318F5EEBAA380FCF069017825F99A61FD7351DF1FCDAA58F2AAF28911EE36A884ED9886333ABF85C3C6666F1537A4E0FC8593287AC63A69DE2F8D3850B17224A447C9923FCD1373ACADE5FF3C65CF7184FE6AD2E304EB904EC0346E43C7F35E5B8EEC14BB51E4C4F0F05F14D5CE0178EB02B127B3AD4AFE1315BA2E8A20F56F3AA841A680DF91E69797BA82F7D3BCD5D7FC4F16940EF29
	6933C054FD9B7A45436EBB30194978769D4B483D83994CB79F84F1DF92EF08FE3DD58C08FEAF3CE8866DD090634E485BC1451CF30462831067CEC8AC4D44D786B19785DDD7250120AE760B3AAE7907E27493D416969C8844CA84175594C45D15906439B93EAD08B962D17CFE11AE12B945201F26B9AA4A228F14F6AAC13F4E705DB730FF39A6C60C9A51FB63ED02B9AE87315E301EA0C35806B628128F169ECB96A92A427C0D040B63FC047D8A76B61BABF98E068E709CBCB872C312F5B9E0375AC7D2665DEFF7D7
	3178172BE2B94874E989D96B5DC16B040157181E4BAE20BED64D0A034EF10C23EDBE2C4315BC8F32693EB383644E81D8D04573E0E188693C66988960D4E4193997E81B288F1E9961BED88C5F6B2A188FE2B173C4388857D13C9E942114E371BBEB7AFAC1F8E7826D3C61F7C64F8A235F65383AB9DA0DB2770E72BE31291A55CEF7B52BD1B2BCBFA038B763383363FC5CA2033E3A1A69372F066948FA38BF52BA0C71B62D062F5DD8BB6F49E6DDCBA31905E376ED96EB07304E6015D79BDB3B15877E6AE07EAD2775
	2083E86EDA6E5B06C87C3E502CE90AC722DB12E177AB117835E53857A3DB61B9A8291A5E89099766BEFAA3027A621EE5200DBDFC9D6DB3F05DE5101B8A303296710722986F68AFE627271A5BB9F3E49E3972406C24F616FC466CEB7AACE6E75749DA8713776898179786FA86G0B3906E8AE0FB9033E0B540E238E7A3024B19D7E5C5CE448F8717139E4411699F62B7EF77811947BBAC3F6517138FEFE4DAAFBAAG53C39F673D4B959813F21C6B713BF16CC9A4DD741563BF7DBA6C6F4EE141BFA4FACB2F8AB704
	F2A124175352D65E8974B6FCBBEC647F9855A7C8FB029685D3217470F923D71C3BABDE7746092FACF51FDEB8ECDFEC683CA9CE7754252B6C8BGD88DDF9B0E5F77DA6B58B83771146B2C774F3BAC7033G17861099C7E371689E43FCDD8C7875GB9A7A097G9ACF70589C9B29A6D374EEEDE1E8297C025CBF29B8739EAA0A7E06FAEAFC9F276BCF6BA961FB55EBA35817DFBC113C9F305E63B653F97A9D4CE3EBF4783F7167451C9DE76C0EA4B11EEA701EFFA236C64CEF3689745BC6409755AF49AF85E88238D2
	4F7D1699AD1B4AEF3C0FB59C46EC4A981B6AFCF4D77DE4FB593C27271C171AB00F5971A5411A18893495G9BG8A9A1664D7GF481849A38BDDBC7DB26322719EF5EAE45FCF5A6EE40DC5F1171C4FD27B7CC564F5A4E69B74DABCF3433414A4E97ED54CE202DG58GD05088F682F481849A391D17C6CFCE996FD88BDC0A93F09D3097D918E874737934EE4F845E29G8CF7560B38C5703D4244E5D0DCB6FCEFB6F173AEA12E6864127C32139C779A6D3F1B605BED628AC791B78A5F33CCDCB6452541F766C9EE57
	1531643D5A5018F52F669B336E5534319D8C8FBC62CFEC1C9E9DCB564B3DCF30FEAE37E3CDD621F7018395E54D6A2A987E08793EAF68E76EC76EDAE23E18EBDA6040FDE311E9634E71AA0B35EB73CA3A22F2A6AED1D04F8D8E1A815A9F90BDDC6F7C0964BEAA1A307651FB9356BE5AB7F1EB9F9D1C38350F566A6F920B7E758BB840923EEF2E256B03E3FAF425275264AD1064F68C93EBBB7C846F4CB4A528FA44C4DD03E40FC90BC5BBEE0B288E9BB3CE676B02BAA45EE46B5DF4BE23A51BFF9F41BEE3C072CA2A
	51D1B2BF7C7A3DC26AC7CD93B51AF82D02AE9876BFB14E6DEF5395E74C7E653664762F32D95B3F46165C7ED7ECD35B7F97DBF27B5F34CDED3F431EAC9E182DA5916C5587E83781756594667971883FC34D069C588CD08A7846D32C87E673863C343782039FBA057735F2BBB1F9BE67C51F7B0430648B7A7A2591116C799C797E01562355B0FE7DA94EA773925A97D045C1D1054E1F0EA64678FB3F22F74970BE7CB93FB7FDA2043C87D54187E650A4ABED423139D12E73AC981B863088E09DC0DE93177571A855CB
	72A768F50A5635G0C9BB5477EFD141EE14037929CC2180D2F1EA6266F0B9C6F447B55489F569BDE0E709EB58D782DEE623ABF77AFBCB3A45C7936C0BC492C5BEB9185BFBFABBC9261E77EBD4D7CDEB745C36FFB61FB98602EE65EDB07BF663DF57A8F6612754EE58E2BFB6A552EB1FBCAB35B43B21BE3FD47C25FAABB63735205787E25E836EC37D970213D25B1BF27A5460779E8E3E7AC8EE6DFC2FB7DE228446CFCDB21B27B71D22B3426222C242662B06F1D660462E557ED7D26659996214E1059E5BCB73FBB
	5B107D5559186CB5A337A31B797A88BDBB212CE940B33385F17F09461F3911E7AFE1BD81235FBB090EB9F6F8927D29C9747C1B663FBE091E9BB71F796305C3FCCDB73F10C1641FCCCB7A5BC30E13792154F84E4CFE50D6D798F5B01FAC6A0A796465515B71896B074448D4FD5F9527D59F25CDB96F0304EFB6AF5DF25E28B3F98F4E6E168B3C1893B31D6CEE59E6625F2578076270ACB73F6F613F4724812D20155F07BE560D75A3G5FB3GD281B281D682ECEA65FDC0CDC785192207F3A901AECC68382D1971FF
	698BDC87230F69B8844F7342D54BCE628C2C4D39012BD04CDD429061BD494F4FE10C9634C1ADEE637A1CB8F3A4999FC07628CAC0D4758843529B8F435795512F77DB49B3DBF8CC4EFF72D132601E5624E7780EB636EE434633F44D0336D84FFC2097FD1D823479GABGB6G64344399311D5B7670D9631C036AC3D7A5F80669AD055934C9E2A806460D006D6BD93BB0CFA43FAC79C5A73B25A73CEF7EA52D2995A023351D5F196E7492B38677463D27FA3E6E5D706DG1371547FD58673637C6E64BD4BAF3A2DFB
	16E73A2DFB4F673AEFFD177AD2F7723B54655DB75F25BEFDEEFBBCBF9622866DD7670A69BACA3AA44852883D366A07017EA196C3D29F525D300EBAC08AC0BAC01699BF1DBD7BD97CD844CE1BF7887BAD7C55C767724AFA137B293AF76A5F0A9AFB715EECC051F545077CB93E259757DAD78294E95C917722FFD5E9E8D8E7C38DFCF7AF4627AC8ED2B42B593F0D205FBC0A2C205FD83FF20E1E57D6022D6BCCFB2F77A557BF5CB7357E5F6823F701A0579589983D63BDFD5883A903031AE87A695E3EA293572975A8
	1A04AB43761AB7DC04703DA66A7910A46CB5CEB4223472330AB2042A5A5A4344787F8121FB2008243FCAF2C10C2612C2F38A28AB6A5A6A9B55750EB58FBB6CA427133C4DFC5CC9F250D11DA4177A3113B84047E17C0D4D9E8F40ED674D1BDD73FDAF7FA67DF2EB311D5801613048B86406A42FBECCF914A2E857617461C87225126D138D334D5B7D2D227B2B03F61257CE5E9E94644030GBC690DD49759B6C05594D5982B1322AE1CFB8C669E23F39B3A085D2369E4EF8CCFD71CD17B8302C704A179DEC13DC6B9
	20AAF997C87E20BAB4C0856844FE217D820825DFC85E5AC5366A43986658236BE4F70CF50FA06195BFA5B4D0F349DBF3663C9520FF66DD56C4FCBF3669EECF52FE4C55E9547A4E443B2CC29A2729004F6A64F1FAB9F214A45F7B7AFD02AC6B02FC2D596F45FD30A5220B317AD2BC027CB5BE46A0B25A5E91547BEA5C1C7F81D0CB878804A018FB1D8DGG58A2GGD0CB818294G94G88G88GB7FBB0B604A018FB1D8DGG58A2GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4
	E1D0CB8586GGGG81G81GBAGGG578DGGGG
**end of data**/
}
}
