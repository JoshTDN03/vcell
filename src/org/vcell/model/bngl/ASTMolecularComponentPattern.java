/* Generated By:JJTree: Do not edit this line. ASTMolecularComponentPattern.java */

package org.vcell.model.bngl;

import org.vcell.model.rbm.MolecularType;
import org.vcell.model.rbm.RBMSymbolTable;

public class ASTMolecularComponentPattern extends SimpleNode {
	public String name;
	public transient MolecularType molecularType;

	public ASTMolecularComponentPattern(int id) {
		super(id);
	}

	public ASTMolecularComponentPattern(BNGLParser p, int id) {
		super(p, id);
	}

	public void setName(String image) {
		this.name = image;
	}

	public String toBNGL() {
		if (jjtGetNumChildren() == 0) {
			return name;
		} else {
			StringBuffer buffer = new StringBuffer(name);
			for (int i = 0; i < jjtGetNumChildren(); i++) {
				buffer.append(jjtGetChild(i).toBNGL());
			}
			return buffer.toString();
		}
	}

	@Override
	public void bind(RBMSymbolTable symbolTable) throws RBMBindingException {
		MolecularType molecularType = symbolTable.getMolecularType(name);
		if (molecularType == null) {
			throw new RBMBindingException("cannot resolve molecular type '" + name + "'");
		}
	}

	/** Accept the visitor. **/
	public Object jjtAccept(BNGLParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	public final String getName() {
		return name;
	}
}
