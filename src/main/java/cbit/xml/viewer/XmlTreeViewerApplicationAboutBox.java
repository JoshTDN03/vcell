/*
 * Copyright (C) 1999-2011 University of Connecticut Health Center
 *
 * Licensed under the MIT License (the "License").
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *  http://www.opensource.org/licenses/mit-license.php
 */

package cbit.xml.viewer;

import java.awt.Dialog;
import java.awt.Frame;
import java.awt.GridLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
/**
 * This type was generated by a SmartGuide.
 */
public class XmlTreeViewerApplicationAboutBox extends JDialog {

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == XmlTreeViewerApplicationAboutBox.this.getOkButton()) 
				connEtoM1(e);
		};
	};
	private JLabel ivjAppName = null;
	private JPanel ivjButtonPane = null;
	private JLabel ivjCopyright = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private JLabel ivjIconLabel = null;
	private JPanel ivjIconPane = null;
	private JPanel ivjJDialogContentPane = null;
	private JButton ivjOkButton = null;
	private JLabel ivjSpacer = null;
	private JPanel ivjTextPane = null;
	private GridLayout ivjTextPaneGridLayout = null;
	private JLabel ivjUserName = null;
	private JLabel ivjVersion = null;
/**
 * XmlTreeViewerApplicationAboutBox constructor comment.
 * @param owner java.awt.Dialog
 * @param modal boolean
 */
public XmlTreeViewerApplicationAboutBox(Dialog owner, boolean modal) {
	super(owner, modal);
	initialize();
}
/**
 * XmlTreeViewerApplicationAboutBox constructor comment.
 * @param owner java.awt.Frame
 * @param modal boolean
 */
public XmlTreeViewerApplicationAboutBox(Frame owner, boolean modal) {
	super(owner, modal);
}
/**
 * connEtoM1:  (OkButton.action.actionPerformed(java.awt.event.ActionEvent) --> XmlTreeViewerApplicationAboutBox.dispose()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the AppName property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getAppName() {
	if (ivjAppName == null) {
		try {
			ivjAppName = new javax.swing.JLabel();
			ivjAppName.setName("AppName");
			ivjAppName.setText("XmlTreeViewerApplication");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAppName;
}
/**
 * Return the ButtonPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getButtonPane() {
	if (ivjButtonPane == null) {
		try {
			ivjButtonPane = new javax.swing.JPanel();
			ivjButtonPane.setName("ButtonPane");
			ivjButtonPane.setLayout(new java.awt.FlowLayout());
			getButtonPane().add(getOkButton(), getOkButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonPane;
}
/**
 * Return the Copyright property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getCopyright() {
	if (ivjCopyright == null) {
		try {
			ivjCopyright = new javax.swing.JLabel();
			ivjCopyright.setName("Copyright");
			ivjCopyright.setText("(c) Copyright 2001");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCopyright;
}
/**
 * Return the IconLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getIconLabel() {
	if (ivjIconLabel == null) {
		try {
			ivjIconLabel = new javax.swing.JLabel();
			ivjIconLabel.setName("IconLabel");
			ivjIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dukeMagnify.gif")));
			ivjIconLabel.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjIconLabel;
}
/**
 * Return the IconPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getIconPane() {
	if (ivjIconPane == null) {
		try {
			ivjIconPane = new javax.swing.JPanel();
			ivjIconPane.setName("IconPane");
			ivjIconPane.setLayout(new java.awt.FlowLayout());
			getIconPane().add(getIconLabel(), getIconLabel().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjIconPane;
}
/**
 * Return the JDialogContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJDialogContentPane() {
	if (ivjJDialogContentPane == null) {
		try {
			ivjJDialogContentPane = new javax.swing.JPanel();
			ivjJDialogContentPane.setName("JDialogContentPane");
			ivjJDialogContentPane.setLayout(new java.awt.BorderLayout());
			getJDialogContentPane().add(getButtonPane(), "South");
			getJDialogContentPane().add(getTextPane(), "Center");
			getJDialogContentPane().add(getIconPane(), "West");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJDialogContentPane;
}
/**
 * Return the OkButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getOkButton() {
	if (ivjOkButton == null) {
		try {
			ivjOkButton = new javax.swing.JButton();
			ivjOkButton.setName("OkButton");
			ivjOkButton.setText("OK");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOkButton;
}
/**
 * Return the Spacer property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getSpacer() {
	if (ivjSpacer == null) {
		try {
			ivjSpacer = new javax.swing.JLabel();
			ivjSpacer.setName("Spacer");
			ivjSpacer.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSpacer;
}
/**
 * Return the TextPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getTextPane() {
	if (ivjTextPane == null) {
		try {
			ivjTextPane = new javax.swing.JPanel();
			ivjTextPane.setName("TextPane");
			ivjTextPane.setLayout(getTextPaneGridLayout());
			getTextPane().add(getAppName(), getAppName().getName());
			getTextPane().add(getVersion(), getVersion().getName());
			getTextPane().add(getSpacer(), getSpacer().getName());
			getTextPane().add(getCopyright(), getCopyright().getName());
			getTextPane().add(getUserName(), getUserName().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTextPane;
}
/**
 * Return the TextPaneGridLayout property value.
 * @return java.awt.GridLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.GridLayout getTextPaneGridLayout() {
	java.awt.GridLayout ivjTextPaneGridLayout = null;
	try {
		/* Create part */
		ivjTextPaneGridLayout = new java.awt.GridLayout(5, 1);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjTextPaneGridLayout;
}
/**
 * Return the UserName property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getUserName() {
	if (ivjUserName == null) {
		try {
			ivjUserName = new javax.swing.JLabel();
			ivjUserName.setName("UserName");
			ivjUserName.setText("Daniel Lucio");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjUserName;
}
/**
 * Return the Version property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getVersion() {
	if (ivjVersion == null) {
		try {
			ivjVersion = new javax.swing.JLabel();
			ivjVersion.setName("Version");
			ivjVersion.setText("Version 1.0");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjVersion;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getOkButton().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("XmlTreeViewerApplicationAboutBox");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(330, 160);
		setTitle("XmlTreeViewerApplicationAboutBox");
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GE4FBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BB8BF0D457F5340506CE18B11D4AB5765006F1080BDD59D19A1C50163824219E3BA6092D601ACCF0C6450A63B8A4D14654E5922573349235E4B0DFB910D806858488E9D92DBEE0D94820AFC830A0D9DA50A29624275DA7E9515BFD4B5BA7E945276EB9773E7376E975D68246E8664CFB771CF34F3D777C6E39772D0442BD8BB664588A85A1E703207FFD14A388B5B50210793D1D4788D7F3A83DC0B07D
	6D8558A63C551D874FD6204D3B1ADE30D5983B118FED9F346DD7528BF6427B8E61560DA5C761A549B8F30176749757AD1DFA9C5F3BB44EBB2C7D2522CD705C8C5087B8FC269E42713FD934CB474F547184B9B6982B84F9520B0AF4DC967064834E8D50D74279E370649318D5DB2373797EF211306E5FD55BFBA847A413E0155EB7DBFF5A055F64ACBC0CE37D164D937BD4C3DB864045678A79E528583A0E6141937E7E20660C05E467E8D09A13545ADAEFC8762812F411B59BA291B96897352092EE68D7C634C6A5
	8672CBD1F6530779CC16A03C81F2D3996E9FA2B8DEG5EEF81241492FE7CBA623360BD3F8CECD3C6EB7C64D01D3E866F4DEF8AABABC3F9DB122C31260C2F2D2FAC3E4655432F5A7E406CF1348775BE9FE84BGD6822C875865C8AF2881780079C15D25D2F8B674EBCDCAA8844B09C49A6500FACE89C8B23C575682C547F5CAFEC58D888237F54E078E0B79CC853C5F163B6E47F532280A6C1E5A7914307A6BFFEDFB47C2A72B975D34F5B838AE069CF11D7031DB130EBD5BB151AFA70E5DAD18470EFD75655C8D96
	E3274CFFB9F73EAEA74DB4F60683EDFD10597AC5F84F517D0363DD8CDFFCA40E67BE3A04798C362B01B66F887906F7B34D451D7728303562A1CBBD4C7B57B9366CA3FC8E054E44397C020DD96FCC1C4BFFB3FC07B3F1AE1FDD27397481EDB9G772F93BE0C5912727402E6G9F008610821086303C1CFCEC562572BB74318ED1559AC702F2C0D2855E77C44F6F61A945B4D5EC8BC7B5B16C17AE0AEAD06C17252820731C6EC19D74CF6867E63E6F07B1CECBE1C9E5318A52451024C9EA1473DC685906BC2A44281E
	E0C80281C2910164DE695981CFD90CEA97A281D113629C1CAE7520CDC6450BA0918440BB574B709554D7A62CBF9BE0130B741041641D155430A457563A95E5F8A462411588BE976A3917658EBB3C5738C84703D79137G5ACB8CB9BBAFEFB749E98E7AF17A22BACEB166380EF9F9050BFC6617DE721966771E949CAFBFE869B379FF73F26EFA9777152D950931F30C4944F97176B3916F9D446E8A17F5DC5DD92EF8650E46483D87791B8DDB3D5C0B362A0175FAG348A52F167E5BB7759C6B1AA1117362B60E0D2
	A02EF1BE4F3718EEF20CF97F0E3567D4102EE6DD77DA687B7382BE465F32B16ED597538157C92B8F77A1E9D48AEB4DD2C48A8760A52A535AFD68EBFA1C8EA8C61F8B8C9F0138EE02C00A9A784BBE0CBDD15354E07F08A6F5C91A968C8F4669FEB6D6F424BF92CF89B456B59F66DFE58C625A60D7FC9893FEA59C1618F10CAEBA7DBA0BC9C916C2B069A6E5A42CF17C5895345530B42E67041BD77ED7401816C7B03F703AA0CD5C08EBD003A1B0B926A8A13F9263F57443DDA69DAD86FBE3FD339A1ED99594FBE37B
	A9760AEFBCAEAC6B0D582C760EF9DFF94056D149E3A5D0990FBDBEA7792A755CD5169BF4FC144FB53B987DF63AEA057B7EE691654E0471668124D5126F7F72AA52A93F68CE5F2448B2D72D21739F75EEC59BC957C7A4C84B18484E9AFADC533BBD01F6D157A9273F590BBA15CDB950DB05BAF52AD487BE877349G902AF8BE2C2F62FA616B6C3C0EF3E4355AB5F1D40CB923E360BF3535E71A03222C8C8AD40FE5301C0AB132300A6A2EEDF6DC77EAE82F8358D4CD36FA69BD2A3BD20697891E34153949EA4B62EA
	BE17566A382DCA660C65F23DFA7BF14C59C01BD7CDBA157A4C393FA19AD57CC1E692DD9F052259169C778771DDF88E84552856864196A35D6D91F13E38AF69E8FD1F6ED6E91FCE05F1B381EE9DC53CFA3050B477A240B5838C8164B2F94F2815980B4C38CE7E68105481C58DC90192542ED39C531CAC6E1D8D0C5C026F0749960F6D44F9860251089215CA8EDF243A69495D757A18AB1EFAD44897E7592C6A58B9BF9B34ADBF4A753876E8DC1FB5BFF855668660796DA72CF62BBEE63D1F34A660FD5066B54DACE6
	6B483144DA6781061FF1AC315659E9A79D4E855A3AE3348F7F440F316E7D88768800B9G8B811683E4FEC4B67EBB31CA18264EE98BC3799196652E89090D6A0D7EDC1E0B7436583F01F211C0F97E0ABADD7DAC54CC54856FB7BCED3F6204FE5C36DB3A1244D963082631DC40F3612F761BF3E19D486A831889B08F004762638773F539E9B594F337CF19E3EE69165B360DC9E26E8DFDFE799F1BFCE44E5BFA4CBDA0E15EE885DAG609640BC0025G2BG32BFA69B3D59FFFCBA9BB16776A85C531B92F7943DD64B
	E6F92528967292G47F56DC61C875A3201FBF88F6266C2FBE1AD5583DF34631E13E6349FE4ED5497EFFFE83F133A67EEG471A688F47BE77B14C35073E0F7813578B7F65372E97FE6B372E97F2825BB89EE418CF89C4AF88CCDDCFEC8BD855939F32F97FD4FBDF30289D4E43E1C1DF578EA1C5AD50F9DAB465DC05919FEF9D5EE59D9F9DA2E4FA9E9B4F5A93E38377339741A61935949B070AA9B632EBE91F7A56814CC55547538B5CG0163649FCF9D340A65DB47390D679E1F1CA3F90C7CFE90770105C0DF8630
	8AA08BE0EB1D113F8253662F165894796BE1A9393D97C85676FECC42BDB62A0C28FEA95126CFCA3B8CDABC8E5BB4A9042661BC5FE07DB5D19D14A6794437D8FFCECB567FD9A9195FF03B6F580D3E911086449199DC92B6387608FE1C847CD09D2BD9F6136DDCF5F4177435B14CE383F06084F1DD9149AFB8BEC15EEB3B4D3E108A7CABG5682EC7A04766334BDA8C38BEAB27A1F76895E3D1D446174B9FD778656D6FA25838B53D8CC04A52AF97E47CE73D972897952317D6C2E895A79A74067CE10AFB90A93FD29
	66C45CFF5CA7A67B925FBFAB8E223C3E93097B6AF1060F1CC85CD73FF300765599C04BBCC179715F581E50FAB23D40FB12F02507A80F86CE12EF6E9ECC6EDB87862DFD2BEC50BA17D48CCE1DCBBE9E1C5AA7DAF6234ECC616E6C8E06834A981882EFA8342833392D2B233D2B25377DFCEF139BDE78DE37E04CFCF7D9736E1FDA1E8590E61F64FA1F2FBF335FFFA4E765C9D64F6CB657F2B81F86906004A7273F3F47CC47F5C019E6221F1EC047F9BDE8B35347A750B7187A73B53CF000766B6C975284796919C96F
	DF0B6A795C6B75675C4C07F3B2FFF4A3174B797EE533AE36BEA25BF2124809697DE756A75EC9646ECD745DA575F1FFDDD11F4CF71FE03110D14FFD749D837F8D06DFEF42F35F2DE3F8ECEFED007A2F017C3409656CD550DEEB605483643BDB9BA946BEBA087BFB1D51EEE0EDBC5B70767387BE6F3DF833BEDEFC3FDFF3DF4648B5BDF7882B593AB488C41E330E62D51A505108FAE9B834EB8AB9FCFFDA93C15D4D837E450D9477B343E5703CA8DE53F72316C0D0D3D4369D8132C3D5A09BEB639C4BCE183A1FFE7B
	9D7253457F740430644F1B135615ABF5BD2D531FA52FBD1C931F13DB45F997B7C11D8790G3885B097E0D1934D7105B07AA16E0EB00D86CD937DC36C94C71BA69E4363E85C8C38EC85D38A55A74A01E46B8489E7A0573477DF038D4CA36259167B5A9F77127FADEDA27F4B5BCF7E1751C47E15467CB72FB93D20884055CC78258C0FE741E6408D9978467D68ABAE1DBF194D722620CD85FC0C4BEC8CFC5FF0877EF5AFFE89F9FEAF5E65486238B22289C2E6B36AC7AEA6BF1C836D057A9AD6684F7A9664790B8376
	A9E4BBDAB8AF9FE327007AEE9F6647A16EFB4FDDB167C8FBD93BE50EDCFF6506ED36AEAB35A51E5BE6046D395CA7FE9AC11C318FF177265ABA02F9BA988EEAD08584EF3002248B9843035C373E2DA1BD8364E68358CF2597D483341EA21FD52F6F63BEEB612FAD01C10976B2639ECFCD3E7F7A54696F68A5956F887A9550D2886593FED8C59F501488C3F2DC04555AEAF0F0C8632CBAFED4C5DD4B52GC3F3FB366EA5FB86E0ED37CEF1BDAE541FCBCFA14F877B274ABD5C0E7F994579F1AB72DA0A63FB3730F802
	45A116637A593DDB1B1FF3729A5FF7486A7C1BF7BA3DE097G67F950E5456382FAB3G5FEBD20A695B248FF0A927291E2C2A1CF08E479B195A5AD332B266565DDB60F55ECB2C7F8A68178910FD1A4E5931036413290FBDAA3426DA5FEDE5F8EE5B8ADB396EEADA63BE19B57C2A0D2F7D3183B81FAE98F2C8201AE0CCA259C5FF7FE521E8CF3DED1B05EC84CD173940A4BB1EEB9F99C57D2C84DA96C0E1DBFA0183209E405BC6FE1B95AD91126F87DC994CF7D5B1C877244FEB49FD77C5EDFA5F7D21466E664067BC
	63917D5C70E38DF30BB2B090150C98F9CD5BEA605A229DCAB408D1496D9A59CBF615E1AD8B5B482E2FBBBF18EC57C6856FDCF54BF23B7A7731BBCB68378EE05399326B35E1336ED11FC96FAC4F68F716E7A66A1E1F99D28E5119E17699BAB3741461184B203D8AA06B8C1DD53F6BA25E7C33445BDF493EA9C25B8B90B9CBFB49A3134E97F736BFAC3A6BFE3C06EBE1670C59E7F98D17E3604FB3FC0A894F6D720A91EF8B001667B63EED4650970720BD93E0BE40E20015GD9EE72455808CB18663C6CD1A2EEF0BC
	59F44C50FDFD5C8E4F3CF320D300E6G9FC084E0B640FC004567E81CFF99194A673933A47A7C17C7137B7C9323537B7C57C72D7375BF0ECE4E574F0CDA676B652366FC2D1FB7775D1BBF545EF5BFEE77D7D85C3CF8AE519FB2F8BC1DCB740760BE7207B70066BECF7EE03B097E10866D95GD9G796DD09F81D437131D3A472A2630D3272230BD848F6CE0A7334974B5BEFCA8F10D2D6D719A4B571E6CBC73BD962711F63E160D86FEB5434FB561799A7B989E5BE9C0AB6C20D8CDF7A50E9F6B080FB927A359787F
	41E2FFC1C762DDC0864327F5A45E858CD552DD40B22095FFCA631F4592D8570547747EEA717DB83BCC742F376F6B987A6F94E249E372FC4C7A8E4393333E436809CDFD5F599FCB7E7DB4981B7C7D74AB63496716BABEFD3EF8FA5CBADF7C737864FC31EC5CBADFBCBBEE4E977A59CA172B9A97329C7F52B86EF33C36BFA70645C136965DDF7645FD67F5533B326F7E7B516C7BBA86DF7B461B49ED357D6674367A6026352D765E1CEC2B03B72DED6538E93695BFFB269D2273686CCF69BC3A250C4E2329C61C2FAC
	433349AAE82F8590BAA18781B8BA093E06516B215D87B083E08140B203BED0E625E314074F351F4673944A2677424E09794B51E9FDFE65E3FCE6B9861DC7B7A47053FBC1827F46A4F6643A79190B741551C97A5AD5C97A4A6B22752E2E44FB951751FE1D35DB0DF63872DEFC8E655D39DFFF611E46385373BBBF4B7D50B8C38D415CE6GAC82D85AE5BE1B9FAC33CFA1E7E51779EC7EF8914E9D76DF16B8B8AED00AB87A459647F9BE42DA3EABA27AB109F05C171A5116CDCAE41C793EA1333E8B6DF3A14A33917F
	3E3E53E13EB3FD230B5F27EC725077775FD9526D867D35A3D674EA037E3C530A5EEA503FDAEEC577811D6BF5FB8569B562095FF94C761875DADEB915DE97F84CFA3D90C45D607957AD76CBB23C6BFA28CA1C875EA925F968EC1BD3C23555F240E5FB688C747DDE0B336DE9B598B04E367C5C51D6C2670E6A8BF46E881722CC995AB38166DF20EFA8CDE5E853A6893F379B5F6A8612FC2BE34B60E31CF750980BAF50F9277A8861569A38BFBA89D7FC11F0C2B961FC866EF58317F21174D0DBC1FAD881383CEEDA4B
	984357C15B83A0F753DA5CAC5E3B2528264F310AFE53B2331BF240BBA577D6D73FFF0F7D4ECF683734FB6ADC72E2B77D9EE38D33D7E6F7E2BD7EF3064F6ACE2C4735D252D5B6507A3C345EAE07553C17FB79BCD6F9A74F07777B7808D53F35BA3FF0A9D93FBDCE2BFE05BAFFC952FE9B4A2D7A55697C9DC97B7D5C32DFC0670FA56DD7DFF10F763C6BFE3A5D184F4E3914E84FF58CBF6FD222BDEF9B3E3F90E879BD06BD2BF0FC39E7623AE6686D141E496B657B2544F242A220AF6921BDF4C7A962D6C0BB43107F
	867E4CDDDF6B2FCD6FB7CA6FFFCD78D777F58C3E66EB8E7A0E3A4E50438B8E2AA5044B046BB8C2FC45866EEBC7084FE5600EB9094FE3609EF292DF1F01ABAAA73E19866EF6B9714DB5F0B69771ADB6F0FE9771AD3BCCF67AF5C55CB63FB13D7FD9457D37537C7BBA06EEA7163BB3E13D6B8CBDDC8A11EE72FD041B91A15D947AE89F38D5027B002A0CC5796F8E569FC69E2CB1EB8C1ED2D65F7895F9A4940E6A3FCFE8A8257FC9E985BE7EEDEE59AD54AD7FB63746B1557DB867FF6DF61C7F39A353736F78AC4E7F
	14F3FAFE7EAFCD1CBF25FCFA7ECBB9F17E9B2E696F777F248AF597041A056B64A1E687AF68A3E0686416ADAE73214874B2371462A40E9AEDAFEBD744F5407E270A531AC3AD708CCBE3F6736F865AC2F0F045C22A84FF2202877C1243CEF86D14782FDECA761587C60625F362E0B8B8B06E9C8C8E6CBB0C5F63797FF07DB8BF8883267EC25820897669FE722B893676331A30AB991FA6EC542BE2FB055385C517A6ECAF719F369BA5303D52652A5004CD4DE2B8885512FB449FD400AD2A8A7B7DCA48996C8FB9C7C6
	C3CE31DFF3CA012066447AB8E0AC3067BBFDCB061EFFFF1FCD5850A6EC9CG8901AE36C4373015351A2528DF8DC678D4363BD1CB6532989EAC67DF350E3B05ED0C0FD403622F8B7FA79438059DA6F1270232940E13B61BC897BA5D1A3019CB8ECBDAB9340F477093F50EA694B91D3ED13FA44B76D8C876A568BC0242B6A1A73FF3BF7C1979378B6BE779137E0EE375D53EEFE5DD0D5F39737B44B73D68FF0EDE2863FB697E3056FBC4C87E8D38ABA44A32A64A438D61GFE8FEE9C572478FD4F2F3CA8BFCABCBA11
	535E76623C2F197A7CBFD0CB8788322D8CBBE893GGE0B8GGD0CB818294G94G88G88GE4FBB0B6322D8CBBE893GGE0B8GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG2293GGGG
**end of data**/
}
}
