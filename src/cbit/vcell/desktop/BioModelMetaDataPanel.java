package cbit.vcell.desktop;

import cbit.vcell.solver.SimulationInfo;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.*;

import org.vcell.util.BeanUtils;
import org.vcell.util.document.BioModelInfo;
import org.vcell.util.document.KeyValue;
import org.vcell.util.document.VersionableType;

import cbit.vcell.mapping.SimulationContext;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
/**
 * Insert the type's description here.
 * Creation date: (3/29/01 10:39:36 AM)
 * @author: Jim Schaff
 */
public class BioModelMetaDataPanel extends JPanel {

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == BioModelMetaDataPanel.this && (evt.getPropertyName().equals("bioModelInfo"))) 
				connEtoM1(evt);
		};
	}
	private JPanel ivjJPanel1 = null;
	private cbit.gui.JTreeFancy ivjJTree1 = null;
	private BioModelInfoCellRenderer ivjbioModelInfoCellRenderer = null;
	private cbit.vcell.clientdb.DocumentManager fieldDocumentManager = null;
	private BioModelInfoTreeModel ivjbioModelInfoTreeModel = null;
	private org.vcell.util.document.BioModelInfo fieldBioModelInfo = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
/**
 * BioModelMetaDataPanel constructor comment.
 */
public BioModelMetaDataPanel() {
	super();
	initialize();
}
/**
 * BioModelMetaDataPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public BioModelMetaDataPanel(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * BioModelMetaDataPanel constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public BioModelMetaDataPanel(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}
/**
 * BioModelMetaDataPanel constructor comment.
 * @param isDoubleBuffered boolean
 */
public BioModelMetaDataPanel(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}
/**
 * Comment
 */
private void bioModelMetaDataPanel_Initialize() {
	getJTree1().getSelectionModel().setSelectionMode(javax.swing.tree.TreeSelectionModel.SINGLE_TREE_SELECTION);
}
/**
 * connEtoC1:  ( (BioModelMetaDataPanel,bioModelInfo --> bioModelInfoTreeModel,bioModelInfo).normalResult --> BioModelMetaDataPanel.expandAllRows()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.expandAllRows();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (BioModelMetaDataPanel.initialize() --> BioModelMetaDataPanel.enableToolTips(Ljavax.swing.JTree;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2() {
	try {
		// user code begin {1}
		// user code end
		this.enableToolTips(getJTree1());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (BioModelMetaDataPanel.initialize() --> BioModelMetaDataPanel.bioModelMetaDataPanel_Initialize()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3() {
	try {
		// user code begin {1}
		// user code end
		this.bioModelMetaDataPanel_Initialize();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (BioModelMetaDataPanel.bioModelInfo --> bioModelInfoTreeModel.bioModelInfo)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getbioModelInfoTreeModel().setBioModelInfo(this.getBioModelInfo());
		connEtoC1();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP2SetTarget:  (bioModelMetaDataTreeModel.this <--> JTree1.model)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		getJTree1().setModel(getbioModelInfoTreeModel());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP3SetTarget:  (bioModelMetaDataCellRenderer.this <--> JTree1.cellRenderer)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP3SetTarget() {
	/* Set the target from the source */
	try {
		getJTree1().setCellRenderer(getbioModelInfoCellRenderer());
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void enableToolTips(javax.swing.JTree tree) {
	javax.swing.ToolTipManager.sharedInstance().registerComponent(tree);
}
/**
 * Comment
 */
public void expandAllRows() {
	for (int row=0;row<getJTree1().getRowCount();row++){
		getJTree1().expandRow(row);
	}
}
/**
 * Gets the bioModelInfo property (cbit.vcell.biomodel.BioModelInfo) value.
 * @return The bioModelInfo property value.
 * @see #setBioModelInfo
 */
public org.vcell.util.document.BioModelInfo getBioModelInfo() {
	return fieldBioModelInfo;
}
/**
 * Return the bioModelInfoCellRenderer property value.
 * @return cbit.vcell.desktop.BioModelInfoCellRenderer
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private BioModelInfoCellRenderer getbioModelInfoCellRenderer() {
	if (ivjbioModelInfoCellRenderer == null) {
		try {
			ivjbioModelInfoCellRenderer = new cbit.vcell.desktop.BioModelInfoCellRenderer();
			ivjbioModelInfoCellRenderer.setName("bioModelInfoCellRenderer");
			ivjbioModelInfoCellRenderer.setText("bioModelInfoCellRenderer");
			ivjbioModelInfoCellRenderer.setBounds(446, 285, 179, 16);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjbioModelInfoCellRenderer;
}
/**
 * Return the bioModelMetaDataTreeModel property value.
 * @return cbit.vcell.desktop.BioModelMetaDataTreeModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private BioModelInfoTreeModel getbioModelInfoTreeModel() {
	if (ivjbioModelInfoTreeModel == null) {
		try {
			ivjbioModelInfoTreeModel = new cbit.vcell.desktop.BioModelInfoTreeModel();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjbioModelInfoTreeModel;
}
/**
 * Gets the documentManager property (cbit.vcell.clientdb.DocumentManager) value.
 * @return The documentManager property value.
 * @see #setDocumentManager
 */
public cbit.vcell.clientdb.DocumentManager getDocumentManager() {
	return fieldDocumentManager;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.BorderLayout());
			getJPanel1().add(getJTree1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the JTree1 property value.
 * @return javax.swing.JTree
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JTreeFancy getJTree1() {
	if (ivjJTree1 == null) {
		try {
			ivjJTree1 = new cbit.gui.JTreeFancy();
			ivjJTree1.setName("JTree1");
			ivjJTree1.setToolTipText("Contents of saved BioModel");
			ivjJTree1.setEnabled(true);
			ivjJTree1.setRootVisible(false);
			ivjJTree1.setRequestFocusEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTree1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	connPtoP2SetTarget();
	connPtoP3SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("BioModelMetaDataPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(379, 460);

		java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
		constraintsJPanel1.gridx = 1; constraintsJPanel1.gridy = 1;
		constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanel1.weightx = 1.0;
		constraintsJPanel1.weighty = 1.0;
		constraintsJPanel1.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getJPanel1(), constraintsJPanel1);
		initConnections();
		connEtoC2();
		connEtoC3();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		BioModelMetaDataPanel aBioModelMetaDataPanel;
		aBioModelMetaDataPanel = new BioModelMetaDataPanel();
		frame.setContentPane(aBioModelMetaDataPanel);
		frame.setSize(aBioModelMetaDataPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Perform the refresh method.
 */
public void refresh() {
	getbioModelInfoTreeModel().setBioModelInfo(getBioModelInfo());
	expandAllRows();
	return;
}
/**
 * Sets the bioModelInfo property (cbit.vcell.biomodel.BioModelInfo) value.
 * @param bioModelInfo The new value for the property.
 * @see #getBioModelInfo
 */
public void setBioModelInfo(org.vcell.util.document.BioModelInfo bioModelInfo) {
	org.vcell.util.document.BioModelInfo oldValue = fieldBioModelInfo;
	fieldBioModelInfo = bioModelInfo;
	firePropertyChange("bioModelInfo", oldValue, bioModelInfo);
}
/**
 * Sets the documentManager property (cbit.vcell.clientdb.DocumentManager) value.
 * @param documentManager The new value for the property.
 * @see #getDocumentManager
 */
public void setDocumentManager(cbit.vcell.clientdb.DocumentManager documentManager) {
	cbit.vcell.clientdb.DocumentManager oldValue = fieldDocumentManager;
	fieldDocumentManager = documentManager;
	firePropertyChange("documentManager", oldValue, documentManager);
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GAAFBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DB8FD0D4C71A679212F8B9764E6C11DD3267EDD12EC95C0424C84ECB2C0D3B51943B71D66EAE21CC62D6699D095C1E1B3ACD5CDB6AE25DD9F74D008A89C6236811DDB71204C40D0485C5C544BF7CE7E00009A00E4A61BCE69EB0B0B3EFF86F41G514DFDDF776BB70F61BD4630A5D53FFA2F3F7E3A7B7B3E7E7A6B2FFB9E2468E072369CDB91A1B95B0876F7AA07103E93043C967FFE8727D59F4AA8A0
	063F8F816F112101BCF836C25D0AEB99853B49E4C1BE147B20DC8A657F05773D44553D62B83CD80C1388F5F9CF5D77555C63D48C71F1F650F2FBCBA1BC5F853801064F14C3B83E2725D82347EBF40E9C9BA18B8EA34F9FDA8EE8344D40138F34C6006BB0638F411389F0D7CD354657F75FD2127DD35936937BB17449710256B6DBFB16107F4CD9F48447FA184A09ED4A206C85207239643549F2F856BAC7074EF986FCEA7904C7747B4B3D22B22ACA211A1AFA1F54A1F9C5FF07288A0D02AAB8052068A72478B36C
	734D16FC5A87A119505F92CA3B9A44F17A60DD85A4FC4669A9B252B741BBB91AD1D0FC146BF676D02DA63B6B4B27495AE3013CDD963AD59CE5BA390EC6F48B85B7585E2773909AC6FBA7C25DF2C0BAE0B3E0F7D9C6C1856037F47E43C31F4133EEC0ED108281A9D8978A557B3DB2558F5EEBEA20C623DD94BD126CA5044D71E3ADE5A6724C85566E192F5D0E59E469F1BE5FA9979FA76B7F66DB369DA6B6D93F74CBDBEB9933053BACE293B6F6366558F1E5B37DF166581709F16C55F73F1C3B4DE46CAC65655CC4
	2D1F250631B34BF02E2BC2B8572B61BDC7338523DF2074524FA3F4661BEE6AB3D82E053A644F39EF385E6532B87296135D155FB635C352F389363CF2A6430172E8D9AA946C3B351C0D39ABA28B25078CF4A64B1354CF311C84F5C53F4FA8E07EB5B502EBF5A114D3GE90075002D00620A0C02328A6EE3AB07FEFF0BBE6694E435FE5C67770AB2E1ED27067743D31CD4E5419ED4D4A16891FB8559A78C78C505E8BCF78C238D86E6343B077A3E8746E8910322AC28BEA9883D8B81D195E50571AC9CFE8FF9E41156
	767882A28C9088915EEF5270DEF87A85C53D94728A2A9861E0754943B8A793C2AF74889D40BB334BC323E8AF87686F85283A9DFE6B437E5AC59962C5CD0DC312C647C3BD2889C92BC0BB3F530A31E3813CA7D7F09BAF76A3AD3FB22320241277F351374750CF234F03628B7294DFE3B554272A005F8538D149FD678D97771D461D0F1132176EB7759D177AF2EEF2A57319651551EB2819760D72E5C29DB946E37EE050E53136DCDA9FB7AA4D5718952A8C7CEC0C2FAC4758E6607BBAE3649A5E193DF753F5D782FA
	55827A0EF11BFF43D742FC38DED0C46E35DDB2B81C680D4CG137324026B62A06090E027B68E4E41BB046D191AADA91F8AE3AC8224817E8DD0F49C4686F80FF35BAE17C3A672727EF65E021E8735F1F97950AD34E1E33F220FDDE02863635E0A3DD166DDA6F3B597184D6F9C41F6620498D49B45109874420B22555DBB0272E8F1E1D0525BAC247490441186D8380ACE7F56882EF5C1D5E55F4038AAF60B2A6A8B8EC56A3FCB47D24687C211904447FAF084E5164290C7F47EC7C6F08DFA24E0D024132FB7516AD3
	E88C907DE2G04EE104603AA23BFB90A395228B825452027C637930CA17EF10CE7AC7FC895503EA15997G174210C8569F477870D1EB3141C689C043BCAA951EE947799A8FFF4C57F8697477494A6BA11B59DE157460DF58CA2B587A2A2E0A2CF1A65343FEF3599F2331C823ABCC561F85774153A2A522F33F176C5B0FBC839A8FCED70FAC0A3420735CF92CB80A2781122E0BB86932A83335E917D0AE97486B8744D77135F9A40075BC9EEA0B32C1727B5954C05D3AAA345F1F050A8CB6D8D4456C772EDE7F740C
	7A12932C5EFD020F33BF389BFDC49C9B97E19B42405D2E4F636F02FB226AFA35B9E5751F84F1CE7D06183F76840EF9D361792E2A0D1720BD171CE032B13ED3AA67ABB9496A2B352773242643C9647B154E9787E50CADC970DC8AD88DA8873A7B9472BDBB4E79CACF31D8DEFB0A71B96079014E7767931CAF65940B771CAFCD63AB2D26B9EE18732DBF45644A567AAD2CB66AD1B64979C255AC4EAD28E67C499A9F732BDF9FC1FF20B97808B0A1CC16ABE1D82FB5B5ED5435D82E1DC077CB64DFD14DF36A656D68A3
	59D0AEBC8D671C53FCDD3C381367540923CB4912FBDE4A35BAAF541E5672475311F5117DCAB8177960DF06F04CE428CBBD4D7DA2B9E85C576B94C57278E8CA214DFD17E4DCB70C56A33D8D4FC11F2C28F67071C96EA7D7A51497F38E0D2C59E3FFF1B93905B3C95462E23A5FECB66A3EE257CD5BBB963A27E9BAE799F4DF64F9AB1749D055D3F92BB29897AF61E723B7C2FC3ECAEBE04F233965C3B467C4DA9F509281AC9E6CD4116E8B7AD41F6077CD0B070FB099561FA8C5DB86F18975C8123F4797D28EBB8CAE
	D25E067A1FB9524BF4DF3C770226DB7A630BC96DD77DB633335402DD4336749A6D1CD893515D7B52865BA4C04B49D5AE6B05B3998513E7382C4FDB48EAF7FEEC08E9B3E263F53B013BD74B33FFB3DE284543D468FB135E7F1F0C631EA148C315ACCE297E99F12AB6232095602F657C5F277C6A30CFE1B638F1055BA0AEFD99A95E7B8DD39B507ADA6D7CD29B31C152468D36140D5C861BF49937GCF45D9BEE657849F13154393E803009663199C7FDEE71C0B65BB92CC6598FEB849B6FC160D3F70ECC48EE75686
	1BB70B4B71748417A393F80A4FF1B96A43C877985C0F715F9966F367845E85BA7F6B14EE5CF7983DE8B21A4EF4F86C83238E7942DD26BAA47CE24836729C13FD5339088E6960CB193ABFDD1A64B2D51C4FA898BE4F6F9F4EFD017420A4878450C299772B0CBEB4027B0FB89992025EBAD0D08AAB60BCACCF3B2FB57AEC1BFCBE12BFAFBBBFBB77E6E73EB287BD171EE7E73EDC1DFE1252579968CC669F35F33BEF02BA4785FECE99D4B0DE27C2B99D1085588AB8D087B13E0E474957A43CEA1A739CE88F4271ACA8
	783BE7A4E27CBC9642F1A1F7524A0BC2E8971ABB911E3F2FD5F1ED38E0CC9510GD882C853E578F8AC268CCD1326B2B0BB7FBAE4F60710D5476C3B25EE361DD93B94A53ADDE17DCC5E43D1E5566E87335A15C7159DD16D189DBE237B36976A62GC900E500F500ECC0F1833707BCF6B626BDB0816F119A00568A79CBC3F44E2B4BBA284ECFC7F5D63BE89D2B9B4C5A150C473ACBB29F2FBCE6BBE754F8EC7D05282FC7763F21F19FA4A4385DB48BC18F9C3F35BCBD60084E53713CBC8CFD5EG303D70D11ACB63BE
	1C58405750A3B407CA0772A6GE904758338G688344B572B97B71D8FD2CB9532FBAFA24BAFE66B119B8E60FB766E9472DB15BA5B51A796641A954B3956A5281D9G5284399A6082405B4475FCDF0E29272E5C2D68794309796939A6E63B9BCDE66D7EB4BC3F75706DD96DBE08AAA7B61959B5F19A6D1A82F52B8119002D0012E60841GF7B3376B28FCA616DD35B5DFC74DB85B20CC4EEB1373534FB72BDD74FA0FEB1E590E5D0FAD2579FE925425G986D2EB6243DG65CD4D7C3E641883F3114296DE2E25E54C
	11D8B92D5D6A9E69DD2D5DDCF39D8BEC0C8DF30E117BC7740FE073A8A95677A3930A797D488D457CFE648E65BDC607BE0C37303C7EDEE56E7B13EFAA5677A76BD5EBB9B72A66F27EC2B51773CDF5EEB95FD22D64E47E7276987ACB894CF1C58B77A1E90C7BD0AD50FEC767676F766F2263A80A2850450029BBE1F57F2A62FD462C3B1FCE0838045FE7EC24F6C61EA6D5EAB8264BD7B5E1ED0BB3936636281B40332AA20D4B9EB1DA5F5609E23DAE32CE6D2A98C0F1984F97343D8A8788F1163DDC34BD2B33EAAFCC
	D85914697A572AD15763BA7D7278BB9A5DB9A8CB81E725F68EFC50414F016E96FEEEFF165E17A5C1B99530DADF3B29FE0C951996EBB29B68792D30CF82AADA998F13F9D9585A4E4F044D6D3CAAECED67556158F6FEB1ECED67F56158F6FEB50C769A70F9FD32F6F3456C784984372FD3151C91DFBAB2E52DE34514390EA7272CF5BCBB95DB4766A9EB9DBB26E26B58BBE52EE3768C9DA3BE34B2EC702D0ECAFD2C6FCEDB6B7E6034396E0FCEDB6B7E64F4EC5D1F1936567D3969583A2F191EFB9DFDF352380EAAF5
	7A332DF8C76C972624F1957226D6DCAFAF6BF7410DD06E83448312DAD92E497255A728BF8DC2A68843F407C48FC930E35BC5ED3C6D9660AF84DA994081705B7939787ECFF17D315B36CACD0E8F4768999F8C3B560E5F817C900F06DA1FF70F71BE0B5B20BF00836087A43471357C08A3FA5FCFE90B2C6B15EDD6E7546374BEFAEDDB749975AC25E735C51FD1FFBC4A4F2859D067EA67F17EF91AF32F0072DA1DD69E6031BFD3278DD1DA2183F2A7872725D2DA95149DBA6D3FA84D8D65B8873F4F7A6FD67ECDC1A2
	50529DFCAEAA5D181B69771965C2D82D29E911FD5EFAE148C1E7164546E6FB3E56BE2F0347C6550EFD56C23987606F60F71A131F72FB3D1407961324BB4D6FB4B3FBEE5A62BB34FB1D0E48DDC4FCF0030D0D79DC9B9FB38B6A8FF4A2EDF31B710E89ED79C0AE4B53D87DC76D46FA746BA344D85FB3239E65FD4BE62C3FFBC67DB6C3FB265B1ACF38EEDB5724927F5F46DBFE5F616DE4BAAD501E8B339E48C9BD74E5AE6B679F2F993F93597D9D3FAD47221F15DA7B744E080D18FDD24678FEC53A38FD3246226D73
	618C7D774B5176B9B3C37FD6B95ABEC3B9467AE9B95ABEB7B57BB35FDB656039F0F5977747DFF5F2DF6E6B62EB6E349F57EC0ADEEE20E53C3F574EB623F36529FF8CA2E3E65D36B1F2890F117F6447D827329B619E88D1044528B5D8CD56F621FD1A82A5F37435320B4DBB6B6F8F81141D5DB3FBC919935B5F9F605F769CF06AF73F819CD716A43557277870F79D467B4F813E26C2BA6F9E7ABB010C3F91A9EA336499D71AE674DF9664ED621D5CF6F97679FDE733E71E6D5A3FF6BB960B1B5BE87E66E431B8C727
	F7D17A92831D4549E9BB0F1329D0D774853F83F9BC8F7711C9A8A782D2GE900ACG39484F2FF9368A92637C5AA3059C109C788DC784265F73ED737B7EE8558E9E0F167D6091327C6EC64B5FD00AAEB2BF2A521E07B7BE1003CF26DF5DF6544F8BF5F100A500950097G1BF47D9C36B226DF135707B79C02E7187EF244156B7509618899B7F6563797D56467B15BA7706C95C6B46BE0D7124CFBE803AD28EBE08412149EE1C81F7BA7460C36598A726C6E1E7BAC4CF21157757B2ED2602F85F881135D6CF709F55D
	48135F552871ACB469B3B78ACB00E7B9E01FD6CE6F0E788FDBCB6B76E1CEC4AF5FAAB9EDA0003486916F10793C05C5BEEF879E7D9EB9F070026DBD0BF9AB69E1F2B9FAA271BF928FD282B4771147C556EFF258382FD43FFD07696F6C08B82D3FC46D39F55FF7F2D81F7F9140B60302DF091C9B9B02C69A1B97C79B515FAF995E636C37AB2EC662418337F58C662BCF67D96772BF4AB34F6553724C6F87FE1AB777BDC5C61E75BD454F720C5FF930B53579AA6E4369B0F71BG0517A0A784D4DD62EBF5E85BC7042E
	D513F55A649D423384FE352672715B36DB6B7A4576585F3ADD5D0E3F9B8FC82AAA8530FFCEF7EF4779D22590A5B21A389DEDA47B0606D5462A51C73763BE639787A919658E2BE90E63843DB08FE1343F2734E120E1EE4362761E8E9E3763013E62924FEFFFDE0EFDC765377592FE0B4152DB6D6C3F3B136FF15917F8FEFB2E937BAC6B4DA8E884747572BB7253DDBC6FD201F6104ACEC8BE61FF1B4F1B51583E7F4BBEAC31357AEA21B186B43E52E87B18182F5514DEED0D76C6E2C021DA227D767FFEFF89BC2BAE
	E794B881AAA081108CD88EC887E4DD66FE71AFBB8E930B788BC4E6986A9B32608B2A2C7F766BD48F976418AE5E4F517C23F37463142510A82BD30CCA3FB85166F84BD5EBBF7B1F2B317DAC7F9A7DE6817C23E7AA241DDFF7DE4378AA8D8EAA226E4FFB2E6D56E9F645A9A9BEBC77B21F90BEB57CAEFE5967D507997D40644E883DD5C47F54634DBFF44CAFEFD9BF4FF67BBA67176FBCC9FD3656951D6FBCC3692D2E68FC2731132F1B9E28DB6E62795D39AE6378872EE494D4DC19FB4FE53EF20F9B7753C660F583
	62810BG2900550075004D003C2B60CB00AAC0AB208F908244819281CB2FF2BFBB76FFC76670B36D209AF1D842673F345F5A4F0E764776332AFE73F8D653BFBB1E1D6FB70FE7CD7D46F82645D92DDFD93F18E5F4E7BF7A9E3BCB6990024210618E47F99D6D2B6F9DECB9E9F5172F979143B79E74731EEEE08C8EE95FE8F6925D27D6995E5BBAEF7F9E6D392DE3303D60D2975F9FF2F45A55AE3EBF6468B67CAB3735BFACF6477607C75D667E7004FB36BFBC65B67707956E597E304A0D31E7887C5825737DC427DD
	51E9EBE81FC82381CB273FC865C2BA8FD80C7E8A15ABCCE9AE7EFB0701F6C5233D6A465889AA8FCBB2EF7BF3B7661403BE3F1F15DF27BC3EA004D25D9EEFD299FDA141A0F736CEC339597F71648A7742B36517E49B6C34D61FD12A64B73004D51C1292E930C491A6C4EF897FECCB1149AE3EF5175B2990199347EBF2B7FEAF578647D0321DCD0A1D6421E56DE49BB53C1D644224CC62C742F9B341765EA3DF997364ADF7F9AC73E4524762DED1DFE46FE5312E5FC3FD8F687EBE9E2F9E9F781CD81FEF3A83025F2F
	8A7E513A20974FBA75D32A984981BD9E6CDF61BCDAA52B9B71205CA306B67F8FD0CB87882D7A5A703692GG04B5GGD0CB818294G94G88G88GAAFBB0B62D7A5A703692GG04B5GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG7092GGGG
**end of data**/
}
}
