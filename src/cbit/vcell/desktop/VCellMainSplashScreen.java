package cbit.vcell.desktop;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import java.awt.*;
import javax.swing.*;
/**
 * This type was generated by a SmartGuide.
 */
public class VCellMainSplashScreen extends JPanel {
	private int blend = 0;
	private int direction = 1;
	private JLabel ivjJLabelSplash = null;
	private JLabel ivjJLabelStatus = null;
/**
 * VCellMainSplashScreen constructor comment.
 */
public VCellMainSplashScreen() {
	super();
	initialize();
}
/**
 * connEtoC1:  (VCellMainSplashScreen.initialize() --> VCellMainSplashScreen.startAnimation()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.startAnimation();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
private void drawAnimation(Graphics2D g2d) {
    //g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    //g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
    if (g2d != null && g2d.getFont() != null){
	    g2d.setFont(g2d.getFont().deriveFont(30f));
	    blend += 25 * direction;
	    if (blend < 0 || blend > 255) {
	        direction = -direction;
	        blend += 50 * direction;
	    }
	    g2d.setColor(new Color(blend, blend, 255));
	    g2d.drawString("Loading...", 7, g2d.getFontMetrics().getAscent());
    }
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSplash() {
	if (ivjJLabelSplash == null) {
		try {
			ivjJLabelSplash = new javax.swing.JLabel();
			ivjJLabelSplash.setName("JLabelSplash");
			ivjJLabelSplash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/splash_nrcam_logo600sz.gif")));
			ivjJLabelSplash.setText("");
			ivjJLabelSplash.setDoubleBuffered(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSplash;
}
/**
 * Return the JLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public javax.swing.JLabel getJLabelStatus() {
	if (ivjJLabelStatus == null) {
		try {
			ivjJLabelStatus = new javax.swing.JLabel();
			ivjJLabelStatus.setName("JLabelStatus");
			ivjJLabelStatus.setText("Loading ...");
			ivjJLabelStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelStatus;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("VCellMainSplashScreen");
		setBorder(new javax.swing.border.EtchedBorder());
		setLayout(new java.awt.BorderLayout());
		setSize(623, 422);
		add(getJLabelSplash(), "Center");
		add(getJLabelStatus(), "South");
		initConnections();
		connEtoC1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		JFrame frame = new javax.swing.JFrame();
		VCellMainSplashScreen aVCellMainSplashScreen;
		aVCellMainSplashScreen = new VCellMainSplashScreen();
		frame.setContentPane(aVCellMainSplashScreen);
		frame.setSize(aVCellMainSplashScreen.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Comment
 */
private void startAnimation() {
	//Thread animator = new Thread() {
		//public void run() {
			//while (!isVisible()){
				//try {
					//Thread.currentThread().sleep(100);
				//} catch (InterruptedException exc) {
				//}
			//}
			//while (isVisible()){
				//try {
					//Thread.currentThread().sleep(100);
				//} catch (InterruptedException exc) {
				//}
				//try {
					//EventQueue.invokeAndWait(new Runnable() {
						//public void run(){
							//drawAnimation((Graphics2D)getGraphics());
						//}
					//});
				//}catch (Throwable e){
				//}
			//}
		//}
	//};
	//animator.setName("SplashScreenAnimation");
	//animator.setDaemon(true);
	//animator.start();
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GE4FBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359AEDF0D45555F622430F34E29BABB2D899CCB5EA54E853CAADBF5052A996BA45CC6858B1D4BBB24A744321ED2603CAE76EEE92498A06G22D1D3CD914B8642A60120E18918CFC8A0E8CA82E6ECAA3C6C5E5D3C6C5B77B66F3DE51310541EF36F3B3BAF49EE78184A4C613EFB4E3D671EFB6E793AF7C3DEFFEFE1094379BAA10E92E27D7B48C1486E5D043C75763AC101EB5C1367A236FF7FG58C6EE99
	A9063693E8E9A773DC6564EF2F14C2FFG7A6DDDF92EB761FB87498E946060946B6482ED783D09B7E7DF6721E1314EA656BF21EE01368C608260304D5E036B1FD7ABACFC1A059760F092B2470DE34655CA8B379E4614822E9D205F4D47C7206582DC6FED34468D5C14C58AFF2EBBDFC3BEB61E82D6D9F38B2D360A3C64D8D00DEB5D416444B9B550778360660BC87508875A261ED07018EFD0B6BD97FDD4D1BCFEEA04CCAD62751EEB036EE9C9D6FBA30AE48C757AF4CAD5C2AA76A24F5F2B250C87A14FG3FCC06
	8B86F11D8178B68152778AFC060C78F570CD766539AA76093D9D5D53E4495EFF69E112FFA0DC3CB5455E6A7671BD756FCB6C2DA034467996BB07BF07D05F99C0DB8C3092E0BDC0F9CD1E2B8E609DF67EAF8E6F0536E550EC5342E1CDED09C4DA953FFEDA73D3853E3DDE20D838B3542769FEC278995F2D56A411E7B660739E3E6AF9DCA7D98745F9E71F391F94FC7FBB4ECDC9F4D210F54959D943F5F121A621933E767A14EBDFD7B3559E272E7D99312FBD7A406A2212A4EBE7ACD8DD14E17149322D7DE48D1EF5
	8BBB6B65706D306C0363CFB1FC657E841E5BE618598C76EB00B6F73F300D7EB2A1CBF771A2D2DEFFCBD2BD4CFBAC5DD9381F4B3045B3DD1652E1645D6819AE4BF6066F74CC17E53EACE469875A92GEEDFAF0751D72BEA73DCCDGFDG8AC0BAC0964012DAE1E32D215AAB34319EC9B7DB23326227BA61F3DF8E3D81AD9DB5F529CBB5CCC97551F312AECB038AB508B526D8C19D8CCE1967D25076FD3046892AD2DDB2E5CD856ED2181AD4B778186D4AB69C23D3C66D1343949688C708607B363283DA70F173EC44
	AF19B4B10253F7A9F8A69725F340919840B7570BDBC3FD95407E8B810A6B049EEEE37CCED1DD250A575B2DE921E8248FF7C27A6AD04F1BB40C9D9570DDD7A7F43CBB0238F9504F097349D7365B78344BBE94DF5247040F1D10B19EAF2B93B673C23F301976576EA3B52BEFCEEAB325372DAEDAD747ED0554CF771DFFB11EA8976F9B417E2B7463B2CB26AB0F95695734C651950E637A7D56881E159B765B8E602F97BA5E9A2E62B65BAA99D4D86927BA989875A7B44E65ACE3794F91173B0275A76A052E964A7DC9
	747D7F823E460F589AD73A772B852E13929573903DC8D5331DC6286A078F4322EDD15156ACBF8DE871B95B99BE82FE5D860EE4447195AA7A1EE41A3ABC98B5E9AFB5CDD98DA668D5ECADA3BA98C9048431569E95632F96833F0E0F2FD151A7FC1A2AD2F6B871A9965D43FC12AAB48CC237E9D1556478868D4FAAC4472C1850283DC2502715A84697DE8F64C81BF18F3A9C06A34790C58A6B51DF5F55AAECBA4A849C56B54B21AD28973E97FBDF785E6E713B49527391E7325CB16FFBB7BA1B8EF05F68B91070BDAE
	D3F5A4396C35ACB6D8F8034B1A3FFBA734A9CA944B66D76848AF826B2481ACB8A0EC7E5E8852C5DC310C3DCDD3942E52382E670D1463595011A805F00C816CD4DCFF370FEC1FC6BBE76912536F9AC1DDAA3658D7FC90F559B5AC6A3E5C83DC0FAB2DF62D258F3E3F3FD4234ED9EDB6ACDD14C6BDC68C6C466BBD59A301543C861B4362A87AC54FC1D1EBBDEA601E67C0FFA140620362FC1EF8CD54DA9921AC521713DF14320EBCE8551187936763CE0F95F11D6EB4F14D068608A38DC21F3BF4FB3CEFB18C4DA733
	D4E36962895DFEFE9C77AB7DD5E88332EE18DD60E023C2EF85BA4A0B3948C2DB39D9E7B99BF5538F6B4E85A8E263FF4D7032AA1B3224486354DD4D75D73C997D8E3218EE3628E050A80E3B7A9C91354E229D4D56FED75E3F08B4FD7905B3D96DB9E76B10F3F98357437A0604BED6652DF12E8560B1699B1A3D5EEABA14676AB914087F7EC3B3F3812FC38E19A87B68A1DE071444714D8C1FEE43F39D7C4C90BAD88834628FC56E4C0C222D8CC1BF8DE081C0AEC0BEC06107620C7C46C1F2195A24CB0512C115145E
	A941C85488E6910F9FD67FDD33C4448FA2E2736870743A337C2329FB2F19566773EE18B14FB32D5FB3ED9E5F37B3063EB48434B40085G0B818AGB6GD4B60A3DE719C7AF37778E8C76FDDA9B60BA41E75B2647D7184FEB17CC66F3CD403B870063FE476213897DB9F15CB7194DE7C3FFD923480FC7186F2C03BEB9ACF047992E827A0DF15CAF0C6975G0ECF162F105735655167E62CD112E27C3564DA2E777B222973E8EEB4F99EFDA41ABC0FAE0DEE63F860E12F1E85FDF9F476BC3BAA1AAC4F7E1D6D6F71B7
	36B25E06C18DE6886D12A9D93467CD4CB3B3726DA7D0E0DB3A59C19E98F6D9E3BACC2D2DBE3E6616D86A7D6F08A55F7FDBB10C4B069655FDF47A9E2BE295F1DA42C23BCC9AC6F12C9C4A66C3588B5299BA2AE373B9AD557C4331D4FA64FB7DB12B9B86B51DB1DEF298EDBDAFDE9F74C3BFE259EA66E1DE5F73F90E911C27C8E3DA549473AE0E08F945DE70D7AF1F576E6573F89CFFB006F9B4G979A9023B7C2FDE43D9767FECF97F387209F81188B1083304AAB5654C398AFCFF6CB03D4618582473FFD4006B7A5
	B3EAC40EA04FD173F51B8DB79E61F28CC04B696501E474455072787C12A65ED9D6822E38C96C21246A83B2B317FB38923D5E8E53B7C47D2D16CA894F639F31DA2889F87481A8CDA20F0F7ED364716CBB97114E6C64F97C193EC9E7DA13F5C7EFCA642D7521B5CEAE6BF7C7042CEB01DEF9D4487A1C679D3B2C9EA9E6FA3DDC36EEFEF8DC3E27587CBE1827G2481701AE4850BFB48F78160720FA26EC55D2EB7BC0353C5BC46F37ABE43CEC77B2BA6F67AFF2650D18FCF975B69B7CE21175866F31D2D78C068EC63
	0A9C227CA0AD659BDA65B12E2BE62B1D3B76D6475A27460B2C1AAC1022A6E3164477CF2325563A23474419CD9E3757DECB36CEBAB727D8BF47DAF755314419B5267F350873BE919075DE7947A2D71048353DCF15DD75BCDE1B5C4B6C3273E3DE1BB86278DC066F3361391D9D0D88BB3BG34E59F0B1A656C986A525D8CF5A440G008910811053AC72F6C12C0EDCA6EF77E911EE88300AADA5707DE50EDC1BDE9E3A6AF9FC7F1F323B46326669FA69E778D54D5375725B387F95G2D39C51C67AA7D5A5E8D9F5DA4
	ECAC7711FB48629B5AD35AD8E68B372DE5D66BFE76D687367CDC560D633994822D3CB54F55G508DF081E034D51C4B6E519AFEAE9DFE59ECB1CD49B744AAFBF1A867E49ACB20B1E8733D8DC7F1DEFA6B541AE5A174F38116374E2CE538CCE7A6503F8B003E81203CAD4F658668EC93722823172DEDBBC6135636DC2E6EC0B21D8F35F1F9A62CF6EEDBC2BEBE6FC1FCC2333E9F31FD37C52E65BD676A6CF460ABDD036B750B3154758B9DCBDE3F04461257EFA3E33357E7E3E3295FC12E9B333F03707D1F55937A7E
	42767D7C48D72FFB22FF15EBF01B4F18C41B4F841BDB8A3096E0834016F6E173E5633B883379A47E57618FE2FD082F4826506F1F46D31F6506714B3FBDBBAE61FDFDD0B3CDAD0C7C85FE53A5540929C598522AFBAF218D68F2F04864C3459B59A54CDF8A8DB0B43FA7FD0D65CBB76C2B31DD5C1DF6D244F5C3FFA00E9BE738A1682745F1BF25620EB5AF2E174FA7D26FD31AC8EE33410964B69B1E187D4E911DC8E553DCBE9F4B574BC0367C384C4B83C266E762B8C790F1DBBA72DCB59DE29F8BA6D36F630E494B
	1FD776A4FBF3C1BD0FC52C5A7E41C92C4135C04020F13B7861E4F99C57E574E8060CF782DEA74F0B621B218C971B1C8E1473FEF6D64D705D5DA1EA6C9A0AE3CC90263083FFB33D08DD6B2EF093C5FB76EBD1902CB59A8860B39B54B80C57BDD47CFE58F89C4E79B8628AE855ACFE51F91C47DF4EFBBCB0F55DDC76FBAE6773F4E0B6BE19D378D484716DEAC85365F1CDB5A525C51103AAFA13A567012028E79743BC3ED6E5E9E20F9B7D1FC12B52D8153D346F8ACBC15A850AF363D58B0D4ADD6D014FB3145F5E5C
	3BEAE59CE2549A6CDEF2DE55FDD2783C2285358F6B6A0CF1CFD08E6C2A2E36F27B42187DB76046D73F1E74ED95E11D35370D225DB95F41F97C725FF69E65739527A3850F0693D68DFCA2D103723DBE4A4FDA0FD25EFF1122BD35D1FCB792F5C80C0ABA24725EBBC865FB4D4EEDA956B1AD7E8BED6BA44EE5E3G77588B970E21B82EAB083F435B755C0B7F0BD0E7F85ABABE696BB8C3C48C1D6F42034A877E6BCF883F12CA77C1FBCE9A362A84ACE1B41DC5CEC07668DA046A6698473297DD0B574D43A46E77F715
	FE100A87C45F13A05F270343F0396E1302F1D99E8E21CD16F7020F8374G8C81CCGE4GE481AC6D94B27E2154BD0B0C7CB246B62DCB32F8A33F1D69B09E0B3868163CF73AB017445FC859DBE8AF8CD4031C7ED8A8F52CF97C8AFE174C8BA54F8DCF06E66606B5216439615910BDB7F05CBA0B2F9EFFF0617897C2F8FF63EF8927A5957C88E3B27FBB8FD7249E0CAD7B0F2484C21CC9B6F7EB129FB6DA6571F88C1D3C6F53429EF9B06C09DE8CFB24C153C3C1359E646D0F3B6C67BF3930F868711D3B1C24240BEC
	8E48D47177B2276DA6652C57CE8D1FAEC7D00BA6595E0D76D82BC8EA30166B74C8B759464689E7C776A3643F24281B6C3031BBAEABD4CD104AEC2433E73ACDD246B92B542C057E11D1ACB09DA6596B718C30BF54986091E4A0F584B149950499DC7E95644D7D377ACBFB1C58F03DAFE52CD9FE127BED4149047FF2DB67EF1F9527607EF0CA5874EFC6764F62B33DE1C9D1A07A06DAD4BF7ACF6B18C993F9785BBA72B744980B48E973596F854336B97F83D0CB8788659BCD574F8DGGCCA4GGD0CB818294G94
	G88G88GE4FBB0B6659BCD574F8DGGCCA4GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG898EGGGG
**end of data**/
}
}
