package cbit.vcell.client.desktop;
import cbit.vcell.server.PropertyLoader;
import java.net.URL;
import cbit.vcell.document.*;
import java.awt.event.*;
import cbit.vcell.client.server.*;
import cbit.vcell.client.*;
import java.text.*;
import java.awt.*;
import javax.swing.*;
import cbit.vcell.desktop.*;
import cbit.util.*;
import cbit.vcell.client.bionetgen.*;
/**
 * This type was generated by a SmartGuide.
 */
public class DocumentWindow extends JFrame implements TopLevelWindow {
	//class SimpleWebViewer extends JDialog implements WindowListener {

		//private URL initialURL = null;
		//private boolean isINIT = true;
		//private SimpleWebBrowserPanel swb = null;
		
		//public SimpleWebViewer(Frame parentFrame,String title,URL viewThisURL){
			//super(parentFrame,title);
			//initialURL = viewThisURL;
			//DocumentWindow.this.addWindowListener(this);
			//Container contentPane = getContentPane();
			//contentPane.setLayout(new BorderLayout());
			////
			//swb = new SimpleWebBrowserPanel();
			
			//contentPane.add(swb, BorderLayout.CENTER);
			////
			//pack();
			//setLocationRelativeTo(parentFrame);
		//}

		//public void show() {
			//super.show();

			//if(isINIT){
				//try {
					//swb.setCurrentURL(initialURL);
				//}finally{
					//isINIT = false;
				//}
			//}
			
		//}

		//public void windowActivated(WindowEvent e){
		//}
		//public void windowClosed(WindowEvent e){
			//SimpleWebViewer.this.dispose();
		//}
		//public void windowClosing(WindowEvent e){
		//}
		//public void windowDeactivated(WindowEvent e){
		//}
		//public void windowDeiconified(WindowEvent e){
		//}
		//public void windowIconified(WindowEvent e){
		//}
		//public void windowOpened(WindowEvent e){
		//}
	//}
	////
	////
	//private SimpleWebViewer userGuideSWV = null;
	//private SimpleWebViewer tutorialSWV = null;
	////
	////
	
	private JDialog compareDialog = null;
	private LoginDialog loginDialog = null;
	private boolean ppRunning = false;
	private JMenuItem ivjAbout_BoxMenuItem = null;
	private JMenuItem ivjCascadeMenuItem = null;
	private JMenuItem ivjChange_UserMenuItem = null;
	private JMenuItem ivjCloseMenuItem = null;
	private JMenuBar ivjDocumentWindowJMenuBar = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private JMenuItem ivjExitMenuItem = null;
	private JMenu ivjFileMenu = null;
	private JMenu ivjHelpMenu = null;
	private JPanel ivjJFrameContentPane = null;
	private JSeparator ivjJSeparator1 = null;
	private JSeparator ivjJSeparator2 = null;
	private JSeparator ivjJSeparator3 = null;
	private JSeparator ivjJSeparator4 = null;
	private JSeparator ivjJSeparator5 = null;
	private JMenuItem ivjLocalMenuItem = null;
	private JMenuItem ivjManage_DatabaseMenuItem = null;
	private JMenuItem ivjMinimize_AllMenuItem = null;
	private JMenu ivjNewMenuItem = null;
	private JMenu ivjOpenMenuItem = null;
	private JMenuItem ivjReconnectMenuItem = null;
	private JMenuItem ivjSave_AsMenuItem = null;
	private JMenuItem ivjSave_VersionMenuItem = null;
	private JMenuItem ivjSaveMenuItem = null;
	private JMenu ivjServerMenu = null;
	private JCheckBoxMenuItem ivjStatusbarMenuItem = null;
	private JPanel ivjStatusBarPane = null;
	private JMenuItem ivjTile_HorizontallyMenuItem = null;
	private JMenuItem ivjTile_VerticallyMenuItem = null;
	private JMenu ivjViewMenu = null;
	private JMenu ivjWindowMenu = null;
	private JSeparator ivjJSeparator6 = null;
	private JMenuItem ivjJMenuItemNewBioModel = null;
	private JMenuItem ivjJMenuItemOpenBioModel = null;
	private JMenuItem ivjJMenuItemOpenGeometry = null;
	private JMenuItem ivjJMenuItemOpenMathModel = null;
	private JPanel ivjJPanelMemStatus = null;
	private JProgressBar ivjJProgressBarMemory = null;
	private JLabel ivjStatusMsgMemory = null;
	private DocumentWindowManager fieldWindowManager = null;
	private JMenuItem ivjJMenuItemExport = null;
	private JMenuItem ivjJMenuItemImport = null;
	private JSeparator ivjJSeparator7 = null;
	private JLabel ivjStatusMsgConnection = null;
	private JMenuItem ivjJMenuItemServer = null;
	private JProgressBar ivjJProgressBarConnection = null;
	private JMenuItem ivjJMenuItemCompare = null;
	private JMenuItem ivjJMenuItemRevert = null;
	private JSeparator ivjJSeparator8 = null;
	private JMenuItem ivjJMenuItemOptions = null;
	private JMenu ivjAnalyticMenu = null;
	private JMenuItem ivjChooseImageMenuItem = null;
	private JMenuItem ivjExistingImageMenuItem = null;
	private JMenu ivjGeometryMenu = null;
	private JMenu ivjImageMenu = null;
	private JMenuItem ivjMathFromBioMenuItem = null;
	private JMenu ivjMathMenu = null;
	private JMenuItem ivjDim1MenuItem = null;
	private JMenuItem ivjDim2MenuItem = null;
	private JMenuItem ivjDim3MenuItem = null;
	private JMenuItem ivjNonSpatialMenuItem = null;
	private JMenuItem ivjSpatialMenuItem = null;
	private JMenuItem ivjEdit_Annotation_JMenuItem = null;
	private JMenuItem ivjTestingFrameworkMenuItem = null;
	private JMenuItem ivjJMenuItemOnlineHelp = null;
	private JMenu ivjBNGMenu = null;
	private JMenuItem ivjRunBNGMenuItem = null;

class IvjEventHandler implements java.awt.event.ActionListener, java.awt.event.ItemListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == DocumentWindow.this.getAbout_BoxMenuItem()) 
				connEtoC3(e);
			if (e.getSource() == DocumentWindow.this.getCloseMenuItem()) 
				connEtoC5(e);
			if (e.getSource() == DocumentWindow.this.getExitMenuItem()) 
				connEtoC6(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemNewBioModel()) 
				connEtoC7(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemOpenBioModel()) 
				connEtoC10(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemOpenMathModel()) 
				connEtoC11(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemOpenGeometry()) 
				connEtoC12(e);
			if (e.getSource() == DocumentWindow.this.getSaveMenuItem()) 
				connEtoC13(e);
			if (e.getSource() == DocumentWindow.this.getSave_AsMenuItem()) 
				connEtoC14(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemImport()) 
				connEtoC15(e);
			if (e.getSource() == DocumentWindow.this.getSave_VersionMenuItem()) 
				connEtoC16(e);
			if (e.getSource() == DocumentWindow.this.getChange_UserMenuItem()) 
				connEtoC18(e);
			if (e.getSource() == DocumentWindow.this.getReconnectMenuItem()) 
				connEtoC19(e);
			if (e.getSource() == DocumentWindow.this.getLocalMenuItem()) 
				connEtoC20(e);
			if (e.getSource() == DocumentWindow.this.getTile_HorizontallyMenuItem()) 
				connEtoC21(e);
			if (e.getSource() == DocumentWindow.this.getTile_VerticallyMenuItem()) 
				connEtoC22(e);
			if (e.getSource() == DocumentWindow.this.getCascadeMenuItem()) 
				connEtoC23(e);
			if (e.getSource() == DocumentWindow.this.getMinimize_AllMenuItem()) 
				connEtoC24(e);
			if (e.getSource() == DocumentWindow.this.getManage_DatabaseMenuItem()) 
				connEtoC27(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemServer()) 
				connEtoC4(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemOptions()) 
				connEtoC1(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemRevert()) 
				connEtoC28(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemCompare()) 
				connEtoC29(e);
			if (e.getSource() == DocumentWindow.this.getExistingImageMenuItem()) 
				connEtoC9(e);
			if (e.getSource() == DocumentWindow.this.getChooseImageMenuItem()) 
				connEtoC30(e);
			if (e.getSource() == DocumentWindow.this.getNonSpatialMenuItem()) 
				connEtoC8(e);
			if (e.getSource() == DocumentWindow.this.getMathFromBioMenuItem()) 
				connEtoC31(e);
			if (e.getSource() == DocumentWindow.this.getDim1MenuItem()) 
				connEtoC32(e);
			if (e.getSource() == DocumentWindow.this.getDim2MenuItem()) 
				connEtoC33(e);
			if (e.getSource() == DocumentWindow.this.getDim3MenuItem()) 
				connEtoC34(e);
			if (e.getSource() == DocumentWindow.this.getSpatialMenuItem()) 
				connEtoC35(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemExport()) 
				connEtoC17(e);
			if (e.getSource() == DocumentWindow.this.getEdit_Annotation_JMenuItem()) 
				connEtoC36(e);
			if (e.getSource() == DocumentWindow.this.getTestingFrameworkMenuItem()) 
				connEtoC37(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemOnlineHelp()) 
				connEtoC25(e);
			if (e.getSource() == DocumentWindow.this.getRunBNGMenuItem()) 
				connEtoC26(e);
			if (e.getSource() == DocumentWindow.this.getJMenuItemFieldData()) 
				connEtoC38(e);
		};
		public void itemStateChanged(java.awt.event.ItemEvent e) {
			if (e.getSource() == DocumentWindow.this.getStatusbarMenuItem()) 
				connEtoC2(e);
		};
	};
	private JMenuItem ivjJMenuItemFieldData = null;

/**
 * DocumentWindow constructor comment.
 */
public DocumentWindow() {
	super();
	initialize();
}

/**
 * Comment
 */
private void cascadeWindows() {
	getWindowManager().cascadeWindows();
}


/**
 * Comment
 */
private void closeWindow() {
	getWindowManager().closeWindow();
}


/**
 * Comment
 */
private void compareWithSaved() {
	getWindowManager().compareWithSaved();
}


/**
 * connEtoC1:  (JMenuItemOptions.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.notYet();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC10:  (JMenuItemOpenBioModel.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.openDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC11:  (JMenuItemOpenMathModel.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC11(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.openDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC12:  (JMenuItemOpenGeometry.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC12(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.openDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC13:  (SaveMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC13(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.saveDocument(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC14:  (Save_AsMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC14(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.saveDocumentAsNew();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC15:  (JMenuItemImport.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC15(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.importXMLDocument();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC16:  (Save_VersionMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC16(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.saveDocument(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC17:  (JMenuItemExport.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC17(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.exportDocument();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC18:  (Change_UserMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC18(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.showLoginDialog();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC19:  (ReconnectMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC19(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.reconnect();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC2:  (StatusbarMenuItem.item.itemStateChanged(java.awt.event.ItemEvent) --> DocumentWindow.viewStatusBar()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.viewStatusBar();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC20:  (LocalMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC20(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.notYet();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC21:  (Tile_HorizontallyMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC21(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.tileHorizontal();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC22:  (Tile_VerticallyMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC22(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.tileVertically();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC23:  (CascadeMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC23(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.cascadeWindows();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC24:  (Minimize_AllMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC24(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.notYet();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC25:  (JMenuItemOnlineHelp.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.invokeOnlineHelp()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC25(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.invokeOnlineHelp();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC26:  (RunBNGMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.launchBNG()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC26(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.showBNGWindow();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC27:  (Manage_DatabaseMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC27(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.showDatabaseWindow();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC28:  (JMenuItemRevert.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.revertToSaved()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC28(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.revertToSaved();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC29:  (JMenuItemCompare.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC29(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.compareWithSaved();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC3:  (About_BoxMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.showAboutBox()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.showAboutBox();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC30:  (ChooseImageMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.chooseImageFromFile(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC30(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.newDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC31:  (MathFromBioMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.mathFromBioModel(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC31(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.newDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC32:  (Dim1RadioButtonMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.newDocument(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC32(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.newDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC33:  (Dim2RadioButtonMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.newDocument(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC33(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.newDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC34:  (Dim3RadioButtonMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.newDocument(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC34(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.newDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC35:  (SpatialMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.newDocument(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC35(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.newDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC36:  (Edit_Annotation_JMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.showEditAnnotationWindow()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC36(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.showEditAnnotationWindow();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC37:  (TestingFrameworkMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.showTestingFrameworkWindow()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC37(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.showTestingFrameworkWindow();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC38:  (JMenuItemFieldData.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.jMenuItemFieldData_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC38(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jMenuItemFieldData_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  (JMenuItemServer.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.notYet();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC5:  (CloseMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.closeWindow()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.closeWindow();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC6:  (ExitMenuItem.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.exitApplication()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.exitApplication();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC7:  (JMenuItemNewBioModel.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.newBioModel()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.newDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC8:  (JMenuItemNewMathModel.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.newDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoC9:  (JMenuItemNewGeometry.action.actionPerformed(java.awt.event.ActionEvent) --> DocumentWindow.notYet()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC9(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.newDocument(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * Comment
 */
private void exitApplication() {
	getWindowManager().exitApplication();
}


/**
 * Comment
 */
private void exportDocument() {
	getWindowManager().exportDocument();
}


/**
 * Return the About_BoxMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getAbout_BoxMenuItem() {
	if (ivjAbout_BoxMenuItem == null) {
		try {
			ivjAbout_BoxMenuItem = new javax.swing.JMenuItem();
			ivjAbout_BoxMenuItem.setName("About_BoxMenuItem");
			ivjAbout_BoxMenuItem.setText("About the Virtual Cell");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAbout_BoxMenuItem;
}

/**
 * Return the AnalyticMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getAnalyticMenu() {
	if (ivjAnalyticMenu == null) {
		try {
			ivjAnalyticMenu = new javax.swing.JMenu();
			ivjAnalyticMenu.setName("AnalyticMenu");
			ivjAnalyticMenu.setText("Analytic");
			ivjAnalyticMenu.add(getDim1MenuItem());
			ivjAnalyticMenu.add(getDim2MenuItem());
			ivjAnalyticMenu.add(getDim3MenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAnalyticMenu;
}

/**
 * Return the BNGMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getBNGMenu() {
	if (ivjBNGMenu == null) {
		try {
			ivjBNGMenu = new javax.swing.JMenu();
			ivjBNGMenu.setName("BNGMenu");
			ivjBNGMenu.setText("BioNetGen");
			ivjBNGMenu.add(getRunBNGMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjBNGMenu;
}

/**
 * Return the CascadeMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getCascadeMenuItem() {
	if (ivjCascadeMenuItem == null) {
		try {
			ivjCascadeMenuItem = new javax.swing.JMenuItem();
			ivjCascadeMenuItem.setName("CascadeMenuItem");
			ivjCascadeMenuItem.setText("Cascade");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCascadeMenuItem;
}


/**
 * Return the Change_UserMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getChange_UserMenuItem() {
	if (ivjChange_UserMenuItem == null) {
		try {
			ivjChange_UserMenuItem = new javax.swing.JMenuItem();
			ivjChange_UserMenuItem.setName("Change_UserMenuItem");
			ivjChange_UserMenuItem.setText("Change User");
			ivjChange_UserMenuItem.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjChange_UserMenuItem;
}

/**
 * Return the ChooseImageMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getChooseImageMenuItem() {
	if (ivjChooseImageMenuItem == null) {
		try {
			ivjChooseImageMenuItem = new javax.swing.JMenuItem();
			ivjChooseImageMenuItem.setName("ChooseImageMenuItem");
			ivjChooseImageMenuItem.setText("Choose Image from File ...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjChooseImageMenuItem;
}


/**
 * Return the CloseMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getCloseMenuItem() {
	if (ivjCloseMenuItem == null) {
		try {
			ivjCloseMenuItem = new javax.swing.JMenuItem();
			ivjCloseMenuItem.setName("CloseMenuItem");
			ivjCloseMenuItem.setText("Close");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCloseMenuItem;
}


/**
 * Comment
 */
private JDialog getCompareDialog() {
	if (compareDialog == null) {
		compareDialog = new JDialog(this,  "Comparison with Saved Edition", false);
		compareDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
		WindowAdapter listener = new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				if (e.getSource() == DocumentWindow.this) {
					compareDialog.dispose();
				}
			}
		};
		DocumentWindow.this.addWindowListener(listener);
	}
	return compareDialog;
}


/**
 * Return the Dim1MenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getDim1MenuItem() {
	if (ivjDim1MenuItem == null) {
		try {
			ivjDim1MenuItem = new javax.swing.JMenuItem();
			ivjDim1MenuItem.setName("Dim1MenuItem");
			ivjDim1MenuItem.setText("1-D");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDim1MenuItem;
}


/**
 * Return the Dim2MenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getDim2MenuItem() {
	if (ivjDim2MenuItem == null) {
		try {
			ivjDim2MenuItem = new javax.swing.JMenuItem();
			ivjDim2MenuItem.setName("Dim2MenuItem");
			ivjDim2MenuItem.setText("2-D");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDim2MenuItem;
}


/**
 * Return the Dim3MenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getDim3MenuItem() {
	if (ivjDim3MenuItem == null) {
		try {
			ivjDim3MenuItem = new javax.swing.JMenuItem();
			ivjDim3MenuItem.setName("Dim3MenuItem");
			ivjDim3MenuItem.setText("3-D");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDim3MenuItem;
}


/**
 * Return the DocumentWindowJMenuBar property value.
 * @return javax.swing.JMenuBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuBar getDocumentWindowJMenuBar() {
	if (ivjDocumentWindowJMenuBar == null) {
		try {
			ivjDocumentWindowJMenuBar = new javax.swing.JMenuBar();
			ivjDocumentWindowJMenuBar.setName("DocumentWindowJMenuBar");
			ivjDocumentWindowJMenuBar.add(getFileMenu());
			ivjDocumentWindowJMenuBar.add(getViewMenu());
			ivjDocumentWindowJMenuBar.add(getServerMenu());
			ivjDocumentWindowJMenuBar.add(getWindowMenu());
			ivjDocumentWindowJMenuBar.add(getBNGMenu());
			ivjDocumentWindowJMenuBar.add(getHelpMenu());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDocumentWindowJMenuBar;
}

/**
 * Return the Edit_Annotation_JMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getEdit_Annotation_JMenuItem() {
	if (ivjEdit_Annotation_JMenuItem == null) {
		try {
			ivjEdit_Annotation_JMenuItem = new javax.swing.JMenuItem();
			ivjEdit_Annotation_JMenuItem.setName("Edit_Annotation_JMenuItem");
			ivjEdit_Annotation_JMenuItem.setText("Edit Annotation...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjEdit_Annotation_JMenuItem;
}


/**
 * Return the ExistingImageMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getExistingImageMenuItem() {
	if (ivjExistingImageMenuItem == null) {
		try {
			ivjExistingImageMenuItem = new javax.swing.JMenuItem();
			ivjExistingImageMenuItem.setName("ExistingImageMenuItem");
			ivjExistingImageMenuItem.setText("Existing Image ...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjExistingImageMenuItem;
}


/**
 * Return the ExitMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getExitMenuItem() {
	if (ivjExitMenuItem == null) {
		try {
			ivjExitMenuItem = new javax.swing.JMenuItem();
			ivjExitMenuItem.setName("ExitMenuItem");
			ivjExitMenuItem.setText("Exit");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjExitMenuItem;
}

/**
 * Return the FileMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getFileMenu() {
	if (ivjFileMenu == null) {
		try {
			ivjFileMenu = new javax.swing.JMenu();
			ivjFileMenu.setName("FileMenu");
			ivjFileMenu.setText("File");
			ivjFileMenu.add(getNewMenuItem());
			ivjFileMenu.add(getOpenMenuItem());
			ivjFileMenu.add(getCloseMenuItem());
			ivjFileMenu.add(getJSeparator2());
			ivjFileMenu.add(getSaveMenuItem());
			ivjFileMenu.add(getSave_VersionMenuItem());
			ivjFileMenu.add(getSave_AsMenuItem());
			ivjFileMenu.add(getJSeparator8());
			ivjFileMenu.add(getJMenuItemRevert());
			ivjFileMenu.add(getJMenuItemCompare());
			ivjFileMenu.add(getJSeparator1());
			ivjFileMenu.add(getManage_DatabaseMenuItem());
			ivjFileMenu.add(getTestingFrameworkMenuItem());
			ivjFileMenu.add(getJMenuItemFieldData());
			ivjFileMenu.add(getEdit_Annotation_JMenuItem());
			ivjFileMenu.add(getJSeparator7());
			ivjFileMenu.add(getJMenuItemImport());
			ivjFileMenu.add(getJMenuItemExport());
			ivjFileMenu.add(getJSeparator3());
			ivjFileMenu.add(getExitMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFileMenu;
}

/**
 * Return the GeometryMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getGeometryMenu() {
	if (ivjGeometryMenu == null) {
		try {
			ivjGeometryMenu = new javax.swing.JMenu();
			ivjGeometryMenu.setName("GeometryMenu");
			ivjGeometryMenu.setText("Geometry");
			ivjGeometryMenu.add(getAnalyticMenu());
			ivjGeometryMenu.add(getImageMenu());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGeometryMenu;
}


/**
 * Return the HelpMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getHelpMenu() {
	if (ivjHelpMenu == null) {
		try {
			ivjHelpMenu = new javax.swing.JMenu();
			ivjHelpMenu.setName("HelpMenu");
			ivjHelpMenu.setText("Help");
			ivjHelpMenu.add(getJMenuItemOnlineHelp());
			ivjHelpMenu.add(getJSeparator6());
			ivjHelpMenu.add(getAbout_BoxMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjHelpMenu;
}

/**
 * Return the ImageMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getImageMenu() {
	if (ivjImageMenu == null) {
		try {
			ivjImageMenu = new javax.swing.JMenu();
			ivjImageMenu.setName("ImageMenu");
			ivjImageMenu.setText("From Image");
			ivjImageMenu.add(getExistingImageMenuItem());
			ivjImageMenu.add(getChooseImageMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjImageMenu;
}


/**
 * Return the JFrameContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJFrameContentPane() {
	if (ivjJFrameContentPane == null) {
		try {
			ivjJFrameContentPane = new javax.swing.JPanel();
			ivjJFrameContentPane.setName("JFrameContentPane");
			ivjJFrameContentPane.setLayout(new java.awt.BorderLayout());
			getJFrameContentPane().add(getStatusBarPane(), "South");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJFrameContentPane;
}

/**
 * Return the JMenuItemCompare property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemCompare() {
	if (ivjJMenuItemCompare == null) {
		try {
			ivjJMenuItemCompare = new javax.swing.JMenuItem();
			ivjJMenuItemCompare.setName("JMenuItemCompare");
			ivjJMenuItemCompare.setText("Compare with Saved");
			ivjJMenuItemCompare.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemCompare;
}

/**
 * Return the JMenuItemExport property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemExport() {
	if (ivjJMenuItemExport == null) {
		try {
			ivjJMenuItemExport = new javax.swing.JMenuItem();
			ivjJMenuItemExport.setName("JMenuItemExport");
			ivjJMenuItemExport.setText("Export...");
			ivjJMenuItemExport.setActionCommand("Export");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemExport;
}

/**
 * Return the JMenuItemFieldData property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemFieldData() {
	if (ivjJMenuItemFieldData == null) {
		try {
			ivjJMenuItemFieldData = new javax.swing.JMenuItem();
			ivjJMenuItemFieldData.setName("JMenuItemFieldData");
			ivjJMenuItemFieldData.setText("Field Data...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemFieldData;
}


/**
 * Return the JMenuItemImport property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemImport() {
	if (ivjJMenuItemImport == null) {
		try {
			ivjJMenuItemImport = new javax.swing.JMenuItem();
			ivjJMenuItemImport.setName("JMenuItemImport");
			ivjJMenuItemImport.setText("Import...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemImport;
}

/**
 * Return the JMenuItemNewBioModel property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemNewBioModel() {
	if (ivjJMenuItemNewBioModel == null) {
		try {
			ivjJMenuItemNewBioModel = new javax.swing.JMenuItem();
			ivjJMenuItemNewBioModel.setName("JMenuItemNewBioModel");
			ivjJMenuItemNewBioModel.setText("BioModel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemNewBioModel;
}


/**
 * Return the Help_TopicsMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemOnlineHelp() {
	if (ivjJMenuItemOnlineHelp == null) {
		try {
			ivjJMenuItemOnlineHelp = new javax.swing.JMenuItem();
			ivjJMenuItemOnlineHelp.setName("JMenuItemOnlineHelp");
			ivjJMenuItemOnlineHelp.setText("Online Help");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemOnlineHelp;
}

/**
 * Return the JMenuItemOpenBioModel property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemOpenBioModel() {
	if (ivjJMenuItemOpenBioModel == null) {
		try {
			ivjJMenuItemOpenBioModel = new javax.swing.JMenuItem();
			ivjJMenuItemOpenBioModel.setName("JMenuItemOpenBioModel");
			ivjJMenuItemOpenBioModel.setText("BioModel...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemOpenBioModel;
}

/**
 * Return the JMenuItemOpenGeometry property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemOpenGeometry() {
	if (ivjJMenuItemOpenGeometry == null) {
		try {
			ivjJMenuItemOpenGeometry = new javax.swing.JMenuItem();
			ivjJMenuItemOpenGeometry.setName("JMenuItemOpenGeometry");
			ivjJMenuItemOpenGeometry.setText("Geometry...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemOpenGeometry;
}

/**
 * Return the JMenuItemOpenMathModel property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemOpenMathModel() {
	if (ivjJMenuItemOpenMathModel == null) {
		try {
			ivjJMenuItemOpenMathModel = new javax.swing.JMenuItem();
			ivjJMenuItemOpenMathModel.setName("JMenuItemOpenMathModel");
			ivjJMenuItemOpenMathModel.setText("MathModel...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemOpenMathModel;
}

/**
 * Return the JMenuItemOptions property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemOptions() {
	if (ivjJMenuItemOptions == null) {
		try {
			ivjJMenuItemOptions = new javax.swing.JMenuItem();
			ivjJMenuItemOptions.setName("JMenuItemOptions");
			ivjJMenuItemOptions.setText("Options...");
			ivjJMenuItemOptions.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemOptions;
}


/**
 * Return the JMenuItemRevert property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemRevert() {
	if (ivjJMenuItemRevert == null) {
		try {
			ivjJMenuItemRevert = new javax.swing.JMenuItem();
			ivjJMenuItemRevert.setName("JMenuItemRevert");
			ivjJMenuItemRevert.setText("Revert to Saved");
			ivjJMenuItemRevert.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemRevert;
}

/**
 * Return the JMenuItemServer property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getJMenuItemServer() {
	if (ivjJMenuItemServer == null) {
		try {
			ivjJMenuItemServer = new javax.swing.JMenuItem();
			ivjJMenuItemServer.setName("JMenuItemServer");
			ivjJMenuItemServer.setText("Change Server");
			ivjJMenuItemServer.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJMenuItemServer;
}

/**
 * Return the JPanelMemStatus property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelMemStatus() {
	if (ivjJPanelMemStatus == null) {
		try {
			ivjJPanelMemStatus = new javax.swing.JPanel();
			ivjJPanelMemStatus.setName("JPanelMemStatus");
			ivjJPanelMemStatus.setPreferredSize(new java.awt.Dimension(300, 26));
			ivjJPanelMemStatus.setLayout(new java.awt.GridBagLayout());
			ivjJPanelMemStatus.setMinimumSize(new java.awt.Dimension(200, 26));

			java.awt.GridBagConstraints constraintsStatusMsgMemory = new java.awt.GridBagConstraints();
			constraintsStatusMsgMemory.gridx = 0; constraintsStatusMsgMemory.gridy = 0;
			constraintsStatusMsgMemory.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStatusMsgMemory.weightx = 1.0;
			constraintsStatusMsgMemory.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanelMemStatus().add(getStatusMsgMemory(), constraintsStatusMsgMemory);

			java.awt.GridBagConstraints constraintsJProgressBarMemory = new java.awt.GridBagConstraints();
			constraintsJProgressBarMemory.gridx = 1; constraintsJProgressBarMemory.gridy = 0;
			constraintsJProgressBarMemory.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJProgressBarMemory.weightx = 2.0;
			constraintsJProgressBarMemory.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanelMemStatus().add(getJProgressBarMemory(), constraintsJProgressBarMemory);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelMemStatus;
}

/**
 * Return the JProgressBarConnection property value.
 * @return javax.swing.JProgressBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JProgressBar getJProgressBarConnection() {
	if (ivjJProgressBarConnection == null) {
		try {
			ivjJProgressBarConnection = new javax.swing.JProgressBar();
			ivjJProgressBarConnection.setName("JProgressBarConnection");
			ivjJProgressBarConnection.setString("NOT CONNECTED");
			ivjJProgressBarConnection.setStringPainted(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJProgressBarConnection;
}

/**
 * Return the JProgressBarMemory property value.
 * @return javax.swing.JProgressBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JProgressBar getJProgressBarMemory() {
	if (ivjJProgressBarMemory == null) {
		try {
			ivjJProgressBarMemory = new javax.swing.JProgressBar();
			ivjJProgressBarMemory.setName("JProgressBarMemory");
			ivjJProgressBarMemory.setMinimum(0);
			ivjJProgressBarMemory.setStringPainted(true);
			ivjJProgressBarMemory.setValue(50);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJProgressBarMemory;
}

/**
 * Return the JSeparator1 property value.
 * @return javax.swing.JSeparator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSeparator getJSeparator1() {
	if (ivjJSeparator1 == null) {
		try {
			ivjJSeparator1 = new javax.swing.JSeparator();
			ivjJSeparator1.setName("JSeparator1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSeparator1;
}


/**
 * Return the JSeparator2 property value.
 * @return javax.swing.JSeparator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSeparator getJSeparator2() {
	if (ivjJSeparator2 == null) {
		try {
			ivjJSeparator2 = new javax.swing.JSeparator();
			ivjJSeparator2.setName("JSeparator2");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSeparator2;
}


/**
 * Return the JSeparator3 property value.
 * @return javax.swing.JSeparator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSeparator getJSeparator3() {
	if (ivjJSeparator3 == null) {
		try {
			ivjJSeparator3 = new javax.swing.JSeparator();
			ivjJSeparator3.setName("JSeparator3");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSeparator3;
}


/**
 * Return the JSeparator4 property value.
 * @return javax.swing.JSeparator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSeparator getJSeparator4() {
	if (ivjJSeparator4 == null) {
		try {
			ivjJSeparator4 = new javax.swing.JSeparator();
			ivjJSeparator4.setName("JSeparator4");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSeparator4;
}


/**
 * Return the JSeparator5 property value.
 * @return javax.swing.JSeparator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSeparator getJSeparator5() {
	if (ivjJSeparator5 == null) {
		try {
			ivjJSeparator5 = new javax.swing.JSeparator();
			ivjJSeparator5.setName("JSeparator5");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSeparator5;
}


/**
 * Return the JSeparator6 property value.
 * @return javax.swing.JSeparator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSeparator getJSeparator6() {
	if (ivjJSeparator6 == null) {
		try {
			ivjJSeparator6 = new javax.swing.JSeparator();
			ivjJSeparator6.setName("JSeparator6");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSeparator6;
}


/**
 * Return the JSeparator7 property value.
 * @return javax.swing.JSeparator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSeparator getJSeparator7() {
	if (ivjJSeparator7 == null) {
		try {
			ivjJSeparator7 = new javax.swing.JSeparator();
			ivjJSeparator7.setName("JSeparator7");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSeparator7;
}


/**
 * Return the JSeparator8 property value.
 * @return javax.swing.JSeparator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSeparator getJSeparator8() {
	if (ivjJSeparator8 == null) {
		try {
			ivjJSeparator8 = new javax.swing.JSeparator();
			ivjJSeparator8.setName("JSeparator8");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSeparator8;
}


/**
 * Return the LocalMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getLocalMenuItem() {
	if (ivjLocalMenuItem == null) {
		try {
			ivjLocalMenuItem = new javax.swing.JMenuItem();
			ivjLocalMenuItem.setName("LocalMenuItem");
			ivjLocalMenuItem.setText("Local");
			ivjLocalMenuItem.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLocalMenuItem;
}

/**
 * Comment
 */
private JDialog getLoginDialog() {
	if (loginDialog == null) {
		loginDialog = new LoginDialog(this, true,getTopLevelWindowManager().isApplet());
		loginDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
		loginDialog.pack();
		loginDialog.setResizable(false);
		ActionListener listener = new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				getWindowManager().connectAs(loginDialog.getUser(), loginDialog.getPassword());
			}
		};
		loginDialog.addActionListener(listener);
	}
	return loginDialog;
}


/**
 * Return the Manage_DatabaseMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getManage_DatabaseMenuItem() {
	if (ivjManage_DatabaseMenuItem == null) {
		try {
			ivjManage_DatabaseMenuItem = new javax.swing.JMenuItem();
			ivjManage_DatabaseMenuItem.setName("Manage_DatabaseMenuItem");
			ivjManage_DatabaseMenuItem.setText("Manage Database");
			ivjManage_DatabaseMenuItem.setVisible(true);
			ivjManage_DatabaseMenuItem.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjManage_DatabaseMenuItem;
}

/**
 * Return the MathFromBioMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getMathFromBioMenuItem() {
	if (ivjMathFromBioMenuItem == null) {
		try {
			ivjMathFromBioMenuItem = new javax.swing.JMenuItem();
			ivjMathFromBioMenuItem.setName("MathFromBioMenuItem");
			ivjMathFromBioMenuItem.setText("From BioModel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathFromBioMenuItem;
}


/**
 * Return the MathMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getMathMenu() {
	if (ivjMathMenu == null) {
		try {
			ivjMathMenu = new javax.swing.JMenu();
			ivjMathMenu.setName("MathMenu");
			ivjMathMenu.setText("MathModel");
			ivjMathMenu.add(getNonSpatialMenuItem());
			ivjMathMenu.add(getSpatialMenuItem());
			ivjMathMenu.add(getMathFromBioMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathMenu;
}

/**
 * Return the Minimize_AllMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getMinimize_AllMenuItem() {
	if (ivjMinimize_AllMenuItem == null) {
		try {
			ivjMinimize_AllMenuItem = new javax.swing.JMenuItem();
			ivjMinimize_AllMenuItem.setName("Minimize_AllMenuItem");
			ivjMinimize_AllMenuItem.setText("Minimize All");
			ivjMinimize_AllMenuItem.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMinimize_AllMenuItem;
}

/**
 * Return the NewMenuItem property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getNewMenuItem() {
	if (ivjNewMenuItem == null) {
		try {
			ivjNewMenuItem = new javax.swing.JMenu();
			ivjNewMenuItem.setName("NewMenuItem");
			ivjNewMenuItem.setText("New");
			ivjNewMenuItem.add(getJMenuItemNewBioModel());
			ivjNewMenuItem.add(getMathMenu());
			ivjNewMenuItem.add(getGeometryMenu());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNewMenuItem;
}

/**
 * Return the BlankMathMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getNonSpatialMenuItem() {
	if (ivjNonSpatialMenuItem == null) {
		try {
			ivjNonSpatialMenuItem = new javax.swing.JMenuItem();
			ivjNonSpatialMenuItem.setName("NonSpatialMenuItem");
			ivjNonSpatialMenuItem.setText("Non-Spatial");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNonSpatialMenuItem;
}

/**
 * Return the OpenMenuItem property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getOpenMenuItem() {
	if (ivjOpenMenuItem == null) {
		try {
			ivjOpenMenuItem = new javax.swing.JMenu();
			ivjOpenMenuItem.setName("OpenMenuItem");
			ivjOpenMenuItem.setText("Open");
			ivjOpenMenuItem.setEnabled(false);
			ivjOpenMenuItem.add(getJMenuItemOpenBioModel());
			ivjOpenMenuItem.add(getJMenuItemOpenMathModel());
			ivjOpenMenuItem.add(getJMenuItemOpenGeometry());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOpenMenuItem;
}

/**
 * Return the ReconnectMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getReconnectMenuItem() {
	if (ivjReconnectMenuItem == null) {
		try {
			ivjReconnectMenuItem = new javax.swing.JMenuItem();
			ivjReconnectMenuItem.setName("ReconnectMenuItem");
			ivjReconnectMenuItem.setText("Reconnect");
			ivjReconnectMenuItem.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjReconnectMenuItem;
}

/**
 * Return the RunBNGMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getRunBNGMenuItem() {
	if (ivjRunBNGMenuItem == null) {
		try {
			ivjRunBNGMenuItem = new javax.swing.JMenuItem();
			ivjRunBNGMenuItem.setName("RunBNGMenuItem");
			ivjRunBNGMenuItem.setText("Launch BioNetGen");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRunBNGMenuItem;
}


/**
 * Return the Save_AsMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getSave_AsMenuItem() {
	if (ivjSave_AsMenuItem == null) {
		try {
			ivjSave_AsMenuItem = new javax.swing.JMenuItem();
			ivjSave_AsMenuItem.setName("Save_AsMenuItem");
			ivjSave_AsMenuItem.setText("Save As...");
			ivjSave_AsMenuItem.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSave_AsMenuItem;
}

/**
 * Return the Save_VersionMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getSave_VersionMenuItem() {
	if (ivjSave_VersionMenuItem == null) {
		try {
			ivjSave_VersionMenuItem = new javax.swing.JMenuItem();
			ivjSave_VersionMenuItem.setName("Save_VersionMenuItem");
			ivjSave_VersionMenuItem.setText("Save New Edition");
			ivjSave_VersionMenuItem.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSave_VersionMenuItem;
}

/**
 * Return the SaveMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getSaveMenuItem() {
	if (ivjSaveMenuItem == null) {
		try {
			ivjSaveMenuItem = new javax.swing.JMenuItem();
			ivjSaveMenuItem.setName("SaveMenuItem");
			ivjSaveMenuItem.setText("Save");
			ivjSaveMenuItem.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSaveMenuItem;
}

/**
 * Return the ServerMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getServerMenu() {
	if (ivjServerMenu == null) {
		try {
			ivjServerMenu = new javax.swing.JMenu();
			ivjServerMenu.setName("ServerMenu");
			ivjServerMenu.setText("Server");
			ivjServerMenu.add(getChange_UserMenuItem());
			ivjServerMenu.add(getReconnectMenuItem());
			ivjServerMenu.add(getJSeparator4());
			ivjServerMenu.add(getJMenuItemServer());
			ivjServerMenu.add(getLocalMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjServerMenu;
}

/**
 * Return the SpatialMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getSpatialMenuItem() {
	if (ivjSpatialMenuItem == null) {
		try {
			ivjSpatialMenuItem = new javax.swing.JMenuItem();
			ivjSpatialMenuItem.setName("SpatialMenuItem");
			ivjSpatialMenuItem.setText("Spatial");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSpatialMenuItem;
}


/**
 * Return the StatusbarMenuItem property value.
 * @return javax.swing.JCheckBoxMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBoxMenuItem getStatusbarMenuItem() {
	if (ivjStatusbarMenuItem == null) {
		try {
			ivjStatusbarMenuItem = new javax.swing.JCheckBoxMenuItem();
			ivjStatusbarMenuItem.setName("StatusbarMenuItem");
			ivjStatusbarMenuItem.setSelected(true);
			ivjStatusbarMenuItem.setText("Status Bar");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStatusbarMenuItem;
}

/**
 * Return the StatusBarPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getStatusBarPane() {
	if (ivjStatusBarPane == null) {
		try {
			ivjStatusBarPane = new javax.swing.JPanel();
			ivjStatusBarPane.setName("StatusBarPane");
			ivjStatusBarPane.setLayout(new java.awt.BorderLayout());
			getStatusBarPane().add(getStatusMsgConnection(), "Center");
			getStatusBarPane().add(getJPanelMemStatus(), "East");
			getStatusBarPane().add(getJProgressBarConnection(), "West");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStatusBarPane;
}

/**
 * Return the StatusMsgConnection property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getStatusMsgConnection() {
	if (ivjStatusMsgConnection == null) {
		try {
			ivjStatusMsgConnection = new javax.swing.JLabel();
			ivjStatusMsgConnection.setName("StatusMsgConnection");
			ivjStatusMsgConnection.setBorder(new javax.swing.border.EtchedBorder());
			ivjStatusMsgConnection.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStatusMsgConnection;
}


/**
 * Return the StatusMsg1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getStatusMsgMemory() {
	if (ivjStatusMsgMemory == null) {
		try {
			ivjStatusMsgMemory = new javax.swing.JLabel();
			ivjStatusMsgMemory.setName("StatusMsgMemory");
			ivjStatusMsgMemory.setText(" Java Memory used: 0.0MB / 50.0MB");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStatusMsgMemory;
}

/**
 * Comment
 */
private boolean getTestFrameworkMenuItemVisibility() {
	// return true;
	return (getWindowManager()!=null && 
			getWindowManager().getUser()!=null && 
			getWindowManager().getUser().isTestAccount() );
	
	
}


/**
 * Return the TestingFrameworkMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getTestingFrameworkMenuItem() {
	if (ivjTestingFrameworkMenuItem == null) {
		try {
			ivjTestingFrameworkMenuItem = new javax.swing.JMenuItem();
			ivjTestingFrameworkMenuItem.setName("TestingFrameworkMenuItem");
			ivjTestingFrameworkMenuItem.setText("Testing Framework ...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTestingFrameworkMenuItem;
}


/**
 * Return the Tile_HorizontallyMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getTile_HorizontallyMenuItem() {
	if (ivjTile_HorizontallyMenuItem == null) {
		try {
			ivjTile_HorizontallyMenuItem = new javax.swing.JMenuItem();
			ivjTile_HorizontallyMenuItem.setName("Tile_HorizontallyMenuItem");
			ivjTile_HorizontallyMenuItem.setText("Tile Horizontally");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTile_HorizontallyMenuItem;
}

/**
 * Return the Tile_VerticallyMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getTile_VerticallyMenuItem() {
	if (ivjTile_VerticallyMenuItem == null) {
		try {
			ivjTile_VerticallyMenuItem = new javax.swing.JMenuItem();
			ivjTile_VerticallyMenuItem.setName("Tile_VerticallyMenuItem");
			ivjTile_VerticallyMenuItem.setText("Tile Vertically");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTile_VerticallyMenuItem;
}

/**
 * Insert the method's description here.
 * Creation date: (5/24/2004 3:38:47 PM)
 * @return cbit.vcell.client.desktop.TopLevelWindowManager
 */
public TopLevelWindowManager getTopLevelWindowManager() {
	return getWindowManager();
}


/**
 * Return the ViewMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getViewMenu() {
	if (ivjViewMenu == null) {
		try {
			ivjViewMenu = new javax.swing.JMenu();
			ivjViewMenu.setName("ViewMenu");
			ivjViewMenu.setText("View");
			ivjViewMenu.add(getStatusbarMenuItem());
			ivjViewMenu.add(getJMenuItemOptions());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjViewMenu;
}

/**
 * Gets the windowManager property (cbit.vcell.client.desktop.DocumentWindowManager) value.
 * @return The windowManager property value.
 * @see #setWindowManager
 */
private DocumentWindowManager getWindowManager() {
	return fieldWindowManager;
}


/**
 * Return the WindowMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getWindowMenu() {
	if (ivjWindowMenu == null) {
		try {
			ivjWindowMenu = new javax.swing.JMenu();
			ivjWindowMenu.setName("WindowMenu");
			ivjWindowMenu.setText("Window");
			ivjWindowMenu.setEnabled(true);
			ivjWindowMenu.add(getTile_HorizontallyMenuItem());
			ivjWindowMenu.add(getTile_VerticallyMenuItem());
			ivjWindowMenu.add(getCascadeMenuItem());
			ivjWindowMenu.add(getJSeparator5());
			ivjWindowMenu.add(getMinimize_AllMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjWindowMenu;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}


/**
 * Comment
 */
private void importXMLDocument() {
	getWindowManager().openDocument(VCDocument.XML_DOC);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getAbout_BoxMenuItem().addActionListener(ivjEventHandler);
	getStatusbarMenuItem().addItemListener(ivjEventHandler);
	getCloseMenuItem().addActionListener(ivjEventHandler);
	getExitMenuItem().addActionListener(ivjEventHandler);
	getJMenuItemNewBioModel().addActionListener(ivjEventHandler);
	getJMenuItemOpenBioModel().addActionListener(ivjEventHandler);
	getJMenuItemOpenMathModel().addActionListener(ivjEventHandler);
	getJMenuItemOpenGeometry().addActionListener(ivjEventHandler);
	getSaveMenuItem().addActionListener(ivjEventHandler);
	getSave_AsMenuItem().addActionListener(ivjEventHandler);
	getJMenuItemImport().addActionListener(ivjEventHandler);
	getSave_VersionMenuItem().addActionListener(ivjEventHandler);
	getChange_UserMenuItem().addActionListener(ivjEventHandler);
	getReconnectMenuItem().addActionListener(ivjEventHandler);
	getLocalMenuItem().addActionListener(ivjEventHandler);
	getTile_HorizontallyMenuItem().addActionListener(ivjEventHandler);
	getTile_VerticallyMenuItem().addActionListener(ivjEventHandler);
	getCascadeMenuItem().addActionListener(ivjEventHandler);
	getMinimize_AllMenuItem().addActionListener(ivjEventHandler);
	getManage_DatabaseMenuItem().addActionListener(ivjEventHandler);
	getJMenuItemServer().addActionListener(ivjEventHandler);
	getJMenuItemOptions().addActionListener(ivjEventHandler);
	getJMenuItemRevert().addActionListener(ivjEventHandler);
	getJMenuItemCompare().addActionListener(ivjEventHandler);
	getExistingImageMenuItem().addActionListener(ivjEventHandler);
	getChooseImageMenuItem().addActionListener(ivjEventHandler);
	getNonSpatialMenuItem().addActionListener(ivjEventHandler);
	getMathFromBioMenuItem().addActionListener(ivjEventHandler);
	getDim1MenuItem().addActionListener(ivjEventHandler);
	getDim2MenuItem().addActionListener(ivjEventHandler);
	getDim3MenuItem().addActionListener(ivjEventHandler);
	getSpatialMenuItem().addActionListener(ivjEventHandler);
	getJMenuItemExport().addActionListener(ivjEventHandler);
	getEdit_Annotation_JMenuItem().addActionListener(ivjEventHandler);
	getTestingFrameworkMenuItem().addActionListener(ivjEventHandler);
	getJMenuItemOnlineHelp().addActionListener(ivjEventHandler);
	getRunBNGMenuItem().addActionListener(ivjEventHandler);
	getJMenuItemFieldData().addActionListener(ivjEventHandler);
}

/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DocumentWindow");
		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setJMenuBar(getDocumentWindowJMenuBar());
		setSize(460, 536);
		setTitle("DocumentWindow");
		setContentPane(getJFrameContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * Comment
 */
private void invokeOnlineHelp() {
	
	PopupGenerator.browserLauncher(
		ClientServerManager.ONLINEHELP_URL_STRING,
		"Please visit "+ClientServerManager.ONLINEHELP_URL_STRING+" for Online Help",
		getTopLevelWindowManager().isApplet());
}


/**
 * Comment
 */
private void jMenuItemFieldData_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	
	getWindowManager().showFieldDataWindow();
}


/**
 * Starts the application.
 * @param args an array of command-line arguments
 */
public static void main(java.lang.String[] args) {
	try {
		/* Set native look and feel */
		UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		/* Create the frame */
		DocumentWindow aDocumentWindow = new DocumentWindow();
		/* Add a windowListener for the windowClosedEvent */
		aDocumentWindow.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosed(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aDocumentWindow.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of DocumentWindow");
		exception.printStackTrace(System.out);
	}
}


/**
 * Comment
 */
private void newDocument(java.awt.event.ActionEvent actionEvent) {
	if (actionEvent.getActionCommand().equals("BioModel")) {
		getWindowManager().newDocument(VCDocument.BIOMODEL_DOC, 0);
	} else if (actionEvent.getActionCommand().equals("Non-Spatial")) {
		getWindowManager().newDocument(VCDocument.MATHMODEL_DOC, 0);
	} else if (actionEvent.getActionCommand().equals("Spatial")) {
		getWindowManager().newDocument(VCDocument.MATHMODEL_DOC, 1);
	} else if (actionEvent.getActionCommand().equals("From BioModel")) {
		getWindowManager().newDocument(VCDocument.MATHMODEL_DOC, 2);
	} else if (actionEvent.getActionCommand().equals("1-D")) {
		getWindowManager().newDocument(VCDocument.GEOMETRY_DOC, 1);
	} else if (actionEvent.getActionCommand().equals("2-D")) {
		getWindowManager().newDocument(VCDocument.GEOMETRY_DOC, 2);
	} else if (actionEvent.getActionCommand().equals("3-D")) {
		getWindowManager().newDocument(VCDocument.GEOMETRY_DOC, 3);
	} else if (actionEvent.getActionCommand().equals("Existing Image ...")) {
		getWindowManager().newDocument(VCDocument.GEOMETRY_DOC, 4);
	} else if (actionEvent.getActionCommand().equals("Choose Image from File ...")) {
		getWindowManager().newDocument(VCDocument.GEOMETRY_DOC, 5);
	}
}


/**
 * Comment
 */
private void notYet() {
	PopupGenerator.showErrorDialog(this, "Feature not yet implemented...");
}


/**
 * Comment
 */
private void openDocument(java.awt.event.ActionEvent actionEvent) {
	if (actionEvent.getActionCommand().equals("BioModel...")) {
		getWindowManager().openDocument(VCDocument.BIOMODEL_DOC);
	} else if (actionEvent.getActionCommand().equals("MathModel...")) {
		getWindowManager().openDocument(VCDocument.MATHMODEL_DOC);
	} else if (actionEvent.getActionCommand().equals("Geometry...")) {
		getWindowManager().openDocument(VCDocument.GEOMETRY_DOC);
	}
}


/**
 * Comment
 */
private void reconnect() {
	getWindowManager().reconnect();
}


/**
 * Comment
 */
private void revertToSaved() {
	getWindowManager().revertToSaved();
}


/**
 * Comment
 */
private void saveDocument(boolean replace) {
	getWindowManager().saveDocument(replace);
}


/**
 * Comment
 */
private void saveDocumentAsNew() {
	getWindowManager().saveDocumentAsNew();
}


/**
 * Sets the windowManager property (cbit.vcell.client.desktop.DocumentWindowManager) value.
 * @param windowManager The new value for the property.
 * @see #getWindowManager
 */
public void setWindowManager(DocumentWindowManager windowManager) {
	DocumentWindowManager oldValue = fieldWindowManager;
	fieldWindowManager = windowManager;
	firePropertyChange("windowManager", oldValue, windowManager);
}


/**
 * Insert the method's description here.
 * Creation date: (5/24/2004 11:39:07 AM)
 * @param c java.awt.Component
 */
public void setWorkArea(Component c) {
	getContentPane().add(c, BorderLayout.CENTER);
}


private void showAboutBox() {
	/* Create the AboutBox dialog */
	DocumentWindowAboutBox aDocumentWindowAboutBox = new DocumentWindowAboutBox();
	Dimension dialogSize = aDocumentWindowAboutBox.getPreferredSize();
	Dimension frameSize = getSize();
	Point loc = getLocation();
	aDocumentWindowAboutBox.setLocation((frameSize.width - dialogSize.width) / 2 + loc.x, (frameSize.height - dialogSize.height) / 2 + loc.y);
	aDocumentWindowAboutBox.setModal(true);
	String version = "";
	String build = DocumentWindowAboutBox.BUILD_NO;
	try {
		java.util.StringTokenizer stk = new java.util.StringTokenizer(DocumentWindowAboutBox.BUILD_NO, "_");
		String edition = stk.nextToken();
		if (!stk.nextToken().equalsIgnoreCase("Version")) throw new RuntimeException("Expecting 'Version'");
		version = "Version " + stk.nextToken();
		if (!stk.nextToken().equalsIgnoreCase("build")) throw new RuntimeException("Expecting 'build'");
		build = edition + " edition , build no. " + stk.nextToken();
	} catch (Exception exc) {
		System.out.println("Failed to parse vcell.softwareVersion: " + exc.getMessage());
		exc.printStackTrace(System.out);
	}
	aDocumentWindowAboutBox.getVersion().setText(version);
	aDocumentWindowAboutBox.getBuildNumber().setText(build);
	aDocumentWindowAboutBox.setTitle("About the Virtual Cell");
	cbit.gui.ZEnforcer.showModalDialogOnTop(aDocumentWindowAboutBox,this);
}


/**
 * Comment
 */
private void  showBNGWindow() {
	getWindowManager().showBNGWindow();	
}


/**
 * Comment
 */
public void showCompareDialog(Container contentPane) {
	if (getCompareDialog().isShowing()) {
		getCompareDialog().hide();
	}
	getCompareDialog().setContentPane(contentPane);
	getCompareDialog().setSize((int)(getWidth() * 0.5), (int)(getHeight() * 0.8));
	BeanUtils.centerOnComponent(getCompareDialog(), getContentPane());
	getCompareDialog().show();
}


/**
 * Comment
 */
private void showDatabaseWindow() {
	getWindowManager().showDatabaseWindow();
}


/**
 * Comment
 */
private void showEditAnnotationWindow() {

	try {
		if (getWindowManager() != null && getWindowManager().getVCDocument() != null) {
			try{
				// initialize fields
				String oldAnnotation = getWindowManager().getVCDocument().getDescription();
				// show the editor
				String newAnnotation = cbit.gui.DialogUtils.showAnnotationDialog(this, oldAnnotation);
				if (cbit.util.BeanUtils.triggersPropertyChangeEvent(oldAnnotation, newAnnotation)) {
					// Update VCDocument annotation
					getWindowManager().getVCDocument().setDescription(newAnnotation);
				}
			}catch(cbit.gui.UtilCancelException e){
				//Do Nothing
			}
		}else{
			throw new Exception("No Document to Edit");
		}
	} catch (Throwable exc) {
		exc.printStackTrace(System.out);
		PopupGenerator.showErrorDialog(this, "Failed to edit annotation!\n"+exc.getMessage());
	}
}


/**
 * Comment
 */
private void showLoginDialog() {
	cbit.gui.ZEnforcer.showModalDialogOnTop(getLoginDialog(),this);
}


/**
 * Comment
 */
private void showTestingFrameworkWindow() {
	getWindowManager().showTestingFrameworkWindow();
}


/**
 * Comment
 */
private void tileHorizontal() {
	getWindowManager().tileWindows(true);
}


/**
 * Comment
 */
private void tileVertically() {
	getWindowManager().tileWindows(false);
}


/**
 * Insert the method's description here.
 * Creation date: (5/10/2004 4:32:17 PM)
 */
public void updateConnectionStatus(ConnectionStatus connStatus) {

	// other updates
	String status = "";
	cbit.vcell.server.User user = getWindowManager().getUser();
	boolean isTestUser = (user!=null)?(user.isTestAccount()):(false);
	switch (connStatus.getStatus()) {
		case ConnectionStatus.NOT_CONNECTED: {
			status = "";
			getJProgressBarConnection().setString("NOT CONNECTED");
			getJProgressBarConnection().setValue(0);
			getChange_UserMenuItem().setEnabled(true);
			getReconnectMenuItem().setEnabled(false);
			getOpenMenuItem().setEnabled(false);
			getSaveMenuItem().setEnabled(false);
			getSave_AsMenuItem().setEnabled(false);
			getSave_VersionMenuItem().setEnabled(false);
			getJMenuItemRevert().setEnabled(false);
			getJMenuItemCompare().setEnabled(false);
			//getJMenuItemServer().setEnabled(true);
			getTestingFrameworkMenuItem().setVisible(isTestUser);
			getTestingFrameworkMenuItem().setEnabled(false);
			break;
		}
		case ConnectionStatus.CONNECTED: {
			status = "Server: " + connStatus.getServerHost() + " User: " + connStatus.getUserName();
			getJProgressBarConnection().setString("CONNECTED");
			getJProgressBarConnection().setValue(100);
			getChange_UserMenuItem().setEnabled(true);
			getReconnectMenuItem().setEnabled(true);
			getOpenMenuItem().setEnabled(true);
			getSaveMenuItem().setEnabled(
				getWindowManager() != null && 
				getWindowManager().getVCDocument() != null &&
				getWindowManager().getVCDocument().getVersion() != null &&
				!(
					getWindowManager().getVCDocument().getVersion().getFlag().compareEqual(cbit.sql.VersionFlag.Archived) ||
					getWindowManager().getVCDocument().getVersion().getFlag().compareEqual(cbit.sql.VersionFlag.Published)
				)
			);
			getSave_AsMenuItem().setEnabled(true);
			getSave_VersionMenuItem().setEnabled(
				getWindowManager() != null && 
				getWindowManager().getVCDocument() != null &&
				getWindowManager().getVCDocument().getVersion() != null
			);
			getJMenuItemRevert().setEnabled(getSave_VersionMenuItem().isEnabled());
			getJMenuItemCompare().setEnabled(getSave_VersionMenuItem().isEnabled());
			//getJMenuItemServer().setEnabled(true);
			getTestingFrameworkMenuItem().setVisible(isTestUser);
			getTestingFrameworkMenuItem().setEnabled(true);
			break;
		}
		case ConnectionStatus.INITIALIZING: {
			status = "Server: " + connStatus.getServerHost() + " User: " + connStatus.getUserName();
			getJProgressBarConnection().setString("INITIALIZING...");
			getJProgressBarConnection().setValue(0);
			getChange_UserMenuItem().setEnabled(false);
			getReconnectMenuItem().setEnabled(false);
			getOpenMenuItem().setEnabled(false);
			getSaveMenuItem().setEnabled(false);
			getSave_AsMenuItem().setEnabled(false);
			getSave_VersionMenuItem().setEnabled(false);
			getJMenuItemRevert().setEnabled(false);
			getJMenuItemCompare().setEnabled(false);
			//getJMenuItemServer().setEnabled(false);
			getTestingFrameworkMenuItem().setVisible(isTestUser);
			getTestingFrameworkMenuItem().setEnabled(isTestUser);
			break;
		}
		case ConnectionStatus.DISCONNECTED: {
			status = "Server: " + connStatus.getServerHost() + " User: " + connStatus.getUserName();
			getJProgressBarConnection().setString("DISCONNECTED");
			getJProgressBarConnection().setValue(0);
			getChange_UserMenuItem().setEnabled(true);
			getReconnectMenuItem().setEnabled(true);
			getOpenMenuItem().setEnabled(false);
			getSaveMenuItem().setEnabled(false);
			getSave_AsMenuItem().setEnabled(false);
			getSave_VersionMenuItem().setEnabled(false);
			getJMenuItemRevert().setEnabled(false);
			getJMenuItemCompare().setEnabled(false);
			//getJMenuItemServer().setEnabled(true);
			getTestingFrameworkMenuItem().setVisible(isTestUser);
			getTestingFrameworkMenuItem().setEnabled(false);
			break;
		}
	}
	getStatusMsgConnection().setText(status);
}


/**
 * Insert the method's description here.
 * Creation date: (5/7/2004 11:51:20 AM)
 */
public void updateMemoryStatus(long freeBytes, long totalBytes) {
	DecimalFormat df = (DecimalFormat)DecimalFormat.getInstance();
	df.setMaximumFractionDigits(1);
	String usedMB = df.format((totalBytes - freeBytes)/1000000.0);
	String totalMB = df.format(totalBytes/1000000.0);
	getStatusMsgMemory().setText("Java Memory Used: " + usedMB + "MB / " + totalMB + "MB");
	getJProgressBarMemory().setValue((int)(100 * (totalBytes - freeBytes) / totalBytes));
}


/**
 * Insert the method's description here.
 * Creation date: (5/10/2004 4:32:17 PM)
 */
public void updateWhileInitializing(int i) {
	// extra animation while initializing connection
	getJProgressBarConnection().setValue(i);
}


private void viewStatusBar() {
	/* Hide or show the statusbar */
	getStatusBarPane().setVisible(getStatusbarMenuItem().isSelected());
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G35CDB7B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E16DFD8DD8D457552EC9B0A111A4A4B189C9C8CBDA5A102FFE3D3631A9E9793E5256B4B625DFEDEBDAFAEB93F3E39B13C2EB3E1846B636BD72A7BA88280028281384958CA2AA9AB5287CAAAAFFD1A428A4B2B2C79899E6484CC190095E35FF56BEBFF30691525C67BE7739BE4F123357DEFB6DF72F3D766F59E70F1433B1A2F5F1D20EA4ADCE15783F7796CBD24FA312D4716705AFA32FDECA34C81AFFEF81
	2D106ECACD013F6D90979F11E849163EF5A69D42CE8817BC1CE8D98D4F2B246F1C19968E8FFE728901386F16AEF8F674FCEEE844FC165070AFD2B360EFA6D0BF70485F9809647FCAEABE67CF66FC2445C91294361848242695F01E8461FC20D6201E45CCFE827CDDCAF31E38FFAF176B386BDEE941B3ADC94BC9920DCE24B9BCEDCA927BEB156297CFC9A2F91526E570B49590D600C86113A50BD2CAF8AD3D5D873B4EBB1452CBDD3253D95A65F448AE2554AEFBFB95F77F7E7D356E2E01BE60FC68F0595D0312D4
	14CCF4DECACB27BAA4E9BE681BC6F92F5BC9BECEF88E828ACFC6FE0CCC788B49F3CA2225A8854BF6E0CB85475EFEA5D2CAF96F8B49D9FE4AD619424A541322162DE551BB16B5349E3E5FC46C9D89F1B300E683C9290996ABD0A550BADA7FB39A37425F2A73CA0D3B2F4F6D2A6A6F2FF65ABD0DEE3B6C04677D7BA10673CE48DDEE0FDD12D89D1727151860990DD83A6AB127E3B6095A0575BD6544C3526C471524A5A6B6199DF5BA29BD155922BFD535894B7B0A5F3CC3D3757E284F7BC3C91BF77E9B1312D3CD72
	0EF9F1D2F2A457932D49FBDEAA29EB872D6BF8F8DE4C7D03713D14DF12267219EF3EC9FD0604ABA0AEA28DFD23BD9331B4245CA9E56F98B035C3588FAEA625ACE1988A169831CC6BA63A6B1730BC9B851697A9BFC143E7D8FEC0B112F0E8FA22E55132C46EDF4F3410365A339C7C9AA89CE89A50AC2079C0A91968E3AB1A36DF270F3558BCCA750043E917BD92CB7BCCD39E7C1507940F6D284B2B58DCDDF21B4D63301DF74ADE094B7C320958603CAEDDBC757DAE4863086C12BDB64561F601F6DB1F2C489EAF13
	F921E985117148B4365551A7C386FD7D926AFD39E995E937B62FF22A5FEED3E4D502453F5AC46A64122D8DB40282F8E6F6F96383E22FC2A8FF85D0033003331968BBAEFBDC32F37F7E86373BF7203F1514C48A4FA4F63E1B769D1D70BC1409B6FE6D84614D0170C221674B4DABB5FAEA9DDD843E4DF3995B18DBA67DF1C6967A4C1F5A51E7EA17BFA815BC6BB57519323913120B32182FD4E6995B4EE52A1360E26145F2FB00F61B11E55E262E3F2FD89BB00F64F16A4F94F5E5EBA5F55583D80300A23350464FB5
	DB194FD65B3CB2FAE933879CCC362B96E7B83F539D46B113FE018C10E4AC4A22FAA4A997E8B54F0F68DE8F349168BD20CDC0DB000A015E855A86C45A4AEE2023C09F11FA865A475B5F7BC04DC087008E91FCC0B5C0F5C027010EGFD82F496E8A250B9E14B17A94698A85FDC200C6CC4CBB9D087D090509420D9C00B008AD7004F82A9C061C053019200F2D602BF835901C20026814D86CAD985738920D6209120C820B82085C085B90916DAA0A750E420982039C0993910BFD087D0D0AE7A548C39B3C92D1FD40E
	BD53E0534CGF645747EEC0B713BF99D6C63F6B5336991DE8F47397D1BCD7C68B43777C75C5E017C6E136B744F0963746B7FCF239373352E8BC6DFCB564413FE53424368F7E42CB07A9D26C75FA37361F7A45577B01E78A071519D9273BBB31FA37EC67C147868AE09792691BB71CB620F44179B2F232CC72E53A6477FAF28177F97090DA533DA087F4817E031D0AB774BAEBBBCF8F95CEFDB082F71794D8537C87382657743FC2886A6A0DE41FF29057821CDD1BC0E73830AFCD2D694072BDB0D7FB34D4BBBF03E
	DF1DCAE1DEFFE9A1FE6E9E04791010FF33054CA53A5CAE17CC87B51104477F1D4EE5E427CC16BAB56E8117427849A748FC20D73E4C67D2CBCE24C9E4AE649CA073B2561E265AC89B6A77B87AE028A4D3BBE9D1AE1967BC16162F31519460117560CC78BBB79767AC036F601C25F078BEA976DCD312591CBB6CABFDC935F9EC1E511E274ED9982605A74C317F034E29B85F4B303ED1CE529A57F4EC0E7060A922E7887407GC566619CE178A40947F9981F9C54381DCEE6CAE1636E56ECD2A772A783B2CCDF49046F
	38301B2BF525A12E0D5B1045DFEAA5B6F4EA660AAD2B098D8F7560BAB986704C82DA10476CD83E1A590149A5BBD0AE9C425300E62DE6F25979DA399F893992605782597319DC24CE6E360BA8978B7CF80D5CC21D5C41DE144BDF13E8A9DB234A352C514A7D37108B86FE84D06C9AA6A72D554ABD61C4393D40EFD96BCF6EE29F4A7583BF582F5C86974AC591990D5C9CF8DEC47220F22707D1AEFB9D2C515729F2756B347A16DFC1399E60CF5048C568643EAF64E2019F3FCE1F6F42F5186F9BA3A817D1GF33282
	D52E36C02B6FEB1F221C9D78A39A39F01D5C392BA8B78D78F19A39841D5C2AEBA817329E66EF6BD5390A75DA392705DC8770950D5CE41D5C95C9648B7CB80DDC02CEEE7BE2D15E8DD05E8D7E703DA864EAC126C3A3B732C1ABF7FF924AC5GBF9AA8FE03193E334942CFB7021F8235ECB4135B1802F221909F25111B31D1AB77CBA1B797780BB4F285D62D5CAD29A8D7817CD6A045EA56BE0E0B7D30E9909F67D76E1FC2AE8162D35E72A777789214AB84198A3FF25D6922FE090CDF39F5CBD1EEB248CC71AB77B3
	A19787B2F37D4A5D34CC785F5BE033377D493DE791768319D60D1C7236D66E0FC2EEB27027G453D4D64B25E514A7D0F8C14AB87FE8310739DA6B7C5A767DD0EF271401F8F14DD4871956A70E50AFE887841C0D1DCEE1ECE6ECDA11732894A8BD431097B73A6A64746273F2EA5E3A65D133CE83BE49BAA758E42383FFF7F3143E4CF036DBD2EDAC246B5B2FE46ED42BD46970F1331ABE5B36886AA5F0C636B4F17639E63645EFB25383CC9497E76CF9BB6737D344D6A781A117F0DA4B6B64EEDA3F9CE0538584DB8
	AE3E5A2A5D672872FA5DDD8E3A4542473408D35A7117713EF2EA997C3D6070F81523B0C19A42716FEB2788DE32874359FCCF2A27877747E6C13E99DBE01C5AC278C1C7F3B458EB0167848A85CA267AFE5633937E5A68GDD4A7E34481E8BEECF1FECAFA216AD358DAA25F42ED6DAC5236B48F3B156C3F1931DDF7538872B4E3B8714EA77D0D1F19B5FA77C522ACA74712F5FA9D5DC2BC8B25B378D4EBA1C14300559B227C8356904CB4FAD198C444AD7624860F55F89B2E1C5D83E67F6E84BB79378D2B1741745D8
	3EFB9CE47D60D0643ED2725FC9452648B5BDB6D737EF710EC2BCAF9CAB5B17BEA57314CB8EF910A49B70D65BBCD0B806674F824FDE482B3F98719C339A6D9D85F1F182CF5B454FE66FF9AB085EAE275BAB33C999B1B7770147AFA226B910DF7ED6447460F6B3CCADDBF1FF3F6A83B26712079CE45B516968223E29515B5D0BFA6D10A6DC687D61F2235ED99037D068FDF4BF59CBF74903B80DACEA70DF4277557C56B9B13F0CF7E1FCFF9773DB385E185F8844C53C0B363D517959ECFB7F47E43D690695497582E6
	F81F97F8278116840177BFB71861ADAC01BE14263B27CF7890707ACBC41B5DE816AECA24BB6242F4B140DBA052D53CE5D64FA55B30BE3E692673EE5BA5D9146FCCF19B6BABFF674277B4155BB01F9B07B11FA160CD5D067964EFB64BE71E4867217DB906FC2A3CCD7220E8BBFB2E205EC510263C9475DE5AE62657D9AA5EC3D510F8C7DF3F5B2334B7B608C2205ED7045E8910A6DA68DD3E49CC6FFC08E7E51FB002E5CF590EE537FE0A3AAA0027ECC7DDB76CB66A1A82F1B3378B9BD72F647DE1033B5B612AF558
	1C6EEECDDB1AA5744E05B485E528B72F42CCEFEB996A7D5191124EA3731529A8F370D55457833291C21F6D20193EF821AF1C0EA3AE37F2DAD6A8BC0E2F629A6ACBG59429D286FE015D1DF8744CD58017A425A49BADCF1B865FA3747B16CF6A9B627D66FFC21F7B2240993FAD32A4D74266CC43DF32AD1EF1B6CD120EFF2BAAFEB75C6CA28B79F52346CC43D4F186A8D96FA9F3BC05FF5583CDDB6BB6FC93DDA3D6D0BD1EFB82419A574465418694D5805FE131104692C40EB5F05699EA8B6734150DD08675BC539
	5CEFEAED0A6D3CCD573DF3CC31C2F7A4241BADF4B79EB02B6B1CF26C9737A40F37DFE47986A5E33EC52033339C73CD5CE94C170C3DE1A25FBFFE46FC6BD3B05FA920F32E4837E90B19AD8BF623AD572D4B26ED6592F8CC2B7BA474C3F651DE96891DE5A05F339BF51EAFB25399A1F47EEE8F1943F5397B7AED9E289A258755F22CD3D34598GE992045EAF2DB56AAD5C83EB65BDE82355E91F4DC6CA9A665B81BAA76F41FCFB5619659B37877D34E80918ABGAF7FBDCC37A25B182E85621477B05DEC11AE98F831
	A25D43AB4C52AD9469C25345183E9746743D186E69BC1F318E62A276E23A5A25422E40CB906942D61B25AB5C0769960AF4FB01573F8F53FD1CEF16AECA241B32CC0C2D40DBA0527D5A54AEA57BB1DD278553D582EFE8BF262BACB5732B297BC5BF7C96690764A1B226E986B45166F3B2D06FF4C833C8681DD0E226377CFD742BAB991FEDAEF4E755BA5E9F5559E1DE68021102CE8B55DE09610B97786AA16F896FA33E042DE67822853EC34BBF9B3E1D9757F3FC2D3217EC7952F55F205B536B5BEF06AFC70CF110
	FFCA85E23C3B5EECEDD4D1019813B3BF9B4609DD244FF038AE39FB65E6175361126BE5E73FEA3B4ECC445582F9868BDC8D070D38E2A1EE2E407574E744D5F6B51B5B2E3A6908B09743D418051896C2FEE5879053936F1A55E74F8144B4A96B33E12A4CA56FFCAEB64A2E81328EBB6C101DF6B2921E2BB2688A3404606F3372171033ADA300AF74006FFB77C883AF9A426C4C47078D247CF1870C67D2EC14BF7B0071DC4A4B47F15D1DGF1AD87711C02371D6CCFCC0370CC20F9C05221C40B952872906E8B6CEAA3
	6F35C6BD87F25425489E174DF9D27782834FE33411FCFB654BBC1C58C6ECC95FB988BB38FA821DAF6AB8243785CBB792B05D84C3BAD60FB3D2899613FD992CD97E4EE365916DBB0FB0509583B487E841A11C17FF77A84E4BB3AAF11F6653435AFD1A182C33C964FD0059BECDEDA543E72FD47794F244D93075E748BED3A44445824583ADG4A2F02BE94283D8A6BE8704383016A087ADE2B3B86F875EEF7EF0D715D113069CE075126C3D5FA9B1A57C525CF3AD2C3F8F215D9DD7CB06B9D733A2869113BFA2B5DC3
	06BA69ACB32B13A920BB368A6BA4F7E7BA579FDF056794DE9FE73912AF86AAD7F635BE9D43797ED2B31CC5A0DBD10DB8EF30226F34D6A34EA7FD723BBE1CCF874499E24049B07CFCBBE20894987AFA4707610ACF3A8D0670ECD3DB5DEEB15A0A745B8BC0B63D86ED7537650853DA03B85FF20E8F67F61FF4C61C6DB5E6B8CB8B4CF07603EC104039FD83628C97B8FFBFCE1C2F8544B92B462CCEDF9798928406877A460761D11FF4C68C0535E6983E3B91B1D454A206C65778B01C75C9E774ED4594433EC26C87C2
	8406F917092E69353E632DBFE269020747077DBE1FF4C66C7126581BB7A3767982FB451571E1B866134E0821284E8C433FEF937BEDF508E17EB8B17CA3A006A1D38C351B508E218243449122EBC65DD86BF073276343DE6E134E08FDF61DD9FF7177DDE6E3408210CDBF0C7DC574EEAC1F75B0166FFF0E93673C00B85B8F1B59383182B1748B8CF7DC9D9F06F01FF4C68CD12698428EA206D801217A5A78B0347824B3E2D8F8582C3EBEB9E4D6DF59C7E04DFE846BEB20CA74EBC79067DF4609B3C58A582F9DB133
	557B5508A1C4E078B79FDD5707A1BAA0066926989657A006598243470B47074169134E08A1275E8C43EBB568B3A57508E1E55278B0D8FD5299B158CDB14CACCE67BAC684069F0D93432C00982619E288BA00F6089398EECB9E9F06B01FF4C68CA9C74DB0946EC28C85C791C3D34A78B0F47824B3E2E8B545B0F18BE2F08A8CC9296343106D134E08A152944383C508A1C6E0F8E21C98267B24B34E3D969CB56B478A57987B310CE30916B2205AE3580F7DE6AD365F0EE308F35867DB1B6B43996C134E08F372B1B3
	DBFDF19DE218A2B014AE999F068A1FF4C68CF30F19596A76CC232D487B61C5A01BFD9CEDD51F0DB80B0EA34E7FB5CE1C7383626CBCEEE62BD9AB90431040F0DF7A78B0C47A24B3E218FA5C4CD6C7F24D7CEA86484E96367AC79E62DCA0F09EDBBABE1C6DBE690CB8CB9A4CEC75335508213681B17CE31C98B2168542B0E20A615EFC44B0D9E078260F2E6B43909B90C31CA906CC61B3F385068B1671E1D0FC52159A42850DE69886CB31BFACEFC48CEBB346072148A71D910353944337CB508EC18243F363441090
	90C30CA906F75EC58C338406AFAD9F9F0629BE690C98B21A4CB07C389EB194B689FF489C27BF7824B3E268E8B26BC362EA4D66588A4886B7E19FF253E14499A1F0EE4D9A9F4E3DBE690CEDA75E54D609223E66C3BC7B56EFBBBD2BD7541CE8E9E8C65EAD1457594C4A41F8470E911E823C90A157FB1C1E39037074E6AC53C78D64BC7ECC916E266179A27C6763013E25A3E9C70B9F0DD89E698D1F6777FAECFFFA245D7F3794B7351BFFCBF1EB3B793794F752B39C648537CB51FEF90A7177370F7E2D45975B4D3E
	35D8CF4B7912C24EB778FCD751E46B13399DD6C9DF69D94AE56A94F78DF9B7427631172EA65F9779F927A0B9DB088FFCEB897AFE8E04CBDAD85D353630EFC7195F9DBB02FEB72D854F037E061E2BC900F04A870916028F50BFE20F1A3D7FA87F403FCF30778A11E749FB32FA1033830DGCD861A76813ECF58FDBA60BB1F3A21D15E79ECB9633F3ECB4F1857F77999F216556B9E70F44946BAFD7FCC3E08D35FDC10178224EA18CCADCD2F58BC5D320FCF9C2769D91C3F742DE77C798D730D9F67E5D13F73FAE5AF
	FD19C2DE7CF11FF0B834BE31D374A1E1E5224F7FG6BF24B8ED21799A792AD05C095A74418381354E56B89FD5D751C70DF17AC6F120B5A3CF70B3C3DCBB16F119318F79ABDB7B08D42F1C0F3C55EB7DB4D7CE8D1403C676B725EA37A14DFEDB75317FDB2103E48DE2D3E77C4D91E3208F16BA41625153E536F00308294F2924B72CF1F3111D0E4403C5B1D4BB4F96FA8433CAF94607CA5DA64FDE8BD49FBBE0453DB93AD56D64C3BFC03D95EFBDB8365DD50274BFB875A71EF267A9A826A1B295737D34CA3B71A69
	6B8C28AF482553378B759DACB45327F0FD41A6FA59D8784F4B44266190BF25955F4DFFEFD817C7B966513A59AC0FD82EFB16C99ECC1F770ACE5FEE54774DEDE67A6685344116911D3EBD286F68A653364375E51F72E703F0FA1E3390624BCF218DBE7AD41747DE74415D65687F752750872717939F1CG61B020292750877FE337991E999C47EC93BCAC6F95D7F5F96F43721D28B053B71F6BC9E973276FA91D3E1DE5286F6103E67A72391E923F7AAEDF53695B0136F96C90364F4AB6344D8D1544B6C3908E850A
	EA937B9BD5263EE41227BE6FED12AEEF511EAA2B4D744D8A286F853DBE511E52EACCFDB3203EFB976B7409363350D45FA22EAF7BC3FF36BE1A2453779E6AFB3658CCDFA15733977EB698F4B2FDFFCF52766BG0F6B3B7500E9FF44F5A8FE71FDBFD92BEF0750D73C4BCCDFB057936ED75F4494DDF977223E5B3618691B4A75CC772BEFDF2ACE1FE8CBDFA8B253974F75A4785517182AADAF798E1D2D253AD61A6DDDC96D09161CF61CCFF62C413E23249D5B479F571076E10770885064F631A6DEEB06EFCAFBA07F
	7BC61A363C3BC4DB0FDCE75A5E826A1317E84BCB3EA9667300CCB11F92E5E927E741B2CE43FC8A286234F8571CED16F76B69C0F92FC95715C50C453FD9E1262FA7203E1F6A756D4432DC4B95733353D8164CBCBABF03F09C50DCD1166455266DB8E05EB7AC5565AD7A19D9267A324F845237FB19CE1F68E79E4CB76D97826AFBD92FCF0C512BCCED3DB7203E07AD3AB1CC74DBA3252673A8033ECECD18697BA0C307CF0C79B1A526731E0078F2176B7489FCC56F1A76DB81757DC627EF27305FFF551B698B8FEC3F
	CC1D3EBD682BA9F5682BD34F202F5EDFC7FCF59E04253309167C33682B41074D72AEBB9BA8EFDB164EB6228F7EEFD35B548654F7F889D94B5B658B368127D2C3BEC5EB6E67D7CA81FF72D9FADE126E5D10F3F96DE7F18E76854A232B76EA1B072D6D3FB1C84E6FDD70587AE0C9F832DF6E121C9DB47DB16CFF63A1FD82D08670CB009ABA4477DE47098E4521B8499E42348EF2975F4367A501F3C3A9D9F732AFC2E1ED2A50ED8D9711E5FDFCD803360FDF5841768A8ABECA3414FD04673A5F276756C9B96A01B761
	A3BC37FD633E35125FBD89A89D6021F5B9C453C7C33A19C073BE42F30CC31B719C63142F5EA945671BFFEFBA2775EC1274B12B0FC27E171CE334AFFA077BC4739153F17EE37FF5484E33B65693DC4A476CBC6B9241BFCD79A19ABE7F460D6E1310F0A444251F433D37DF53B31ACE880F1C43BD0EA9E77D6FD1BCFE56FC0F62493366FBD25FBBBB7A1E5453E77D6DAD70B9F119E97BBF9748BE8F513D0470F34C8E29027FD54A1F2A61B37BEC23FCFACE9F620ABA51BEBB68F9499088C7885E70CE345934CEEC5BC3
	BE6FD08845F686423919FEF7B02B1361A9967C9A4AAF3329FC7EFD925D27A06190080BBF0F189E36A226C2BB729237A32F4C0EB81F71F9D7C128429E8867D5FA863F45EE74375BA83F47EE7437B39968EF93A0EE2E4014C767A975F22225DDC6CC3D85E6186CB243B4A47BE2E3F9BFCE779AC2E4A3266FD1FE24EC44D4379EB145C01C7582E2BA3E81B185895E0A0D488B953CDF8BDE38601DAAC49BC7895E9314B78D42B3AEE0DF17B7CC762FED1E6E9D2CFFAD9996E7C4C43A5E4D28ABC17062B6232E050277E3
	FA76AC239B7A3AEE64F5EE4234C502777DCD18363C9BF1BCBE22477163916C676B3B31BE76171B55C7C7F7A09F593B1B58373F1B595DA27807A9BFD443E775718CDD271370D4084B69C15C33F6E3D90684EF779E428B02F01860B9AAD0EE0A60BDD301F25102B76DA04A4589DEAEDD9B47C3B821874B7D75C3E665169C2C5CB98EFFFE78BADDD397B90C65CE2EA27CFA07315C37D4E239FBA0AE4E01186E2A926D75A272BE2CC6DE05602D2FC1DE3D60E555A22FD5707AA92F93420A60A59423DC3060B5EEA53C49
	900E923C7B36226F4488DE84BDCBB39342F384AF155AB68142D2AF72AA69F9179C88978A5EA314D78661DA153785655A85AF0D1E9131C3F8C8703ED504F2A10217D70CF2E13D381EFBE825B8B3510BF3312D2B082D67C2F891D00E936B5A36462C2ECB1C01FC7C5CDA222F52E99CD7AED2FE2B53B82E3C3A8647159E080BF3A27E57699913323EC4CBE59F723E3B8EF98DFD223F76F917C8283DAF904EB83A76F376997B46F84A8F6AB3760D9FE7E15F988EF1128BB159339113DD70662FC0DE3F8BF186651A619C
	F18542F9A3DD57053A0CB86F207CA81791E7CE9E620C0538C2B7E2DA3B9AB1858B5E9F85EF3260FDA39FF9910237D514E70A605DD30AFDEC3460AD203C69901EA3F83F246F4F93A03CC8708E517723697DB0776FC75E6F6B45785C0FB6DBDAE73A9E688FE4B34BE1E2035AFE63B7CE39145F5AEF7C4669E13A9EA1E1BB444D90183EC85FA517FC82FD4BA748DBCA4BD38F6176CFF04C98DAC26E6050CC13CB59C7E7B0A7A7B758AA5E525A66F3CD4D2D75C71B0E1CEBEEBAD75350FC320E5FA192B1283D57FA6F32
	CE53FB4F68F87F899F6F795F20EFBA9633F6FD4BB19C2326C25C3CCFE81FF0CC7BBD9B4139A3053DE7E771AF6962712EC3B5FE4DF1EDBC417AC032B67E38AEBE156BA815708E651FEC42797F221FBCACB93FF55E6FFD5DE59E7EAE137F4D3F4131B82AE9EB9A53733333DA7BE4BFF8ACE9319FBDA1BCFD18C7DDC730354CEB45FE6E52A12BA5A7BF0B59A04EC1FA30EF2C27FDD60A976691C065DE744BAA1FB3D001082FE5461C0E796DFC3A46EA70B23FDDAE787F247CFE8D1F7973D54AA7614990A7A9784D5E43
	F6E287A7040301A2002201620196A8383619FB3ECC8A707E36555D5FG0B9F27E639425A4605A35806538750D6A769FAAB874265C08D02FF0E7249FDCA4E81F61F9D637F7EC820B385286BFAED5820116567398266114CFDE1AC752BCD3BCA7A6AD2B20FD4E0A148566D8D9708B77379D6995AA9C45863119D04978661E8411BC2F9648EBFF2CF99636D5AC130C70F217CDA8A8B100E6551C07398CB790D368B943FCA2A27EBC42FCC6ECE146DEC2EFDEE275823851C4CEE6EEE55EEF7AEC53B4D95B6AA313490BF
	02F07AA5D833GD5G3582B901C2002200E201E683AD844A9E847F81EA879A820AG0A861A85B49FA8FD88F59F253A493EB8391F065C11E89DE2F78746733B81AB07585DF0645E374EA1F6BF9D39CB0C5C6BC56E9E1BB0446E86A47715C58C317B9379D973E5150B99EE02D7EB9F02811F897608C1FDFC7B20F99D4672F27B33FB880FA3F6A9B768182DC9C76CB84BCF9EC8D6EEC7E2ABADFF21C64F9057919DC057E7A1E6CB195A12784DD2C37C964DB3991F5EB2442F7723170C0516D17245FB29C99F3B4E9017
	2BF9A6EDE853F51401744F45867EEA4DB35EF37D4E67E4C7C22C3DFD3BC7924FAFB948B3EBFBAFD8306D450A7691C477B662A01CGA4DDC6FEA86513BBC0499D929962FCF6E706315FCDB078CF9C57B3FEDF386C1307319FCB16747D75D8083F534D54776D393D2A1DEEACC0BB65DF46B9630B8538D6AC94B6FA126E356C05F087508441FF0A72493D28AD7CBED346BF3EBE50182525892358907374351DFDCCF90CE6C333711359EA2FD3752F33FD6A73BDAE7579CD32ED4AED7D3782120F6CA2D7615A795E7B73
	05B85F0D3C0CF3709A3AFF24F886E426231CDC3B4E65DF5F0C63CA34101F33CDDF079FFA547C073DEA5AD7B6E1DEB35434A324EC97ECCE2FAC6A7D03F22C775922AE8F523B3466C1B8FD98468B20CA200EE10CEF2071057C9E5721E1F6EFA9392B15454FAC57568751C3F410670EE15F7ACDB7617923CA0161E5DD9E5A36E1567F0DE5CE30D45873E1C52D4F06BD3E755935876BA7EC98477D5881358EDE2B40BA089271AFDED2F5169C7255D9F38853448CE3BBFC6A905651CC415BDCC9F833A1BCDF58644DCAD2
	AFA9D792ADA5C0ADC0CE2020ABE2DDCA6F8AAB60776012BBEEA32F30BBECD97C6D15E66DA8086B9BCBFFC372CD5124E991983EEA1A07E50CF50475241D33AD9175F6ECC8ED93FD1755675CAB6A735E91359EEE29752D07AF54E2BDCC3F02F5F776D3B50DFDABC9F34961F5103B2ED91AABDB519F62A18D63FDCF7066DD41F6786D837AB6FC752A2A376020AF16DD87914BC221A3FA0BDE47A357D49D513BFCF57CEC976A48984172CC1754B46B0BFC531497E19A2BC87352E2553F8F95E3FC798856EF44CA3335E2
	7DC8203D0F14DCFA36F144387F16C5797DA3467D3732D5387F9684F173C630DD8C2D91FBED1FA2A6196E4935C3F8C4707AA92F155FD54CF8EF2CB173CD12A610AF36DF078C4BA3FB2DD99E57637B57F3A61D5565C243B83FA7D9757B53A48A67C619E82BF0E117DF507D42A8884FG1AAB784FD1BE392F195CF5CC6EE366E3EFD62031B76ABAEC0304F96AED76E940BC46F2DEDF7BFBAD1942AEF4E8644FDFCBD3ED74D0AE5AA8652AF85FCF77AA33A1DC84D4A97813A9DF6177CB4F95B6DA1B2745CF520C251FC3
	2AB4244B66E13E3E5665B15EB530F1EE04F6E5F6792FA52A0DDECDD71FF316294FA39675790B449C5CA7AD5B491A03DDC0C536E8ECAE3B107B41F2D56E15923D6F7EBED30DEBFBD79F37FC051AD759CA354E2CF5387F59AE6AE645E11256AE426BE8185CF74D42DF2EC37B5947D9BF015BFE0C486333FCDFB2FA5BFF2FCEEF23FBD62976339AEC7B84198E706FA33A281FCF003207DF45BD3512AEF26FEE1B6DA25FCDA3B74E39BDF4BB8D18AD9EF73F6CD1AEB3AE7DB588DE4E10E3E35DAFE4FB265FDF02FB2F53
	3EF33F94FD735BFE6F100A61F5B41B7F1DFA4D31B8D3146527F9E43FB0639A34CF2086A0BB5090D068B5AC1B370BE0A4DFF510EB7494455655C3EF79464D42B607BC283249819826FBBED95E6259082ECD7E6C839A0E59AE591A4FDF143B14D6DB377001E79B0C36093C267ADB74B5DF5FE363E08C5D530D3BE6FCB770A34A1FFD4D78EE20E9AD3E9BC800381689625E06F4FA7F9904E7G4D86DAG14F1C32245FA834A2452FB1C48BDBF645ED0F2E7A939CB155CF5C76E6163EB6874CE8DC654C3F490DD04C774
	1B5575B4BFFC7F6D660B3A3C16F0FFA11D864E757D75F7E3E9E72CCE3FEA77FFC6665F6D66E7E49E371B1F11F952BE7AF7D95F377B7F8D1C99F66DEF6030765AC2DC1037651B5FA78DDB5C5E26DEE3486353F7935B9CBBA903EE9BF8659EBC9FF9E98575FB7700F2CEFB539878A13DCF30DDF7AFFD798D2C4E55B1403BD64530F10868E2F7301F37F9B43AD83CB2182D4358CFBAFFAF0B3B34D33F6E3DEF1D2A5755C830B74903C2A363DF243F01578C3502910CDFD1CFFC019EF87341708F1B5E8EBBB97F59AE22
	0BDC962B5715D71E437967784FA56A63E336E6E1FC155700AFED07BE2F3DD897C73234F6B8C1AF4065F18B5E52592806DDE44B4F109F566B5B41537CC7A569049AEDAEDB37FC8E2FA5B6E059D1C25A30718ECEFDD9FE32EC25B6EFF137A35A2E3704B89C69554E29970D1EBB66E3637F2C5063FC0F73E759F465BECAAF8867F1FFB8270B2B9B5244F5994A3D0B737FC4FFA729EE4821E0B2663359EF99FD1674DD1942275F5EB2FAFCDF71687147360D9E6F5A6EAF1E797613852AEFBF521C23ADB7B8F93543CDDF
	D33178C17A9E3B512674909146BBD0C44AFDC4F677490A67B261B33D3349B6B0DF0B2DD80FEB310E9BF00D780BD5397A76A73BB0B3016705EDF9C6991AB993E2B2133CBEFA900C507317C26D5E9263E5EC41B64E420BB7EBE5D8997E39C153272DA2FD9A7B9508F3273C32476053B751BBF9CF60DD6BBEFEF866005EEF4AB95FD32D73351332879AA00F5BF508749D8D6EAE1B5327AFFC6B0031DE49D8284E350677684B376C002F8D4E9C72AD735BD6354C87AAFD575D2D1538E750AF6AB271E35296DB9DCE791C
	FA113B73320F8DAE39D7231CFAB13B410EC174BDC08D3BE35D907707C23D8DF7F37EB37437859A9DAEC71FE3987ABE27D35F86C3EB0C36A2F38655D65F2A75354D5DDB75767B15A1FC6C20EF1ABF6C72659DAF726535957B6EF5FEFBA52E65A608394EB2BA6F8D01F0246065D29E3D37FA8F72762CB2DB03C65EE0BE178971439FFD1E53EC1A473FE2EE2376C5F5EF293E77DB9BE957501F52C162E89F8CA7BE7EF44F8156A65DB0386AA5183E1E37D5FD6FCAE4BCE9F23BCE7643D021EDD0ACBEF39F9DBB8D11FC
	4F2A0D64C33A1E439EF79F69267479CCFAC74DA7ED101E13F1746D500FE751BBB8FF271E3FA10F73F7A11F697CFA212A33E0A331510981D7F5539195B71B0B756412B8B10FE3CB9D9E674E253FFD61F210B2B9066990F99284DD5DEC3DF0157E46C58C78C3BC50A2206C9B412FEE44F548EB394400641725FD57A0F576EE994F62E0FE3F4A73BFBF7DDDDE605F207EC39ED92C1FF7AB0A3B0F68C7FEC29E71C1455DCF197C771172483C5663686ED118A8673FC16F3BF14A97A81B1FBF2467D0AA21DC2DB762DE5C
	4EA63C93E268C6ECC7BFD8CB5AF838884751F03488371A6E0F0DC6C457585AD95F187398CBDBE37E7443FD246C07219FD647710D67880F2CACD55ED3743BB9B6A451EB93F87A30A642E76731347C4CE1D2866E241C774BFD6C7C32331FB05959213B94B269B0B9BBA4FAF61636E83DEF5F59DB291F1B2F58223613C769EF6AD439EC4E4BB03828656859C7FCC5749042D7EE5E645FDFEF5F9458DF6F236F31E47033564B7D7C5E0207B6118DBA77058BDED9340B08CD5902F7545B6276BAC8CBE458129B093C53F6
	9996BD923F17E2EDA3FEE3B29B7CE7817721021B92AD64AE12721B084C36355A6FD04C6B7925ABE47EA0FE07CA779D4B5FF56949F7ACC47788688E3D893FE329EE446FD82200B767A67C0E658F253A7B3A49456A7B77D73B49EFF7B630023033DE57E87A7C20C4CB99D0FD90FE47F2319777D28A3E96CA4F1479BB475699444F658529674F48DF7E9D76BABCDFB6BD884F177D2E0064398842B99393ADA593316D56B70E6FFCD95B1853313D0F57E859EBA7323D0F45023F0872DBB4FCE66B0942569D9097BB914F
	179DAAA275D4F8F3222592488EB482948A94F5B376536DDB487DA07E7642CE385D7493A672B5138D96629E5AEDFB60D161E55C6F73DDE84C4DEA3FB573E6FF7BBE9F50776AF3EFB61E237D0872975DECBCC77BE2811E234D39857A5DDB30EE7ECAFE0619E3C9EAD21FA7B50E35AF9CFB7DC6FE2EF9307A29AF725F4FB497856EE75A0B4C47450F0BFC47452EA273F151D164BBAEFE308E474559376038F8F7810E0BD2B0564F0734BECBA05CG54A378DD6CDB9888CF811AA978AF977833A9C96B4FD6287F7A6AAD
	496F390A311E21B0A3568F8F2F43BEF2FE305A8F275F1AE8A1F30272DB094CE38556D174D8EF552EB3ECAEB20FE47DF12337DB3D7A06478F8E5235A0BDC15B48FEF7F0404B636E345335F00B475D6D113D24BB57A467EB427BF43FF5B742F1C640DF56677FF623314FA77153A0FE462D781B9D0FF6E9F54C61BAB2EE43B161CB6B301F32822F7DB66CF71F277CD088C781455E06EB439F9590FB1F04C1019C02623FCBADEB7B7F020D9B12D6C8667DFF7CED7CDE0BC97A7E1F1FC13E60678CF2036DBC1EC17EA95D
	FBA0BE31F792FE33310AFE37C677C5A7A17ED773693BC588478245CF4231EE79768D66F9E8EA824723673AB02F791330ADC419FEF39F583F1F98F3BA56771E24FDECD108F15C69207C7290633873FBD11F1590979902634E7345442F53EF0775GD0BDD0A710829482948194FDBB0EBFFFADAA127C0FBFECE2208EBA7CDD6EFAED79E65D4E6AF79E7F3B68F65FFE00254B97F7A3E55F413FF13DC3155D8B4F8DF7685332724B741B184EBB0C6F707BA9DF3943788E7F0DFCFC079F8CF189F7E0FD3EC85F4D345C69
	0B4F8E3CA193BECBF71A6E333167731A67BF2E7B7C4738943F7D713F02188F3CD26CFF0CFB35B870987737E273B1CE5A6ABB4625EEB59F63ACDB35E39C63E5EFE5FABD6262B8464F5BCA661CEC5E4DF62B493B8CB6863ECC7B0C90284B08BB45DD039B711C53F4418B5D08E365CCD50E76AD0BA01C9F0A3C3F3652F73E902E943C21B6CCEB973C2914978A6128D0711DAABDB3928361F8413BC4F98BA11CFF97727E1E0FF5CC647E15759BA3724D93E7D0467B8E5F9FA58B5B7F0D7621FB21DC8DF7096FCC6D740C
	8C0495417B1A9D6D97FC970EB55206B4D157B8062F5E00E35EB4100B3B0B59C63A9B7A31E0BCB7F48BF915AC31717C510D56D1F0665F2D9D4F8FDB098F75FB648B3247A35BCFBA0609AF72F377548FCAC0FE6F5D08AF7B146FDAEF4BA944E787399120C820683B591C0AE13A33EDB4CCB3F5181EEEA3FB24FDE4AFF4200FA26267BB29EF4D81598401A70D6DF961FC84269CEE4FE55CB33FC65F3FE8C6B99E4D679AD1EB0CF38D02B77F9E1CC74C4CB14EA3C8FC49BD18778ABB3105176EC6617E5F3F112E9567C2
	7665A23E058C9B32DD58B6540EFB501577200DFEE09F4DC6AD77B09B313E7D50869C73BA019FF68F0E7529D6724E5CB85617B2075A3F3FCE696A116D555C3D789AF7046A1A89BA6681C91331FC53B71272554864373830FCBF5D26166FCF2D647C39CB9E340A5FA62BF57449AE72D62FE8D7D9D909F5671EE20E377994624D877DAD13916F0ECE5DBE8ADB079F71B86C5536EE3690E773127BCF617B176049B85FF90A6A0C05F0BC50FC01FBCA9B59DF2933F979B90C146DAA66D97923E05E0918D91E4F2F4135F9
	7A3DB86FDA120B732E4AFBB13FC76D7AFD7567E978C3594B6789F526F76E859E73CE0EB99D7FAE0C5667503D467953DFA9BF68DE637C69C661CB21903760DE6CABCF1D9A9F6E2EF1268B9FF3BAD62EFDED84FF7BFD4672D6D33E7DBEE3F9FFA2FC319F62E65D07651DEB7AED735E7BD93BEB385F5F3CA843749BDEC21D10C6818A868A572467E7C5683BB9767CCF4DF370064FFFBE75487F01BC8E3529E52A57BC7F7C54671F77AB1FEB9EEC7CFEF38D4E27265E0FE3FA47DA9C53E3846F9D5AE7E404A5DA2CE148
	F36622DC3960AD267306A088C788DE8365CD03700CB09C6B3B482718D26183A45E3B3616E31A9D666B1F6877491C6603CC8A24A36F25C83F167F005AB6D85F35BF17580F0F3DFC2C7AA0977BDEA74833FCEF4A45FCC79EB03FE3CE1BEF68837AFCA3FD724D6F72BFD66E684231F26A835867F6F5E9FF7311498DD3B9920EFDG7B6B483558074F845EC61A967AF3897F4DBF644B4331EEAE3986102F77DF48502E77EBFF7DF652BB1279FABF7DC1E60F76875575FE67CD8549FC9FBF1724A1954870CD4BC5FC218F
	1A6113AA9916A632BD0A5FC8F669471B3B3A12606FEEF1C75EE33ABB77E6005E598F0EBE1FE66B650AF2D22773C1B66321C4CB99D0BDD0871082948C948EB495E886509C2085C06961091682209220CA2056F0DCD3976FA45F2E79DBD373C1DE33130B781F547527BD20EFA4FCF47C2C2D44523A8E8DE73E453F6D203CA84EE338DA4A7D2F73BEAC8F3C4E6BACB7DF67DDA877DD6775161B2F73BEA977DD67DDAAA7FE508DF6E997F2D7846F3460CD20BA896FC3071D6EC971F7C1949761574BA4C36407D0DC0314
	574EF9F7E9F82771DDD0B9196FC111FB5C9ECC7BD0B971358B8E27135FF5CEE59CAE2F2C88FBC4D20C0EFE1B8677E302F7DA54454CDC5F7AF9B6D7DBBFECCEE85B1CA109F73E34080CDFB034DC65E391697710502E129F0646B0A5D1CAD524CC7CC1E976FACF117268F9BC2B52A3DB5B9C9EE54066345648CE27A2ADE38B87ABAC8D94A9151EF0D32494F282CA115271AC0FA2D970313434D411B244819E9A3460D99D9ACAA1C75708E278E32D72D25ED2F6B20BBEE75308A618FF1256G13CED040CE64D849099C
	909667EFG91BDB723C8AB48F9932B76DC0AA2E5D11EFA86C511167093A784A1BFC7E22DA2254CE21B83D6BC4A26C84BF9166C3DA84065E787A944ACF6004E2A382D74475E95E9A5BFB6E79DF4A8BD0209879B2C742D241526DD4BCEB2F056850F3B4FCA5E5132C8CB135B350D9FCFG8C64A002D5B5F2720EED35707FCE7A7FAE727F92A13B141DDF23DA5258B381G96342AA767E8ECAEBF12E795E772F85E6C8427153C4505DAE8308D001B135C1BE46588388A40A14773280DD8C5B2499472BA997E10D2G2E
	A69AA0A734G88DAAF8D7DEC99AD92ADBBE096EE823E04AFF4012D49B39DDD877C9890B4B537DAEB1A1B1A6AEADA6BEA3D9EE9256F92256A0E5F7CFA4A395A1CA4A969281456C35B40D1A9F510B41221FEE889EBE1D0AA71FEA2DD15763010B4C3115E32124352D6367A358EF8E57BFEEBD9E9D9E335F53BF5B7FD005C32C4EEC7E96B1EF3E9577E64973F1C1CA425C0D62C37BBAA2510AE8BF274301C132137237926E809663F5F4895E3E971B56D5D9D8BA7D6793D5B246091566F17BD220E25EC2C8ACE237DA7
	70039F4171A6BEF51B3F71266A3CF2328F1A89B41E5EAA171D18237A32A22BE705EFCFA37A3DA843A3D95CE4FA6748C5CD1A7F8DD0CB8788A2C0C059C2B1GG1021GGD0CB818294G94G88G88G35CDB7B6A2C0C059C2B1GG1021GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGFCB1GGGG
**end of data**/
}
}