package cbit.vcell.client.desktop.geometry;
/**
 * Insert the type's description here.
 * Creation date: (6/3/2004 6:01:55 PM)
 * @author: Anuradha Lakshminarayana
 */
public class SurfaceViewerPanel extends javax.swing.JPanel {
	private cbit.vcell.geometry.gui.SurfaceEditor ivjsurfaceEditor = null;
	private cbit.vcell.geometry.Geometry fieldGeometry = null;

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == SurfaceViewerPanel.this && (evt.getPropertyName().equals("geometry"))) 
				connEtoC1(evt);
		};
	};
	IvjEventHandler ivjEventHandler = new IvjEventHandler();

/**
 * SurfaceViewerPanel constructor comment.
 */
public SurfaceViewerPanel() {
	super();
	initialize();
}

/**
 * connEtoC1:  (SurfaceViewerPanel.geometry --> SurfaceViewerPanel.surfaceViewerPanel_Geometry(Lcbit.vcell.geometry.Geometry;)V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.surfaceViewerPanel_Geometry(this.getGeometry());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Gets the geometry property (cbit.vcell.geometry.Geometry) value.
 * @return The geometry property value.
 * @see #setGeometry
 */
public cbit.vcell.geometry.Geometry getGeometry() {
	return fieldGeometry;
}


/**
 * Return the surfaceEditor property value.
 * @return cbit.vcell.geometry.gui.SurfaceEditor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.geometry.gui.SurfaceEditor getsurfaceEditor() {
	if (ivjsurfaceEditor == null) {
		try {
			ivjsurfaceEditor = new cbit.vcell.geometry.gui.SurfaceEditor();
			ivjsurfaceEditor.setName("surfaceEditor");
			ivjsurfaceEditor.setPreferredSize(new java.awt.Dimension(349, 200));
			ivjsurfaceEditor.setMaximumSize(new java.awt.Dimension(350, 200));
			ivjsurfaceEditor.setMinimumSize(new java.awt.Dimension(287, 198));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjsurfaceEditor;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	 exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SurfaceViewerPanel");
		setLayout(new java.awt.BorderLayout());
		setSize(469, 560);
		add(getsurfaceEditor(), "Center");
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		SurfaceViewerPanel aSurfaceViewerPanel;
		aSurfaceViewerPanel = new SurfaceViewerPanel();
		frame.setContentPane(aSurfaceViewerPanel);
		frame.setSize(aSurfaceViewerPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Sets the geometry property (cbit.vcell.geometry.Geometry) value.
 * @param geometry The new value for the property.
 * @see #getGeometry
 */
public void setGeometry(cbit.vcell.geometry.Geometry geometry) {
	cbit.vcell.geometry.Geometry oldValue = fieldGeometry;
	fieldGeometry = geometry;
	firePropertyChange("geometry", oldValue, geometry);
}


/**
 * Comment
 */
private void surfaceViewerPanel_Geometry(cbit.vcell.geometry.Geometry arg1) {
	
	if(getGeometry() == null){
		getsurfaceEditor().setGeometrySurfaceDescription(null);
	}else{
		getsurfaceEditor().setGeometrySurfaceDescription(getGeometry().getGeometrySurfaceDescription());
	}
}


/**
 * Insert the method's description here.
 * Creation date: (10/17/2005 3:01:30 PM)
 */
public void updateSurfaces() throws Exception{
	
	getsurfaceEditor().updateSurface();
	
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GE8FBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135998BD0DC55D5AD3699CDDB2C54C607BAE934B6AA3529451A311951BA51E2CD1B04A12355E46CA8AAED23E65A54E6AC5A4BAE04A57F98345852063609C232EE78A48DD940G3B7C82AA959AF11AAA8F76810FFD6CDB5FBE42C288741C7BF97BD8F6C1E333B3E76E3B675CFB4EBD671E5FFBCB8A77AF4E4B3195921213C7786FF88EA139FFA36416272F5EAEF055EF2497904B8F48E4AF39DB4B053195E8
	3E167402BD64A7328366E7E01E5D1CDE70C7F85EC75265247D7090C70E8A347B246D45F34BD9B0A6646453F90FE7870C3BGFA8107E34A9BA8BF68A96278840E9710E3A3A4299457DC69A96638CD30468138CEGDFA9DBBF89A3BB40656EEA3E6E4CD5CB49669F6B361D484742D340FA3E17143131043C1033348CE52552F3621EEA188781D0F9BB1978D38D0C351D7E41377A7B9443F536DFD6D5D73F2A4881436513C3FEC38B3A86E5EDC4B674F1373BEBD49F107A65530ABCA66B1DD2C0D64901C348BF5B6320
	7C8859883C17D1DC0202B20760799200C507843EFD98711B61F9476174028307051EF5EF54F2BDFA4E5DC9B2AAC7F2F747513376B0534FF7B82267FA7F865BEB74CE5242E87B45C0DB8970B0C0B6C031B33D2096604F5497D60F9D0231214F70E8A3A3DA20A198ECD4FD7A5B1ACFD661596D868A473DA777EB3A0F90F65FF7F91CB14EB39730FDE91FFA9F334952AAF177A96F5DC656FF6F9ADBFE8C1B2CDFFA4E566DE436D01D911BB059B95EF83297BAE77A66CC596F932B6C70F7565973E248CECADEE7DF4C79
	24DAE4E7BA712E37D09F4800679C6E9F8CEF23BED07AE6844F7C748A3A9E6755C0CBFED378C64FAEF1160E5CA5E4CF4557E25AE1513D8BED44454ED0640ABE4B5DD4265795FD1687A83E5B95FD16FF8D0B3378001686407CEB6D84462D73C8FAC1ABC0AFC098E091C0AAC05A9161E3C561A31F5047BAA55DE89CD5D41F2C9336F7ED78D598653021CBED0110A185A068A4DD117AD4B9C4781AC742E8033E997B9E233E5F8FB2DA64002CCB062285003B8471AB6BA136A6AB3C975768B225F6ABA3B28898899241F7
	D3F89F7A1194B27E9D74C9069CD94168DB42F8A7E7255340919840B3334BCB6750DED920BFA9877B158BBB044611DF3B2CC33AF03BBBB44DBF9A6CC6CDC8AF2EA3C5DE4C9D87603936DC587805C9445D887395A61FDB46DF367071AA7DF8FCC99F97B176120239F9CD397019E7FB044FF8F7FE1BB857FDB5264FB83E3E4E3E291C790A23A2BAF69C4348934F456609CA4FBCF13B26BCF6CCFD72DCF1733CB26C9748FF17F9D7C3D3F8D76520EF8700DAA1EC7C64F8897359C6A9A48BAFFDD7878713FD910B33F35E
	C7ED13E31EFBB51DA7D488DB3DBF5C93435E7FAFE0B202D446E73147DC40EC72688456A179AC14C42F9C1483BEF888F15A639368EBBCCE87B4F3CF964587A12EBD90C8A1937F6C84461EE4983A52B7EA48DD32E1A80141887DF9AAABB45A970C2484A16B45894C3F5A984435395EF68EE322DF8B84E4FAB96696CE4F1D44FB16D5F9848E6D51C6838643EF1B443B724B63BCA76C1A5CCAB02655D14CAF2CB7D8A6E1539554159138F2CCD1A43B826375083748E2239440E10F3386464C8A91FBE37F9031F7E062E6
	F24FC7C1DB2C5A31681BDF36F9ABD93C74D4C6E20F1D698FF14E1EF75E91410758D9DF5B03F608511EF0FF7F46B4728A030C05GB7D68AFF3F74BC52C5CE610E6E51D415195334F3E0EA8F5E0B7C71288C299813D73BE93B51291723E827399D997D7C945AD135643D72AA34A3710B7EEFC5A533E1869F3338AD18EE3FA9C3FB539EEDD8BAAB05DD21B17099377B94551075DF57529C0A6BA72BC41FF5DF8B6A1C8A73D5G19D562EE566E94FDD612FFA969DE16E10F57CFE6D771BBB99A391B5205E3F6E653DF91
	14598B3460D1E14FADD356DC5F908AE97D8AADB35C965F1A365E9D4325CCEF03F1C051C3C69B84D7D8586D76E9BCAF56A10E66F5394C3F036B1AGF2D7G58697AC4BF72964DAA335DE65AD306E67945C7ADFCD9E907256F95FBDD02DAD3F61A59EC493EFAEE13D537ADA135539F5AE275268BF68F59B6F3DB959F0B58ECCD7A86DBA6G4BD9574F6A47060EC5EA46643159750375A9A7DAD16F44E3517D0B0762979F0B6EDF9EEC917D4BB220957ED35456899B7AD39866C9GA9GAB81B281F20F0BFBF413AAB2
	CF6F52960016A2A029DDB3121568A128DC48AFFC3E195E974DAFC4646EA37EE8BB149C1F29FBED541C6D2B1B356F2FD1735E28FDCC6F076D98EFE120A58124G2481EC84F0D42797B82B056ED3B9F573695E044520DB73G2E95625A931DFF718C3437390346E587706EC520382FB4A3AE8166495522D61EEC45FCFC0FB9EF23737566FCED0B6889F04D4529253FB4E5DC0CFA4AEC7BB9DB7CDAFA05ADF6ADCD34452E25575876B2BC7030F65002FE3DED6EDAFB13ADD62D7D8B557F01D7F7D35E21109C22176D15
	8C09531EB6DEA1B1EA6EBB50E4F35B6DA3837E823E264950BC95264C476D71757F05BD367E4F517C9C52C675FEB9DA47676DC5A6AD6205ED06BC024761F5146EB7A4FDD01EE5232D39C5A6AD5E7E5D39716C48F4DD65455EC1154635D18346936863CF18BD8201F991C0BDC077895663335C7C5DB12C0B8370F2826C3A02F2BFE9F5635E1B1B455ED4D81F86108560GDA29DB647A27EA28CDD8DEEF72A90606BA317EE422555A1FA43A194CB4985783305C383DC9FC8F598CB8E70DB853D3AE54592C35AEE94CF0
	3B9BB56C8BBA18022C5EF6B5B978FEDF0D283717D21E49B0CF85D8D5A36AED78F5D1EFD3EEDAC2DAD3E2575B1FF71F37E5567077105AC86D58645FE0E3B2D7B78B19DE20CF56A26E4566C28B8F340D84094385A3239FE93152719E4B0815AE4D2063F9EF35DB69D74F2067D976B35D9EBCA8F44BFEF099D16FC8087BEDEAA557A90B0F09195766E4BEBAE1E7F677579DA6333FC31975F8F0D4B1BFBE715BE6B6393D55414FD2D2A76EE16D905EC38F4C03G8B6AC48E5D5BF4E15FEE76DF603E1ECF3D0F55732EE6
	DA4F6BD8BD4FB171E7A8BE4502E73E7C85531717832D78ADD1679F4B43B838846649G29G2BGB682B8CE0ADAF7FBEEB9192756F5EB418EC8D82AA545B27DB21AAF6C1B568F73054F245EF58BD97EF92FEDFB9C1FA9BE49FC25160F25CFDC1B932967FABE6A2782ED81C08A40CA000781B6197A3D106BE47A2157B4980654BFC4BBCF219C360491B4A6A1265B1D2DC2375C7A59753688F0CE00FA8B0D5DD1937DFE55DD9FFDF76FD0FCEFFD745DBDB4A46ECE855A1AFA612B9FB493530F7AAC4FDFEC1A6F5B40E7
	81A663260BAA033F9F67452F034F65452E033F4D0B5D877CBEEF6EBAEF5F9A7F1DFA5BD66BBBB5732B658E4CF9C79B528BBA818C0085G498D422796ED7DBB7329987E54649B44BA0CDF6C8CA17FDCFEFCDDAF4B1F7FBB5F157978FE54279906B6027C857E2AFC3CAFC38BD2A46F097251C63AB2B8E430259C1F1C0FF9D21587A81A7521BF2539F3B9681551A0FA535B94511BE61938C34308ABEC841FEF94385F51F575B06FE994BE5B2EC47C345B723CE168627B6C7397D5863361BD0E787778A3477C773846C1
	5FFD417E5D63C15EDB2DF3E06F248D8C04E453DF9EF16CB1F1ED21CEAD24E0CF467A1EA7DB313E86F5F9C056F5595725CC609D5F5808F772923DCF951E43B87750EFGCA8957A12BF1F69E4B66B8463BE19873700894D6C6C6C7A8E7467783FA7FBD404F67917D57AE36D689C42DFD1D2ECD04F549GE99E7C8F6DB84DDFEC5F8D74BC81F92CC434D7AE2F8291049F12CB2B0E1EF016D416171731BA31F84C7A3FD775364BE2FEC3C25861657D929F33DF39AE0775874FA8623BC80FD71C7D60B05A5CA3637B2B28
	C9E33228C945375EC00A775753F707D83292390C955EC80F06A353F5FBEBC4570DF36AFA2C1C694A76395AA27BD2076658D7D9FD5CD9D2F1221A5BE875FF2CB65AF31DEA4B09F36ECD42B616F333FCD7F28AEDD45E14DE5051A4F25CE4B376E32725E15E9130260BE6B9C0F66ADAD0560DF10625DF3BF89C7EDA317684AA703B24E96E77D5F6062EF654B98956AE8348G5888C01A615D81408960ED96E73B3739F40E3331E61D66E0DDD2828663FFF987B163D8EFBB98EFBFE470D3E073F77B0661C528DB9AB477
	9CBC05E7B5EB8CD319531C2730DEC0A8980A24AA9374F3D797AC8C8C32DCD9C0E322974EFFB2D7FC9758C5F1E1400D678ABE9F36474FAFF27B7C79A5509E3BCE986D336B44F8FB6CBAB15DEE2D938C1740796A66CBAEFFDFEF47DC445E7B5E168252A02D212C1F17DE5F9131497B0A4F98E27862704E883ED5C679B0E77F4F8F864E4018728C498B696465593E5F70251FBD1472113750C6ECEDE46B905D5CC6724610FB987F3ECA834F7FEF68E3B2C5C383E79F1A337BE1361F45CC5934B5E636DC5E9FB72FACED
	61315E929DB35F8F221D36G3E30D5786556601BF378D55708242A06247A9B82BE743146F1C30E74A8BF88A27F10D843095C5F03F86EE14B1E7F81D0CB8788AADD9938118CGGACA1GGD0CB818294G94G88G88GE8FBB0B6AADD9938118CGGACA1GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG4B8CGGGG
**end of data**/
}
}