package cbit.vcell.client.desktop.simulation;
import cbit.vcell.solver.*;
import javax.swing.*;
/**
 * Insert the type's description here.
 * Creation date: (5/11/2004 1:28:57 PM)
 * @author: Ion Moraru
 */
public class SimulationEditor extends JPanel {
	private JTabbedPane ivjJTabbedPane1 = null;
	private cbit.vcell.solver.ode.gui.MathOverridesPanel ivjMathOverridesPanel1 = null;
	private cbit.vcell.math.gui.MeshSpecificationPanel ivjMeshSpecificationPanel1 = null;
	private cbit.vcell.solver.ode.gui.SolverTaskDescriptionAdvancedPanel ivjSolverTaskDescriptionAdvancedPanel1 = null;
	private cbit.vcell.solver.ode.gui.SolverTaskDescriptionPanel ivjSolverTaskDescriptionPanel1 = null;
	private cbit.vcell.solver.Simulation fieldClonedSimulation = null;

public SimulationEditor() {
	super();
	initialize();
}

/**
 * connEtoC1:  (SimulationEditor.initialize() --> SimulationEditor.makeBold()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.makeBoldTitle();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * Gets the clonedSimulation property (cbit.vcell.solver.Simulation) value.
 * @return The clonedSimulation property value.
 * @see #setClonedSimulation
 */
public cbit.vcell.solver.Simulation getClonedSimulation() {
	return fieldClonedSimulation;
}


/**
 * Return the JTabbedPane1 property value.
 * @return javax.swing.JTabbedPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTabbedPane getJTabbedPane1() {
	if (ivjJTabbedPane1 == null) {
		try {
			ivjJTabbedPane1 = new javax.swing.JTabbedPane();
			ivjJTabbedPane1.setName("JTabbedPane1");
			ivjJTabbedPane1.insertTab("Parameters", null, getMathOverridesPanel1(), null, 0);
			ivjJTabbedPane1.insertTab("Mesh", null, getMeshSpecificationPanel1(), null, 1);
			ivjJTabbedPane1.insertTab("Task", null, getSolverTaskDescriptionPanel1(), null, 2);
			ivjJTabbedPane1.insertTab("Advanced", null, getSolverTaskDescriptionAdvancedPanel1(), null, 3);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTabbedPane1;
}


/**
 * Return the MathOverridesPanel1 property value.
 * @return cbit.vcell.solver.ode.gui.MathOverridesPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.solver.ode.gui.MathOverridesPanel getMathOverridesPanel1() {
	if (ivjMathOverridesPanel1 == null) {
		try {
			ivjMathOverridesPanel1 = new cbit.vcell.solver.ode.gui.MathOverridesPanel();
			ivjMathOverridesPanel1.setName("MathOverridesPanel1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathOverridesPanel1;
}


/**
 * Return the MeshSpecificationPanel1 property value.
 * @return cbit.vcell.math.gui.MeshSpecificationPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.math.gui.MeshSpecificationPanel getMeshSpecificationPanel1() {
	if (ivjMeshSpecificationPanel1 == null) {
		try {
			ivjMeshSpecificationPanel1 = new cbit.vcell.math.gui.MeshSpecificationPanel();
			ivjMeshSpecificationPanel1.setName("MeshSpecificationPanel1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMeshSpecificationPanel1;
}


/**
 * Return the SolverTaskDescriptionAdvancedPanel1 property value.
 * @return cbit.vcell.solver.ode.gui.SolverTaskDescriptionAdvancedPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.solver.ode.gui.SolverTaskDescriptionAdvancedPanel getSolverTaskDescriptionAdvancedPanel1() {
	if (ivjSolverTaskDescriptionAdvancedPanel1 == null) {
		try {
			ivjSolverTaskDescriptionAdvancedPanel1 = new cbit.vcell.solver.ode.gui.SolverTaskDescriptionAdvancedPanel();
			ivjSolverTaskDescriptionAdvancedPanel1.setName("SolverTaskDescriptionAdvancedPanel1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSolverTaskDescriptionAdvancedPanel1;
}


/**
 * Return the SolverTaskDescriptionPanel1 property value.
 * @return cbit.vcell.solver.ode.gui.SolverTaskDescriptionPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.solver.ode.gui.SolverTaskDescriptionPanel getSolverTaskDescriptionPanel1() {
	if (ivjSolverTaskDescriptionPanel1 == null) {
		try {
			ivjSolverTaskDescriptionPanel1 = new cbit.vcell.solver.ode.gui.SolverTaskDescriptionPanel();
			ivjSolverTaskDescriptionPanel1.setName("SolverTaskDescriptionPanel1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSolverTaskDescriptionPanel1;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SimulationEditor");
		setLayout(new java.awt.BorderLayout());
		setSize(547, 346);
		add(getJTabbedPane1(), "Center");
		initConnections();
		connEtoC1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		JFrame frame = new javax.swing.JFrame();
		SimulationEditor aSimulationEditor;
		aSimulationEditor = new SimulationEditor();
		frame.setContentPane(aSimulationEditor);
		frame.setSize(aSimulationEditor.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Comment
 */
private void makeBoldTitle() {
	getJTabbedPane1().setFont(getJTabbedPane1().getFont().deriveFont(java.awt.Font.BOLD));
}


/**
 * Comment
 */
public void prepareToEdit(cbit.vcell.solver.Simulation simulation) {
	try {
		Simulation clonedSimulation = (Simulation)cbit.util.BeanUtils.cloneSerializable(simulation);
		clonedSimulation.refreshDependencies();
		getMathOverridesPanel1().setMathOverrides(clonedSimulation == null ? null : clonedSimulation.getMathOverrides());
		getMeshSpecificationPanel1().setMeshSpecification(clonedSimulation == null ? null : clonedSimulation.getMeshSpecification());
		getSolverTaskDescriptionPanel1().setSolverTaskDescription(clonedSimulation == null ? null : clonedSimulation.getSolverTaskDescription());
		getSolverTaskDescriptionAdvancedPanel1().setSolverTaskDescription(clonedSimulation == null ? null : clonedSimulation.getSolverTaskDescription());
		boolean shouldMeshBeEnabled = false;
		MeshSpecification meshSpec = clonedSimulation.getMeshSpecification();
		if(	meshSpec != null && 
			meshSpec.getGeometry() != null &&
			meshSpec.getGeometry().getDimension() > 0){
				shouldMeshBeEnabled = true;
		}

		int meshTabIndex = getJTabbedPane1().indexOfTab("Mesh");
		if(getJTabbedPane1().isEnabledAt(meshTabIndex) != shouldMeshBeEnabled){
			if(!shouldMeshBeEnabled && getJTabbedPane1().getSelectedIndex() == meshTabIndex){
				getJTabbedPane1().setSelectedIndex(0);
			}
			getJTabbedPane1().setEnabledAt(meshTabIndex,shouldMeshBeEnabled);
		}
		// ok, we're ready
		setClonedSimulation(clonedSimulation);
	} catch (Throwable exc) {
		exc.printStackTrace(System.out);
		JOptionPane.showMessageDialog(this, "Could not initialize simulation editor\n"+exc.getMessage(), "Error:", JOptionPane.ERROR_MESSAGE);
	}
}


/**
 * Sets the clonedSimulation property (cbit.vcell.solver.Simulation) value.
 * @param clonedSimulation The new value for the property.
 * @see #getClonedSimulation
 */
private void setClonedSimulation(cbit.vcell.solver.Simulation clonedSimulation) {
	cbit.vcell.solver.Simulation oldValue = fieldClonedSimulation;
	fieldClonedSimulation = clonedSimulation;
	firePropertyChange("clonedSimulation", oldValue, clonedSimulation);
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GA7FBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359A8DF01445B555D8F006CED1D1E2C7AD83E8D123CD9527E8310D35BAA9E239169F85316200B6F6C003848890F0F317189CA490C80020F1408A9ACA1A02DAE5A25AC04298B0C8EAD2CC270079F237F777653E3B6F72FDFB39A0D87AF6775B6F3EDC3ECB10B119F9335F3E77F65F3E37EF5FFB3B97D439F3DCD10133922102A2E47CFDD800D069BE04FE67BF7304402117E63811656FCD004DE856D70550
	16836D7D9D8EF7B97A2638847A3B211FDF65F0EF076F8A5453B6FDAFFCA411B391E80B6FF6BEB8389C5DAB6494337E871ED2E8B78254G0E36845AF27439274A403798F88185CE04CE67D09E59D3ED6026G0F83208A7035B91C3F89DA3E002B6A8F9AFC272F1904F227E94EB2BA0FE5CE81930D31D9C63B8B2DAE08AC25322EE56B24E390748F82D065DD680A2A0F20BD549A74FF626912C9DD2F87ABCA1DC711F11854F9319EA4EA24CE17C3D1C5A2329A2E2FEFB33F0FFAE522EAE8B11BFF1E27044D0750E468
	773DCCF1ADBA15399F3E1B81BADF96788AC271D361FB96406217051E9F3FF3485023637C4F512CF7C3051B1268D9380C6BD73B4C22E778E9678E36A777E2EA7BG50C6810C83788D40A200425C996E5719AFBC607DAB34073BC8239A8A296143114891452B1DD03DD8016F7AFA209838AF30C7553C88717DCE73545A2CE7B06063EE7B566338CDA63DA776BE7D0B3B517CFBEFF0965B58E47E24734E6ADCEE0B77F363B661321FC9AA3BBD373FEF76177DA5324A1EFC439CD7110DEC4715F3DC81E31E8B96596939
	F42FB3198F5C845F8506FFF07CB4064F3160391FFE4170340F164FF0FB178B5F6858A85652D2B89E159F98EBEB0734DF0FF2E6AD67EBD830BCF1ADA3185F152EC8DC4BB58CDF3DA2F1ADBB08D8CBAD50C683F07F1A6A2767B6977A65ABE738EBG9AGBA81AEG0CDEA9FC4C057FFE09BE56AAE964C8D4D63CD8C3FC6CD43C8DDA5CC7B469D8D8A7D25803CFC91AACF5A9D8C7864FA3185A202B5F38E94C77BDA063D39C469ABB28B03B944284EBBA671909B7D39E8DB3EA3B9C42A0A094C1E25E27F085340A2413
	FFC73C9241F18ECEDF08691E74CA27E0C618G3E39DDDE88D0FBE5007ED9GCF1AF6B86B2373FD0635B0D66A6BDBD4B5980D34D3CDD0CD9E35738A96BB9683FFE11E3071F3B245A950CF4D9373DC6F5BE21927C9765065CB5AB9F1469E55E9ECCE4B93BE73E207701926323BD06D6C6BEDFD26A9F50EEBF29E771569F909E7474166246B627D8E3D63924FEFDA1E7D599ABAD674DC328C57371CFF2339D7EDC13AD739547E2BE638772F92B6F678F6F11FBDA269D8F869C98D9C8CFB6396676B7C81A9B46C497BE3
	D93FF9153055CE52E1E36F6F8A380C03CC46655861D2005B64D1BF4DC33897D2E2930E603097BEF40376381F7A1AF1CEFD2AB9E6A643C760DCB742C152CD7CDCBFBDFB92A11A5C95A5388D93A2077DF17A33CC169E6D0A44C30210156D2771D70D4139B67917786919702861B0E61BE38EB168AF31B309959C02C5B72A51B0617865813AD7C1FC4E08892B822FA2FA2615A80DAF3CB64810B6D09DB4B984DBCEC3944ADCC54FEB19374AE2238860E80DB3865AC92B44590B3DA54E5E6E2FEFC719DFC51CF639A36D
	569FBACBD673F3D23DBAFE76781A7EAC5B2FBD074586832F7335FE064A21CDACCE382F0FD268BC07E07ED60040EA616BCAB7250BF8E2B8F9232AA85C14260D7F9324F36B38A70AA18C53407519E9374E6016845AA943061C9E88D29BAA1618B7FDB535E1969135DF4AEAEE3FB4234DB06C4075DA36175A1A55E75DD22F54D7274740DF6A6B0F37CA30EADEFB453CA586FF559AD1E3CD70D31DDB219FGC8D9A3766577E522469A931C04C60F1D6DCAD6CB262D616B183AA63EAF0139B19737691C9015198F3452FC
	E14F05C1EB1CBF2C6B2AC7E61BE15862DA453AEF9CB7D6D98F2DCF56F4F28C8ED61F305B4D8ADDAF4DC1865A4849CBD9CE263A6E82399DGAE465F9125F8B9AC93D9D2642FF14DDEEE3F7BDB695E0524A0BE22AA5EF619A8C0BA45EDB13E224150F57A5D6351210BE71DF6756648CD816768FCEE03A979F1DBF8E7BF6D6C8360F16802B73146AADC9B0F7FD5EB876682DEFBECE76733F6EDE2CD72A6439FDA1BD8135C6E97B5C98B50B2560AFC09D56AA7156BA01683B483F48224G0CDBA776E7CF68BDB4C4BDF2
	AC8CE5C2D8D25A7A85A0D19704DCBCE6987DE7C2C5A2E6A0910FD712C4BBCCDD57DF77A7937AFCDCD1B4F1DCDDC2BFBFE19C577B6188BDC7152F005EG4DGDE0011G938132DE913A4B610F07527DA88D706DEAA3601A613CB6A646D4984F6B156B58F94B06397381B8AE62ABE1FE61F09F8460BA3D41E26CE9337F8E6B93337FD3FFE21E273C5FEDFE4C9AA0633B4C155C36E1B5F9FE0C2A7679713CEA1F9F3F27EE66F81843DA958B7A556A6079739A55AEFF3E41747E6D36CDECEEDD47BA5B6CA609C8866DCF
	E4AB3249231FC361EC582C8255C55D864FD122B69EB0E5BE9EC92E7F2C083D7E73A2B46E6AEAD47360C49D1F0DD4193438979EA3B8C417E364C6B61EC81A9F8F3051D2B61E53120DDF9DC9E6C72E6B9DDEDA8FA852B9B5CAA0169550B715074C3C1F86FE1A8170A440E2GDA9F73F87B33984DF7BE38F040F4ED916CC18B585891BE73BD847A1DGA9G63GB281384C4E0FE8ECBB8EE9328BFBE9FEBB406B0D0E00355E28F1F2F96D5086GF8DCFC41AB5EB7D2GB785002F6779BA2A2F19BF6B2498292FBF2252
	DC5F421563B974GAEB1466740D81EC33F42F44E9A17435DG50814073C65F5BA207265FB69E25DEE71FC39734FF630C3878F99EE334B4EF24061FF6F219F77904CC8750CB8A291D1E72D5A61C557B1CBC96F2FA195FCA27FBC81F346274FF76235375FEDAE82577742397D946F35D9E5BA3F44BFFAC83A97725A6FDEBEAAD64BA91239D3D68460274FD67DD5C6E7BCA5EC036F5CBFCF7014E6DB0BAA05E0E528B056D6FE2355FA2686783D4960918795200BCFBE9F1F06DE50E7BGFF5BF1BCFF9F70313C8E6BAE
	B06C4771758CFF5002677E0B31705FA620CD826079ED1AC6FD3F74D5073B8620812083208FE08C00D1AB756CC7C36436F6B5528281CA3104D42E5FBD3E4BFB17FA28D8784964876EC0D33E5F645C1044CFA63D4A7DA34BE8EB965ED8904F5FE78855AF8FE8154510BB81DA813CG970A05FE4F7554F27DE8D1FF18904993E09524D06E140CE3F1B48DBADC376B830369B63AF8E02EB5EA2FEE3A97930B799E39CDFC9D43E7DA70FC6F6EE53ECA7B730156D0A2FC75C39FB27D2841729D4417FA3F3F9C60B2D207D5
	06F1475512673DF91AFD5EDB2059677D673541737A0BDA72FB71F24DFAAF66FEB5A1CA635CC4580BCC00C5GF9G25EE61D3D76AFF61BEE563CFC73DFE1AF7692B9B9172FDA4392EA1B274DBDDAF21771CAE1590B5C46797788B046E97D1A38CE954C0045AC8137D8142D98D7C88425E44300F21F95D199E90F5E70D5B2CB33B691D279D7A84A08DA053243D4FE8B9502FDC8F678D6074FAC13BDF367399BAC7A2AE4D86A7205D0696177F87DB99C5C97CB8198C3B9A56ED5A694EE8723D3AA7BA74DE7DA24A6E29
	E06376F39123DE4A0C52FAC87579F4EC7A44A351F293F7CCEFD5F51956D9E35653BC7BF0E057A06BCFD94FED446B1E36FF51FB73890984CE76E2CD133DD8E7377B83869D3FC6FF3FBA0175G0DED32CF76984F3A961E236CED24CDD5E006F6C98FB6E15D23491101FC013712719D7676D2F3F88DFEDEFB853A2D3557FCD8B73D3FD4EFF0387783F01E630A1527F98367C905B64D64298DDBF9B28C1EBCE8CBCB850FBBE26559DD4AF98834A3CBC50D38003DD3B5E2FACF9539A806C5AE2A3EF3822A5E5960243144
	AE970DAB65F61FDE9A2F47047F395052756F22013F05694CD6F510CD6B7CD1393EFE60BE09BAE6DC37F807C1E5220E994B5ED98FC23F95A0D0A66A52B1457BEDE405E0EEC30A6DEEF3B9D7A8C2CE0AA967DC084A1982FD87C036A9E7092F7E92F4CA6EB7C2B7EF5854ED2310F9CAE53AC13F95A030D1481CDDF764F2E57673C1A17BA7BD263E266C9BB526AF749DG599BC53D74F10C1EBB3489FC9420812083C081C885C8834858A4F240173DB5501E123A0D0A093F9932ACGC8FEC9E0F9C01364B061716B566E
	41EA0A691B7A473E8550673543867686193BA9319E2CE4F8D41ED88F5E9C9475E0A950A265A2FE0ED08613BF2B3C3F7C6CF2A1FF89730F7C72C479AB983EE4F3227C0BA1A13F92E8FD1B05FCB9BC187C791B7B4B4F59AC64CFE33ED238A5D17ECC06AF5F12A87F34AA64D783ADE50B101F5EB3187CC5DB7A4B4F5BA26417315F95CBAB9265EFE3782A0AC479BF56047C5DC09BD9A1FC26B916BC371C0C8D1DDBBAE276F540595840BA4093332F836418358EB05EE00CF9B573510263C90C5E5F78BD7E0494167C16
	F72C295D22F6D88C7AF15C4EA04515D7BA5C3BAB054DB7AB54C57977EB166F8941612FE3278E2B8C2E73AD0A30437ECAE10782763E5D8E7D00E907E521386E79166F2BC243EF07DB06D58657B9A5AC6CC0CCBBAC8C8BFFC8B36D60D0633A4F35FCF72943EF077343AA036B7CF00F3043C4538EEFEB428ED9269DAA74386E55166FDB35613743AF07D5C6F6A52DE1E71A355F2C4A01B5BD2F47BEE07102C8DD6C27157DDB9D90329A7F074CB96EB3EBC332B5599CD52101F378AE466798EB560EA3ED66607CD723B8
	7F3C9E41FFD3D27E07583FC2717AE215D937E5EC95EFFCD9E72C6FE03B761D34FD874BBB7335B35B10D13AADDED366693BDCFC1E997F357E6FD6790F94E7014DBC949A0C71AD16F9787A1E0A57FBC06338874DFAEC0A09C31A4065EC93BE3A2EDF3DD2335D61BE34FD705F98F89D3547C5ED588A3C8A40E800C9GD381E6ED97393048B9D87D441FD76375931F37197E84E26426634EBD494643AD7C3854AB1D6C6A469E52AE79CD3FDF502F7E490635648F218F9F776BFEF5CBF99564372ACB99D724D9479D04B1
	ADC30C6371E2ABBB971D403B57A5F02FB1DC9F604A1C4286F52E647544BFDCC357931F386C6B09A65740FA62184B3E1EB8699A782E30D2916B47CE317EFCC52C3F22C0606606855F8ED34FBF06851FEA72D5EB026FD705827726E64E6794F7B069ED4B6F38DF4ADE9260786A3E32B83E99D39D204F7F2FF364D97A3FFC69CBD091C16B637F6CC4D0A13DC5C1C3AF998415084B0538B76E3DE8BD1BF9D7F9EC7FC701C25F8E3E6723F6444FA6776747BA298ED900DF34C31C0B57BB7FB608DF3705A4C5A11292BC9C
	76D29FBFF20E6078BB1723134E2F8B9E0348E9CFF452F5F7DB467C9FD0CB878887E2ACB74A8EGGB4ABGGD0CB818294G94G88G88GA7FBB0B687E2ACB74A8EGGB4ABGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG848FGGGG
**end of data**/
}
}