package cbit.vcell.graph;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.gui.graph.*;
import cbit.gui.graph.Shape;
import cbit.vcell.model.*;
import cbit.vcell.model.Model;
import java.util.*;
import javax.swing.*;
import javax.swing.plaf.basic.*;
import java.awt.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class ReactionCartoonEditorPanel extends JPanel implements java.awt.event.ActionListener, java.beans.PropertyChangeListener {
	private JPanel ivjFeatureSizePanel = null;
	private GraphPane ivjGraphPane = null;
	protected transient java.beans.PropertyChangeSupport propertyChange;
	private boolean ivjConnPtoP1Aligning = false;
	private JPanel ivjJPanel1 = null;
	private JToolBar ivjJToolBar1 = null;
	private ButtonModel ivjSelection = null;
	private cbit.gui.JToolBarToggleButton ivjFluxButton = null;
	private cbit.gui.JToolBarToggleButton ivjLineButton = null;
	private cbit.gui.JToolBarToggleButton ivjSelectButton = null;
	private cbit.gui.JToolBarToggleButton ivjStepButton = null;
	private cbit.gui.ButtonGroupCivilized ivjButtonGroupCivilized = null;
	private JScrollPane ivjJScrollPane1 = null;
	private JLabel ivjJLabel3 = null;
	private JButton ivjAnnealLayoutButton = null;
	private JButton ivjCircleLayoutButton = null;
	private JLabel ivjJLabel4 = null;
	private JButton ivjLevellerLayoutButton = null;
	private JButton ivjRandomLayoutButton = null;
	private JButton ivjRelaxerLayoutButton = null;
	private JButton ivjZoomInButton = null;
	private JButton ivjZoomOutButton = null;
	private JButton ivjGlgLayoutJButton = null;
	private cbit.vcell.model.Structure fieldStructure = null;
	private cbit.gui.JToolBarToggleButton ivjSpeciesButton = null;
	private cbit.vcell.clientdb.DocumentManager fieldDocumentManager = null;
	private ReactionCartoon ivjReactionCartoon1 = null;
	private ReactionCartoonTool ivjReactionCartoonTool1 = null;
	private cbit.vcell.model.Model fieldModel = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public ReactionCartoonEditorPanel() {
	super();
	initialize();
}


/**
 * CartoonPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public ReactionCartoonEditorPanel(java.awt.LayoutManager layout) {
	super(layout);
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getRandomLayoutButton()) 
		connEtoM1(e);
	if (e.getSource() == getAnnealLayoutButton()) 
		connEtoM2(e);
	if (e.getSource() == getCircleLayoutButton()) 
		connEtoM7(e);
	if (e.getSource() == getRelaxerLayoutButton()) 
		connEtoM12(e);
	if (e.getSource() == getLevellerLayoutButton()) 
		connEtoM13(e);
	if (e.getSource() == getZoomInButton()) 
		connEtoC1(e);
	if (e.getSource() == getZoomOutButton()) 
		connEtoC2(e);
	if (e.getSource() == getGlgLayoutJButton()) 
		connEtoM9(e);
	// user code begin {2}
	// user code end
}

/**
 * The addPropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().addPropertyChangeListener(listener);
}


/**
 * Insert the method's description here.
 * Creation date: (6/14/2005 4:13:34 PM)
 */
public void cleanupOnClose() {

	getReactionCartoon1().cleanupAll();
}


/**
 * connEtoC1:  (ZoomInButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonEditorPanel.zoomInButton_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.zoomInButton_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (ZoomOutButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonEditorPanel.zoomOutButton_ActionPerformed()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.zoomOutButton_ActionPerformed();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (Button1.action.actionPerformed(java.awt.event.ActionEvent) --> CanvasTool.randomize()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getRandomizer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM10:  (ReactionCartoonEditorPanel.initialize() --> GraphPane.graphModel)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM10() {
	try {
		// user code begin {1}
		// user code end
		getGraphPane().setGraphModel(getReactionCartoon1());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM11:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroupCivilized.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM11() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getSpeciesButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM12:  (RelaxerButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM12(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getRelaxer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM13:  (LevellerButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM13(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getLeveller());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM14:  (ReactionCartoonEditorPanel.structure --> ReactionCartoon1.structure)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM14(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoon1().setStructure(this.getStructure());
		connEtoM15();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM15:  ( (ReactionCartoonEditorPanel,structure --> ReactionCartoon1,structure).normalResult --> FluxButton.enabled)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM15() {
	try {
		// user code begin {1}
		// user code end
		getFluxButton().setEnabled(this.isMembrane(getReactionCartoon1().getStructure()));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM16:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.graphPane)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM16() {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().setGraphPane(getGraphPane());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM17:  (ReactionCartoonEditorPanel.documentManager --> ReactionCartoonTool1.documentManager)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM17(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().setDocumentManager(this.getDocumentManager());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM18:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.buttonGroup)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM18() {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().setButtonGroup(getButtonGroupCivilized());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM19:  (ReactionCartoonEditorPanel.model --> ReactionCartoon1.model)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM19(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoon1().setModel(this.getModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM2:  (AnnealButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getAnnealer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM3:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM3() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getStepButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM4:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getFluxButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM5:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getSelectButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM6:  (ReactionCartoonEditorPanel.initialize() --> ButtonGroup1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM6() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized().add(getLineButton());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM7:  (CircleButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layout(Ljava.lang.String;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layout(this.getCircularizer());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connEtoM8:  (ReactionCartoonEditorPanel.initialize() --> ReactionCartoonTool1.reactionCartoon)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM8() {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().setReactionCartoon(getReactionCartoon1());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM9:  (GlgLayoutJButton.action.actionPerformed(java.awt.event.ActionEvent) --> ReactionCartoonTool.layoutGlg()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM9(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getReactionCartoonTool1().layoutGlg();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP1SetSource:  (ButtonGroup1.selection <--> selection1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getSelection() != null)) {
				getButtonGroupCivilized().setSelection(getSelection());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP1SetTarget:  (ButtonGroup1.selection <--> selection1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setSelection(getButtonGroupCivilized().getSelection());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

/**
 * connPtoP2SetTarget:  (Selection.actionCommand <--> ReactionCartoonTool1.modeString)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if ((getSelection() != null)) {
			getReactionCartoonTool1().setModeString(getSelection().getActionCommand());
		}
		// user code begin {1}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * The firePropertyChange method was generated to support the propertyChange field.
 * @param propertyName java.lang.String
 * @param oldValue java.lang.Object
 * @param newValue java.lang.Object
 */
public void firePropertyChange(String propertyName, Object oldValue, Object newValue) {
	getPropertyChange().firePropertyChange(propertyName, oldValue, newValue);
}


/**
 * Comment
 */
private java.lang.String getAnnealer() {
	return ReactionCartoonTool.ANNEALER;
}


/**
 * Return the AnnealLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getAnnealLayoutButton() {
	if (ivjAnnealLayoutButton == null) {
		try {
			ivjAnnealLayoutButton = new javax.swing.JButton();
			ivjAnnealLayoutButton.setName("AnnealLayoutButton");
			ivjAnnealLayoutButton.setToolTipText("Layout Annealing");
			ivjAnnealLayoutButton.setText("anl");
			ivjAnnealLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setActionCommand("AnnealLayout");
			ivjAnnealLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjAnnealLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjAnnealLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAnnealLayoutButton;
}

/**
 * Return the ButtonGroup1 property value.
 * @return cbit.gui.ButtonGroupCivilized
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.ButtonGroupCivilized getButtonGroupCivilized() {
	if (ivjButtonGroupCivilized == null) {
		try {
			ivjButtonGroupCivilized = new cbit.gui.ButtonGroupCivilized();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonGroupCivilized;
}

/**
 * Return the CircleLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCircleLayoutButton() {
	if (ivjCircleLayoutButton == null) {
		try {
			ivjCircleLayoutButton = new javax.swing.JButton();
			ivjCircleLayoutButton.setName("CircleLayoutButton");
			ivjCircleLayoutButton.setToolTipText("Layout Circular");
			ivjCircleLayoutButton.setText("crc");
			ivjCircleLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setActionCommand("CircleLayout");
			ivjCircleLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjCircleLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjCircleLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCircleLayoutButton;
}

/**
 * Comment
 */
private java.lang.String getCircularizer() {
	return ReactionCartoonTool.CIRCULARIZER;
}


/**
 * Comment
 */
private java.lang.String getCycleizer() {
	return ReactionCartoonTool.CYCLEIZER;
}


/**
 * Gets the documentManager property (cbit.vcell.clientdb.ClientDocumentManager) value.
 * @return The documentManager property value.
 * @see #setDocumentManager
 */
public cbit.vcell.clientdb.DocumentManager getDocumentManager() {
	return fieldDocumentManager;
}


/**
 * Return the FeatureSizePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getFeatureSizePanel() {
	if (ivjFeatureSizePanel == null) {
		try {
			ivjFeatureSizePanel = new javax.swing.JPanel();
			ivjFeatureSizePanel.setName("FeatureSizePanel");
			ivjFeatureSizePanel.setPreferredSize(new java.awt.Dimension(22, 396));
			ivjFeatureSizePanel.setLayout(new java.awt.BorderLayout());
			ivjFeatureSizePanel.setMinimumSize(new java.awt.Dimension(22, 396));
			getFeatureSizePanel().add(getJPanel1(), "South");
			getFeatureSizePanel().add(getJScrollPane1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFeatureSizePanel;
}

/**
 * Return the JToolBarToggleButton4 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getFluxButton() {
	if (ivjFluxButton == null) {
		try {
			ivjFluxButton = new cbit.gui.JToolBarToggleButton();
			ivjFluxButton.setName("FluxButton");
			ivjFluxButton.setToolTipText("Flux Tool");
			ivjFluxButton.setText("");
			ivjFluxButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjFluxButton.setActionCommand("flux");
			ivjFluxButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flux.gif")));
			ivjFluxButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjFluxButton.setEnabled(true);
			ivjFluxButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFluxButton;
}

/**
 * Comment
 */
private java.lang.String getForceDirect() {
	return ReactionCartoonTool.FORCEDIRECT;
}


/**
 * Return the GlgLayoutJButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getGlgLayoutJButton() {
	if (ivjGlgLayoutJButton == null) {
		try {
			ivjGlgLayoutJButton = new javax.swing.JButton();
			ivjGlgLayoutJButton.setName("GlgLayoutJButton");
			ivjGlgLayoutJButton.setToolTipText("Layout GLG");
			ivjGlgLayoutJButton.setText("glg");
			ivjGlgLayoutJButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjGlgLayoutJButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjGlgLayoutJButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGlgLayoutJButton;
}

/**
 * Return the GraphPane property value.
 * @return cbit.vcell.graph.GraphPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.graph.GraphPane getGraphPane() {
	if (ivjGraphPane == null) {
		try {
			ivjGraphPane = new cbit.gui.graph.GraphPane();
			ivjGraphPane.setName("GraphPane");
			ivjGraphPane.setBounds(0, 0, 372, 364);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGraphPane;
}

/**
 * Return the JLabel3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel3() {
	if (ivjJLabel3 == null) {
		try {
			ivjJLabel3 = new javax.swing.JLabel();
			ivjJLabel3.setName("JLabel3");
			ivjJLabel3.setText(" ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel3;
}


/**
 * Return the JLabel4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel4() {
	if (ivjJLabel4 == null) {
		try {
			ivjJLabel4 = new javax.swing.JLabel();
			ivjJLabel4.setName("JLabel4");
			ivjJLabel4.setText(" ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel4;
}


/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setPreferredSize(new java.awt.Dimension(22, 396));
			ivjJScrollPane1.setMinimumSize(new java.awt.Dimension(22, 396));
			getJScrollPane1().setViewportView(getGraphPane());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Return the JToolBar1 property value.
 * @return javax.swing.JToolBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JToolBar getJToolBar1() {
	if (ivjJToolBar1 == null) {
		try {
			ivjJToolBar1 = new javax.swing.JToolBar();
			ivjJToolBar1.setName("JToolBar1");
			ivjJToolBar1.setFloatable(false);
			ivjJToolBar1.setBorder(new javax.swing.border.EtchedBorder());
			ivjJToolBar1.setOrientation(javax.swing.SwingConstants.VERTICAL);
			getJToolBar1().add(getSelectButton(), getSelectButton().getName());
			getJToolBar1().add(getSpeciesButton(), getSpeciesButton().getName());
			getJToolBar1().add(getStepButton(), getStepButton().getName());
			getJToolBar1().add(getFluxButton(), getFluxButton().getName());
			getJToolBar1().add(getLineButton(), getLineButton().getName());
			getJToolBar1().add(getJLabel3(), getJLabel3().getName());
			getJToolBar1().add(getZoomInButton(), getZoomInButton().getName());
			getJToolBar1().add(getZoomOutButton(), getZoomOutButton().getName());
			getJToolBar1().add(getJLabel4(), getJLabel4().getName());
			getJToolBar1().add(getRandomLayoutButton(), getRandomLayoutButton().getName());
			getJToolBar1().add(getCircleLayoutButton(), getCircleLayoutButton().getName());
			getJToolBar1().add(getAnnealLayoutButton(), getAnnealLayoutButton().getName());
			getJToolBar1().add(getLevellerLayoutButton(), getLevellerLayoutButton().getName());
			getJToolBar1().add(getRelaxerLayoutButton(), getRelaxerLayoutButton().getName());
			getJToolBar1().add(getGlgLayoutJButton(), getGlgLayoutJButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJToolBar1;
}

/**
 * Comment
 */
private java.lang.String getLeveller() {
	return ReactionCartoonTool.LEVELLER;
}


/**
 * Return the LevellerLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getLevellerLayoutButton() {
	if (ivjLevellerLayoutButton == null) {
		try {
			ivjLevellerLayoutButton = new javax.swing.JButton();
			ivjLevellerLayoutButton.setName("LevellerLayoutButton");
			ivjLevellerLayoutButton.setToolTipText("Layout Leveler");
			ivjLevellerLayoutButton.setText("lev");
			ivjLevellerLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setActionCommand("LevellerLayout");
			ivjLevellerLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjLevellerLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjLevellerLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLevellerLayoutButton;
}

/**
 * Return the JToolBarToggleButton3 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getLineButton() {
	if (ivjLineButton == null) {
		try {
			ivjLineButton = new cbit.gui.JToolBarToggleButton();
			ivjLineButton.setName("LineButton");
			ivjLineButton.setToolTipText("RX Connection Tool");
			ivjLineButton.setText("");
			ivjLineButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjLineButton.setActionCommand("line");
			ivjLineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/line.gif")));
			ivjLineButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjLineButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLineButton;
}

/**
 * Gets the model property (cbit.vcell.model.Model) value.
 * @return The model property value.
 * @see #setModel
 */
public cbit.vcell.model.Model getModel() {
	return fieldModel;
}


/**
 * Accessor for the propertyChange field.
 * @return java.beans.PropertyChangeSupport
 */
protected java.beans.PropertyChangeSupport getPropertyChange() {
	if (propertyChange == null) {
		propertyChange = new java.beans.PropertyChangeSupport(this);
	};
	return propertyChange;
}


/**
 * Comment
 */
private java.lang.String getRandomizer() {
	return ReactionCartoonTool.RANDOMIZER;
}


/**
 * Return the RandomLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getRandomLayoutButton() {
	if (ivjRandomLayoutButton == null) {
		try {
			ivjRandomLayoutButton = new javax.swing.JButton();
			ivjRandomLayoutButton.setName("RandomLayoutButton");
			ivjRandomLayoutButton.setToolTipText("Layout Random");
			ivjRandomLayoutButton.setText("rnd");
			ivjRandomLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setActionCommand("RandomLayout");
			ivjRandomLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRandomLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjRandomLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRandomLayoutButton;
}

/**
 * Return the ReactionCartoon1 property value.
 * @return cbit.vcell.graph.ReactionCartoon
 * @deprecated
 */
public ReactionCartoon getReactionCartoon() {
	return getReactionCartoon1();
}


/**
 * Return the ReactionCartoon1 property value.
 * @return cbit.vcell.graph.ReactionCartoon
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ReactionCartoon getReactionCartoon1() {
	if (ivjReactionCartoon1 == null) {
		try {
			ivjReactionCartoon1 = new cbit.vcell.graph.ReactionCartoon();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjReactionCartoon1;
}


/**
 * Return the ReactionCartoonTool1 property value.
 * @return cbit.vcell.graph.ReactionCartoonTool
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ReactionCartoonTool getReactionCartoonTool1() {
	if (ivjReactionCartoonTool1 == null) {
		try {
			ivjReactionCartoonTool1 = new cbit.vcell.graph.ReactionCartoonTool();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjReactionCartoonTool1;
}


/**
 * Comment
 */
private java.lang.String getRelaxer() {
	return ReactionCartoonTool.RELAXER;
}


/**
 * Return the RelaxerLayoutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getRelaxerLayoutButton() {
	if (ivjRelaxerLayoutButton == null) {
		try {
			ivjRelaxerLayoutButton = new javax.swing.JButton();
			ivjRelaxerLayoutButton.setName("RelaxerLayoutButton");
			ivjRelaxerLayoutButton.setToolTipText("Layout Relaxer");
			ivjRelaxerLayoutButton.setText("rlx");
			ivjRelaxerLayoutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setActionCommand("RelaxerLayout");
			ivjRelaxerLayoutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRelaxerLayoutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjRelaxerLayoutButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRelaxerLayoutButton;
}

/**
 * Return the JToolBarToggleButton2 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getSelectButton() {
	if (ivjSelectButton == null) {
		try {
			ivjSelectButton = new cbit.gui.JToolBarToggleButton();
			ivjSelectButton.setName("SelectButton");
			ivjSelectButton.setToolTipText("Select Tool");
			ivjSelectButton.setText("");
			ivjSelectButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjSelectButton.setActionCommand("select");
			ivjSelectButton.setSelected(true);
			ivjSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/select.gif")));
			ivjSelectButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjSelectButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSelectButton;
}

/**
 * Return the selection1 property value.
 * @return javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.ButtonModel getSelection() {
	// user code begin {1}
	// user code end
	return ivjSelection;
}

/**
 * Return the SpeciesButton property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getSpeciesButton() {
	if (ivjSpeciesButton == null) {
		try {
			ivjSpeciesButton = new cbit.gui.JToolBarToggleButton();
			ivjSpeciesButton.setName("SpeciesButton");
			ivjSpeciesButton.setToolTipText("Species Tool");
			ivjSpeciesButton.setText("");
			ivjSpeciesButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjSpeciesButton.setActionCommand("species");
			ivjSpeciesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/species.gif")));
			ivjSpeciesButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjSpeciesButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSpeciesButton;
}

/**
 * Comment
 */
private java.lang.String getStabilizer() {
	return ReactionCartoonTool.STABILIZER;
}


/**
 * Return the JToolBarToggleButton1 property value.
 * @return cbit.gui.JToolBarToggleButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.JToolBarToggleButton getStepButton() {
	if (ivjStepButton == null) {
		try {
			ivjStepButton = new cbit.gui.JToolBarToggleButton();
			ivjStepButton.setName("StepButton");
			ivjStepButton.setToolTipText("Reaction Tool");
			ivjStepButton.setText("");
			ivjStepButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjStepButton.setActionCommand("step");
			ivjStepButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/step.gif")));
			ivjStepButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjStepButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStepButton;
}

/**
 * Gets the structure property (cbit.vcell.model.Structure) value.
 * @return The structure property value.
 * @see #setStructure
 */
public cbit.vcell.model.Structure getStructure() {
	return fieldStructure;
}


/**
 * Return the ZoomInButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getZoomInButton() {
	if (ivjZoomInButton == null) {
		try {
			ivjZoomInButton = new javax.swing.JButton();
			ivjZoomInButton.setName("ZoomInButton");
			ivjZoomInButton.setToolTipText("Zoom In");
			ivjZoomInButton.setText("");
			ivjZoomInButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setActionCommand("ZoomIn");
			ivjZoomInButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/zoomin.gif")));
			ivjZoomInButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setMinimumSize(new java.awt.Dimension(28, 28));
			ivjZoomInButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjZoomInButton;
}

/**
 * Return the ZoomOutButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getZoomOutButton() {
	if (ivjZoomOutButton == null) {
		try {
			ivjZoomOutButton = new javax.swing.JButton();
			ivjZoomOutButton.setName("ZoomOutButton");
			ivjZoomOutButton.setToolTipText("Zoom Out");
			ivjZoomOutButton.setText("");
			ivjZoomOutButton.setMaximumSize(new java.awt.Dimension(28, 28));
			ivjZoomOutButton.setActionCommand("ZoomOut");
			ivjZoomOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/zoomout.gif")));
			ivjZoomOutButton.setPreferredSize(new java.awt.Dimension(28, 28));
			ivjZoomOutButton.setMinimumSize(new java.awt.Dimension(28, 28));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjZoomOutButton;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION --------- in CartoonPanel");
	exception.printStackTrace(System.out);
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButtonGroupCivilized().addPropertyChangeListener(this);
	getRandomLayoutButton().addActionListener(this);
	getAnnealLayoutButton().addActionListener(this);
	getCircleLayoutButton().addActionListener(this);
	getRelaxerLayoutButton().addActionListener(this);
	getLevellerLayoutButton().addActionListener(this);
	getZoomInButton().addActionListener(this);
	getZoomOutButton().addActionListener(this);
	getGlgLayoutJButton().addActionListener(this);
	this.addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}

/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("CartoonPanel");
		setPreferredSize(new java.awt.Dimension(54, 425));
		setLayout(new java.awt.BorderLayout());
		setSize(472, 422);
		setMinimumSize(new java.awt.Dimension(54, 425));
		add(getFeatureSizePanel(), "Center");
		add(getJToolBar1(), "West");
		initConnections();
		connEtoM3();
		connEtoM4();
		connEtoM6();
		connEtoM5();
		connEtoM11();
		connEtoM8();
		connEtoM16();
		connEtoM18();
		connEtoM10();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * Comment
 */
private boolean isMembrane(Structure structure) {
	return (structure instanceof Membrane);
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		java.awt.Frame frame = new java.awt.Frame();
		ReactionCartoonEditorPanel aReactionCartoonEditorPanel;
		aReactionCartoonEditorPanel = new ReactionCartoonEditorPanel();
		frame.add("Center", aReactionCartoonEditorPanel);
		frame.setSize(aReactionCartoonEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of java.awt.Panel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getButtonGroupCivilized() && (evt.getPropertyName().equals("selection"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == this && (evt.getPropertyName().equals("structure"))) 
		connEtoM14(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("documentManager"))) 
		connEtoM17(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("model"))) 
		connEtoM19(evt);
	// user code begin {2}
	// user code end
}

/**
 * The removePropertyChangeListener method was generated to support the propertyChange field.
 * @param listener java.beans.PropertyChangeListener
 */
public synchronized void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().removePropertyChangeListener(listener);
}


/**
 * Sets the documentManager property (cbit.vcell.clientdb.ClientDocumentManager) value.
 * @param documentManager The new value for the property.
 * @see #getDocumentManager
 */
public void setDocumentManager(cbit.vcell.clientdb.DocumentManager documentManager) {
	cbit.vcell.clientdb.DocumentManager oldValue = fieldDocumentManager;
	fieldDocumentManager = documentManager;
	firePropertyChange("documentManager", oldValue, documentManager);
}


/**
 * Sets the model property (cbit.vcell.model.Model) value.
 * @param model The new value for the property.
 * @see #getModel
 */
public void setModel(cbit.vcell.model.Model model) {
	Model oldValue = fieldModel;
	fieldModel = model;
	firePropertyChange("model", oldValue, model);
}


/**
 * Set the selection1 to a new value.
 * @param newValue javax.swing.ButtonModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setSelection(javax.swing.ButtonModel newValue) {
	if (ivjSelection != newValue) {
		try {
			ivjSelection = newValue;
			connPtoP1SetSource();
			connPtoP2SetTarget();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Sets the structure property (cbit.vcell.model.Structure) value.
 * @param structure The new value for the property.
 * @see #getStructure
 */
public void setStructure(cbit.vcell.model.Structure structure) {
	Structure oldValue = fieldStructure;
	fieldStructure = structure;
	firePropertyChange("structure", oldValue, structure);
}


/**
 * Comment
 */
private void zoomInButton_ActionPerformed() {
	if (getReactionCartoon1()!=null){
		switch (getReactionCartoon1().getZoomPercent()){
			case 195: {
				// already at top, do nothing
				break;
			}
			case 156: {
				getReactionCartoon1().setZoomPercent(195);
				break;
			}
			case 125: {
				getReactionCartoon1().setZoomPercent(156);
				break;
			}
			case 100: {
				getReactionCartoon1().setZoomPercent(125);
				break;
			}
			case 80: {
				getReactionCartoon1().setZoomPercent(100);
				break;
			}
			case 64: {
				getReactionCartoon1().setZoomPercent(80);
				break;
			}
			case 50: {
				getReactionCartoon1().setZoomPercent(64);
				break;
			}
			case 40: {
				getReactionCartoon1().setZoomPercent(50);
				break;
			}
			case 30: {
				getReactionCartoon1().setZoomPercent(40);
				break;
			}
			case 20: {
				getReactionCartoon1().setZoomPercent(30);
				break;
			}
			case 10: {
				getReactionCartoon1().setZoomPercent(20);
				break;
			}
			default: {
				getReactionCartoon1().setZoomPercent(100);
				break;
			}
		}
	}
}


/**
 * Comment
 */
private void zoomOutButton_ActionPerformed() {
	if (getReactionCartoon1()!=null){
		switch (getReactionCartoon1().getZoomPercent()){
			case 195: {
				getReactionCartoon1().setZoomPercent(156);
				break;
			}
			case 156: {
				getReactionCartoon1().setZoomPercent(125);
				break;
			}
			case 125: {
				getReactionCartoon1().setZoomPercent(100);
				break;
			}
			case 100: {
				getReactionCartoon1().setZoomPercent(80);
				break;
			}
			case 80: {
				getReactionCartoon1().setZoomPercent(64);
				break;
			}
			case 64: {
				getReactionCartoon1().setZoomPercent(50);
				break;
			}
			case 50: {
				getReactionCartoon1().setZoomPercent(40);
				break;
			}
			case 40: {
				getReactionCartoon1().setZoomPercent(30);
				break;
			}
			case 30: {
				getReactionCartoon1().setZoomPercent(20);
				break;
			}
			case 20: {
				getReactionCartoon1().setZoomPercent(10);
				break;
			}
			case 10: {
				// can't zoom out any further
				break;
			}
			default: {
				getReactionCartoon1().setZoomPercent(100);
				break;
			}
		}
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GBBFBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E16DFD8DDCD5D536B8CDB479A6EA1822229E95E3D4D454D0E3C5C5B3B6631B673CEC4661D959BCEB1C4919680D53D8633CE19ADFF384CC7093934D9495139AACC284D4C4C090108F2F0AC00A0A4605FB60DE3CDF5DFBD0D42A7F5A9FEB1FF34FBD17FB21FF7F5F6F7FFE4F1F0BF3765AEB2D3D565AEBFF1CFD7659D74A5D9C3BE8E1FA2EA4ADDCA471FF3B97CA12F227A43D7F0D5C6FA12E629FA95912665F
	9600D5523A6519F0ED063C9953D232F3A427A78B525D10AE7FE1CA76BBF03FDA3A6C4C349B61A6C0B9F110771D27EAABC6AF679AD14EE21A7E676D4B603A822087F0641A708FD27E77372F6378F00EC7D818AEC991050466E75B73B8EE9E50E4812E99203B1051ABF0E58ADCD1D941693A3F93AF4D7FB7CF7AF2A2C7A393E18667CD6357FC690D05315BC8D9FF21FA921E92C8DB81087199D2F5458E38D6351D9D28696B35A945677AE43B3DF840E3F6DBABAB5BE5F31FE2F3B96B4D9E4565F2B6DAEC0A4B53E6F6
	4AF660497B10485DD712C565C8529C1099CFF195E5242C9E389F86087C90715BF7927CDC384F7CA8A5BB6FA3342F7A9FD5DC7F2ECB0FC8B3CA9D19AB8358D77E91332B7BA3553EC4478B696F523A78598A6273E848CB86188EB09FA03788E2GE0830D01E716FF88573ADE255E65F0381CF5EE77FE3B45F348E5116DF0DFD989B99C57AE7739BC96C9E2757C5F5B0B8C74998D985F52123172B11F4417E11DA7345FAF4D7A7E8D690B8DFCB2AB7ED23A29087942D2247A04155D90306C70A25F1874AD7B3824ADBB
	2F69590CC586E5D714BF1B914D65A4E84A1EDBC46ABA014640B438A7FCCBC93DD37CE394DF72310AE771D9C371A45D86F913BE465868DA013A18B2A7CAB9BBEEB474C3740FA2525795B39DCA0A753A146DA6323B0BD919C704AEFD941F39DD45B3DDF652B8A5698448ABACCD49E67175DC8EE92FF165A9591381E6824C8348591912DD84D03B93E3EC530A6DA146D89BB42C7DC3B63BC576C80C773995EB61AA8FAB9EF30B532B181DFD72B13347E66E354BDE09534CDEC1FC506B4377DB9A7BFDD0C6136C14BDE6
	52ECC13A59A1AB32474BE8DEDD310A50F8E41A5BE9F348D00043AD215C7FDA319A2EF633D77944EDB1AB32CA41725FDCC16A641C7998C88481F04F7C1279B6ED6FE07FB0408461078BAB093C033287BA0C4ACA134BF5F6485DC9AC11E66EA4FEBEC57B0E98381F3493FDAC2DA6383CDD50E6F7211C4415EFEB64B458E81FE476DC40B676E099F466D2B35077G0481C483A46D4298FA358BE328E179FDD251B3579B46D08244730CDDACF6666E52372549348C22E76EEE508D2093C0590D63C0C3D917B69EB9FF52
	AE63F6C6478B1E57BC8ACD984FE3E51C76A9A31BDF178660A53008DFB3C621D94C2F4C7F4EDCD217D1E0D7A240745DD8873FDF194FE2FA3F59ABE3949F71C0G4A9635C6181EFBF647703297F37DD6323A15C8BC2C613EA77A13F12C9120CCE2636BD60077811AGF6826C865883C05A538900D3G75G8E004BGDCGADG1FCA245712243DG55GE781AE87B8CD6286609040BE006B098D421FB62AE7AA5818D31112DD815083B081A091E0A60034875ABFC09B40B0C0AC40D400F9G6BAA214D83D881A28112
	GE683E46DCD49AE81688288830887188E108610DF85E3BC009BA09AE0B2C0AAC0CEB5148F5083B081A091E0E6B546565E1D6EF4B5DE512F595C374B8D7CEBD44FDA7F6A733673EB194E6F684FFD5CEF753C3E1A385F5137FAF947B575F51A570F11CEE7F9DD3AC609CF044BF81D86233BBE841A7F056040E26F17B476D6C9EABFC262EFB54FA731260FC3A3D9248F59883059A0EF1B2476BF981F7F105438A3B1C646E29223E49ECF621844A74620DE9E09590FGBE16D82C6E89209309E7B2775D9902AFC83B28
	8F014E28AD7CAF0C9D5818736B9C92CF72B95929B448EE59E9019BAF4FCB4DA1F14767C97DAE4173AA453BE1DED58F93992F404F4FA1B1ECD6940F2DF7C811BBE4C531B987547C8534AC6FD02FDB1D12E1D9992BC84C3B4E433CCA50E72DA2F312BE1753A95341CF30707CA5F4CEA45BE587A8DD6F9AF2AA8C1F73B6F9FEBCABDF60F3325C375F12481C4ABEC466F76C19AC51CC5A135BE3F34010CA2608D2DB8D19AFF9CA56E9FCA4810EBCDB964035228667BA673762DC2760625D5264CF5D69C6F37768BB3E1D
	9EDD43676EB56ADC076934E835316ECB695C0C633DCC5716F4C24B9F906923E18625DDCD9E30257DC30A62F2B6F9DCC36EFA5BB91B5DF6D136307C2B2DC45F8E90C65DA7313EE53534F0AD6153BDF8F63ADC769DAC7F59C5B97E79BB585C652EB57419836C198D10D603F317ABD713FC1CBF72C9CB3D4B2E16DD3B0F78F7F1F92E46C7B97B18FF49FDA24DAF937993A09D2B49E77C4F7970277965E76C546617542A79CCCFA517586615BF9B12E15ACFA64A87C51CDC4AFDDB17F70C478C4B3FBC17440CDDB3471E
	D2CB4A1C3C9B5798AC3C3C11DAB6070D2AE5E5B33A0B95C817D3B79ADD719E24AB8CC097DDC768FEA368EAA1CD66D8DDF03582CCGA896F40915C8B7270E4D43885D82BF3AF3FB11AEEFBF1B2B913A727DAADD78FEC2D7D505F41D7B19DE767DEC3ECE68B689BB522B11EEBA642782E45533B9FDF33D565E1F88BAF77DE876DE2CC13A8975EC4EC8740B2DD775DB57C068EA77A15D64FAB63F1C4965267A141BA668AC40B7829053602B9F1317DC0BF4339A587CF4FE8313175928152754A1DD89601B9B8349AB5C
	0FF456C6B64F8DEBE472A2FD644D96F41381BFB3203C28FA24CBEBE473651C83CCDE7E812DBCD3835219GEFB990C81E5408F46187583CBB064BCB6072C61A88DD12201B8978F9GB9CD0C2E2DC9CBB7F2G6926C2FAF613CAA7B5EB75ABE9C23AA240B7GD81A19FEF1BEF47385DDF2B313B32359A8DE6EEFC63A394D6CD9A1338568G4ADBD83CB0F9A3ADC857504264F5373067CE25C5DB6E61D6240BE8E14F9CF1AD2C9DA537E87D377820087B9676DC124A65AEE8516AF73720ABEFE54FAE26D635DC353DF9
	CDC8575D4A5A19524A7C92592AEDEF878EA1DDFCABABEFB2271B592AAD775D43C8B73F15BDA725F2FB179D547A659702AE6F202F3C7203DA3F5CF2C4449527339CE4F4E1BEF41F35A1DD0CCE5E2403DA7D2A0FA25D34036C390D68176B275FEB02EE8E173760A033A34724AD7749F624ABB02965D641FD0FC9DB6E559DC8B7EC624F0DAD0C8E4BE5F4F51DC897E9E24F12FA7F31F17BCF5B48DC022E7B8E1A4F19070B3D67E1BED4D959CA47F03636BB0B2E4F10F1BA5E04EB38CF1FA4E36CECC82781649C42F947
	AF16639AEE5459F8A92D69190CC0EB54050718DD26C36A3CE3640767B358987E5ADAD2E68464459C42717B4DDC6DBAD21D576B6A3351A5ACBE765D37C6BBAFE1388757AC01EB3F4D63D5DAE062B80C63E4529A22AFD96362E86E0FBB37EE15346B6083C3364ACA23698BDFA37D7C00565E64151F27AF8DE0EFA237F33A465ED9DB7F1241569ACF16AF13585CA767B074F5GE107897E46F2B2CFA4E397AB2F2F8C4B0B3CF80754F37D4D814B1BF21815B36730DA1E29FAE786337311468F25D0577B49348B7D53FC
	64031079F09D75155DE8DB5E91E8CBGEC8E57D6C170B627CD311909CF8B3731B2CA1C6F4155EC31941AB4B1D9DC576B05D9FE1F42EAE36F36E338CEFD5F26DAEC0B77CF14324CD7249B3DB708F8E5A0BD6288734524A32ACF16BD73C2FABEG5375768A54F58150143741D8CA714777A05E8E38B801DFDA0978D9004BBD0A36F9AAC93D19BD83BB581CAF732CF64EE7823A9100D8C1FFB325D72CB6AF33E964845A94B6ED1234EE755506B6D1DB0EB2DBE69DD5ED1A791B9752677E86EDFADE68D8548E7D9EG53
	E93545C82718F6346D363D48178838D441375DE644175F01FCF2957215834E5E01B65ED7CEEC73EA667A4C56576B34751734B84250D66BDD5169F19D4C46E99D2A2D11AF3D109E77925A7AD175B25E1673BAA156BAD1673F77EAF50E68E4BACF6AC45D2E2DAEA575C595ABE617B659536F72B8E4CBA10942E273F92518BE039657516CC6F23F8D5B4523DFEC207D4985571042423658EE06206D0087CD67G89D6265F9F2B51B7D321EC699374596DB5082FG1C7B93543B284E485771024F368F6DCD865C7CCF50
	1E697BB07E18FEDBAF10751281D9E9B7BBADAE8734B6CF61B6FFBDC51D7CEDA356C9C1C31CD4B17FEC4078ABBA466A227318DAA753266D4C188D40F45CD20B3645814D2CE3E85BF506F512FB9CED18D0BB5EBAE1657E3696FDD388B2FB04DCD31D2FEFDEB9311979268E1E624D76G1EE1B2EF29C3DB22C15E7463E8CBCA1F11ADD9DDD8CFC7770B3884DCE7976A12345FD717707737B2DD6AED1E3EA13B59933026185C6CFA54A782E4CE69C2FD068CFD3BC06873C4BD6A13F382461B9328CFC1032FBE2D391BF8
	5C48F673F02020E1B2079AD017B01017F482F5F94D50B773CE20AE5B9AD1174C13B017B9093AC4B67A6AD2D6416B4984F5EE9F3D1EFEADE4AAA0AF61A46A32E350C817B9224C6683DF2D9FF8FD975171224B65E8F132016A53BA1D94688BD89B1B38DA5B6FD5FDF946300DCDD8E9CDCFBB495B56A9350D454DF8A1BDE98676FBF79CC0FB6DC093F78A6D4D379A59BB6B943E776F58184F75BDB22484D41815F122896BF79E7097F6E3990D25C6E574F423CFA7B7FDB51FF61FD8A67A56A67B0050E7E3B36A23C0D9
	89223C70E67D3C0251BFA76867GED5EE9242FE9719D2B37580D7A5CCEC15F5F02E3B577FD8B7A5E8AB43102EED9AB9D6F944FD01FB26411A5DC5B5A6507E7F24E3722FEB3C1C64E992C231A23846F84FF196D6D32F7482EB0B973DA495A3B6CA44BBC96AE2364A06A528C7CE1C2C6EE8D395275C5897D7A7CD23266EE739E129D3D9E186E971AB4D3BA87F9CDCD9A95D3F26F3613C24F140328E792481FF7866D5DE3C2BFB23A98935295FE8A7170A952E59CDAAE62013C9A0791C978267890192F1342D9FB46B2
	DD07C43F8BF2268BD94F9E5257B543CB07C9DB7268A624CC567E43A8AB2B87E23887E5BDFE5837DE5F90F443C013A8682EB8C26A0F4EF949D312704BCF0E206FD301B65F0C749F3791DDAC2E3EA172E0F2486CB48F489EEEEF17E19E13F7F39B165F8532A2053C770F12B9FF2F7AD042697B0F0A398550CA3D583F2EEFC73DAAG676EC5B91735AF623E368B7F5F6303E37C7F590EF26301F7B6GDB077EC325F69DFADDDFCAF6830095E0248F4B986AD8023EBA4404B2198FF7204CA8201D56073A8EF6A2BE5382
	E301855FFD7EDA6CE1D1AC2C8F1CE0D15F174740FD22A6CD57D3685E0E3AD3C45E948B5B5B31C860CD94BFD303E7657F7BC97455DC48EB13F1BFC24FFAE26BA4C8CF87C885107A210E81EA7B717934F6ADF9BFB46AFE0F9627820F2FE6FB074F8B865CF7311658FDD63E4053EF2C5536D93E37E983691B3A214CE100C800F80029C2074B5E892AC36330218E4C4FBD65444F297D0177A2680171B9A91FB490BA9F9B83371D546EE94BDC551ACEFCE0B44FAC6132EB8754B11079647CC66213B04047GCC821886B0
	F7GFD7254BBC541FC02FBEB38B318CDFF5C9DEC4F56B22B2F3DFC0FD8D03E929D9F336369CDE44D269972ACGA3G51G49GB38196D8511EF7566D8DDA47E4G6DF45571BED677F60A6BF9F745786CFBA4A8DF1E4D086F741E7115F7B6A8DF39E1F92BAA47D75E6620FCA6DDF9ECBC7D6BBA033523D632FA325F6C69F48D8C1078A21DB6FF0F3723DA5BFFDAECEC7FD384DCE381585A5B5E33D992FB6F1EE4433E68D0BE09133C41146C8A00B6GBBC0A4C0824074C10C935B3A7D4162C4EC8D03D841F7227E61
	427D722BF17A738FC179D287FD79186D2D16AC096DB1104E62B8F0475E7169707D20FC1633C6BA745B507FA3C20733D5635361C2D03E59E70D7A059FEDA1751D86F93976146CA200E6GBB40840084BB567793416BDBD4F2A8753D23DA2F6F943B2FFE46F66E7363AB565BE9B7EABFABBB5E158C5722F92B41BA595507F111E647BA7933DF192155C9C6CDB03EEE07915F5DC17982741DC1799407D19CEEEBC01BA39CE833EB5F786A67F3BFBEFD7D4CF39845E16DD69207D94E146C8200AA00AE009100E800E4A7
	46612AF76B024521265F2987FC334BF556A08C393E7F289D1F2FF786651B65B472753F75222F67BB51573F7713951A2F7F6A472777F5174B086F763A71597CC0D0BE374B4866EC5157CEF0214D47770F4FE6590FCFEF73DCC31BD7560F4F660DC179B25DC6B6A708FA4EF3234DBF7613951A4D3F7063535B9C66B6623B54B0BE1B7FA9A8DF34214D05221E93054D5B9B47E7F3359F1F5E665C4F0C78DE9EE7F9FF8EDADE51E7C6B6DB875166064FF08E75C881694B62A1BD85E096C09AC01E8766D4G5D9E6C4BAC
	6F127D07214C350377E3779E981F5D0F7A71696D9E719859FD5C0AF317A88F567527CD630BB7C7D03EB4C39DC6CAD1079CAF6A3035F9FCBA6C884A27F80D78DE98E7F93F8F4A9761B532394B0EB647891B6FED99E75D7B71ED5225339443B13EF5FCB6DF9514AF5F303CDD8747E7DF039F1FBE36AB8C4B1B6947971AFD3F8B4A57E6D85EC453784ACB8C4AE7B5ACEF6850784A3BBCA8DF18E1F94D0747D75E3120FC510665C9C746D75E0A20FC090665CD73638BADBEFF694727EFFFD38D4B0BED9B1FFD7787651B
	EDD81E7D68784A3B9814AF4D303C7C76717933580FCF6F4F1CA1A33EF9FEFC215977E6D03EC2DDF96CD97476AC22174FDA8E6EF2E9D2977E59BA4E149A6DBACEAD483383C482448D61BA4E7BFB717B5864A15CC375855DA7B19F524B4E41B355B99CAB12BB46E76B3F85652BBAE744676E9CDFF9DF84656B5415473E77CB237B496C10B78100610E1E225FGC2BAD1600ACF935C8CC84F9538A3E788AE67FCCAF661F974D793652D02F4174035D39C2987726E0E611EBF5995C45F95DCCEB01AAE839AD6466BA115
	B15AF7F85AB85463783A5E7A405FC338579BFF8FF1EE3D717790A36BD7B1BC4850FE050A79616BC77FDEA2E2FD606FA51E5D90D84F97B6986B795286E3BDDF59B03A1E2FED882467C66A6FE76977891EA127E2F348D4B4EB6772B0599783337876A1A71B629369DE7DFB818957C07E72BEF9C768BE0F4F879372CAA57F67837605BC8A69144D1EA37D7DE2412D43AD77215EDFEE8C6C23EFEEB476D144C6E39FDD3BF1F49F5D3CF1F49F3D2C106F387C3EE5B9ECF6286F2EBF284866B40D0A6BD019107D5C2640F6
	3C3849580EB91B48FBE02FEB4853A76BF57D7D26F5A2CFFD22EAD1E487D107FF4BC3799533E7C0763375EF141F6585624F5C9C489F4C5659BE36168BFC549EADFE1740B7D7AE657836FE0F4B51D64A47121EAF57CB066B1A7C55GBEB7582AF11FED44F99CA3FECF77F7CD0174AC007922FF2BBDCB7A19E5433E7DD0BECF1773EB33A63F9B6E5D437E7DD6B86022F5F8661F6379016B74CC3EF11DDA72835769597C60F52A64872E53CB79416BB4BC1F3E9B37D9EC9E3E4B10554D5A3D3EF5D3467B6BA396624784
	1D7D13F9FA863F26EA729740FD4E85FFBF96G2E82402449E3E54F5215DD0E6F35EC246C9E1DAC0527A770EB0CA6BF916E279814BD93F0F3F5F8D67644AA0C55B6455536C378F25A1640F57B6FDB0C6B7679AD016BF6761660F57B4A1640F5BBEFCB703A7D6B96FD5D32FE6B27EB09ADEE688AE5AFDD0CE9B0ABE6EE3F35DA5BD6097D7CDB6ABE62FB69222F4FF2F93A10DF2BF479ED103668F043100EG083D282F77229AED59BB55FE2546B79EF6605C380168B4C9A7FFAACF4F6257F91A7C4CCBA9596BG0AAE
	797254C23A7312D1BC5C394F276C7AD26E7F562D01636168D663F8B83EB5F0BC1C599ABC9E8636860E8767566071F0FE6B687D7719DA2D7FCBC55D7F3C1778592A734F88CFC772EB1CAEBF895253F43859101E8F10B5222F7B776AFC7DDC46713F2C536A34DB68340276C3F9A33E72CBF83A01DF3BF479F6C80769F0D1100E87C87653691A7D3EBA15F37C017AA55AB6D2AA5EA5D0BFCD57491F4353E97C3A6CF35D988469F29D2E99525DG6E4F75BA3DD16F2BD38547BF586023D3996A74B175D338CEFEB4CFA7
	706BE4DD7E8CC8276AF08BA01D7385BCF7FD2157293F51D727BD9C3F6900266E6A553E44B1C8F42A7842D73E0927FB78D55164CF007B989DBD6D5F81B785E026A60F457A1385015B6754826376793302406D731902606D734502406D733785415B672B8523374F5F7878D3ED1F5DD6624F39BA7FC8DF32F4AE3F96FE2966D741FD5B177E7E34GEED807E7E55F5024ED07FBC45917151232A3F4BC31BCBD49208C5AC783FE16AEEF9E24B34320FF8E53475749E61F585E01785C965FF1E1A76E1B31931D0A42FC65
	5772F4A73FDAB579A3F09F99662FEB9C6012420C7C711B969F1D4A91BF2955873F93710E033EEDE4A7472FB4795A301B631FB7E967A125225C04C35AFA289078AF8F7B4A5945713B0F7868338B69B35AFC703B917F1CAF3E827137533D121AB13804610F377B506FC17AFFF47860CBF01DE820114CC18C66769DFD9E175D4E770732F52270D37A6F7649FE1FE9D09F3343F01DE8C1CD960F4534B0F10E9A7DFE276432146CE6001E4B70996043D177348CDF66DF7FEC6F636BF45DA962B23677F121407F0D6223B5
	F836A7B21C62C9BA8E72323E01FBBB7F5461DBC758CF5E55690B47BEFD658E521F38BDF23F6C7148168E5BC5621B38EF507712BB68FA8D5C8F8B7956D364CC84366F9B627CF2C2770270E1AA50C900AB84283A1C791255498367C9797D9E33832A02BEEC170453FD6A2711B78668938126834CA3F243455E6EB3049798ED0EA187551069D77EA951EF986842856D3FDEA05F699F104DE403B421551CFB103B0A44B5BE6129736E3F3DCF77BEE31F481F2D799ECA3A07A5B11C555B14F05D5A19AEBD97522C5EFECE
	3FF3112EE07536D954674B945F2C41337AFC0DBED312F4A464C5FC935756FA69DE3389D742DC76CA447D186292A01DACF085747D56D4C84F96B8056E131A8F691C8908FB066272A0DDA4F0F7B8882E96525D82F7460A6BFCEE01FB126222A01DA0F01FD9D03F498217E2C17D2689DC190C7A4D94382BFBD13F398277EAAF6A17A6F0778F20FE4B7E89F1993D28DF3E404D25F48D106E92381DC2E73B40DDEDC31D43846ED59B6A9CA1F0C786D167E8013BEDGF5CE90B8490ABAA7895C0BF654F91A40058D204E33
	856E258154AF73DB08BB5D077A2D93389FD0DC81244B85EEB375F3AD243B846EC1CAE707748401DBCD6922A01DA8F0D34D84B78552B384EEA89B75CB95386BA9EE59D5B0A73B8AF13B296FABA0ED923836865439CB609EE9C01FDA84AE2F91FD6A96382BF623CF43856ECF94978969B8012B2A90FE96381AD261E701FBA3D778D960CE2F91FE0EC05CEB3D424F82574E7C8C69F201FB0462EAA15DA5F0F78BBF5B85EE897573B02423842E30977D9CAFF013051F1385EEB6454D06F41A406D97FEDEF6B562CAC4FB
	DBA7F05F31E0EC94885C6BA2B6CA84EEEDAF6A5CA0F067FBB1B65A846E4ABE5459A2F01B32D067E1012B494258089138D77BD067C4017BF76167E401AB27F4D3C9DA60EE2238B910DEA0F0EABC67DC639B4FF9102E9038238E5459A4F05F2EC11DFB846EFB94978E6998017B759E2133409D91FECE9638C40A1BCA5282370676EBF3A03DC04589BF67FC9BF167D83F86698A01FBDC7859A4F03270F30F40DDC1F161100E9138D4554F82776DC12133404D9B445818AAF0C74FE2EC4C9038DF8C204E2982370776EB
	73A11D9909388E87464BBA011BAE7A35A201AB33E2EC3489DCAF6DE3AD109E9638AF2C28F338407D4A0ABAC78ADC2D8DF50E91B8358DA68A9CEB03C467E4014B6DC71D278BDCFC9F6ABCC7602676214ED95FC15C6D2528DF1E40E51691DCA124AB844EC6F18D106E9638FC71CE4DADF0135F42BA8F97389F6CC3DD22856E45FD78CEADD960266E46BA1FAEF0DF5AD13FD982B71B62D2A11DA6F00D345EB22F85BB2EC55CBBB4B6CAA0ED9238AFA92E8B52D601DB6DA23891C8C78B5CFF58D06784012B213C53A11D
	FAAD4E1D13CF617A7902EBF16EDC3A044CF54A2F03F281AC57615CF9215883BBF21D7FBCB992F0F1BABCBF4F164E45132EE3F32A8C01FF186227EA707CBCDB716D7DCC482B0AC27D6B7622CD31D128D39AB95A014F8597D62B775F2A8A651D62F8016FB77DDA4B1892C54E50FE11FEA244571CCE117927D3BE1FAFBEGED30B9E4A7B9D036F0E7F9D1FEF9694EED7C9B2158735AEF04AA16FC4370ACB382D95733BA4B635785EBEE6667DEAF6A46E718CE480B389E1F95FED7CC666562790DA8D2D9395FC54E86B3
	31878F96DB073A33B87F146BB136AED1198BA01DFB8374C7B760999D439F60999D89F7CE1466569B1F01B23B737374069B7833BB3F12EF1A26B8DEC8E7E51EBD0DE546C17E2C9B6838F5DA7BEDAA7165218C36E70A65BF6513CF56DF48B71EEA7EFF7B6493FD9F70615FFEC61BCFFC341173B35B1EFA9FEDDB70D422E4FFA8BC60996485B772F7D07C9AB967260595ABAFE530D8F833D80D0544132144829F1F68BB32B01099FD239893A8AE815213856E08686766885C152C1F0B06E746E8ECF34F5492FB2AA05D
	89608618G908B1084B08DE08E00F49354B1C0B9C0A700829085B069A6147387AA071C73C54EEE3272334B4839E453EFE267CE11B325665D444E98A367EE11333C4879D6644CACF20E94137317FD7360CA4AA16513B2C3EDE3D5DCFFBDFE1A8EB7C1136E6472096D8A3FA7B6C9A1149B2B139B256119E320C770BEE8D7AD311D1C6DC9E2AA507935C610A1296797EBC1FF8EE936667EDDCD0CEF60771BA536CFB8D8F97A3316B7EA6ED705402F57FD35B450C0E4AAAE173D53666E1407955EE7EEA9D15B494F6859
	8C8AE4323C23BB543CB23AE66DB08F6B56AD8E5171B967E698A3EF46F50B093B0D3E3FE6B215D2D5E6C785A94F5667F2B2D9EF52F1389964F48AD91F1486DE5379991D8744836DA40079B75367BEAB2E414C3E59BFC618CCE50D719A4CFF5239DA55BFC37B81E07A5EC836A0F05D9FA32F68B9EDB71DABABC097A6E8DF5F29663FC367DF8910178440F04F513965329818EF46203E6BFBD15F0618C07AE6D8355F61B3D96B292E745B6D98144F56B92C10D6E2D027133BD57D2F2BD0759B26731BD820CB90348F6F
	D17337D1D9B3A1EF0E103F187A3B629668CFEEC17DEF9CC07D5D37982C87D33EE5D4D6B864C75E02E5BDDF29464183B65F38DB30D74D331EB50E3BE6BAB7CE86F9D3EF41D8C99D889CF71B2BD519030E40B1D545665CA0D33A95657E4ACC746BF7B995C673E73A5ED084799537229FA23257C9415AE02B55B86EFEC01F172DA0CB91E59E6EFD0B5A6D9930B95106257B543AAC2ED56F0F562975F6102EC944021C04DB51574AFE5576A5F45D011D11A4DB984F168A0C251937E2DD5BA8AE1558A7F0CE7A7C50FC9B
	344F5B506ED5EB506E305B8255FF84DB2F007C585BC43B2AD7F5327579567FE38D1ABE294F387EFFC75B57B410B7D348FC21D1655BE289DC4715340EB3E361BE96EDBBCA1FE92BA05D9C0B36BD97C21D7EA55B38CED7AE216BA7A0ABBC967523C7C973BA5B5A2C5EFBDA547A5BC07B15C460C996FC57372A7931D44FD4222350BD117AA27F3BB0C77CAE6A3EB3EBB45D995FGFD966F869E6BF7312C24032ADEAF1BD4FF9E5455511243EADEE200BAE24F20D1A0BBD6487F78084A7761A8F5D4CF6BE89A704D7CAE
	5AF911BD77CD047B09E8671DB5416B68A7B546F574A2DDBF2985D9260928DFDB1BEAFF52D1D557FF35785A7F9F6DEADE11ECECFF832D4BE1109DAE64E7FC2272DD5D9B587EBBE9BDA782DF72C434FF8E75E7AA31DD58BFB2EABD33F2E2320C6D1FC46B3F6076146C125BD13F8F0E2976379CD76F69ABC24E97C657DC3A0147AA78FEFEC2352B4D6ABB2E7733F5EB200D3D9DED391C5665FCC8CBF1E84B4BE2ACA90A8B541774D2D93510EF0A433E72024D3F2FFC7D242A7B1AEE753E6234EA070D4EB706C1CEF89C
	5AF16A0C1ADFC6E3B091721263D06FEA3A7E12F3874CF76EC03DFF58973C2D3DC66B2E99F8BA6F40323E78D4755906B25F787AEE0F1A97D6E69CDF51F41DA68C64C55C017A3550F51AA4D206403DC257E966C1FA01507919FD41F5DEDCCB4739BBE11C3B93F51EE256748F3D2A0EFF316B7A870B1A576DB056DF21B1E081596EBB31AE0B87830F619F4B2A4C9B86FDE3AC014EE7E2C0CE3C107521EB147E052E83ADG5A2C3B50A72F5B50A765F7851A0BFDB2E85C169C347CE6606B3C8B1F351EBC05EBC0E1DCDE
	14C6EEBC5CA75FE53486F4042E69CC3FCBFF264CC90A1FF3177ECC190AA5F826CC9A64F5476373683AFD38E6B7D9600E5762F36B8C010B2C4575B969EE547DC1FADEE42EC8A753B4B98716FFD7D529DD4FA1F4E3F9A68986FCDF02CF99216CE99F8B30F736DDFBC51F83B6548274G0481445E0D6BADBFBF25DD9F4A39591E0E6F2F75B2A7F3BFCC3BDBDDEFE17B3AB753FEC33A877A0DFBF0EF77560F496FC79CB38F7A6F6A86E41B476516BD4A850625273063EFFDF5877BAE42581F6F0E132FFD4CFCACDE7FC8
	572F2A6E516F83C8237866FB747BGAED35750A0AF699E7C16360D0E8BF977C2BF845086E08518G90F7AF7A527EB1F9109D75BB5ACE171B9E6C27593A4E3FCFB9BDD67BD8DCBC3998572AA6BDF60F14744D0600E765A65D4B62E1A63F963EF453C2F2E5763DC41FD93392D2328BG1A81FAG9400088434EF52477C0CA1928EF50AE26E3352D308450784B6793C0AA61B927858CF7727765BDDE605FFE740477EEADC7B0BCD407E7265EAB20E765245C95C8F7126B8C3E69250CD83106ECB494E3D0FFD77D2F59F
	9D5F77650F622B227B184D2C0CDB697ED0174786DA32331519BE8F6F43E710707B44D8C04FACE63F5D400E68E078744FC93FCEEC3449DEF1F6874B7B8E5D57572148EE4C60FBC3DC84FF40BEB46C0B3F1C6ECBB2591C32AF7E75FC929B2DA6F32FEC473D150F8D91FDCEEA4EDEE4781E3716F33CB863D068B325C615037BA1F33B49EFAC3003D259A230EF599974B7BF48811DF659A8BF6283124F8E93B54A3F61A332460A07D8EAA9D8FE769A3286458F5C749140725F3CC8761DB45987D89EBF9E051DDD5864F3
	B66FA49E87B36F43339A5F6DB54A1FFB9F4E9FC686A5619B1B0DFC8397E0DD363422A83F34E29B0E7DFFBC2B72C5BA9AB5FCF8FCF30B43BCA03740042010EC99A49F2E94EEAB26870B32DD08056FED3791926FF6AFC4C771002D7F3DEDE46D1A4FFB9D2A7C8EEBA8FA31B574FF2673D17A831F7763F8B17534F68DBB7F23A306EB58E927AF26D75C4F5AC6777D6AF811644967EB5857B8D51D7E2BAFF4DF2DF42BFC5F688D1D6FCA2F4AF75340D773F1BF34B43D0F6FD1D479E96650FDDC5B0BBE0E3C9F7B069D74
	99C3718C49CC7653C32A6C374790D7C367D53E28015079D207D53E1F5A3F1A2F6C507B68FD357422AAFFA8A43D182F1E98C0DFCD3D9F5BDC71A5D55607E3704D5191156F2EB1441F72394A77C4C8754C6BD052748D59DB74FC87DCCE25703DBA0F4DECFF2FA8FF877CAFD17DB5EF214ADBB40618DF1D2172056D8E050F51D6D478465FB7B3D5B95BCA1B3EDA7FC4C7BC0C88A6BFC133A676475C5063E1779A51BFFDCFBC2BEB5649B26D217B6A7583AA5F2DE30807B54DAA5F46B1544DC82B4AB7E90C71706303AA
	6F6EB11479BB4D1A5752B170E59FD679C646609B39CD53EFE50D4D46891A75291746D0663D1A352B31346B1FF528FC879C2173EDBF2E72DDDEB3B69B5B3BD45EE7770C21DF572CC7AD99C3BDC61FD4799247601B9F1DD679CE0C319EFFFBC665FDE18CE5E67528FCBF994358F5492C7255B83EDADFC5CE7636B9FD7B2ADBB56BC27FB20631EB3918CBD5083E6A49BED55671B10CDDF3B46BCFE3692B0E772BFCFF171B3F32EFE07E4C1D4364DF9CD0655FB2863DEE312AFC8B46B026CE3629FCEBCAC267FBC9B3CF
	FF682D507976E966518F6E9BDBBB68554CF71F88E9ACE6FCD738D43EE503217325E96649EFBA3FDADDFB595328CFDDEF7028722707943B2C9D2C9B44F660966D20C6B3B7FFB9A49B595A5E4CD33886987FBDDC6FCB6A226FCEA1BDDD60F61F44F541798267BE096B027909386E77C9A54115C33AD960FAA82EA7111D4F4DF0B5CBC65B6FC578C3D9E7E98EC0474F78299C2D0CD0578B0D4E41A04056A56A683AC4B8689119086B9D4E5A7CD164A5F31D997F23F4EDF5BA60E6A56233CBFBA1F9CE549C73426B7D0B
	3DD86FD98F60FE2C07776A77E3BD1F2E5DCF153AD73F9F0BCC04557C75D57A7DD82F78701B2A747B31101F2DCD7D1E469DDB037ACCA63F19EB38DED9572B34C2AC9E699D0419EB27F9C0709474933962FB94360C4973BE6AA7E50B337569F290BB151F1F47C75F5B70F3F6B477D7F6FF7D7B95E33F56B2187DA78682FFF359B3C06A4A7F1B4BFE0A77BF1B43BEB07AB9AA4AC060F3D4AE8DE8FFF71655FB1AC26A269662309BA08CA08AA07E81DC0F4C36125F50E2A77E6A57A29BAD83641BCF2FE2F6AAD87EDCEB
	E0DB7FE4DD2B5ACA387AE4BC97C57C6E6882ABD9276BF5A90A4BC164A3BE5DC66ACBF139A91261965B080FBC36812B42C8B9FEB9FD5FE7177BA91A3545272A096D7DE63BD77D1D058F44EFA5CD81FB97BC00FBB99765137857FF0BD74C96CCABAB9B15BE2BEC594F17CFF91BF65660BAEB7903382FB3064A37C3BA9CA066C16C97AE273F29F4DC76AAEC9D693C0C6BC8F9775EAE65ED2ECD47762D0F27C98F32BEE776036ABA9276972B252777ED052BD6658E72972B48DBFC2C313D33253E4E043F59579F60B77B
	68AAA66F2BEC58D765FE9F77C73709F59A5377F19C0835EA575643819F7D7D517BFE96FFD71EA3BAA4G6DD40039G1913D232578114CC42989CF494CA015F1F3045CBEA2447ECF3AACC1F2786347AB4002C2EC9236B4378FE6443E7871E3010782A56E8792200A7BEA43E37FD7C168CBC53C3625BB828651B83BCE9C17858B835106EBFDE76907878A10C471FF779FF9F793BAE31DF6DA176FDE4B7DC5D8F31B3495878F878E47EA865CDF8C8BBBE5EC46798B1000B9765BE3B082E19532F9DF77098FE11FEEB28
	796AF5877B6675DA1F5F88A15F3C92BDE6002C5407F06E142FD92BB3550E3297383434A83FEC4F2EED1C762ADAE2FF3DCCFED383670C7597D4D99BAAC311454FCD747916D6FAB8A5BB7761516B054538B494385FDCBC943C5F4C99A27E15213F6B3C60665F4D2F99A2F6397A7B3D32681F578F6588DC0B374D653511511869DE9474CC71C21DAD0C2FB2A81F7EECBE46678D4A278776DEB107FEF75A70307EFD633B945F76307EFD63449AFC5F588DF9139F46770D0597C97C96BC1212DD8BE081988108840887C8
	8618718876C189C32375C1ECB05077C1175B0C6C1B778873E1E612FFDC7039F72F915FBACEDFE440473F79E3FBE6A07F2840A5D3DC9747B1DBA24F850E359B4F850F3558F346E3741D677C4768FB4F990F518F1C530E51CC575F8C786B7F7200D6FF06FB5E006EC5833A0EB57EF4DDEB7C693699782D586ACFD7BE68CF37E7D0CB477A0E691AF5787B3AC269BBD81C2EB801F12A003C04A49CEF0F1D4039451CA41CDB04D35A3CC7D3324B81CC0FE21FFA7624FFDF76A74D7A7E1AA52168434F2F2F44F15E72A816
	3B0A362598C8CF821876A8BEC35E3C97FD13A1FCF35BDE748D4131B316A62FA66F48ECCE72AE041CF45DA4BBC55C2F257BDE597DE64DFDFC4D577F9C706457DA860B79320B015BDD6545606D2E7E22F13BEB39685F6E8EDFB4EEF71D97356D0EBF1FF0399EF1C89F43FFFA1154951B9760AF0AE15D5ECC670564FB47B9A2867EAE3E2F1BA7F076DE244BFD8CF1CF2B5F41BF06F3EE73874BA4710CF85CE6D12C8C1FB73CDC45B74B449ED1E739A746374F653DF1721D9AB39F5F87C35BEA43E37A71EAA17D0D3036
	4774635537C4BF508DF9139F43B976CE3F5FFDA9F8DC9D8BAA9E779F97D8B9D750B6EBFADCDF7EB5945F75383E7CF744F8E9013C290F637CEA6D970012589E3A3503236DABE474FB3ED46967740EC64F1F7D69DABE3BDFFCD23D0FBC7175377F3B3F56B2D85C1B2A689C18FCF31C0CED61A75558965A12311E2F2AD1ED0F525CEF7CFF508F6E7ADA4BE04F96C3D5988BA3E0F394C0B240F4009E317676C2F57EA8F2D213D92C735F5295674AACGFC799358276C68A13F4D207BA63349E3336CB773ADAFEC1C7BED
	950E2F76A7F01CDBCDFFDFB98E5249GB31E4071758D3A0E50813CD6C97D66F5FC7D498363647B4FB1733176FEA535E96E937AFEA01262531E5077836FD623DFB3FF1012ED7D814667551AEF0AEF505CEF2E7E7A633362EBAD639DDA471E2CEBE150C9780334486B115E761FA755DD737CF3891FB66426CB69AD52DBD6BAA835C80B4E13D1EB588D9E3B9B446C72FEA6517E122594E9B97E2AFDBEB94C87C6B1C54AA4BB1494A91BECD753E0491E9AC5FA3B3DABDFBD91CD13CD26CEA00EC5F0BE5BDE26C8999E27
	C51116E9F71B0176AB0576B02B10956F6CF3E51599AF5D1E11AEE5026AECAA5182A2E1BEG96F818A599B015A0F6C869DAD02425EC0B1E2A4ADBEC8703A265F0E558DEB51BF3G74B1BB01E819F6779A7548CAFF39ABB9B77ED4B5B077F97A00D93BB5AE90738A74835B66C69CE19F265E56ECFB8B46CC7750D1E63BFC0E20FD76548562DECC36826637B819AF58FE41C034D914764810C2099773CD040A3404EB50E4EA0252876C830184AC637BA0D56FAF666F22B050A47AEBFED069DB7BDC0EE2DB2F23F8681C
	23585C2B944B7030DACCE6F69671226B640FFB122CBFDD73DE3A3428C5DA5AEF136D168E7A2A4BA46550D4036C6D73585CA476A096696FE3EFA73F0F3D1D7FBE36C9DAC56970959991CF94A9B3C92BB5628E586C32D34DDA21497A245DC4DCCDA5C3C4EF0774DE9AF68B95E9DDF1F1B77D7D60EE765E2D9B7772C12C69377791513B5CBAAF84CB1586A8877733E94AC194E12B7A3FD58E6E85531403A84236FF2C65E86BFF394FEB58FF796E4E5FCDFB7118B7C3FA2BC5FA17FC5D58A1FB580F9CDB48813747E48F
	69548EC859EE178DB2818FBD0217DE96F9158B50G255C7EF67933A199BCEE91270FFB95E98D2B3CA145E65F5EEC76DA6956E3080CCCD1632CBE6B7229FE64A9E3A168371A6AC7380A85576A47D73E3F25F5CED20614FEC0DAE2F719AD872037F4F9DA24EC456A113DD6175DB26C5ED7CB85E51DA783B659E01C8962B688F309F1456423E721645961DBA21627AEBFG0DE858A3ED2714646315E2C1E129371ABDD0146CE981B0C31185A26F32CD4A87CFB73D531DAEAD74B58A1AFB3F59E133DF001B8670250BB5
	5BC310BCCF07835175521F14BFC036E57F728FBF1D789FD5736602308352A27AEB3C20D20ECAF5F84851ABFB3E19F07D4625D1332FA29A3B0939A8B99B9E8D1DDE72EB67A0BCDFE7B3E689550B2F7BE94975F73FF1122A2E32AA52E6D6E7403AFDC0F6B936577577C35C89815082C17CC6A11E50946BE85E9E7E4E1A56E77E5E8B9155A0E5B8CACA685F9D74EFA9793B03E2F6D04C0ED22836F952287F747943E8B38DC31A68A4B1B4CC6E0E8E075A68567BF5A2E2439DF4E97E3B70882BE57C8D0F241A7D421DE0
	8F7A47ADC19F9151C3D26D644FB17267B8E5BAC17FF60F59F7046B0C4EE77660BE7B7F420E217FA1F6FC71BF440EABC3EE0BDB20AD9E2B073618DFEFA75F04E013D47715E91A240AA4922E9967187B5EA8C5726DDA0A345AE09397119175BF329F0889393EB678751D6A46A70D57B4D842FCFBC8DEDB9881FF56061ED22405798444EF3DFF297DCEAF6D0A3E0067B82DFB1A3FB3F9DA7F1D5E4A9574AC864007BF0D6FF8BEDD7E3194F85FCB0743EC37ABE67B59BA27056C0159FFC11155FD9739AB08FCAF5270CC
	1637E18551FBD04373FFGD0CB87882AF4D49E61B1GG1C26GGD0CB818294G94G88G88GBBFBB0B62AF4D49E61B1GG1C26GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG9BB2GGGG
**end of data**/
}
}