// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package cbit.vcell.messaging.server;

public final class LocalVCellConnectionMessaging_Stub
    extends java.rmi.server.RemoteStub
    implements cbit.vcell.server.VCellConnection, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_getBNGService_0;
    private static java.lang.reflect.Method $method_getDataSetController_1;
    private static java.lang.reflect.Method $method_getRemoteMessageHandler_2;
    private static java.lang.reflect.Method $method_getSimulationController_3;
    private static java.lang.reflect.Method $method_getURLFinder_4;
    private static java.lang.reflect.Method $method_getUser_5;
    private static java.lang.reflect.Method $method_getUserMetaDbServer_6;
    
    static {
	try {
	    $method_getBNGService_0 = cbit.vcell.server.VCellConnection.class.getMethod("getBNGService", new java.lang.Class[] {});
	    $method_getDataSetController_1 = cbit.vcell.server.VCellConnection.class.getMethod("getDataSetController", new java.lang.Class[] {});
	    $method_getRemoteMessageHandler_2 = cbit.vcell.server.VCellConnection.class.getMethod("getRemoteMessageHandler", new java.lang.Class[] {});
	    $method_getSimulationController_3 = cbit.vcell.server.VCellConnection.class.getMethod("getSimulationController", new java.lang.Class[] {});
	    $method_getURLFinder_4 = cbit.vcell.server.VCellConnection.class.getMethod("getURLFinder", new java.lang.Class[] {});
	    $method_getUser_5 = cbit.vcell.server.VCellConnection.class.getMethod("getUser", new java.lang.Class[] {});
	    $method_getUserMetaDbServer_6 = cbit.vcell.server.VCellConnection.class.getMethod("getUserMetaDbServer", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public LocalVCellConnectionMessaging_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of getBNGService()
    public cbit.vcell.server.bionetgen.BNGService getBNGService()
	throws cbit.vcell.server.DataAccessException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getBNGService_0, null, 1852608359418415364L);
	    return ((cbit.vcell.server.bionetgen.BNGService) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (cbit.vcell.server.DataAccessException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getDataSetController()
    public cbit.vcell.server.DataSetController getDataSetController()
	throws cbit.vcell.server.DataAccessException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getDataSetController_1, null, 5017319269322285610L);
	    return ((cbit.vcell.server.DataSetController) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (cbit.vcell.server.DataAccessException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getRemoteMessageHandler()
    public cbit.rmi.event.RemoteMessageHandler getRemoteMessageHandler()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getRemoteMessageHandler_2, null, 4944217625285997618L);
	    return ((cbit.rmi.event.RemoteMessageHandler) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getSimulationController()
    public cbit.vcell.server.SimulationController getSimulationController()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getSimulationController_3, null, 3303722143046821603L);
	    return ((cbit.vcell.server.SimulationController) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getURLFinder()
    public cbit.vcell.server.URLFinder getURLFinder()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getURLFinder_4, null, 5609784472309350531L);
	    return ((cbit.vcell.server.URLFinder) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getUser()
    public cbit.vcell.server.User getUser()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getUser_5, null, 4478170210066282502L);
	    return ((cbit.vcell.server.User) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getUserMetaDbServer()
    public cbit.vcell.server.UserMetaDbServer getUserMetaDbServer()
	throws cbit.vcell.server.DataAccessException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getUserMetaDbServer_6, null, 1218073469979839086L);
	    return ((cbit.vcell.server.UserMetaDbServer) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (cbit.vcell.server.DataAccessException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
