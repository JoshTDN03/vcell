package cbit.vcell.model.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.vcell.model.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class MembraneDialog extends cbit.gui.JInternalFrameEnhanced implements java.awt.event.ActionListener, java.beans.PropertyChangeListener {
	private javax.swing.JButton ivjButton1 = null;
	private javax.swing.JButton ivjButton2 = null;
	private javax.swing.JLabel ivjLabel1 = null;
	private javax.swing.JTextField ivjNameTextField = null;
	private javax.swing.JPanel ivjPanel1 = null;
	private Membrane ivjMembrane = null;
	private javax.swing.JLabel ivjJLabel1 = null;
	private javax.swing.JTextField ivjJTextField1 = null;
	private MembraneVoltage ivjmembraneVoltage1 = null;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public MembraneDialog() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getButton2()) 
		conn4(e);
	if (e.getSource() == getButton1()) 
		conn2(e);
	// user code begin {2}
	// user code end
}
/**
 * conn2:  (Button1.action.actionPerformed(java.awt.event.ActionEvent) --> Feature.name)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getMembrane().setName(getNameTextField().getText());
		connEtoC1();
		connEtoM2();
		// user code begin {2}
	}catch (java.beans.PropertyVetoException pve){
		javax.swing.JOptionPane.showMessageDialog(this, pve.getMessage(), "Warning", javax.swing.JOptionPane.WARNING_MESSAGE);
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * conn4:  (Button2.action.actionPerformed(java.awt.event.ActionEvent) --> FeatureDialog.hide()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC1:  ( (Button1,action.actionPerformed(java.awt.event.ActionEvent) --> Feature,name).normalResult --> FeatureDialog.dispose()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1() {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (Membrane.this --> NameTextField.text)
 * @param value cbit.vcell.model.Membrane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(cbit.vcell.model.Membrane value) {
	try {
		// user code begin {1}
		// user code end
		if ((getMembrane() != null)) {
			getNameTextField().setText(getMembrane().getName());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM2:  ( (Button1,action.actionPerformed(java.awt.event.ActionEvent) --> Membrane,name).normalResult --> membraneVoltage1.name)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2() {
	try {
		// user code begin {1}
		// user code end
		getmembraneVoltage1().setName(getJTextField1().getText());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM3:  (membraneVoltage1.this --> JTextField1.text)
 * @param value cbit.vcell.model.MembraneVoltage
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM3(cbit.vcell.model.MembraneVoltage value) {
	try {
		// user code begin {1}
		// user code end
		if ((getmembraneVoltage1() != null)) {
			getJTextField1().setText(getmembraneVoltage1().getName());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM4:  (Membrane.this --> membraneVoltage1.this)
 * @param value cbit.vcell.model.Membrane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4(cbit.vcell.model.Membrane value) {
	try {
		// user code begin {1}
		// user code end
		if ((getMembrane() != null)) {
			setmembraneVoltage1(getMembrane().getMembraneVoltage());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM5:  (Membrane.membraneVoltage --> membraneVoltage1.this)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		setmembraneVoltage1(getMembrane().getMembraneVoltage());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM6:  (membraneVoltage1.name --> JTextField1.text)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM6(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getJTextField1().setText(String.valueOf(getmembraneVoltage1().getName()));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the Button1 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getButton1() {
	if (ivjButton1 == null) {
		try {
			ivjButton1 = new javax.swing.JButton();
			ivjButton1.setName("Button1");
			ivjButton1.setText("OK");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButton1;
}
/**
 * Return the Button2 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getButton2() {
	if (ivjButton2 == null) {
		try {
			ivjButton2 = new javax.swing.JButton();
			ivjButton2.setName("Button2");
			ivjButton2.setText("Cancel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButton2;
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setText("Voltage Name");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}
/**
 * Return the JTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextField1() {
	if (ivjJTextField1 == null) {
		try {
			ivjJTextField1 = new javax.swing.JTextField();
			ivjJTextField1.setName("JTextField1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextField1;
}
/**
 * Return the Label1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getLabel1() {
	if (ivjLabel1 == null) {
		try {
			ivjLabel1 = new javax.swing.JLabel();
			ivjLabel1.setName("Label1");
			ivjLabel1.setText("Membrane Name");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLabel1;
}
/**
 * Return the Membrane property value.
 * @return cbit.vcell.model.Membrane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.model.Membrane getMembrane() {
	// user code begin {1}
	// user code end
	return ivjMembrane;
}
/**
 * Return the membraneVoltage1 property value.
 * @return cbit.vcell.model.MembraneVoltage
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.model.MembraneVoltage getmembraneVoltage1() {
	// user code begin {1}
	// user code end
	return ivjmembraneVoltage1;
}
/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getNameTextField() {
	if (ivjNameTextField == null) {
		try {
			ivjNameTextField = new javax.swing.JTextField();
			ivjNameTextField.setName("NameTextField");
			ivjNameTextField.setColumns(20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameTextField;
}
/**
 * Return the Panel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getPanel1() {
	if (ivjPanel1 == null) {
		try {
			ivjPanel1 = new javax.swing.JPanel();
			ivjPanel1.setName("Panel1");
			ivjPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsNameTextField = new java.awt.GridBagConstraints();
			constraintsNameTextField.gridx = 1; constraintsNameTextField.gridy = 0;
			constraintsNameTextField.gridwidth = 2;
			constraintsNameTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsNameTextField.weightx = 1.0;
			constraintsNameTextField.insets = new java.awt.Insets(0, 0, 0, 10);
			getPanel1().add(getNameTextField(), constraintsNameTextField);

			java.awt.GridBagConstraints constraintsLabel1 = new java.awt.GridBagConstraints();
			constraintsLabel1.gridx = 0; constraintsLabel1.gridy = 0;
			constraintsLabel1.anchor = java.awt.GridBagConstraints.EAST;
			constraintsLabel1.weightx = 0.3;
			constraintsLabel1.insets = new java.awt.Insets(0, 10, 0, 5);
			getPanel1().add(getLabel1(), constraintsLabel1);

			java.awt.GridBagConstraints constraintsButton1 = new java.awt.GridBagConstraints();
			constraintsButton1.gridx = 1; constraintsButton1.gridy = 2;
			constraintsButton1.ipadx = 20;
			constraintsButton1.insets = new java.awt.Insets(20, 0, 0, 0);
			getPanel1().add(getButton1(), constraintsButton1);

			java.awt.GridBagConstraints constraintsButton2 = new java.awt.GridBagConstraints();
			constraintsButton2.gridx = 2; constraintsButton2.gridy = 2;
			constraintsButton2.anchor = java.awt.GridBagConstraints.WEST;
			constraintsButton2.weightx = 1.0;
			constraintsButton2.insets = new java.awt.Insets(20, 10, 0, 20);
			getPanel1().add(getButton2(), constraintsButton2);

			java.awt.GridBagConstraints constraintsJLabel1 = new java.awt.GridBagConstraints();
			constraintsJLabel1.gridx = 0; constraintsJLabel1.gridy = 1;
			constraintsJLabel1.anchor = java.awt.GridBagConstraints.EAST;
			constraintsJLabel1.insets = new java.awt.Insets(4, 10, 4, 5);
			getPanel1().add(getJLabel1(), constraintsJLabel1);

			java.awt.GridBagConstraints constraintsJTextField1 = new java.awt.GridBagConstraints();
			constraintsJTextField1.gridx = 1; constraintsJTextField1.gridy = 1;
			constraintsJTextField1.gridwidth = 2;
			constraintsJTextField1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextField1.weightx = 1.0;
			constraintsJTextField1.insets = new java.awt.Insets(10, 0, 0, 10);
			getPanel1().add(getJTextField1(), constraintsJTextField1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPanel1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION --------- in FeatureDialog ");
	 exception.printStackTrace(System.out);
}
/**
 * Insert the method's description here.
 * Creation date: (7/20/2000 3:43:54 AM)
 * @param feature cbit.vcell.model.Feature
 */
public void init(Membrane membrane) {
	setMembrane(membrane);
}
/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButton2().addActionListener(this);
	getButton1().addActionListener(this);
}
/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MembraneDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setClosable(true);
		setSize(345, 150);
		setContentPane(getPanel1());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MembraneDialog aMembraneDialog;
		aMembraneDialog = new MembraneDialog();
		frame.setContentPane(aMembraneDialog);
		frame.setSize(aMembraneDialog.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JInternalFrame");
		exception.printStackTrace(System.out);
	}
}
/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getMembrane() && (evt.getPropertyName().equals("membraneVoltage"))) 
		connEtoM5(evt);
	if (evt.getSource() == getmembraneVoltage1() && (evt.getPropertyName().equals("name"))) 
		connEtoM6(evt);
	// user code begin {2}
	// user code end
}
/**
 * Set the Membrane to a new value.
 * @param newValue cbit.vcell.model.Membrane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setMembrane(cbit.vcell.model.Membrane newValue) {
	if (ivjMembrane != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjMembrane != null) {
				ivjMembrane.removePropertyChangeListener(this);
			}
			ivjMembrane = newValue;

			/* Listen for events from the new object */
			if (ivjMembrane != null) {
				ivjMembrane.addPropertyChangeListener(this);
			}
			connEtoM1(ivjMembrane);
			connEtoM4(ivjMembrane);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Set the membraneVoltage1 to a new value.
 * @param newValue cbit.vcell.model.MembraneVoltage
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmembraneVoltage1(cbit.vcell.model.MembraneVoltage newValue) {
	if (ivjmembraneVoltage1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjmembraneVoltage1 != null) {
				ivjmembraneVoltage1.removePropertyChangeListener(this);
			}
			ivjmembraneVoltage1 = newValue;

			/* Listen for events from the new object */
			if (ivjmembraneVoltage1 != null) {
				ivjmembraneVoltage1.addPropertyChangeListener(this);
			}
			connEtoM3(ivjmembraneVoltage1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GF3FBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DBB8DF4D45519340BAD3B9B0F51C697BDF6B7C7D3CFD434D92595FB58AEED5DBDD90D0A912C5B860D2769CADB2CD829C6974F3ECC82E4A4102888D8D1D3C5850CB1FFC0B289791D898989E4C8A6BFC088F9493CA4AFF973434C8B99B0147D6E7D6EFD73E666CD86B827FBB667FC674D7B6EF76F77FB3F7B5DFBDF04ED9FA5EE48B1ED93041C8D827BBB18A388E5CD0210A0BD75B947D5FF1EEE96F4FFFF
	86F8CB68F46641338D5A6247534DC5C24A577970BE886F89E369669D707B9D612B6E1286789105CF9E3425E65FB0B8B71F6F34F0BE1B687BE2EF81BC37828C830EBC97FDCE7827F9F7B27CFC066710E3825C9EC2733CF797432D851AFC40B582B876A03D82CF94609ACBB5239B3CBED9D877304F34050C239B13C39A6B3B16BD0B0557F3966EA53C0A4E9630BEFB60FD9800A81FAB7C2CF0AFBC6B6CD3637523A332DAFAEED4D214D21747A9A92563533245F2D4F20D78C437E415C545B3CE4C370F0CB7F0B61F76
	97048C98AB1162F69FA0BC86603797E041BE0E7F65C1024F025F6B8136FD4175BA74F99D13FB606B870495952E3C42A8FA15FC017AB83E886A15B6394A749E754113D6E26BF8E8DB8C108A30862020A45DDC8270BE757DAFDA764133E9C4ED7138DC9EF713575B2CB8FDC7091E705BE20196066B16C6BDBE27A020FF371FADB110E7AE40FE3B2F389F5AA439127BFAD1773DC2467DB719B69958A4A379EB133584EDB1D892348972BE9D1577ECC9E8AC06726E97743CD34F2E4C5DE040BBEBE8E5EEBC9BA7C947BB
	230478FAA10D010760F78E33856213A83E784BA09E63F29F451377EAE83B75CB9E9B83DB39AC1DF93789C5657FE0E80705BF0DB38925A8434E52F0D96E2FA6E3DBCB1167871AAC8FD37C829D9EE5F90E46A9F9CF0336A5DF251BB13EB2DA49BCCDAACBB7AF83F89AE0ADC0D1B94497C0E3B90F31CF2CDFDDE60C59C51F5ABCADABCE49A7E05F8C6BF6F8CA8155A7363B7D2A689E157AC41FAC0EA812DFE0B43F36929B0C04747BAD0D7DD160F1D8F2CBBED115BDEE98DDF4C92A6473A34D4B5637880DCF222D8E59
	A5818317D760637E37759DF8AA22DF6D75BAC5D58AD2E0FB2E0D78641C5887A342G709B6DE2EEA3769A867D83G8BB4BB7C45C6466B10FCEEC931D8BABD1E29E92F03E8A2BCDDCE6C2C525CF1AB7CDEDC4EED3C211D60F6D5241B2BAA78B8BF303D2D9B47AA0F9271C55FF9BE477E1146CE9B50BB818295BCF6FEBF40E3473A659E21E4650D0631B3F0E6E5EEC2854B599561F368AEBAB611EF85342D2B60793E6C40G6B5FD6E1BC17424199C69718239F72E857F864DE467884B6980C930D966D6DBFC2745BD6
	19EEAE8330D7F21B2F3595E38CB70BFE09C7ED178F82CEF286BD00F2BED8CD6CECE67C493C594CF8137529105210B18561DDG324E6CE07C5F57F4DDCE4718G7E71GCBGB281722BC0AE008100F9G49G4B8132810A77271B5BG3C7B39CF1EBF1899E60BCDCC2E4DD1E4514B71C194BB6D3DCC5B7FDF816A7AF1F5382E1BD91C1823682A57B3DADC6C78FF201F9EB0967F2B1568A21D135C2AD572CAEEA77C70333697DA093EACDF0EF934BEAFD33C9772EB8BA4B43F06FF2D1558C4D4D51FBCB22DCABD122A
	4A6E71E0FB4EE1424BBFBD628D26E64EAB7FB03133E786722BC63F65B049CD239E37DB2213C26B425A8BE9EE14944985C237F8265DAA625FEDA3756314F41E6566775AB68AA437AA53A44FE3CD16A2921FFAFD328B269AD9AA046C7DA4EF7E7D591DBA9BAD849C29AD536019391F673E19CFF86E5BFD61CEE159992F49E88DDF783D6BCC0D87D8CDF5A0187BD026B75B0DE5AF22B91A617D3994773E1F748DAF9231AD7BF83E2E8DF17355A2F83A982E4F23286238D40EB9E9D187612B02BC8BG928F701C9457CE
	5A79BA4012D10BC7D1507450367EG314F0B8736B17D16407B7283E81F2DDA3BF41037DB8F261B878F865B114F79A3C4B63FF4F6DA026517ACD89D1A1F669DF9BB2C2D0F798C5B979CA1BED3F4EBDDD9B56139350657787140AF8960A146B78F5AF781AC23F41D96CEB78B6F7155C8C7561E14EA1491693656F23A029AEC5F8D4FAAGC78D524557903A5B6AB91D3386736AECCDF03CD20D2E2F0153E554E08E1EE5632D2DC1BA54A32711538996245BE9896A91146FF60D2ECCC7C7564FB60BDE3ED3CD1CEE4002
	F91E707512BE96640B633D534C699259B8CBACC13A60F82BB43AD48B2E97E4BC4EB7B85E75AD1CAE53027648E663E6074AE765F47935386EF07B95576A475BEE63F4F53541F67DF8C8172151B9D83BD20BFA4C56A29D4E7D2E71CF857DFE0C6E410E343B211AF30BCAABA96CEC6E89D29E4296056D457EC86BA9125B63EA791E2BD925F5B83CE790FE35BCBFBC31056F3992261205A45F0A5CE8FB4902BA142B2CAE189FCA06E7F2F12E3E52C9F8FA21EDDE9D1F27399D7A3A2F496F770C4A3464E4F3643E8EFD7E
	C05C839DEF42F3CC767955F6C87081BE1F7E250348CBEAD206E6B57A7603FC9F1BGFC536A78BE760F659F89D1763141BDAC5B670CD6F29B44DF781EB0FC63AD264DD1EC10F788F55FFDA8E80322E72AF2D116B8AA8B49EB03501EF0084B726A454FE24B42D29F77617E1AFC9683E9B00E331E60FEF8FA1BDE964015G5881B0175ED4D381CF11A641D2FC58A55F184767121CFBA645F3E229B823165275333409B65B486F3DBC566E58C1EC6F147DDE0FDF5A33370F4B3232066F6D97557338396D1DC6A6C75A3D
	3789F51706CCC6FB75850593262CFA34D5C1C350E64B1ED8E5DA8100637BADDC5701862E6BAF470CF40DEF603AE6DB483A690670C7F96E79D0AFCF3EF80D21BCF13F99B7A5B1B952F4726CC9DFE52A83C0BF9E2C65FE5C5618EE6EEC64BC1D750427BAA17BD1463A00DE46790DA863A20DBE8E6921A841F19F296763AE831A6CC69E9F5B6A49132E79825FFB4F1E607A4CCBDBAC6CFC67DAC3FD68FCECC2BD861A027A2CFBF615A9BF135B77E28377DFF293176DF78D21326DEBACE0BE48841A1D4DDC367A63846F
	06989215EE49BF2DB07A34C62E0B9DE897B473F1EDCD5CAFC8B73FC95399E8321B39FFE78E99592E2C050F73C6D328FCF54DFC9CAB504CEAF437B7F31FA05D4696CE3798E856GA07EC79AFE379556FAAB6F7FE7EBE87F79D6CE17GB4E99A5D9BD6E27F30BA056520869B37DD1EAD5DDCE763BCB734F23C8A38C5B6BE16524AED046F892DDCD72C69DF2767B5D9B674E736ADF4FFD8509A39DF44F30C9F529CDF5C0A6798399AFE9945176970A8DF1B4AF5ED043624D63E77BE5BC56A4A7C43D0CBG5481B8GD4
	000443BC375BBAAB0598E79BFC116A89A9227999C3A7618BF5AFFB7F1FCE7D9CC0BB6CBAF8F5E7ED7B2E389F6A7D141D44E48A6818861085309EE0D79B57F97E5112D8BA73B39A26AC4AF38315272E6D724E8702FAA452FE0EAB6EE7298957FFFE58988B435EF12E977690BB50F50A2C9601D27F8C6C09205CE81ED6D5DAD7633E63D5D53F6FD8540667B64B61198500B9670553BC272FEF63EB4645D6FD2D313470E254F5362A1D6DC55AF56B6C31D7F2D13FDFD07D925AAF5FAE685FC0B7293912215FC3G99G
	59G3B0E241B2B81860FF0BFBFF174D0ACBF53055361E981DC9B5478AD617BBE4D9781CB38AFE60F044A9D9F760E76FBFB1C5BAF69881F17AF769079B360BD9B202883F2A6009DC081086F6072FFFC2C76B26547AAA0D2FA147DD0ED2CF9145291AABB766B0859EFC507D17CFD3AE717F17CB9A0B5364A1262E475C2005BE6CD87BF73F9227E6AE4FDB6E63F5D1D217D50971EDEAAAB348DGF88162GD2G52G56F6F2DF28471AE379C2BB1E85FF7073880300C2F93F5990CB5E7C23C6FA16B506775B95C6E7EC
	1F7A08FE25E16F55067C52A37ADD1EBFB2E376339B727B3B262B6337B0E63F0923C673735EC33C261AF71447E0F3735549E00F59EF09214E85ADD7476FCFB17BADB764376CAA79BD96335FEAE31FDA2F5227B17B89470C7A59ECD7B7C7FAA27AFD98763E53105F66562B6377DEC43FF0FEE5E17C701E65AD9F0959B6E8D3G90B7C1F17360BDC143957A89AE995E179D63313DD4A5B5EA16767E6F741D546C78FECC65F794D947AEFFDD3EDCC09E636A155E03DC89E03E3E50957D0C799BDD46E74C5F6EB2BEE33E
	366BAD4443987A9BBE5EFEE3575CE7505F6D0AFE867D0CBD3A1C3F369B4B79BB3B311CAF59671673B5FBB4B9BF203EF84AC476913EE937AA3BA4BAB42E67D200FCA381ABDC77349B17BFB23ABF3CD6566273B8BDE7A0F320D44375D19C19875947781E74653D247EB428936C30B5D3B0BFFFB54DEB0402AEFE86F6FE065E7F427BA0005A45E3778F270D72C5DC9746F1E2D7E4BCE38D302E0F6C9796C37BF20055G02BD5DDCEC67EBFF7C7118FBA4DB40F00F043A3FC4F5EF04716C5A185F6C0E6E773F6DB6767B
	F55D64CC4F6F19760DCA613E3D29FB275696ACBA5AD549F58C0A922479A75ADF95FD63D2C4EC5CC17BE3DB347E5F6F0E96BF2867F516C83FA7D8385F1DF66E270B93C6FE8A5851BFF176C8BF31786D09EEB341E1EC330D0E68B65B6208ED336D0E68B67B40915BE61FB9661EF34F2B64AEAF623E098CA0707B9635564CE8EC2A67E839206DC982F32D0F09E1F6DCEC676796798D1B59F876B11F47E5AF6777A43D516DBB2F57583E5F6A0DEE5FEBFBE35B77265E68767DEEEFEC7B5E51CBF499111D320F5D9AE15C
	5D5C4063AE9574C6DB7F4776C21A9F7DFE49CFB7CED6D195190D479BF5B6EEA957ECEFEE525B3EC2437F24A95406954CA7779F1A4BA79986310D631DEF5673295470ADAD21FCAA997E5596BDFDD5D0AEEBA8FD95434F5A74747BB57A66D6BD7E00065F63A3F169144644E98516990FDF6A72324FD0G3F67B831F10B0F676635DAECDD2238D168C01684243B4947EBEC65B84F7D7FBCC3649C039D93CC079E2FB4AA94F5935A4F7C7CCCE296E86381D2G16832CBD4EF95458495DAADDA44A393C2E1A8DCC0FAAED
	FED4CD077BE220BBE8FF25BB5297F84E7692DDDF66F563B95B968DAF8488BEC907477337CB141E3C27C2DBD58F2F3F4CC3C46FC4F8CF51F013C33CA6DB5A43570275FD5167DDEE3F713CB3779B57G057DF357GBB7A2365A3169B68F9BCCC39F2745D07B4FF93FD8B9C5C7EF7DB382D49FCE0F9FE026BDA6C603A3EB641F5AD51F05785B8EED6437D18522541FB2646A32501732854F8BCFC0877DD27511D74919F6B4A0752FE596D744CC03EA0DFDB297ED2EBFB0F3D2B47F6266B581916CE7801E7D809B37AEF
	AF2B5F7C2661FDBA81EBAFBB17E74F756F5E12033CB77B69F92FEFDA42DA25534FED958F34293D84F7412FBF9FA77D3E4C413DB736AF8AE9A73E39A4685B1F89E9A7325FEF523797297AF62243D72CBF6A7948277C2CEE7DA3A902720379D13FB1AD6AC37D2A58B3BE6B661C555F3F100B366F20F51882ED737A385F8E4FF0FFA47571357D5599B2FFD361BD8BA09B20209FE282202A1F53EC8C909AF2975D590FF762647EDC6947FBD32439E6E6D8A79B699F2B6EA77C2A8C68D27B023882DDFB36A6F3E2882F4D
	B178F0BBEFB1406B77B3E65D6FCD5A7C3AFB025F914475136F10BDC344CBBB8708BD3FB1E4E5744B8D7458A07073B504AC20498678047933E0G73D20E46EBBF1D27E32262A73584723B61CC10DF114C798D8F982FCBFAFE6AG72FB1771D8G6FFB59EF9C6F0EG9FAFA14AF8B93AB113F563915C528879D7CE903B0DFA14E9175B4F561CB5B4D7903E29C00FFC1FBB4479BE9D052FDE17B5C0A31C88725DF6A2489777838D4304C7B1606BCE709CFDF77F97706C93A7D975EFF34A2A47C74BFFC05AFD9ED89D55
	730825DF1030B568387F6A3E977E49A6BEEF977F68AEE149372CD14F5887CF204E336C3967D7B767EC55F439D3A4F3ED913425822C8148BB89F683A8BB49F57BC3BF3B8FA162B7292AB8BAC1EF72358D1EAC4D8451E431C67F0CCC13F5D8914FFB26D5C13875A45D2F1D636B37955E87CF22CC73CF623DE09625991A59B9077EB87626BF1179C56ABC6D50D8EB2B4CA7FCBB45915D7A7F4099E2EF3C60A8E738D77684F1958C274884F704F5C65C0A8F08ED03275365825EED3EA76BF3EB49A9F6CFFF0A5FFD46B9
	0C5A1D2778BD49632774EBCC51AD0A0947D9384E01D34CCE270277A438265CB744EB2CA5507611005F7F658B7CEFEDC3A40E4F7597C685AD1E1EAB6071346B6E5B856B4F2DA61EB742E5D94BE4E89C54FD136FAA4EC5F91AE4AECFE050C89E4E5BC9D28EBBE37D39F64E1F227599AC536B00FD3EBDA6E8BE4E15E11993AA4A34FB14FABE46EAC33EF359618D726F8D2C7E318E931D347A8727AAEB6B98A67E145D32AA0B0AFC01963BBDC0689E4739746884E9AFBE8DF981E098C085D8F01A4F234707BF9668BCB2
	18C3B6673844EB924E6FBEB1FA5D7720987B3B711F0A64BB0F918F44370B0C4F7129A209F1556325C844BDAA12B870496393AA12B27C13A2DD5725B10A46FA367F9C7F96A789F44BB84DEB76726110FB9D72950A45F258A7BB1B4571CE1A8570FCA601765FB684738140BA4467C360B39E030B6E38CDD868B67EC6A953F151B4B80431B7EFA8980319132BCCB84E6414BE16C9DB341AE6A96B1F299B072F2539424BE3D14E1FE8F6403833EB71DEFC065F097E4C21FD67F2065F69DD1A8C4658688879564BF02D00
	C8B8822C3AC6A6E1376A90C9E062BA714010FE1D0807F1134E4CDD73A05F3B26485A3784E8D7GE483948D271BF783548158811CG8100F800E40025G4B8132G5681640B6966DDA20F618A675EE8328312B91B8632CF14C9A8B379DBE53D7CE5B01ED51CDBFE6C1791F206B1GFD144B6A37A3643EEF9E74C908518F75DBB991FD4EE5CCDC467FEA507AC3023962B86FE5E7903F1DA06B11E7EC4CAFE9F37B4509A28D576E37FB7CB249A66C7FF84EDD5D7790D3D75C8F772D79F4FF1AAC866B9C443FC5710BF5
	F81C7F37E873FF99346D9E61B15E6AA273E5813CA781AC85D881308E20E8D47B36C20614BD77D92943636D8487A83A6DA90E1F68A6636F06319A811CG33G71G495A780F4915F344E737472312F38188D09542D37269A295ED58AB9B59F069A8464E7251489842FE298E23FED90CBE5B209F6E119E236BF70193ED0C38A7A9EEB74321DEBF1E0A9E177FB695BBAE9F1BB2DE8BD6CCC52E857FB9E53C96BCBB25DF8B9017B5C5725CB84C7B810D6EB79A6E04067BBD9D13607AE527BA216157D139883ECDA28CB9
	7EF5AA578C458D70EF07F438938C1727103985AACFF8FC5A5907C276D0E3322230F3DCCAA33BE12AE976F8DBA1B24ADED1A7778E8DF7C27345E9B952BFA3325EBF08FBB990C9179D0824AB2D0F242B2C5753E1BCED1D91345FBBF43F934F713B313F86307F6F792B72C0DBF7392247F31F4B78CCEB50E5FC26B5621A7BFEED52957DFE6D2CAB72FFBC6EF4C717AD459DFB2EBD68B61EEB7F6A0E1CEB8F390D675A43EE7DDC43B8D1E85CB5C21C581D7C0C6589191F318CEA38E7E97D31885E17EAB8EBAF27CBF572
	FACD7C2CC0506AD9BAAD913FAB30A508675312555DFFA3071ECF5410FFA7E47B7B555AF941CEA9B25F69776E84CAA45C5F3F4F700DD2787E7E95C7A82F33E7033CCE75F2DE1DD1F8656A006C670593C1DE43BADED8333DB749EBB6C58A5DBFD4523FA7599EA40104896B93572BFD3B85FD307DD192F6EC9EFDB829DF93B200E62D012C11736F7ADEFD3F3CB1580F0F4D5D8FFD3CFFB2B237D8A6A3F3D0F2EFA45DBD3DFABA7C3F7947C7DEA0F1740230C195B63610D0D7D4415455617789055AE7666DB42DE61E2B
	34647E6A76DC131057AEEC4450EF07648C715BAEEC20615DAE64C26887E83C409F19A2E43B344DFFD6780BE092C27FA23104DEB0443E298ADB7857754564C4C0958A58073B74B524531B4CE3412172F4D8729B7790FBAF69776659570CC6BD7FDDB10E3ED9BD9E5CC3E03D52A2D11BCEC03DB2416B136FB83F9422577EBDAED181411529A637136C831A4F2BD2B00F35C9E4FCBF27E10DAC1F526F63A7F5FD7E97D0CB8788B0D496A7D796GGD8C1GGD0CB818294G94G88G88GF3FBB0B6B0D496A7D796G
	GD8C1GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG1196GGGG
**end of data**/
}
}
