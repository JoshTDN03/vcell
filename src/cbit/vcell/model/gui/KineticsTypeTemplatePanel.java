package cbit.vcell.model.gui;

import cbit.vcell.model.*;
/**
 * Insert the type's description here.
 * Creation date: (6/24/2002 11:34:37 AM)
 * @author: Anuradha Lakshminarayana
 */
public class KineticsTypeTemplatePanel extends javax.swing.JPanel {
	private ParameterPanel ivjParameterPanel = null;
	private cbit.vcell.model.Kinetics fieldKinetics = null;

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == KineticsTypeTemplatePanel.this && (evt.getPropertyName().equals("kinetics"))) 
				connPtoP1SetTarget();
		};
	};
	private boolean ivjConnPtoP1Aligning = false;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private Kinetics ivjkinetics1 = null;
/**
 * KineticsTypeTemplatePanel constructor comment.
 */
public KineticsTypeTemplatePanel() {
	super();
	initialize();
}
/**
 * KineticsTypeTemplatePanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public KineticsTypeTemplatePanel(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * KineticsTypeTemplatePanel constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public KineticsTypeTemplatePanel(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}
/**
 * KineticsTypeTemplatePanel constructor comment.
 * @param isDoubleBuffered boolean
 */
public KineticsTypeTemplatePanel(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}
/**
 * Insert the method's description here.
 * Creation date: (8/9/2006 10:10:52 PM)
 */
public void cleanupOnClose() {
	getParameterPanel().cleanupOnClose();
}
/**
 * connEtoM1:  (kinetics1.this --> ParameterPanel.kinetics)
 * @param value cbit.vcell.model.Kinetics
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(cbit.vcell.model.Kinetics value) {
	try {
		// user code begin {1}
		// user code end
		if ((getkinetics1() != null)) {
			getParameterPanel().setKinetics(getkinetics1());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (KineticsTypeTemplatePanel.kinetics <--> kinetics1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getkinetics1() != null)) {
				this.setKinetics(getkinetics1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (KineticsTypeTemplatePanel.kinetics <--> kinetics1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setkinetics1(this.getKinetics());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Gets the kinetics property (cbit.vcell.model.Kinetics) value.
 * @return The kinetics property value.
 * @see #setKinetics
 */
public cbit.vcell.model.Kinetics getKinetics() {
	return fieldKinetics;
}
/**
 * Return the kinetics1 property value.
 * @return cbit.vcell.model.Kinetics
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.model.Kinetics getkinetics1() {
	// user code begin {1}
	// user code end
	return ivjkinetics1;
}
/**
 * Return the ParameterPanel property value.
 * @return cbit.vcell.model.gui.ParameterPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ParameterPanel getParameterPanel() {
	if (ivjParameterPanel == null) {
		try {
			ivjParameterPanel = new cbit.vcell.model.gui.ParameterPanel();
			ivjParameterPanel.setName("ParameterPanel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjParameterPanel;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	 exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	connPtoP1SetTarget();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("KineticsTypeTemplatePanel");
		setLayout(new java.awt.GridBagLayout());
		setAlignmentY(java.awt.Component.CENTER_ALIGNMENT);
		setPreferredSize(new java.awt.Dimension(729, 553));
		setAlignmentX(java.awt.Component.CENTER_ALIGNMENT);
		setSize(494, 283);
		setMinimumSize(new java.awt.Dimension(300, 145));

		java.awt.GridBagConstraints constraintsParameterPanel = new java.awt.GridBagConstraints();
		constraintsParameterPanel.gridx = 0; constraintsParameterPanel.gridy = 0;
		constraintsParameterPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsParameterPanel.weightx = 1.0;
		constraintsParameterPanel.weighty = 1.0;
		constraintsParameterPanel.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getParameterPanel(), constraintsParameterPanel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		KineticsTypeTemplatePanel aKineticsTypeTemplatePanel;
		aKineticsTypeTemplatePanel = new KineticsTypeTemplatePanel();
		frame.setContentPane(aKineticsTypeTemplatePanel);
		frame.setSize(aKineticsTypeTemplatePanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Sets the kinetics property (cbit.vcell.model.Kinetics) value.
 * @param kinetics The new value for the property.
 * @see #getKinetics
 */
public void setKinetics(cbit.vcell.model.Kinetics kinetics) {
	Kinetics oldValue = fieldKinetics;
	fieldKinetics = kinetics;
	firePropertyChange("kinetics", oldValue, kinetics);
}
/**
 * Set the kinetics1 to a new value.
 * @param newValue cbit.vcell.model.Kinetics
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setkinetics1(cbit.vcell.model.Kinetics newValue) {
	if (ivjkinetics1 != newValue) {
		try {
			cbit.vcell.model.Kinetics oldValue = getkinetics1();
			ivjkinetics1 = newValue;
			connPtoP1SetSource();
			connEtoM1(ivjkinetics1);
			firePropertyChange("kinetics", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GBAFBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359A8BF0D455959DD0BA2246A93628E90731E8D30D0AE39C19160EE8F16AA7EDED0A089D1809CA55564FD04B34D1B376E6B7C8228102469A27D1530A1A4F927315308449E7E39292E0C99688E4A17B327B12BC7376435B178F2036675C7B6E5B17653DAC503AB3E76E3B675EFBFE771CF34FFDEFC951878BB764580A884959C0345F0E9CC296D590F265EDFF1A4FF10D1FE46493436FDFGDB09BA1E8BED
	A70C659E4C48AFA42FCBF95077C25F6B4E48FF871E5FA2DB2475E570E041A79D46EE6A9EF8EAE6BEEF9C60FCB6527E423282E8B78378G07ED6AA748FFC9D931061F2D61B964588819D706F3FED7D6226156411CBC40F582F84B58FC95DAA6409CE723B64FFBD58AD97F20E25B04F48CB4B92C5056E6E9EDA9F9B9E7E1B9724A26F2621AEA680F822072F6724B72FAE81B5CE3A31F7B07A435EA42AF4AF2D5B09C90652A11F149696C16C222AA79231ED39151A386A332200AEEA1A44AA595C857D51EC769903296
	E826D0DC1E8FF97960F98AA0290263D581714F41F3EEE5C6FEC9A557EF77A7CD1A7C7DE76EA2ABEA0339DBAC742B2FE4FAF9ABE37AAD8E2E313DCB77225B0DB6DFGE3CB819E86D88FD06448482F8778A775015E8360CE24E5C8ED8B870361D0CBA452AA8714FD28AFBCBB1DB02261FAC5FFD88990427659D66EB011E7A6E06B8A4FFB9D33C9CA9D5F73545EDB496ABB3EE75BE8E21355A9E7ECBD8EE60B00A3E693463B4B1277EC47F41F1C4E7B88B172AE69D8E95FE0423B31FE25FD01C6A75540BB5301FB7D95
	7501F4F846F5381E61AF2578ED5BE3F8661F1BA99E7B0DB0163C1D7BC67FE6AECBCF6E752430667B26F6D8F06FBC9B29E2B294D7454B325F0F34DDD50C67C6DD16E3946FB56019AC27291FE2DF0531D5G4C3FBC3D982FCD1FE6647783C4G668224GAC87D875A977316B8EFCFA0EBE66969435F5DC128322C258DA0F7B9F500AD32AA2F405222A90720B0785C59206E4B1CA34B9475DA85B5034F5C354777D4023C38C090A20CA6190D0970222AAAAD1B6E74C3D9567A8A29D75C8C1919884A304530D3A5F02D6
	96226A21C8G42BCB6030D1FF1631ECC880701A29000E7E6170B7A50DED920FFE1F5C6FEE9B53743DFA93DEED101EC61F4760443E363918FEAC2A255E8E79F4D9D75705CD34DED7C3587F1E950CF5769ECBF7826010ECB72237802F20A475845BEDC13897373EA385F3C504F7D4635699662F864EAD33FC9859FAE2DE17E52D8939FBF17D33AA81B2F06677BA2DF3FC5CC65551847944AF5FEB9E33BA50F8D96F87BB9525F2C6F593307F04FE6014C49GCBEB382DC78F16B25FED9522A27756838AB81A9808D91E
	49697173B3452E494670BE0ADF81B433813655F25B4D927A63661FCFDEBCB75BDDC3F9986579FF72E0B6BA510B6713B8A106D4179891C381F808EAE3E2AF7A1F963F43E1FD4D9845C7A05E5BA04022BA7EE4AF4624202A0AB4B42E0AFD222ACA21115878A94AABBABE9409258A4EEBD6AF6A981E04F857674F6945D87107C3A111EE163EC49B3F14462AA80BC1903AADBC9ED2997E72BE2CEB4644D3DA2E382A6FB50231AE0FE35EE13542E2618D54C111026082183AC8F2AD4671E4F93141C6BD00431AA702EDAD
	0F47498FF9BCEEBB7D9332ECB0E2B3BBD3965CF025EDED2DD6435446621149F43147DC7639B4E7E878A813753EEA74F34B62C57311374841C214EFCC1BD723474736A3482B38AEA35F81602A637111FB085255F2119698EDE1D9E666063159F5E8135F7A0AB41D3C50D76B18CDE2BE7467C305382F6249F191D2BCA645EE5D76D9075E0C9BBB2C6D839BA707F19FE4C3BE4D2BC71E5F7573FAB2DD6337360E652EACE85F877CA2BA6FF8004F73544746E5F8CE2AE7B216B4603CB2D12FCF6BD9AC67B54466D7916E
	97FF217BCFEB48AF0589E12AAABA89BE6CF46EB554090F53DC0FF56BE8832F875F213E188E7D35G598D5CD7FE3B0957037347D2C8D647A3F62BFA3768B3ADF7FF9673152F6E1E3433BD8C75A34FA9981B7B995F3FB3070DE7D2CBB49A76CB74B854ECDBF14468CB8C77691157219D1614285A8541BE45772161884A0B672506566A07ACDA4B20FFA5835F95G85BB905FA0E00C611EB0BD7DF5DC4F2453B7905F55575A5E3050533D03699759915333E7F7031D71DB6A677CD2E0BC930079F63710E770ED066B88
	208C6A2894E5B23C58524CFD66566B49120D73ECE63577680F97580A9B996F6646188CC9CF2E31AD82E0F2DC9260F2A4411C7B81D8FEC86FB3668732131D770D586E6432EE950D32B259EEF95FA8DB1EB047D436F9FF9C3185F6B219666D0C49D670489ADB69A3DC3603A217ED854CA9F0727BCF51675852BCC7F87D7B55D14EF7D6FA9AA9FE6BF2D33E88AEA763A7BBE3FCD7BD3146769CGBB0F1EAA0FBF4B17425C071DB35784EBE1BCABEECE41AE282DF6CD4731BA76B29AC7753BD89DEB5771D7D33C4B00E7
	36F82F0F5B4283E3CBF6715A6B59E338CFA5CD30B7GEE00D10039GA9CDBCFEFEFE240EA428ED3BC2D0F2068439EF5A2145EB4CFE648B670C561F6CB75A1F596CD59F5EDB16B71DEF5DD4A0603A5567310E6DF779B1637DBAF76BDE1B5DE23F8BF6EB79F1F7EC3F196D123D186F3D001F82C882C88138FFB737DBF63FA3115DF81D2F990C69F42FBF517D71195D5375E56B9ECE382E6073696B189EAF9E471C3F8D461A817A81D40085GE9G2BBE677A6CBD5A1AC81F96DE54F8427AE3DBFCE142651D9738B0BD
	2FCD38EEDD1C1EAC6E5F2BAFA7B33E7750AFCF3CDEE067D82E073F6F485B434F31C30398CF4D506F87086C6171B4B208361C8B7DC5GCB81D681E48394B7E764B7B5F3DBA69F5D1548166DD8EC029D29694EB6A23345917142ECA8A6DC67EDB6731527FD281F8AE3C9GA9G4B811E8148ED4948AFEB617A3D1058D7F4EB4F6CAB6C5E18D701FB508C74BDG8C7707CAFA56C3BFC9476DF0A0EE9174176938598308DB817D67F45CCA0AA32D30AF2D9CF74BF144B5C15F534A6FAFD7519AF9D46FDFC77BD8B7317E
	07FDD677B67D9CEDBD775CE41E631A9272B81F3BE0BC307DDAFF4C7AFE734AB1737BCD4E00797DE66340D606879A46379DFCFC4B404C771FF7864C6EBF6FD1BDD75AB06E943887C8C11132E531ADCE7D0B79DB6FF808399CF20E4667D95D0FBF9A42FD1C5D4A7D751601DA93FFED8FC8EAD861C4BC22209C989E561D35AFA27A394C0B3C56763B59EBEE3F5B3D66763B4BBB337D6E76DA590F5968E975EDE2F29F5C8F51C6789D68A5FF3EB6472D065DB5BA6D6C6356FA58CF186B11FF82EB75E8F8DC710B713296
	1EA85647E2415D250AC194074DF9172ED785E5C4BCCB57D23A1E0DD92DAFBF01B574109410946DC646F47CC5006B582E0677556871146F19A977ADB409D7D6DBBDC0F3FEDAAB2B2DF2F4FC8645AFB360D94DB5B0485F152443D8F59B7735130356B61E9AB43771B70356B61EB3185846D78CDA5B786A4144B67E6120154FB1DBDFA13E417DE9D88987412334BB2F4FDA57AC1F392E2F7A2CF55DA0A456F533E02D6B5BC2E2DD5F974C7D69038AFCBFA28B274263AABC38F00FBF2B60771C79303F29GABG1EE9E3
	779D36AE3B926F1202AC0D047006F9946EACF4ED91BD2BBA61596B62F377BBD07608A28E0B0AA2867A24539833EC7E881D7FB0BC2F5667DFB7B00DF6BF1FFB87BD5F725AB372CB5A793D6776C954EB98CEDD58BA1A3CB25BF16E7383DC079E687BGE681AC84D8564E79ACBF0EEBE121949C8FD229981F55744CAC7BA2A33F7E8BBEF7DEAD520AAF2634D89D5AE474A3ADA731733754434FE45F977CFC7D4DA05163F61561D998CCF4A67EAF40F81C7ED6F9309CF122026708452073B3DF703D2A21F5167EFE25CA
	18D41D4E8EC58A348AA3BD5483D9EDFAA32D0BF0FDE9872FCDD7D01A7D500FG4C6D606F9E26BE666F9ED2EF3C1EBC57E67E0EA5537335EDE1874B014BBBE2F71E6541B5368F689E02DF917E4B5C43763C5271A134DC54AAB8C5A36190B8E4D5DB7BFECFFB6FE0CBCFD7477EFD702C5D3F96CE9A6FDF0D2FDFEC7AEE9001F4B2990A34B67B6DEBF3FABA71BB6D8FA4C2F87EB9B5D08AEDC81CAC55E5F0C10590420F96E5BBEAF7BACA9B9A6A4A2D65FFF060DC65E7F6FF404B6D1E84325C5F09383FF90B8CF2A35D
	9DB6C22A20E56365470D6318CF7FCE0C6383534651CEEB6C46714B270D233D7C5AFAE65307BE627B1B7D50E2A25FB95B721BF1E19733E53D56A62D3DA627F14B99BB332BE3ACE65717FBE730EBDDF5352334263E21BC2D0B565E9E17C6DF6EBA7B8C65E723DD03D9B0E7BE405BDABF25ABF6FE32788BD4DC5877D76582575DFC5E6B5879FFE3A546DBF6D7FCDDF09B45676D0D2F8BFE2F47FC910CCD6D65F747ADB2666155504F82A86C067B94C0A7C0201B578E378FD5138477AACFB85283872EECA89D997D3AA0
	3DAF812D79BA3D1706AA21BDACFCF9F6458BC837920E080AFA0AE1699BE94D57FEB3E00C5F42EBE59B57B15EC6E95D4C9716F547FFEB7B3577423E135F33117BF95ACFEFA2CBAEF1D93EC3DD2F71AC6AE1ED59135764E04B6C71C4886D6D02B19F40EC00E40045G7777F07BBCA1E96FF05084D0798B7ED17A16D83FD8C862E48C0D07AA4B8F2374AC4398DD8D344E4EBB6B761861D87C7D8ABF4FEA3ABEDE40F5AD3979C74475284B7621052EC57B347F846C0B59B9DDA935B3DB2762B6EBFEFE2761B933625BBF
	C7DF7AD6F930FDAA162D6B4C8FE473BA73A3597C7ED5A94FFCBF2D132D3F4FB965333F4FB586B79B6931B052467684B127C3D925CAD0441D261FA57AE0E2E8047968BDA709CE673E60C744A2D6419377C2FEBEB074A5D42C9EE1C47771DFABC8BF99FCE28940EA00F5G397B39FF67057E4D7C5B44375B83A3D8E363BF92D4AE4333A1EBBB3F98CA7CBF06D7C2D82F8E05D5B59CC47A7A3B04B07D6FC5B8C2118C77DA9877C711C6C6D5B6D5439704B1E6E4F11822190F85275D69CAC13F7A7DB33FF7E176F128F8
	E6F5425CG40DC0005GE9G69G19G6B81728EE4641782B48274G78GD40059G8BGD28FF0FB3EF9325CEA0FG2995F054280AA021D9B51DD6AA56F6DD23A4366BD38A7D068576406F1E5ADEA9F8DF898F8FC7C5FD7F56A905BA2EAB6A8EC7A574B86DBD994DD94BC017C3F6DE13FF0762D6816E719CCE23D9351635C3CDAC2BDBB57701436A59BEB0201A7B00209AFD006106D50C3D9130F13FBEEFCC479D55F191CA93F1C72400BA2A63A728DC086F9411A147FFC5651A2438FE8DF71181F7D443DD22223D
	C16551304257DE2662FB26E1C916D97FCABAC78A0179F5FB4C27B2CA9141A077B5BA8E65E6F782616302D82E2022B3FC495426981E0BCE587F9F8B54E4E8D31FA79B228AF9736C9A2E650A479ECD9DF49559082D0B3CB6CA97F7118D13C8FD8A4EA19B38336D3168C9728D66A1F2951CBD8E2034C52754C5D5491C28F35A1F7C115DC6F2018C5B5AAE120B7B835494C6558EDB0BB4C92E91346FB17FB15693D9F37C1677014E035A7F818F46FF0F991BC01FD8G783403BC9EFFB63EFD061C599794E4D995643116
	D0G73E76BA9D50C65794884520F72B95A20768DEB82657E5230663FD0CB878865113AB4128FGG4CAAGGD0CB818294G94G88G88GBAFBB0B665113AB4128FGG4CAAGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG4C8FGGGG
**end of data**/
}
}
