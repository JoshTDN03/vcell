package cbit.vcell.model.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.vcell.model.*;
/**
 * This class was generated by a SmartGuide.
 *
 *
 * showFeaturePropertyDialog is invoked in two modes:
 *
 * 1) parent!=null and child==null
 *    upon ok, it adds a new feature to the supplied parent.
 *
 * 2) parent==null and child!=null
 *    upon ok, edits the feature name
 *
 *
 */
public class FeatureDialog extends cbit.gui.JInternalFrameEnhanced implements java.awt.event.ActionListener, java.beans.PropertyChangeListener, javax.swing.event.DocumentListener {
	private javax.swing.JPanel ivjPanel1 = null;
	private cbit.vcell.model.Feature fieldParentFeature = null;
	private cbit.vcell.model.Feature fieldChildFeature = null;
	private boolean ivjConnPtoP1Aligning = false;
	private javax.swing.text.Document ivjdocument1 = null;
	private javax.swing.JLabel ivjNameJLabel = null;
	private javax.swing.JTextField ivjNameJTextField = null;
	private javax.swing.JButton ivjCancelJButton = null;
	private javax.swing.JButton ivjOKJButton = null;
	private cbit.vcell.model.Model fieldModel = null;
	private javax.swing.JPanel ivjFeatureJPanel = null;
	private javax.swing.JPanel ivjMembraneJPanel = null;
	private javax.swing.JLabel ivjMembraneNameJLabel = null;
	private javax.swing.JTextField ivjMembraneNameJTextField = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private boolean ivjConnPtoP2Aligning = false;
	private javax.swing.text.Document ivjdocument2 = null;
	private javax.swing.JCheckBox ivjOutsideJCheckBox = null;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public FeatureDialog() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getCancelJButton()) 
		connEtoC4(e);
	if (e.getSource() == getOKJButton()) 
		connEtoC5(e);
	// user code begin {2}
	// user code end
}
/**
 * Comment
 */
private void apply() {
	try{
		if(getParentFeature() == null){
			if(getChildFeature() != null && getNameJTextField().getText() != null && getNameJTextField().getText().length() > 0){
				getChildFeature().setName(getNameJTextField().getText());
			}
		}else if(getChildFeature() == null && getModel() != null){
			if(getOutsideJCheckBox().isVisible() && getOutsideJCheckBox().isSelected()){
				getModel().addFeature(getNameJTextField().getText(),null,getMembraneNameJTextField().getText());
			}else{
				getModel().addFeature(getNameJTextField().getText(),getParentFeature(),getMembraneNameJTextField().getText());
			}
		}
		dispose();
	}catch(Exception e){
		cbit.vcell.client.PopupGenerator.showErrorDialog(this,"Error Editing Feature:\n"+e.getClass().getName()+"\n"+e.getMessage());
	}
}
/**
 * Method to handle events for the DocumentListener interface.
 * @param e javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void changedUpdate(javax.swing.event.DocumentEvent e) {
	// user code begin {1}
	// user code end
	if (e.getDocument() == getdocument1()) 
		connEtoC1(e);
	if (e.getDocument() == getdocument2()) 
		connEtoC7(e);
	// user code begin {2}
	// user code end
}
/**
 * connEtoC1:  (document1.document. --> FeatureDialog.updateInterface()V)
 * @param evt javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.DocumentEvent evt) {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  ( (FeatureDialog,childFeature --> NameJTextField,text).normalResult --> FeatureDialog.updateInterface()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2() {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (FeatureDialog.parentFeature --> FeatureDialog.updateInterface()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (Button2.action.actionPerformed(java.awt.event.ActionEvent) --> FeatureDialog.dispose()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (OKJButton.action.actionPerformed(java.awt.event.ActionEvent) --> FeatureDialog.apply()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.apply();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC6:  (FeatureDialog.model --> FeatureDialog.updateInterface()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (document2.document. --> FeatureDialog.updateInterface()V)
 * @param evt javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(javax.swing.event.DocumentEvent evt) {
	try {
		// user code begin {1}
		// user code end
		this.updateInterface();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (FeatureDialog.childFeature --> NameJTextField.text)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getNameJTextField().setText(this.getChildName());
		connEtoC2();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (NameTextField.document <--> document1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getdocument1() != null)) {
				getNameJTextField().setDocument(getdocument1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (NameTextField.document <--> document1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setdocument1(getNameJTextField().getDocument());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP2SetSource:  (MembraneNameJTextField.document <--> document2.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			if ((getdocument2() != null)) {
				getMembraneNameJTextField().setDocument(getdocument2());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP2SetTarget:  (MembraneNameJTextField.document <--> document2.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			setdocument2(getMembraneNameJTextField().getDocument());
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the Button2 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCancelJButton() {
	if (ivjCancelJButton == null) {
		try {
			ivjCancelJButton = new javax.swing.JButton();
			ivjCancelJButton.setName("CancelJButton");
			ivjCancelJButton.setText("Cancel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCancelJButton;
}
/**
 * Gets the childFeature property (cbit.vcell.model.Feature) value.
 * @return The childFeature property value.
 * @see #setChildFeature
 */
public cbit.vcell.model.Feature getChildFeature() {
	return fieldChildFeature;
}
/**
 * Comment
 */
private java.lang.String getChildName() {
	if (getChildFeature()!=null){
		return getChildFeature().getName();
	}else{
		return "";
	}
}
/**
 * Return the document1 property value.
 * @return javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.Document getdocument1() {
	// user code begin {1}
	// user code end
	return ivjdocument1;
}
/**
 * Return the document2 property value.
 * @return javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.Document getdocument2() {
	// user code begin {1}
	// user code end
	return ivjdocument2;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getFeatureJPanel() {
	if (ivjFeatureJPanel == null) {
		try {
			ivjFeatureJPanel = new javax.swing.JPanel();
			ivjFeatureJPanel.setName("FeatureJPanel");
			ivjFeatureJPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsNameJLabel = new java.awt.GridBagConstraints();
			constraintsNameJLabel.gridx = 0; constraintsNameJLabel.gridy = 0;
			constraintsNameJLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getFeatureJPanel().add(getNameJLabel(), constraintsNameJLabel);

			java.awt.GridBagConstraints constraintsNameJTextField = new java.awt.GridBagConstraints();
			constraintsNameJTextField.gridx = 1; constraintsNameJTextField.gridy = 0;
			constraintsNameJTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsNameJTextField.weightx = 1.0;
			constraintsNameJTextField.insets = new java.awt.Insets(4, 4, 4, 4);
			getFeatureJPanel().add(getNameJTextField(), constraintsNameJTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFeatureJPanel;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.FlowLayout());
			getJPanel1().add(getOutsideJCheckBox(), getOutsideJCheckBox().getName());
			getJPanel1().add(getOKJButton(), getOKJButton().getName());
			ivjJPanel1.add(getCancelJButton());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the MembraneJPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getMembraneJPanel() {
	if (ivjMembraneJPanel == null) {
		try {
			ivjMembraneJPanel = new javax.swing.JPanel();
			ivjMembraneJPanel.setName("MembraneJPanel");
			ivjMembraneJPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsMembraneNameJLabel = new java.awt.GridBagConstraints();
			constraintsMembraneNameJLabel.gridx = 0; constraintsMembraneNameJLabel.gridy = 0;
			constraintsMembraneNameJLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getMembraneJPanel().add(getMembraneNameJLabel(), constraintsMembraneNameJLabel);

			java.awt.GridBagConstraints constraintsMembraneNameJTextField = new java.awt.GridBagConstraints();
			constraintsMembraneNameJTextField.gridx = 1; constraintsMembraneNameJTextField.gridy = 0;
			constraintsMembraneNameJTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsMembraneNameJTextField.weightx = 1.0;
			constraintsMembraneNameJTextField.insets = new java.awt.Insets(4, 4, 4, 4);
			getMembraneJPanel().add(getMembraneNameJTextField(), constraintsMembraneNameJTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMembraneJPanel;
}
/**
 * Return the MembraneNameJLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getMembraneNameJLabel() {
	if (ivjMembraneNameJLabel == null) {
		try {
			ivjMembraneNameJLabel = new javax.swing.JLabel();
			ivjMembraneNameJLabel.setName("MembraneNameJLabel");
			ivjMembraneNameJLabel.setText("Membrane Name");
			ivjMembraneNameJLabel.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMembraneNameJLabel;
}
/**
 * Return the MembraneNameJTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getMembraneNameJTextField() {
	if (ivjMembraneNameJTextField == null) {
		try {
			ivjMembraneNameJTextField = new javax.swing.JTextField();
			ivjMembraneNameJTextField.setName("MembraneNameJTextField");
			ivjMembraneNameJTextField.setEnabled(true);
			ivjMembraneNameJTextField.setColumns(20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMembraneNameJTextField;
}
/**
 * Gets the model property (cbit.vcell.model.Model) value.
 * @return The model property value.
 * @see #setModel
 */
public cbit.vcell.model.Model getModel() {
	return fieldModel;
}
/**
 * Return the Label1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getNameJLabel() {
	if (ivjNameJLabel == null) {
		try {
			ivjNameJLabel = new javax.swing.JLabel();
			ivjNameJLabel.setName("NameJLabel");
			ivjNameJLabel.setText("Feature Name");
			ivjNameJLabel.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameJLabel;
}
/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getNameJTextField() {
	if (ivjNameJTextField == null) {
		try {
			ivjNameJTextField = new javax.swing.JTextField();
			ivjNameJTextField.setName("NameJTextField");
			ivjNameJTextField.setEnabled(false);
			ivjNameJTextField.setColumns(20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameJTextField;
}
/**
 * Return the Button1 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getOKJButton() {
	if (ivjOKJButton == null) {
		try {
			ivjOKJButton = new javax.swing.JButton();
			ivjOKJButton.setName("OKJButton");
			ivjOKJButton.setText("OK");
			ivjOKJButton.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOKJButton;
}
/**
 * Return the JCheckBox1 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getOutsideJCheckBox() {
	if (ivjOutsideJCheckBox == null) {
		try {
			ivjOutsideJCheckBox = new javax.swing.JCheckBox();
			ivjOutsideJCheckBox.setName("OutsideJCheckBox");
			ivjOutsideJCheckBox.setText("Outside");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOutsideJCheckBox;
}
/**
 * Return the Panel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getPanel1() {
	if (ivjPanel1 == null) {
		try {
			ivjPanel1 = new javax.swing.JPanel();
			ivjPanel1.setName("Panel1");
			ivjPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsFeatureJPanel = new java.awt.GridBagConstraints();
			constraintsFeatureJPanel.gridx = 0; constraintsFeatureJPanel.gridy = 0;
			constraintsFeatureJPanel.gridwidth = 2;
			constraintsFeatureJPanel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsFeatureJPanel.weightx = 1.0;
			constraintsFeatureJPanel.insets = new java.awt.Insets(4, 4, 4, 4);
			getPanel1().add(getFeatureJPanel(), constraintsFeatureJPanel);

			java.awt.GridBagConstraints constraintsMembraneJPanel = new java.awt.GridBagConstraints();
			constraintsMembraneJPanel.gridx = 0; constraintsMembraneJPanel.gridy = 1;
			constraintsMembraneJPanel.gridwidth = 2;
			constraintsMembraneJPanel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsMembraneJPanel.weightx = 1.0;
			constraintsMembraneJPanel.insets = new java.awt.Insets(4, 4, 4, 4);
			getPanel1().add(getMembraneJPanel(), constraintsMembraneJPanel);

			java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
			constraintsJPanel1.gridx = 0; constraintsJPanel1.gridy = 2;
			constraintsJPanel1.gridwidth = 2;
			constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJPanel1.weightx = 1.0;
			constraintsJPanel1.weighty = 1.0;
			constraintsJPanel1.insets = new java.awt.Insets(4, 4, 4, 4);
			getPanel1().add(getJPanel1(), constraintsJPanel1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPanel1;
}
/**
 * Gets the parentFeature property (cbit.vcell.model.Feature) value.
 * @return The parentFeature property value.
 * @see #setParentFeature
 */
public cbit.vcell.model.Feature getParentFeature() {
	return fieldParentFeature;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION --------- in FeatureDialog ");
	 exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getNameJTextField().addPropertyChangeListener(this);
	this.addPropertyChangeListener(this);
	getCancelJButton().addActionListener(this);
	getOKJButton().addActionListener(this);
	getMembraneNameJTextField().addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}
/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("FeatureDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setClosable(true);
		setSize(344, 143);
		setContentPane(getPanel1());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the DocumentListener interface.
 * @param e javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void insertUpdate(javax.swing.event.DocumentEvent e) {
	// user code begin {1}
	// user code end
	if (e.getDocument() == getdocument1()) 
		connEtoC1(e);
	if (e.getDocument() == getdocument2()) 
		connEtoC7(e);
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		FeatureDialog aFeatureDialog;
		aFeatureDialog = new FeatureDialog();
		frame.setContentPane(aFeatureDialog);
		frame.setSize(aFeatureDialog.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JInternalFrame");
		exception.printStackTrace(System.out);
	}
}
/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getNameJTextField() && (evt.getPropertyName().equals("document"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == this && (evt.getPropertyName().equals("parentFeature"))) 
		connEtoC3(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("model"))) 
		connEtoC6(evt);
	if (evt.getSource() == getMembraneNameJTextField() && (evt.getPropertyName().equals("document"))) 
		connPtoP2SetTarget();
	if (evt.getSource() == this && (evt.getPropertyName().equals("childFeature"))) 
		connEtoM1(evt);
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the DocumentListener interface.
 * @param e javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeUpdate(javax.swing.event.DocumentEvent e) {
	// user code begin {1}
	// user code end
	if (e.getDocument() == getdocument1()) 
		connEtoC1(e);
	if (e.getDocument() == getdocument2()) 
		connEtoC7(e);
	// user code begin {2}
	// user code end
}
/**
 * Sets the childFeature property (cbit.vcell.model.Feature) value.
 * @param childFeature The new value for the property.
 * @see #getChildFeature
 */
public void setChildFeature(cbit.vcell.model.Feature childFeature) {
	//
	// See class documentation for usage:
	//
	Feature oldValue = fieldChildFeature;
	fieldChildFeature = childFeature;
	firePropertyChange("childFeature", oldValue, childFeature);
}
/**
 * Set the document1 to a new value.
 * @param newValue javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setdocument1(javax.swing.text.Document newValue) {
	if (ivjdocument1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjdocument1 != null) {
				ivjdocument1.removeDocumentListener(this);
			}
			ivjdocument1 = newValue;

			/* Listen for events from the new object */
			if (ivjdocument1 != null) {
				ivjdocument1.addDocumentListener(this);
			}
			connPtoP1SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Set the document2 to a new value.
 * @param newValue javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setdocument2(javax.swing.text.Document newValue) {
	if (ivjdocument2 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjdocument2 != null) {
				ivjdocument2.removeDocumentListener(this);
			}
			ivjdocument2 = newValue;

			/* Listen for events from the new object */
			if (ivjdocument2 != null) {
				ivjdocument2.addDocumentListener(this);
			}
			connPtoP2SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Sets the model property (cbit.vcell.model.Model) value.
 * @param model The new value for the property.
 * @see #getModel
 */
public void setModel(cbit.vcell.model.Model model) {
	Model oldValue = fieldModel;
	fieldModel = model;
	firePropertyChange("model", oldValue, model);
}
/**
 * Sets the parentFeature property (cbit.vcell.model.Feature) value.
 * @param parentFeature The new value for the property.
 * @see #getParentFeature
 */
public void setParentFeature(cbit.vcell.model.Feature parentFeature) {
	//
	// See class documentation for usage:
	//
	Feature oldValue = fieldParentFeature;
	fieldParentFeature = parentFeature;
	firePropertyChange("parentFeature", oldValue, parentFeature);
}
/**
 * Comment
 */
private void updateInterface() {
	//
	boolean bModelNull = (getModel() == null);
	boolean bAddingFeature =
		(getParentFeature() != null) && (getChildFeature() == null);
		
	boolean bEditingFeatureName =
		(getParentFeature() == null) && (getChildFeature() != null);
		
	boolean bChildNameChanged =
		getChildFeature() == null ||
		!cbit.util.Compare.isEqualOrNull(getChildFeature().getName(),getNameJTextField().getText());
	//
	boolean bOKEnabled =
		(	
			(bAddingFeature && !(getMembraneNameJTextField() == null || getMembraneNameJTextField().getText().length() == 0))
			|| 
			bEditingFeatureName
		) && 
		!bModelNull && 
		bChildNameChanged && 
		!(getNameJTextField().getText() == null || getNameJTextField().getText().length() == 0);
	//
	getOKJButton().setEnabled(bOKEnabled);
	getNameJTextField().setEnabled(!bModelNull && (bAddingFeature || bEditingFeatureName));
	getNameJLabel().setEnabled(!bModelNull && (bAddingFeature || bEditingFeatureName));
	
	if (bAddingFeature){
		if (!getMembraneJPanel().isVisible()){
			getMembraneJPanel().setVisible(true);
		}
	}else{
		if (getMembraneJPanel().isVisible()){
			getMembraneJPanel().setVisible(false);
		}
	}
	if(bAddingFeature){
		if (!getOKJButton().getText().equals("Add Feature")){
			getOKJButton().setText("Add Feature");
		}
	}else if(bEditingFeatureName){
		if (!getOKJButton().getText().equals("OK")){
			getOKJButton().setText("OK");
		}
	}
	//OutsideCheckbox visible only if we are adding feature to top feature
	boolean bOutsideVisible =
				getParentFeature() != null && 
				getChildFeature() == null &&
				getModel() != null &&
				getModel().getTopFeature() == getParentFeature();
	if(getOutsideJCheckBox().isVisible() != bOutsideVisible){
		if(bOutsideVisible){getOutsideJCheckBox().setSelected(false);}
		getOutsideJCheckBox().setVisible(bOutsideVisible);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GE9FBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BC8DD4DC6515B90AEBECE9B7F6232225EBEA23E20B96D7374BEE53D36C4936E9CB3711221BED310DCAEBBC1B2D59163658665847C08CA8C9D0B109EB2C29C6A5A6D2C2C8C288A690C804C0427093A00484666741CCF873431BB74C90826C7D3E7B6E1B474C9B06F08C675C735E3B5F5F7D7B6EF73F7BFD03D07A76128DF926D2C1485BA028FF077284A127C3901EFA7C4B9F932E7A030CA2C17777D700
	D704671582F8B6C1D957F8C6D109706CD8A1FC7743F7F5B023E89B3C3FA658AE2EB443CB14F11220AC397361ED330FF3698C0D3311FF37840A613999E090F06C197C819B5F96582E6263D4BCC11EC990961431BAD3019DAAEE9D54A984DCAD00398C6BBB6009845CD0D32D566B3FB9C9487901EC5A447A5175C930C2ED3BD6FD6E947E1837F8B79B6BDECEA7EB338B3E7B8198737942751DE5702CB50F8C9F35D91DCA7918CD1424F21747AECA6543FEE7CD4DC9512278E53151E911BC43A59F323E1E8B94723602
	308A7AC964384FDCE27DF7413B849077A1613FA8B17CEAF84FE55FFB08270FBF28D5E96E1D7897A13352D530A58ACFE5FB1097731E90CFD9A3CF185E60727FEA9B13F3BC1425GAC87D883D038B723288C60CD2E77874FFC884FFA2B5260F139BC6EFA2F7738E417CFB39E613D2686CAD4DC07E87348F6C1C05D5E9F58EBC04FEC006D3EF9556DD0A6C97BC94F499D8F88D98F5DEA5AE8A0132C2489D35DDE14C56F5E10CCF06C1C28E387774E344319E377887A3103DFFFACFF0341580B939F4B0FD77BD9229BFB
	55DE266B97388D2441FB1EAA8B443FB44270BBBE8A6151A697717A6C3B8A4A92BEA25B685DCC3434965CA5146C3B4DD08E895F09B72D7F88E9A8AD8F27254D457A2EAB47B137E93458B8BE2843A3ADDF66F64A3ED320CC7ADBC6915A57C36DEC0E16D5E494B5827483A8G0B81D2G16D7100D7D714C5F66E8E3E60B2C9C77BBA53BA88B587621362D7094030AECE9F67B940B5BA6F6DBE42745AA09BEC12D332C0D4940BA235DA35C76EDB046A722DB14AD0A5363065EADAED191E59F5679C15BAB2C0EAC7252AE
	27CB0481DCDE017A4DE8FB8D1E1245271C755AAD0A982A0165BFEDE3BA9933F4C30F50813C23DCD6F7B0F9E5837F6B810A77119C4E1AD9FFAD226C96251A1AD60FE7446F6DE21C887D7B181CDF8EB25F31935E2B77110C33BA99EE89FC27EA7D441BDF5575536834B172AD72B84D3182EED369D0FF8D00D0C936736BDE321D46CD778BFB9F3B4550F68A3F74D87E76CA34190A4A70B9D4427BE67475C2D93012FC7D2D17FA67B01799BD61B821B292179ED68F47787A1C4658E0005BE8004B8F7BC6F91FBA4B78CB
	G1A9E86482CA419FF4F3C93ED783845A712553649E0F022BD248124732CEB2FAA57FCF5ECA67F1781585A340557E1FD8A426BG3BB57E1C3C5DDA9833F4BF2CF7GF600F800078132G8A2AB20A7682F481DC29A2595FAB2568465BBC07B16762F7F74F315EFC81E9FF1C531E2F535B27C17B36EBCCBB5A44375A99ED621868D69AC52F6836430BCFADDB5E4EF8D07D5610C7EB73830E77021FEBG47625370AB5B990F96C5111DD63FA2F60A0A62F48F074AD77131FCFE2BB764A2E92CDF34B359F9826067347A
	596D4CC758BCEE37480DD3EB22167F0A7BA8D192DDC0F403476FD6903F360345F0A362386AA357F53CA8B09FA779193F4538A84542F463151DAEB0F966320502834CFF3D935C2E1351D230CF965F2D02675AAA72C101F749876D3AFC1F10B660B5992D2589F77F3D2975G7A004183A19F04B4BD59E9CC7BB35CD72AF89F52BAD44BECE8C620265A5BEB42434D0CA63B4766E78D76E978FB366A71158279066B3B59388B001E45G498748B7583AD8B979E355A9B4F8A489C58FE5EB39FC4E0E142A7CAD076F2C83
	A81F4DDAF92ED6DEF5B0232875E0289C47B11FADE1B6A00E7AC5D886594251226929676C2BE1E55D2A4E30FC60AC531924DBF3D28F32B1173AA84E6E07EF85E071C1746DC9707C8B603B8E31FAEEB755ABB80465BB8EA1FDD50710C62CD76621FACB5472D443FACFEB75B261FBADC0F1B556EB2D56573B57CB756C003FD29D2A17B8235E79D12A1722162F281EB9AE72DBAAD33DACA84F81A8BD0C6BD859E1BD3FBF576AD52B656643B37BCBBA4C6AA578281EC3ADDFF0986518F0986B355630FA8E056A659CC69F
	DEDC0375F7566879F849CF7592EA30DECA4D4CF1512E5B065F9374FB933E9FB9556C066846ED11CE32C067045B4142A58859855C1B44737802795795B53487792F4B4C2605A399C55B81AA0E50BCFDF4936DC1960FA489DDA919795176D5CDC710AE69C8E81E16458772F14E7C28070D198CE54B0E50FC7969D9FD9CD46F73F9ECCE9E022936FAD337FE9EA36E735DAF41F348A97B14E6F034C1326B455D0CDE962329E8B5E63D426394B61FD74238053599C5F5358C7F2FA34C3FB19BC7BEED7B094FC5176F9686
	EF394374F294BE63EA113F2535A1BEF30B8E6463F8EFCBB4DE961417FECC6375CBECBCE6E3D86FC7AE2A578AF562GF69CE5780BCA29EE2CE5004F86A804B274C9BF9EA95479A444753AD95F0A4369C3DEFED3DF2736CFFF60AEA1F5E33C49E85F6838B741E4BF0ABC449F8D71326C49A7CCAB81104E5B5C452A2DE5C11D52E3C4478BEE3DEFAC576C715CA666FF7CBCCE66D6B8E43109E53B3BE98FF557EBFA5AEA27AF9A5236F00B4354FA8CE9D20E05E8DB197104A9BB03E8EB7790EDE9D0A7D723AD5543EC94
	96C820CC75781ABD94FB29CDC5DDC611230E643E5C29177B92402FGD8DBC7FD7A3C4C7FDB38A3AF470799187348AE51DEF649B2E6A9378414F29E8314577362936CFDB749651EED4CEE6DCE1F5763C3F9A0BDABB5FA04FA08776B091EDB9CC674F86BA9A7B139155901456B154621B76CABEE147A0A03FA4B6A09767F9EE5B81E2F50647031CC76178375769E27F1EF188A37BFBB14ADBCCEFD49D2247D2D10497E306F0DBE22A3915AE5EAED5D3EF01B417A0F780816628658C3B6D07DB20561ED8E08D8D4B5A2
	3E03673194882A50266E7F0B5E268AADB7985AD47C334326AB8D6A5CED8859D475CF1EB0357E04EC6AE605E8DF8BF5F6B5123CCB0F32A70FFFB4DBAFAF5D894FE1D1E9E0A41E81D7DB363B155B02E4F18F17F7C28C679EBE02B47E69AD22F1D763D221BAE74410C63E7EB6A2EDF10DA19A03379F480F3F1DFC4CFEBF511889F50ACF900DC75B995E8DB6E911BAC41FDFD2B0363EB94876930DA754FC480919FBAA69C4643E8B73G27A7F81CF38273G799A3E0763976970C857AFAE139E17C0D941C95A3BA67631
	F850815FF1G09G8F83E482641C2435E0C74FFEA1C6EE0096354E9941AF6D51FB5838902F2A5F0F77687505F238EE0449216493639C0F91E03BC53CDD59D534C31D6F6E5367A48BDEB9E54A0F2273DE35EF47A7A11D236CCE77337918847865GD9GB9G25CDA437733DFBE3490D72A42A40102777247949E23FF4353240F6BFF1454A77D5B5996D751F0C592EB72C9D4E05774AD87C4463A2B6A303653EGCCC6880D3A40ED1CF40A129D77AA5F1F526FD53C5057E200D400F4G0C17EED1A8DE4AEE22F8E172
	24BEAEDA36E5B2EA3C302399692BED56791C785F2BF151F397981DD720AC81A085A09DE09DC071A90843CE111E6F6BBD9ECB4F7534E96C72E82F8D619BBF126B175C61F2EDBAB5D30E467A78DAC43B7230EFFBD8BF4827FD007389E589GA9G69G6BG0ADB004F9662F3FD6F473178648BEB172781F0CD300FB1E0D1253547B3BF9E4508F661BC1ADB0C5A3D6A1D5FF8BBA35A050F67E8B13271AD1DEF985B78F13F22707DA65A3864B7327185506762963271BFB9693CA2390572C90F4F131F6C187CE4077103
	B424BBE81E2D57E8784C687CE8C808E897CEC3D52BD13B86F9FEFE2ABDE63B563071D0B72323C63A31C35DE0AB69E6599449E5D1AB49E513EFFEF2F9B322DD38DCD6984A65FB916D66A61747E236DB5DEA64AFFEB6487CC5AE14151E0678942089C082D88810FC1A7C4569F3C70439798B0C4AA33D8552F91BB2BFF95E9D51AEDC1E69270D78BBEFE57CE5C319F086765CGD5G3DG8AC04299626F4EF3753178530EB36662938F7B674767A7916D4279CCBDB3339D1EE5A471DC43CAA84B81C05C1FB92E308D76
	9CED043BE71C61AA603B290DEC3CF30245791276FD01FF3379015F3F3CCC67G2C4EECB6B69F40B1DE504688BFA778B4GF5FCF7DF747CF1F21FF17E781F7A0C734729FD2F883477551F22D1F9DA5F6C796595FDC6796537B87F0F1BD8FCAF7B5D0A53A572E1F19D9203FFC59B6D703B51CC59483E7078D3337DAF5A189E9734110DDFBCDFE9E063A76CCE45A3D3A7DD22C5EE9B9A52821BCE2FE8A31A4F76C717DFFF3F317C2C7D4672F3744FAEBFEFFFB479210C1ED15859C4C43E1DED8E854AAB3F44F3A72C0E
	D97118D93E9965785B5DECADB0D84F4D9637A861FA7179097075021D41A502ACD35AE83D481BAED47BDC51C6793DBB783ED6B0032F8128B0539C3AA342FF4D708DD02F5F9C1ADBDEB36D69B26DECDF92875FCBGD281D6822CB313CEB7DE08391FBB911CE5BF777C0568BA95AE9A6B74450BAC6F637378E51B982E37CD9737EBE5A16F582C08AE269A2C331537D7ACB2EC69435B3F455BE3D934766FDFE4FBG2B536E14550CBF5A447737EE61B6657309BE3E98B5DA940BEA8B191AAD1CD0BC8D7B34715C835179
	778F9873BFB1901D7F6B86E2737F5901687CFFE1A0B67FDF9C08B6B710574FFB743C6E57704DDEBD3ECA20F8F0291F6C38241D6C78B7C34C0E1B60FB90A058CEF6ACDCB23263C56D5157859CFB5328FE6C8382797DC79DC67DADD57BCB05E7FAD85F585FA3B37ABB2861AF4B7AB9DF2971F85FA87138DA6351EAE5BCEE6F00F98A5054C1BCBEB2B55BDC9D04FACAC70826059D14C7EB7469E9BA245174029EFFBAE4FB3F9C0CEEFBEB870DED6FB70351ED6F79415836E732C4373DA2CBEC5BFB55B23B6D7D0772B2
	49FFC87638E026E1BB519A1DD749EA4C2BEC0D4E6B38B5B62F57D92373FA13B5B62FDF304E4E2B572F57F725067FF6102DCDF6F1486217E059737844B62FFAA58670199D4C76FE9AA4FBCC546CE7AB0F4DEC5000AD63D86F23F15AAFEE6F247C630381A663A108C6019C3EC0AF6BE4F53FB5CEEBD699FC57827483DC81C86C24B18E1B5979B2DF687611AC6E34ED5273292E21B8EF3EBBC1F496F4513CA919E27326963E3BG24AE1AB7AFCE074F1B382E50BCC9680A749118675C4C732C49DD18675C20615F6078
	B49D9E731FCB345CF1A614D51F255876C11EBFCA046F948D77FB05625D659AEEAB7785255D99C5E55D340EE659235B6753F6E37BFC56EE9C5BBCE71FBD367903BD1ADD219C6F0B588354F607E4E76E0EA64721E1A697FBF7781DB719632FF4075FF94B9D22BBEF0B21AC371B64336D923F2F5A833A6DA15C9A8761029A6E3413E49B2761DCCE52C1D28F59458391B902E5BDA19ED676C46367F16E1F33FB426D62C90E4F6D89378B07156C2238B723485BCBB42D627B7ACC78DE2361F6CC936D6BB55CABFC9DECBD
	87EB5EB91AAF7F4BF37A3AB0313C476936FB8260B3586DB845D75E585CE9EE6BBCB150F6E6202195DEB0EF39A4204FC9D73FF41D613D8B864AB964FF217ADC7F7A9DF9B876DD637C7CC5760BB8971F663E00751186F5F34FF11AAF6B4F11D83B3773F04F08658DB34A195D5DA9684B7DB34A996D8F1A7465774EA8E7BC34286D114F9F3EC7795975BFCC9124FF0E0BFA9F382E8F79332B4FC5593767E57F6CF2BE5A488FA742EDA431AFE497A9FD51ECA40E7B2265FD61B63F0863337A42EDFE6B9459FC8E14751E
	A75D3F456DE199FC2F54F0098259C84EF93265D2EEA30D7DD0271FF0EFF3DC309F6FA1A06E9E0576332C5E27350FEDD47B42B13E2D0DE1F487EF3E102FFB3EA63C414F36C4B7DB116C34F6A9E40789C0CFCEBF43ED72B72A6D128D78257318FC955220CEA6406BAA6DEB7AD1CFF95A389F0D32F1ED9E496FF27B54F19B395FE67764EAAF100E527C2437D68DD793A03DF9AF10BEA46E835360BB8BA0C74387B93E64A25EF5E177E254FC4450DC6EBEB2E07D31A76BB36D425CF40DE3EC9B1E6B987A3BFAF34D0F20
	9C7F6C20B35C0A0B6CB784ED6CE8DA40F759455E150BCCE6F66776D97AC2795F6AA43DAF3BC8327EF72E1315701D2D619AFDA47F428112E7161561FA61BB28611E613844813C9704B837F52EB2898756AF3D778E986B814738F15EE36867D9B4BD205C6B27A2678D668BD87932811AB77B27E95E249B509CBEEFD633F68321F9D3B898BEEF4A7C117366181F66CD69A065955EF6B35CAE782E9B24986833629EF8F6DBAEC5E606GE916BD9045AA630865375DD4F92E991F5FEF8C9E59C8EB47437F76D5A1756F9A
	231E6D8D8E22EC96284F3227EF4FE3CF6465A68F335D94A8CB87D887D0E849A85A81D0E5A15EB2C4757C1611DF2FA8961B035FF65212E7CEB190C233209AED79A99E7FB6C1BF7D96326F1FCF12FDAF30E867A7FCDDD98A5FE9GD99A7ED60E4FD66FF7303BA5085FB1B51B8D32761B557EE249B24D208E0EF1E056B1680E76DC7C09517A0276D6B54D769312E55C63D7E02D33B27934CC13AFD9873495822E8220510AF72C506E9F92486E17DAA369A71B5E200E138AF5522DE877FC9ED8436D3E6F7F583D9F36F5
	B955EA31328BB808FF6A7CE642EBA7520200F7F05A7D7A58E62DCADF09CD0B7D94B67E10C5720576C3C735DC49AE2877360077248B857ADBF7AC92C77EF6612820597E1345E47BBB3E76952171BF9BCD6FC6317DFE1B7ADBAE1B6EF7D46E1D79C86379D18857044A8A127D335A99E4B654DF8F304B8EFBA4BB5A9E4A3EBDC032B75B0DE53FC1A7FBBB54895AC3320F37074B7E4C4B6C1EEC1BDF71B96D62298607E89BB96E89E25952D30C5F361650D9296A9FABD81C5840AECCCA21B2544B570675FAC9D0E9CF33
	531D009F1F574756A5F7C8A622A71C17CC153F5576106C300F959774F16B4EBDED06F1EB6E054B26D2915BD60B21BE96E8723F5F29379144E50DC64E095FEA670F1208F3A28E1E89A27A85544BF99F69A5C5B4568B5D5BE74F65D0E71598DA8B560A61FA095B466E881E96DDD699767B11F3A365752D616591F3648DDB789CE174660AB4C736CF4F5C2358351CF87150554E0F1B5896D8252D5BCFF60D7EFB171B0D2F6D19F179D14B7638990DCE37D3F1DAA467E51EE841CBE138BE1C63F7BD9B011EC100B80084
	0064A1DA9B3E6EFEC760EB03413AF042BEAC52DECF4B51FA22678AEE77447E7D54DD9E662B2C9EB0FA976B1F70C99E6613950F17A391F7BF4F654A4EE10702D569F7DA1EC2EECBC39C0DB2FBFEA2526E3EFB056CEE45905A9D1F8FC3F87E1DBB446A7CEEF236588F7B3E2FCEF72F9F8FCA343295751BF5F6C405D8F660DD4653A9B56104FBB05FB47D7E33EE98FC4BB06535768D4E38CB44EEFA5654FCA2BB6D47AD432D1CAB3431EFCED39C1AB2CCB929E7F91FEB60DBF0E494EDF7102F883ECF73BC791E3B0426
	E463FB552B3BA6CD958E75DE38A3B44F570DBCE142B13385326BC50E2B356B03E302B6EFFFBB94656C094FCC9CEB21DF3BB76E20F821E1C6CEC8F0E69415BAE70F8D5076F7F1DFDF86F59B819CG8BG9683A4832481E4822C8190AE015CG76825481F481588102G7117E82E7CE814451151E2C4D5D9FC424896A71BB22A4EDF99A31DAF013ED6DDA21D6F2F1CF13786F5FED27284DAD5B3D6575DF3E32473129152790D3C4FA6789E84880E50395CF581CDD7A3F355553AE3282B4E71102E0EF63FE92CABDA62
	D45A1E9A564E81C7A83E96AE8B5ADCFDCDFEAF1A4C40431C022E5B2C17C41B52E5995674360D1FBF8A924431GF5G3DG92C01CC43A68154BE651858AB0248A54431BB269A1817AD9A9114CECB2493750C5723D19572D036FDEG2F0B6A467B085F052E2B1D8BA9D784CD27E69B59F91A0B6C5CB9A3071C8B78E2776CF60E3230A851FD32C3096D13C7F9CEC384DF5AB56ED5737FE38A73271E21A11F28797E8925C443B57B4C9E1F132DB6A85BDFDFA1596E841AFB5DA447BD137C9EAFFCA781243949B7DD9A51
	47004C5FC44B1D2DD2E5305E9D72CD21B8FFBCA26F9E8B54FD70BC5B25DDF5BB4C49DD90783901A7942728F9EB0EEF5261D11E4FE96BC4971425FAE8EE7D1C2FD7BB3C90578218819CG8B8116FAE9EE1478A1F4187DDC3C4B63ED850311F4A9FA646FD9C14FDFAA74196E1D5D86315D67A27276FCEDD15B664033F054686ECE9F7777BBC611FF448DF0DC150AC31E2A8351ED7CD8A0360DB7850C630EB301483823B3E09CF71C8B68638E75DEC9007902E1707D3DDABD1B06BB27619C3CCF066BF15A950706F7F3
	3A983EC9E48392DE61F485B82E174E7DF438F3AAEEAA4066A9306C704854767AG0BCB071C12045FB772BACEB7CCDBCD9E711CC6275722237BE68DF7CE536B3631794D137766596E62D53743F974A73E9E1AC74367D7817FFF9B7D2361736BF35A1A6C003274D17241B74E783F8D95B2448E72DC6C7F19E1A33AFB553612C19FA8731D93516D7A030958F6DDB1E1EC5787A7A26D7A480431DD57CF686D9A7979EB4C3B2646F2785BBC5BB92E3A9D6AF7837FDD4F82B9DC6F1BB9BEDE8E577BED2198G4A564B2477
	1BE75CA19D74E594A93E39687D2C4D086E05EA5BC4F826780C7C5E0269C83FF743345E6F297FC7644A7C64E91A1C1FBC6F646B75F2DF38BC13B8FE25AFDC1E7BA6C91ED9D0D62750BAD54D73E0CB61BB8DA09BE0BDC009BF23284CCF6B549F2E307BB951E2388E0FC7E1DBA70862940861C4D997D9A30FB6C1507815F46F3F1B1EEF0EFB6E725DACDC4BB1545F18CFC6778D3F1EB4BE174F19B4BE177F63646CF7B2CDD351FF73DFB4257F4DBF5A2A1097E93F9B7274760BB83CDFD58BBAEF75D38E79CE6D0CEAD0
	4319C277977C34BF323C4FECCB4DED70E59371BB021BC2F8DAB6D53D6485C2F670126E7D9F462E3DCDA4DF53B1D0CE7F9808147BD78211F2FF016F4B1603ACB3B5995B9CA47755FE72FBAF7BC2B2AA553DFFC93E76727A46B59DC33D9B6EA3F9FD4EC4387BFDA42F43DABD096F478A46B20ACA47C8DE0F5AC8DEBBB55C075AFD8A6F9849706E49105C9E503D9F1A3C76B2B4DF53B15478E0BA3A9FEA1A0E9D2334CF9B47A8BD5311B1CA7F34F10CE21D0E4C79FD53CF673BF85677A877B5F12017C5E314D77E0616
	6FCF9E0BFE56C2E70C193A33F9FE57E4AC345E6198955A79FF7A986501DF8FBBE77E95B38175EC7932A3F6FE71FA5B4C76C5AC7DABA07DEBECC47F6AB9501F23BBA3E5781C887AFB27689CD688E49461F84779A752D2B9467AFDC7CDF66EE40971F7A8E7710C16DBAA515A0A8521361F981C993DE127B6CDDA1B059BC2EDBCD314C3C7FBDEBBA37EDEGED96876692077D452EEF1784ED1645E80773B9BF9869CF8B03117E7400BD32DE0DDDDF8F7F3721625B849F497FA3ECD004977108C791CCEDADBED958227D
	043F19EF45D60F6D2F49FF7AAB79A62120D9F89127C733D040EC3CD9584027C033108F53A3487ECDD8019EFC234214E07A743190D929C7D90A3009125A5C889421D8EF93D75329207DD6F9DAFFF615FB03AD6A3D3004F1755CEFBC7C374A6B789CDF8378024B94C75679BF92226798BBDD96C9D2AC52C83D5B4E720D474795B194777C4E4F7A77D19D35D07D1DA83F63FAC957667F81D0CB8788E622232B7C9AGG9CD3GGD0CB818294G94G88G88GE9FBB0B6E622232B7C9AGG9CD3GG8CGGGGG
	GGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGB69BGGGG
**end of data**/
}
}
