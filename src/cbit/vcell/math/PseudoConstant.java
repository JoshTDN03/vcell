package cbit.vcell.math;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import org.vcell.util.Compare;
import org.vcell.util.Matchable;

import cbit.vcell.parser.Expression;
import cbit.vcell.parser.ExpressionBindingException;
import cbit.vcell.parser.SymbolTable;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class PseudoConstant extends Variable {
	private Expression exp = null;
/**
 * Constant constructor comment.
 * @param name java.lang.String
 */
public PseudoConstant(String name, Expression exp) {
	super(name);
	this.exp = exp;
}
/**
 * This method was created by a SmartGuide.
 * @param symbolTable cbit.vcell.parser.SymbolTable
 * @exception java.lang.Exception The exception description.
 */
public void bind(SymbolTable symbolTable) throws ExpressionBindingException {
	if (exp!=null){
		exp.bindExpression(symbolTable);
	}	
}
/**
 * This method was created in VisualAge.
 * @return boolean
 * @param obj Matchable
 */
public boolean compareEqual(Matchable obj) {
	if (!(obj instanceof PseudoConstant)){
		return false;
	}
	if (!compareEqual0(obj)){
		return false;
	}
	PseudoConstant v = (PseudoConstant)obj;
	if (!Compare.isEqualOrNull(exp,v.exp)){
		return false;
	}
	
	return true;
}
/**
 * This method was created by a SmartGuide.
 * @return cbit.vcell.parser.Expression
 * @exception java.lang.Exception The exception description.
 */
public Expression getPseudoExpression() {
	return exp;
}
@Override
public String getVCML() throws MathException {
	throw new MathException("VCML not supported " + this.getClass().getName());
}
}
