package cbit.vcell.math.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import javax.swing.*;
import java.util.*;
import cbit.vcell.math.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class MathDescEditor extends JPanel implements java.awt.event.ActionListener, java.awt.event.KeyListener, java.beans.PropertyChangeListener, javax.swing.event.DocumentListener {
	private JButton ivjCancelButton = null;
	private MathDescription ivjMathDescription = null;
	private JTextArea ivjTextArea1 = null;
	private JButton ivjApplyButton = null;
	protected transient java.beans.PropertyChangeSupport propertyChange;
	private JScrollPane ivjJScrollPane1 = null;
	private JButton ivjCreateConstrSolnButton = null;
	private boolean ivjConnPtoP1Aligning = false;
	private javax.swing.text.Document ivjdocument1 = null;
	private cbit.vcell.numericstest.gui.SolutionTemplatePanel ivjsolutionTemplatePanel1 = null;
	private boolean fieldConstructedSolnButtonVisibility = false;
	private JButton ivjSensitivitySolnButton = null;
	private boolean fieldApproxSensSolnButtonVisibility = false;
	private JButton ivjExpandFunctionButton = null;
	private boolean fieldMakeCanonicalVisibility = false;
	private JButton ivjFlattenButton = null;
	private boolean fieldFlattenVisibility = false;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public MathDescEditor() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getCancelButton()) 
		conn5(e);
	if (e.getSource() == getApplyButton()) 
		connEtoM1(e);
	if (e.getSource() == getCreateConstrSolnButton()) 
		connEtoC2(e);
	if (e.getSource() == getSensitivitySolnButton()) 
		connEtoC3(e);
	if (e.getSource() == getExpandFunctionButton()) 
		connEtoM17(e);
	if (e.getSource() == getFlattenButton()) 
		connEtoM22(e);
	// user code begin {2}
	// user code end
}
/**
 * The addPropertyChangeListener method was generated to support the propertyChange field.
 */
public synchronized void addPropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().addPropertyChangeListener(listener);
}
/**
 * Comment
 */
private void apply_ExceptionOccurred(java.lang.Throwable e) throws javax.swing.text.BadLocationException {
	JOptionPane.showMessageDialog(this, e.getMessage(), "Error While Saving", JOptionPane.ERROR_MESSAGE);
	if (e instanceof MathFormatException){
		int lineNumber = ((MathFormatException)e).getLineNumber();
		if (lineNumber>=0){
			int lineStartOffset = getTextArea1().getLineStartOffset(Math.max(0,lineNumber-1));
			int lineEndOffset = getTextArea1().getLineEndOffset(lineNumber);
			getTextArea1().setCaretPosition(lineStartOffset);
			getTextArea1().select(lineStartOffset,lineEndOffset);
		}
	}
}
/**
 * Method to handle events for the DocumentListener interface.
 * @param e javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void changedUpdate(javax.swing.event.DocumentEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}
/**
 * conn0:  (MathDescription.this --> TextArea1.text)
 * @param value cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn0(cbit.vcell.math.MathDescription value) {
	try {
		// user code begin {1}
		// user code end
		if ((getMathDescription() != null)) {
			getTextArea1().setText(getMathDescription().getVCML_database());
		}
		connEtoM6();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * conn5:  (CancelButton.action.actionPerformed(java.awt.event.ActionEvent) --> TextArea1.text)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void conn5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		if ((getMathDescription() != null)) {
			getTextArea1().setText(getMathDescription().getVCML_database());
		}
		connEtoM7();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC1:  ( (SaveButton,action.actionPerformed(java.awt.event.ActionEvent) --> MathDescription,read(Lcbit.vcell.math.CommentStringTokenizer;)V).exceptionOccurred --> MathDescEditor.save_ExceptionOccurred(Ljava.lang.Throwable;)V)
 * @param exception java.lang.Throwable
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.lang.Throwable exception) {
	try {
		// user code begin {1}
		// user code end
		this.apply_ExceptionOccurred(exception);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (CreateConstrSolnButton.action.actionPerformed(java.awt.event.ActionEvent) --> MathDescEditor.createConstructedSolution(Ljava.awt.event.ActionEvent;)Ljava.lang.String;)
 * @return java.lang.String
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.lang.String connEtoC2(java.awt.event.ActionEvent arg1) {
	String connEtoC2Result = null;
	try {
		// user code begin {1}
		// user code end
		connEtoC2Result = this.createConstructedSolution(arg1);
		connEtoM8(connEtoC2Result);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
	return connEtoC2Result;
}
/**
 * connEtoC3:  (SensitivitySolnButton.action.actionPerformed(java.awt.event.ActionEvent) --> MathDescEditor.createSensitivitySolution(Ljava.awt.event.ActionEvent;)Ljava.lang.String;)
 * @return java.lang.String
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.lang.String connEtoC3(java.awt.event.ActionEvent arg1) {
	String connEtoC3Result = null;
	try {
		// user code begin {1}
		// user code end
		connEtoC3Result = this.createSensitivitySolution(arg1);
		connEtoM13(connEtoC3Result);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
	return connEtoC3Result;
}
/**
 * connEtoM1:  (ApplyButton.action.actionPerformed(java.awt.event.ActionEvent) --> tempMathDescription.this)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		if ((getMathDescription() != null)) {
			setMathDescription(cbit.vcell.math.MathDescription.fromEditor(getMathDescription(), getTextArea1().getText()));
		}
		connEtoM5();
		connEtoM4();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		connEtoC1(ivjExc);
	}
}
/**
 * connEtoM10:  (MathDescEditor.testFrameworkEnabled --> CreateConstrSolnButton.visible)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM10(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getCreateConstrSolnButton().setVisible(this.getConstructedSolnButtonVisibility());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM11:  (MathDescEditor.initialize() --> CreateConstrSolnButton.visible)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM11() {
	try {
		// user code begin {1}
		// user code end
		getCreateConstrSolnButton().setVisible(this.getConstructedSolnButtonVisibility());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM12:  (MathDescription.this --> CreateConstrSolnButton.enabled)
 * @param value cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM12(cbit.vcell.math.MathDescription value) {
	try {
		// user code begin {1}
		// user code end
		getCreateConstrSolnButton().setEnabled((getMathDescription() != null));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM13:  ( (SensitivitySolnButton,action.actionPerformed(java.awt.event.ActionEvent) --> MathDescEditor,createSensitivitySolution(Ljava.awt.event.ActionEvent;)Ljava.lang.String;).normalResult --> TextArea1.text)
 * @param result java.lang.String
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM13(java.lang.String result) {
	try {
		// user code begin {1}
		// user code end
		getTextArea1().setText(result);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM14:  (MathDescription.this --> SensitivitySolnButton.enabled)
 * @param value cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM14(cbit.vcell.math.MathDescription value) {
	try {
		// user code begin {1}
		// user code end
		getSensitivitySolnButton().setEnabled((getMathDescription() != null));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM15:  (MathDescEditor.approxSensSolnButtonVisibility --> SensitivitySolnButton.visible)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM15(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getSensitivitySolnButton().setVisible(this.getApproxSensSolnButtonVisibility());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM16:  (MathDescEditor.initialize() --> SensitivitySolnButton.visible)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM16() {
	try {
		// user code begin {1}
		// user code end
		getSensitivitySolnButton().setVisible(this.getApproxSensSolnButtonVisibility());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM17:  (ExpandFunctionButton.action.actionPerformed(java.awt.event.ActionEvent) --> TextArea1.text)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM17(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getTextArea1().setText(this.makeCanonical());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM18:  (MathDescEditor.makeCanonicalVisibility --> ExpandFunctionButton.visible)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM18(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getExpandFunctionButton().setVisible(this.getMakeCanonicalVisibility());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM19:  (MathDescEditor.initialize() --> ExpandFunctionButton.visible)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM19() {
	try {
		// user code begin {1}
		// user code end
		getExpandFunctionButton().setVisible(this.getMakeCanonicalVisibility());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM2:  (TextArea1.key.keyPressed(java.awt.event.KeyEvent) --> ApplyButton.enabled)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getApplyButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM20:  (MathDescEditor.initialize() --> FlattenButton.enabled)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM20() {
	try {
		// user code begin {1}
		// user code end
		getFlattenButton().setEnabled(this.getFlattenVisibility());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM21:  (MathDescEditor.flattenVisibility --> FlattenButton.enabled)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM21(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getFlattenButton().setEnabled(this.getFlattenVisibility());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM22:  (FlattenButton.action.actionPerformed(java.awt.event.ActionEvent) --> TextArea1.text)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM22(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getTextArea1().setText(this.flattenMath());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM3:  (TextArea1.key.keyPressed(java.awt.event.KeyEvent) --> CancelButton.enabled)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM3(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getCancelButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM4:  ( (ApplyButton,action.actionPerformed(java.awt.event.ActionEvent) --> MathDescription,this).normalResult --> ApplyButton.enabled)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4() {
	try {
		// user code begin {1}
		// user code end
		getApplyButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM5:  ( (ApplyButton,action.actionPerformed(java.awt.event.ActionEvent) --> MathDescription,this).normalResult --> CancelButton.enabled)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5() {
	try {
		// user code begin {1}
		// user code end
		getCancelButton().setEnabled(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM6:  ( (MathDescription,this --> TextArea1,text).normalResult --> TextArea1.caretPosition)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM6() {
	try {
		// user code begin {1}
		// user code end
		getTextArea1().setCaretPosition(0);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM7:  ( (CancelButton,action.actionPerformed(java.awt.event.ActionEvent) --> TextArea1,text).normalResult --> TextArea1.caretPosition)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM7() {
	try {
		// user code begin {1}
		// user code end
		getTextArea1().setCaretPosition(0);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM8:  ( (CreateConstrSolnButton,action.actionPerformed(java.awt.event.ActionEvent) --> MathDescEditor,createConstructedSolution(Ljava.awt.event.ActionEvent;)Ljava.lang.String;).normalResult --> TextArea1.text)
 * @param result java.lang.String
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM8(java.lang.String result) {
	try {
		// user code begin {1}
		// user code end
		getTextArea1().setText(result);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM9:  (document1.document.changedUpdate(javax.swing.event.DocumentEvent) --> ApplyButton.enabled)
 * @param evt javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM9(javax.swing.event.DocumentEvent evt) {
	try {
		// user code begin {1}
		// user code end
		getApplyButton().setEnabled(true);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetSource:  (TextArea1.document <--> document1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getdocument1() != null)) {
				getTextArea1().setDocument(getdocument1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connPtoP1SetTarget:  (TextArea1.document <--> document1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setdocument1(getTextArea1().getDocument());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
private String createConstructedSolution(java.awt.event.ActionEvent actionEvent) {
	String text = null;
	MathDescription newMath = null;
	try {
		cbit.vcell.numericstest.ConstructedSolutionTemplate constructedSolutionTemplate = new cbit.vcell.numericstest.ConstructedSolutionTemplate(getMathDescription());
		getsolutionTemplatePanel1().setConstructedSolutionTemplate(constructedSolutionTemplate);
		int option = javax.swing.JOptionPane.showConfirmDialog(this, getsolutionTemplatePanel1(), "Edit Solution Templates:", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE);
		if (option != JOptionPane.OK_OPTION) {
			return getMathDescription().getVCML_database();
		}
		newMath = cbit.vcell.solver.test.MathTestingUtilities.constructExactMath(getMathDescription(),new Random(),constructedSolutionTemplate);
		text = newMath.getVCML_database();
	} catch (Throwable e) {
		e.printStackTrace(System.out);
		return "error : "+e.getMessage();
	}
	return text;
}
/**
 * Comment
 */
private String createSensitivitySolution(java.awt.event.ActionEvent actionEvent) {
	//
	// Get the list of constants in the mathDescription
	//
	Vector constsVector = new Vector();
	Enumeration enumVars = getMathDescription().getVariables();
	while (enumVars.hasMoreElements()) {
		Variable var = (Variable)enumVars.nextElement();
		if (var instanceof Constant){
			constsVector.addElement(var);
		}
	}
	Constant constantsList[] = (Constant[])cbit.util.BeanUtils.getArray(constsVector, Constant.class);

	//
	// Get the names of the constants in the mathDesc to display in the list box
	//	
	String constantNamesList[] = new String[constantsList.length];
	for (int i = 0; i < constantsList.length; i++){
		constantNamesList[i] = constantsList[i].getName();
	}

	String mathDescText = null;
	try {
		mathDescText = getMathDescription().getVCML_database();
	} catch (MathException e) {
		e.printStackTrace(System.out);
	}
	// To select sensitivity parameter, popup list box containing the names of constants 
	javax.swing.JList list = new javax.swing.JList(constantNamesList);
	list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
	list.setSelectedIndex(0);
	javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane(list);
	int selection = javax.swing.JOptionPane.showConfirmDialog(this,scrollPane,"Select Sensitivity Parameter :",javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE);
	if (selection != javax.swing.JOptionPane.OK_OPTION){
		return mathDescText;
	}
	if (list.getSelectedIndex() < 0) {
		return mathDescText;
	}

	//
	// From the selected name in the list, get the index of corresponding constant from the Constants list. That is the sensitivity parameter.
	//
	String newSensParamName = (String)list.getSelectedValue().toString();
	int newSensParamIndex = -1;
	for (int i=0;i<constantNamesList.length;i++){
		if (constantNamesList[i].equals(newSensParamName)){
			newSensParamIndex = i;
		}
	}
	if (newSensParamIndex==-1){
		throw new RuntimeException("No such Constant/Parameter Exists "+newSensParamName);
	}
	Constant sensParameter = constantsList[newSensParamIndex];

	//
	// Using the selected sensitivity parameter and the current MathDesc, create the math description for sensitivity analysis of that parameter.
	// Return the mathDesc as text to be displayed in the text area of MathDescEditor.
	//

	try {
		MathDescription sensMathDesc = cbit.vcell.solver.test.MathTestingUtilities.constructOdesForSensitivity(getMathDescription(),sensParameter);
		mathDescText = sensMathDesc.getVCML_database();
	} catch (Exception e) {
		e.printStackTrace(System.out);
		throw new RuntimeException(e.getMessage());
	}
	
	return mathDescText;
}
/**
 * The firePropertyChange method was generated to support the propertyChange field.
 */
public void firePropertyChange(String propertyName, Object oldValue, Object newValue) {
	getPropertyChange().firePropertyChange(propertyName, oldValue, newValue);
}
/**
 * Comment
 */
public java.lang.String flattenMath() throws Exception {
	if (getMathDescription()==null){
		throw new RuntimeException("math is null");
	}
	MathDescription newMath = MathDescription.createCanonicalMathDescription(getMathDescription());
	return newMath.getVCML_database();
}
/**
 * Return the ApplyButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getApplyButton() {
	if (ivjApplyButton == null) {
		try {
			ivjApplyButton = new javax.swing.JButton();
			ivjApplyButton.setName("ApplyButton");
			ivjApplyButton.setText("Apply Changes");
			ivjApplyButton.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjApplyButton;
}
/**
 * Gets the approxSensSolnButtonVisibility property (boolean) value.
 * @return The approxSensSolnButtonVisibility property value.
 * @see #setApproxSensSolnButtonVisibility
 */
public boolean getApproxSensSolnButtonVisibility() {
	return fieldApproxSensSolnButtonVisibility;
}
/**
 * Return the CancelButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCancelButton() {
	if (ivjCancelButton == null) {
		try {
			ivjCancelButton = new javax.swing.JButton();
			ivjCancelButton.setName("CancelButton");
			ivjCancelButton.setText("Cancel");
			ivjCancelButton.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCancelButton;
}
/**
 * Gets the constructedSolnButtonVisibility property (boolean) value.
 * @return The constructedSolnButtonVisibility property value.
 * @see #setConstructedSolnButtonVisibility
 */
public boolean getConstructedSolnButtonVisibility() {
	return fieldConstructedSolnButtonVisibility;
}
/**
 * Return the CreateConstrSolnButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getCreateConstrSolnButton() {
	if (ivjCreateConstrSolnButton == null) {
		try {
			ivjCreateConstrSolnButton = new javax.swing.JButton();
			ivjCreateConstrSolnButton.setName("CreateConstrSolnButton");
			ivjCreateConstrSolnButton.setText("Create Constructed Solution");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCreateConstrSolnButton;
}
/**
 * Return the document1 property value.
 * @return javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.text.Document getdocument1() {
	// user code begin {1}
	// user code end
	return ivjdocument1;
}
/**
 * Return the ExpandFunctionButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getExpandFunctionButton() {
	if (ivjExpandFunctionButton == null) {
		try {
			ivjExpandFunctionButton = new javax.swing.JButton();
			ivjExpandFunctionButton.setName("ExpandFunctionButton");
			ivjExpandFunctionButton.setText("Expand Functions");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjExpandFunctionButton;
}
/**
 * Return the FlattenButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getFlattenButton() {
	if (ivjFlattenButton == null) {
		try {
			ivjFlattenButton = new javax.swing.JButton();
			ivjFlattenButton.setName("FlattenButton");
			ivjFlattenButton.setText("Flatten");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFlattenButton;
}
/**
 * Gets the flattenVisibility property (boolean) value.
 * @return The flattenVisibility property value.
 * @see #setFlattenVisibility
 */
public boolean getFlattenVisibility() {
	return fieldFlattenVisibility;
}
/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			getJScrollPane1().setViewportView(getTextArea1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}
/**
 * Gets the makeCanonicalVisibility property (boolean) value.
 * @return The makeCanonicalVisibility property value.
 * @see #setMakeCanonicalVisibility
 */
public boolean getMakeCanonicalVisibility() {
	return fieldMakeCanonicalVisibility;
}
/**
 * Return the MathDescription property value.
 * @return cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public cbit.vcell.math.MathDescription getMathDescription() {
	// user code begin {1}
	// user code end
	return ivjMathDescription;
}
/**
 * Accessor for the propertyChange field.
 */
protected java.beans.PropertyChangeSupport getPropertyChange() {
	if (propertyChange == null) {
		propertyChange = new java.beans.PropertyChangeSupport(this);
	};
	return propertyChange;
}
/**
 * Return the SensitivitySolnButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getSensitivitySolnButton() {
	if (ivjSensitivitySolnButton == null) {
		try {
			ivjSensitivitySolnButton = new javax.swing.JButton();
			ivjSensitivitySolnButton.setName("SensitivitySolnButton");
			ivjSensitivitySolnButton.setText("Create Approx. Sensitivity Solution");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSensitivitySolnButton;
}
/**
 * Return the solutionTemplatePanel1 property value.
 * @return cbit.vcell.numericstest.gui.SolutionTemplatePanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.numericstest.gui.SolutionTemplatePanel getsolutionTemplatePanel1() {
	if (ivjsolutionTemplatePanel1 == null) {
		try {
			ivjsolutionTemplatePanel1 = new cbit.vcell.numericstest.gui.SolutionTemplatePanel();
			ivjsolutionTemplatePanel1.setName("solutionTemplatePanel1");
			ivjsolutionTemplatePanel1.setLocation(36, 481);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjsolutionTemplatePanel1;
}
/**
 * Return the TextArea1 property value.
 * @return javax.swing.JTextArea
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextArea getTextArea1() {
	if (ivjTextArea1 == null) {
		try {
			ivjTextArea1 = new javax.swing.JTextArea();
			ivjTextArea1.setName("TextArea1");
			ivjTextArea1.setBackground(java.awt.Color.white);
			ivjTextArea1.setBounds(0, 0, 352, 222);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTextArea1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getCancelButton().addActionListener(this);
	getApplyButton().addActionListener(this);
	getTextArea1().addKeyListener(this);
	getCreateConstrSolnButton().addActionListener(this);
	getTextArea1().addPropertyChangeListener(this);
	this.addPropertyChangeListener(this);
	getSensitivitySolnButton().addActionListener(this);
	getExpandFunctionButton().addActionListener(this);
	getFlattenButton().addActionListener(this);
	connPtoP1SetTarget();
}
/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MathDescEditor");
		setLayout(new java.awt.GridBagLayout());
		setSize(981, 242);

		java.awt.GridBagConstraints constraintsApplyButton = new java.awt.GridBagConstraints();
		constraintsApplyButton.gridx = 0; constraintsApplyButton.gridy = 1;
		constraintsApplyButton.insets = new java.awt.Insets(0, 9, 9, 0);
		add(getApplyButton(), constraintsApplyButton);

		java.awt.GridBagConstraints constraintsCancelButton = new java.awt.GridBagConstraints();
		constraintsCancelButton.gridx = 1; constraintsCancelButton.gridy = 1;
		constraintsCancelButton.anchor = java.awt.GridBagConstraints.WEST;
		constraintsCancelButton.insets = new java.awt.Insets(0, 9, 9, 0);
		add(getCancelButton(), constraintsCancelButton);

		java.awt.GridBagConstraints constraintsJScrollPane1 = new java.awt.GridBagConstraints();
		constraintsJScrollPane1.gridx = 0; constraintsJScrollPane1.gridy = 0;
		constraintsJScrollPane1.gridwidth = 6;
		constraintsJScrollPane1.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJScrollPane1.weightx = 1.0;
		constraintsJScrollPane1.weighty = 1.0;
		constraintsJScrollPane1.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getJScrollPane1(), constraintsJScrollPane1);

		java.awt.GridBagConstraints constraintsCreateConstrSolnButton = new java.awt.GridBagConstraints();
		constraintsCreateConstrSolnButton.gridx = 2; constraintsCreateConstrSolnButton.gridy = 1;
		constraintsCreateConstrSolnButton.insets = new java.awt.Insets(0, 9, 9, 0);
		add(getCreateConstrSolnButton(), constraintsCreateConstrSolnButton);

		java.awt.GridBagConstraints constraintsSensitivitySolnButton = new java.awt.GridBagConstraints();
		constraintsSensitivitySolnButton.gridx = 3; constraintsSensitivitySolnButton.gridy = 1;
		constraintsSensitivitySolnButton.insets = new java.awt.Insets(0, 9, 9, 0);
		add(getSensitivitySolnButton(), constraintsSensitivitySolnButton);

		java.awt.GridBagConstraints constraintsExpandFunctionButton = new java.awt.GridBagConstraints();
		constraintsExpandFunctionButton.gridx = 4; constraintsExpandFunctionButton.gridy = 1;
		constraintsExpandFunctionButton.insets = new java.awt.Insets(0, 9, 9, 0);
		add(getExpandFunctionButton(), constraintsExpandFunctionButton);

		java.awt.GridBagConstraints constraintsFlattenButton = new java.awt.GridBagConstraints();
		constraintsFlattenButton.gridx = 5; constraintsFlattenButton.gridy = 1;
		constraintsFlattenButton.insets = new java.awt.Insets(0, 9, 9, 9);
		add(getFlattenButton(), constraintsFlattenButton);
		initConnections();
		connEtoM11();
		connEtoM16();
		connEtoM19();
		connEtoM20();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the DocumentListener interface.
 * @param e javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void insertUpdate(javax.swing.event.DocumentEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the KeyListener interface.
 * @param e java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void keyPressed(java.awt.event.KeyEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getTextArea1()) 
		connEtoM2(e);
	if (e.getSource() == getTextArea1()) 
		connEtoM3(e);
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the KeyListener interface.
 * @param e java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void keyReleased(java.awt.event.KeyEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the KeyListener interface.
 * @param e java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void keyTyped(java.awt.event.KeyEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MathDescEditor aMathDescEditor;
		aMathDescEditor = new MathDescEditor();
		frame.setContentPane(aMathDescEditor);
		frame.setSize(aMathDescEditor.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Comment
 */
public String makeCanonical() throws Exception {
	if (getMathDescription()==null){
		throw new RuntimeException("mathDescription is null");
	}
	MathDescription newMath = new MathDescription(getMathDescription());
	String answer = cbit.vcell.client.PopupGenerator.showInputDialog(this,"enter any function to expand separated by spaces","");
	HashSet varsToKeep = newMath.getStateVariableNames();
	if (answer!=null && answer.length()>0){
		StringTokenizer st = new StringTokenizer(answer);
		while (st.hasMoreTokens()){
			String token = st.nextToken();
			System.out.println("adding function '"+token+"'");
			varsToKeep.add(token);
		}
	}
	newMath = newMath.createMathWithExpandedEquations(newMath,varsToKeep);
	return newMath.getVCML_database();
}
/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getTextArea1() && (evt.getPropertyName().equals("document"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == this && (evt.getPropertyName().equals("constructedSolnButtonVisibility"))) 
		connEtoM10(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("approxSensSolnButtonVisibility"))) 
		connEtoM15(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("makeCanonicalVisibility"))) 
		connEtoM18(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("flattenVisibility"))) 
		connEtoM21(evt);
	// user code begin {2}
	// user code end
}
/**
 * The removePropertyChangeListener method was generated to support the propertyChange field.
 */
public synchronized void removePropertyChangeListener(java.beans.PropertyChangeListener listener) {
	getPropertyChange().removePropertyChangeListener(listener);
}
/**
 * Method to handle events for the DocumentListener interface.
 * @param e javax.swing.event.DocumentEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeUpdate(javax.swing.event.DocumentEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	// user code end
}
/**
 * Sets the approxSensSolnButtonVisibility property (boolean) value.
 * @param approxSensSolnButtonVisibility The new value for the property.
 * @see #getApproxSensSolnButtonVisibility
 */
public void setApproxSensSolnButtonVisibility(boolean approxSensSolnButtonVisibility) {
	boolean oldValue = fieldApproxSensSolnButtonVisibility;
	fieldApproxSensSolnButtonVisibility = approxSensSolnButtonVisibility;
	firePropertyChange("approxSensSolnButtonVisibility", new Boolean(oldValue), new Boolean(approxSensSolnButtonVisibility));
}
/**
 * Sets the constructedSolnButtonVisibility property (boolean) value.
 * @param constructedSolnButtonVisibility The new value for the property.
 * @see #getConstructedSolnButtonVisibility
 */
public void setConstructedSolnButtonVisibility(boolean constructedSolnButtonVisibility) {
	boolean oldValue = fieldConstructedSolnButtonVisibility;
	fieldConstructedSolnButtonVisibility = constructedSolnButtonVisibility;
	firePropertyChange("constructedSolnButtonVisibility", new Boolean(oldValue), new Boolean(constructedSolnButtonVisibility));
}
/**
 * Set the document1 to a new value.
 * @param newValue javax.swing.text.Document
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setdocument1(javax.swing.text.Document newValue) {
	if (ivjdocument1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjdocument1 != null) {
				ivjdocument1.removeDocumentListener(this);
			}
			ivjdocument1 = newValue;

			/* Listen for events from the new object */
			if (ivjdocument1 != null) {
				ivjdocument1.addDocumentListener(this);
			}
			connPtoP1SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Sets the flattenVisibility property (boolean) value.
 * @param flattenVisibility The new value for the property.
 * @see #getFlattenVisibility
 */
public void setFlattenVisibility(boolean flattenVisibility) {
	boolean oldValue = fieldFlattenVisibility;
	fieldFlattenVisibility = flattenVisibility;
	firePropertyChange("flattenVisibility", new Boolean(oldValue), new Boolean(flattenVisibility));
}
/**
 * Sets the makeCanonicalVisibility property (boolean) value.
 * @param makeCanonicalVisibility The new value for the property.
 * @see #getMakeCanonicalVisibility
 */
public void setMakeCanonicalVisibility(boolean makeCanonicalVisibility) {
	boolean oldValue = fieldMakeCanonicalVisibility;
	fieldMakeCanonicalVisibility = makeCanonicalVisibility;
	firePropertyChange("makeCanonicalVisibility", new Boolean(oldValue), new Boolean(makeCanonicalVisibility));
}
/**
 * Set the MathDescription to a new value.
 * @param newValue cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setMathDescription(cbit.vcell.math.MathDescription newValue) {
	if (ivjMathDescription != newValue) {
		try {
			cbit.vcell.math.MathDescription oldValue = getMathDescription();
			ivjMathDescription = newValue;
			conn0(ivjMathDescription);
			connEtoM12(ivjMathDescription);
			connEtoM14(ivjMathDescription);
			firePropertyChange("mathDescription", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GFAFBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E16DBDFFD8D4571518E22489A62635DD5B35DB1A1054B636EBDA3BE5DB3BB5DD732D3BB12D2158182EE95D46FE35DD1BE5DB5BF5DB5BBEE090461FA4A111C6D4D4ECC08D028292C0642702228E0200AB09BCE69E4C401B9F4EBCE0C0B0FB6E3B775CF9B36F8DC3680FEF7FD83E6FFCEF5E396757BD775CFB4F3D6F3E0710FDB0AEBDA5B5DB90D2528576F7A6C5909A078461BB16CF97A02E624DC4332079BB
	847032700A458457E6A80BFFA8511CA5641E4E047B9E38179FCCB46F055F2F8A07CE1B6C70A30C1EF58302A0BFFA747929754CABC0BD996A7DC3F7F742F5B7C0AF6048F5711BC47FE76E66B0FCB443A324248AC2D48121D9F1B717611201A693F055G1682CAEF07ABB5E0F6E585236BF9E8113079DF3C293B089C0DCC04150CF7933B66893FCA19DFC8F47DD43513706443FD8FG29FC1A70F301B8365AB2B4D0E36DF3A8C5A3D6C9160B1C22E2AF9A98F6D4D6DE06DF0D124F5AE4F3A8EEEF56B1A22B6C3DCC15
	D79056021C05AA6EC509486F005FB2C074B1445F1089FEBD7C5EC26E0FE31D4E3ED94DEC6E3E73E5A169145334A7CC1D8A0E533AD80E876AE49BFCA175772A7FD79792BF47C259920095G9B81B2CFA41A8BG76296D7EDC41B1385675A98DEE27536D2A73F86AE51B77325BA649703B3292CA986E1AE4F5FBED02C05B7667F7CF9858B395D03E14775EAF9F75492253584E0B2FFDDED877450F26E69878E45D22BB2935A728AF3ACF84FCC2F5D706556DBF919C07413A3B842D6E68ABEB52528DF447D52DC90BE5
	F262B43A571DA0ED5D55CF5AFAB97CCEE1F2A95E2662735E8A60E9CC7ED80D99F2DF8DE5F1EFE1ECF46FC6DBDACD8F8BD9A5FFE56807855F08CDB595D19BF20BC2EDF947C5E4B797D11DD739ADF3D5FC3286CFED392546A939DFF0B2511CFDAA51CC636B7963240F4EABCDB4AF86D881308EE0ABC0CED92279C49946D8DE6149E94618C574AA75438E59A6F9854A7BFC616BF0157C0AD7ECF1799451E515BAC52FC36C13A51F40E8FED0C8FC50974477A3B5762D20630264123C2262F03BC03A681494496B23B449
	05AF939A2F2416F6B81C92A8F0FA84143B2570D5384A22CF396E31090A9420206542B152A6A3E2A7C88481701B7AE55BDB44DF2DD0FF9B00427DF0679811F7C9723AA4393232556D9E9A76F4101A88AB4A081F5B5431A386FE4715210FD30B88AE33BC511CD70EF23EF06C950D1CC6071518AFFA47300F3D531F8557D22037G48G516598BFAFF5E37CB46E7A1CF0E24DC78C63A73BFACD5A22F29AB74B4BC37B5120AA1F5838914AB24F40F8F286477C7F103AC3E4915D25CC0605DD65F2637EB63DB1A433BFD4
	8729DB9A7B1D2E211D098E6AF74FC9358D21DEF60018B3687B1F9E4B2331DCAF7AA40C5E2BDE88BC4996E889EA275535107916583683004CCD8785BADF6ED1E954B8925E84F80D69FE0B455FFE0053GE5GD5G052C8F1E85B8CEECGA07D2A846082C08B40990037C9CC8334811C83388E50G5084F093609D92BBG1739BFBF2C5A9987F5DC89108C10D311E82E8530834C83C8GD88F1079F6223998209BA08AE09140EA00ADGF9150966E6G8F40820065G9B81322A924D95G3DGB1GCBG5682885590
	B7G96GBFC09C40CA00E4001C33209F408EB06FAC4616A4FBD2837E5436997AD66B5357B46D097EC45FA35F1B4C2F47195F511F68F774E795737BB966F774A77A9D7DF91579FDB773BB6AC13F633DF50631797F7017879AFBA6A709BD92F7698665E47C51465EDEA190FB98F7982348C76213449F76F70CBB921FC704C05C9D95027BBB469D46A7469D0963F3CCF603C68F46A75E1F7DBF60537F0769811DF3DEBCCEE2CB9A11DCCA236411DCB67861E3E5BFB9CEE20F65C77DEE4E132C62BD10CFB5C082636378
	DF9EA7B1AAAA0A5751B72CC86D1222B8DC8301725F2A3AFC43FD1EC0AA063A52CF1058F70FC2BE4569371FA03908556DF2C96A6447D9D879CEB59712E44989C6B73807DD8A453F7296D9AB8EC9E3AC97FB7D2DED82492564E11257517557921174990F576104A9152406C2E68D49136C6F65E8FC14G7383D9C72E03EB72D94CF3C60FE01E13BF7E99E179ADCF2AD14E3E605187D3ADB5B497315584729CEAD3C611316D3B541C0C61FDE954EFAE429B3CA22463452BC2133CC7D366F5F80823D8599CB50734392D
	43C4D80900BC878BC85E6BF34B43EAEEAAB9BDB2E4209691D23E924CD1BED3CC6C0B863B97GAC29419C6503C5249C73C3161CB438E519B69114E51DA3FEDC521F4D7C3092F85755D0BF6E6665EF8CE0F9B75CFB4E854AE9BBFCEDC05B8ED12CFC85DC571EC3DBC6CE12DC51A75D9E16A0F5A7496EA55E6613A7DF89A96BE46DCF4BE71FA46DAFEB726446DA2277A7AE3EB7F00E6620A640E7831456D27BB62AF40F3B11EE9E5C137CA63E1652A7B0BAAA2F4903F425F51043G586B0C646D3E0DF40B6AE81EE4AC
	EF9127DB86F4C9G1B6BA8DDE93DD65EBDDE24EB2C2779964A6BE1F4497504AE5F07F4AB6BE9CE363EBEA02F08533D44692A9BA8DDC7832D072D0152EDECA0F44B9424D39A285E58865AF60B9B3475F8F7187B25114AE9ED247509026BFCGCA37F0047BC5C3574C6816F33AE7C611AE29116A5D2421B3B5A15DCF7DC817539420C33D451CEE57B877DF93ED5FCDCCFF8F5C7BB95D69BBC8975BC45BCDCB978FC07DF2ED826992G371A50B6D13F941F577A6575C9240BB9CFF3DF14974768B61DA7F49DE9C83764
	BCADDFF91E2E17564175G17F74004F49597E83965822D6FFC38AE3A00751052F9DCDD20F6A5DD20F68A4DDA7B2A36A1DDF6B325BB519CCCC763A5A3037B2F19666BA47ED0EE911777D5CE5753CC63CEE1722219BC6A3F7BB211EE816017909A26BF2BC5EB5F95B35259DB685AG7D9795C437EDBB6F3FADD46F2296AAB7A1086E51FDC8372A056A5B406832AEEA696E64A2DD7EC5CAD7FDB1180E7A6542FE246B38C857AA6897A2B76017DFF3BA194883083FC86B3101492B3EC468569CC03A4D97691A87656D3C
	2435EF74A00F2BCB34BC6E92153BA2086ED29E522DE5F449A1F4349EFB8FA1DDE6ABDDDF21DEA2B7D00F27B9DDDEEBC0DE857C6EEE554A7B68E1DE5FD63ACEC3F9512DDAF9570EA0DDFCEB20DCAB0F52656473F8E665467E7B9E27CBEA25EBC2543B0949E37B356A1E0F3ADFBBA80E087EA25FA864B615159755E9136E4FA62AFBAC04BE67B26E43BE15CA66D18B5C5B8122AEE38E716CAE5C071DBF34C8683D1A1496EEEFF941E5EA47324B019CE2C157E89A1D27FFDEC2F4EE05321DD7F0DE940A35FBC1F5BE1F
	5B6AD03721585C7737455A9C03621696EF07EB3F436BD3DAA0897463BC7915E2E2AF5927E2E80156F5CDBF6EC567DD41BD6DAFDFBEAA986FE9877633B1C3417DCF6BE974433C71C7055E0FFCBCF5C798BFF4DF217577DF8978E1731A52B43A0FD8B730135933844AB78264DDA5783B83A497A4E3A33551271CB1305185991257E175A912CF217B6F6DC659912B7BD787316E362B584E0F8D917D8B61FEA940AA22DB453F6CC65A8D0023791753CDECD26C8E5F040550FCCB4E5654B397F00DGF68B52FF0452C3A2
	CEFD76398335B8A6FD7EE1A1D31C1DEA34079F7B6301549596B6E7D882BEDB7E6C8B29C9GACE65D983325ED68236C9AF2D573E59E7F6DBB7261BAA0A91D8D17DBEF59C4C56C93FDD2C1E1AB698DC532689AA8EA073C5FB5D0C5EDD4AA50464509DF923A879FB034D16D6FED543679ED819B6DAF7DD34684G35D176208F57838D75596CB12D4FF22E51FD4D5AEB6833151ED3F09555243408DEAC12375F6DF5CA368255E6F1D4A9D257BDC5F5EAF19379DD0871DDF69B7D5281B2E90CBDFB9BE3AC96F0AB2E21AD
	9FCDB332E5AB372542BBD3DBA83F6C45F821F6BC6EC5BB325AA147E947F63B30231774E12F5BC95788852D210F16C2FAE1153E758AA372D09BAE7B5006A8501F500EF5DD6AA3360A5E01929A8793B7B08E22D6AD95F2DE1D9BB68E125BE97B67F48462A0767BAF244681D01DFB9554E9871A388E54F9D7E1BACF517B47946CAF146F07AA9F7151DA60493A0E7EFAE487D92FCAFE2B24566C2A55BA6C05558C0F79CFB613BD9151631147EEB505D295E8FC57E1773AC749A2222A30130DEB8F3F2A6D23556F3DEBD8
	6F18BD7654666B343E1E6B01FAF7C37F141F45FA4F99C67B17814D666BD86F1706499E8F2CF30BGACDE49675347932C08D8B0D11EDAF57FD8F291EBEDAC562BC730FF1D6844D8FFEA84F55AG37309347B367A852A6F15ADF0EA26D4EAE983B3A503FB5ED846F02B89765EB12EFD8D6280CD8BF4A1868C2992F0F210C25005B54057A960FA1EDFEB752160FA3ED8F41F523BF7EF61C4C21D651ABA996374F016BD1D54E3747D14EAAAE27678E4AB15D00FC6D866A7C599D24D5EEA06D1D8924DD8C388DB7306FD7
	F69A757D5C7FC11BFEB0B1533ECFFD18E0A2FBEC6AF3A429416D72A95EE12BA259F0FAE2D1E8A8234AE0F09670395B39C96CCB45E02B1D5B1BB0995CF7A65310AE8EE856F23A798344C73837C0F119A69C27E89F78D91D368FA4E4449A76817B279724E65D2431DFF1B350879A573F105A3D9E7B4085937ABF86E8165FC4BBBEEFBA23312348EA074ACAB67ACC2DC01329B177B4B24220BE7122C95FA75253B186365C4498F8A09DEDA86E811F75208D3FC8A7FB30562056F1558FAB0A5B556970B97A9C32C399E3
	3A723791DDA384ADCB2CADEC5B380FC166DAAE77E9956FF0C1A40B32E39CE6DBCADF1C41477FF7E07CFF876D5B100176C581AE619D14F3A9935B055E7BB23575253CDF4CC45EE460ABF89763FB3E4DA83EFB5FC559EF187F38785ED095086FF649C5FA6D88F86B0F0E6FD1B37AC881DB97F3FB134D4171FDF2BB56FB8350645EC23A7EFD41BEFBE01F5EE75F5C073C9D40974BF94BF2497A9B668D2F5BCF6AE4988EAC9EEC397AF8084FC55BD7004C2DDC6E0E7D467160590F74253D09E6399763A17FG62638137
	2E975BF43F5328CD33C554F37F01BFAEDF797A01E09F7F76G7A29GF4740AB8BF9CF1126791CEF1C8EA90DDEE1743AA4AC6892500EB05DF6F4771A43FB1DE2858BC94B617D8A032674BE2E0BCD124323498GEAD35CC134A92B8F7AD09F56BDA3EFEF28CD3ABEDC1A27EFB3A50F67C3A0AB014B7B57BC63B62BBD047449C0DBE045B65B4C713D00DBE045B65BE5588FD7DBD14FFB077571797543A8EB8350655AF8BEFA0464BD7D302CD1242010E4FCF70E7038861ED89B5AD6174F6392F0DBB9BE63A85217CA90
	FF9236EFCA4741009E12C69A36AEFD86761C6E7CCC3C94F80E1F20790DC04F1534287353AA091EAB594371B7D47CE68D1E5A7A343A9EA777397D605FFEBC8BE1AFA36B7B6C01C4F3B1C0B3C0AFC094C05CG2E2B6BCB48B334A94F1A343894D8F60BF2FB50C38EBC73D1C2FC87399A3B5FDA22DDE7D1BFFC371F78E15940744FB0D07B1FA9A771319A78B681186C505EG55F634FD56299311EC4733AF4CE8EA4F05814257E31F3EBD146F3A4A273C8FBE5A478B7FC7FB664E7472455434B0FDBC1E49DEEA8FBDC3
	32FCF02AF3E01B8DEC22B17306FA96A953C1E3A605630F2878EC8D1E465262A1BC5B1787E5518EBCCB703ABB52B9340D0EE09BE8FFF9E6123415419ED3878C25F5B0C532E7A3337D5AE7A3DB9DF4ACA89804769E449CF61B132FDF87F14FE9723CF64FE9591E4930FBAD31036CCC65E04037730E7D126DB9FD35026C19ED02324C21C4F39EC0B5C0AF4084C05C90465CB3272AA2451CBAF1F43869AC52907A248F47861DBF178F857BAFA9641E5AD9D5C96C5C88E5A6997A83C085C08F009FE0210CF69EB8FDAE12
	1D7CF8D7A4DBEFFBA2357DB259286D77347F5E386DE962A060BAE6193A9EA23AD64B98EF1537C3F5E6BA03F564065CB33F6A78C22158106F079179BAC278286D4F24216D3293EDFF42BBB39B3E9E11AF5E102F5DB7B3FDE2C43EE5CE23987CEA950941A4A8CB8648F4A51A73811A81ECGB1AE0C415B276B5FCF8C62B3F6FD98B2FB77ABB32B677108FCF1AEA33EFF5771A50450996B7BEF9D5F01107BA41711DF0B4F2AE39014E53AE18C822886688518G08F323DFD71CBE9B492FEC8CEAGDC335BBDE460D2E6
	6B5C611955712FF5FCC5A1774B5DC6FCF5A353B94F3CD643CB791E5671CD4F4E67F5FC21F6EEB23453BBBA9DBBCD1ED0BB376A7826E767F6FFA4BBF3BCC6FC8F69788C7B054E4E5C311959F9CC4797EAE723211DCF68780C20C7E7E775784C6C3C28638B3553E3E867DA9D1F9144686C6C3BB3B3BBBDBA3ED0BB979A5A79DFBABEA3D82A33F356444C6CFCD04797BA262D8C31134E0F37BBB1E7DB6F417931E9F2E663F8FBC43E1C5BC6FC9FC81B193E07A2735DB69A47BFDDC34671E6A83381CCGACGD8863096
	E06BED9C477716C61C9F7924B81D797132E9E6EDFBD347979A0359DE43B1ABFDBAB1F8429B9A0373F5FC533373E19DDFE88C569A5AB938EDE66D6F0F4857ED282FBCE3E67A9AA372F98C757DC447B7BDFFEE5171057AB346D05F5FE74ECC5FBF6978C27545F90D461027EDB806A4F8F18C19B44F4C4777C764CBB62CF35976195539C14797DA67CC1F91DF523E19697B010EAFD4DF1E213E4F664E4C1F899179AA8C750D6C1F193E6808FC96C3FD478E4CCCDFC5C4BE3B4FA8E6BB78DEC5148FE356F4F0E6ED7A0A
	0E2FA8D4CE088DF49EBADACB662155D036894024401A8220912097A0DA41F9E828141C151F6EBAAD721A62319956F3290EAFB4F66395A33E713C1935EDCCC43EE5067A4E9F1A193E0E08FCC9067AFEB5C3FD1907A371EDD20CE237110F3726E10C5D27A24AB236615B91792A070D78E69D19E11E2A638B0D218EC3FD9772E7D63F6B9179E4C3FD3B0E4E2CFE7BF4FCC5A17751A17A683B12AF29677896C25992G0AABCDA138A4385F445B792AFA86B7EBA451DCGD08B508DB081908730FC8469EE29F4C96C7CB7
	B95BC54E3712332164DCA5B91BC8691ECDA56F0746B1F95DCCC6280FEA190E297CB8DD4862B6A62B3AF731D846F70EC269896D0EBF01DE82E4DF1F6DFD1505FF8745DFE67C8E4A5DB263F7D0224BDE26F81021FD63974BE34B26FEC7E5FE1951BBAAB4867ED3BD73C81E05A87C394A1A7270362FABB7367D87654636EFAC1F5A766472F0366FD77D799D755916F75825B81C12AA1A6EADCBFE721C95E626EB43AEBAED91693E5067BE824E05D29DF9FE3BEE846BB8674CA9C1BF6751B3E6A824C3923DD77B7B7942
	2B5DA3D931BFBDB708FDE78B0F37BCD9607D34D0737B8BC3216F5F7EA9016D0F7DD9F550BA3F251E2BA463D26EA8BE8F9DE8A26DE430475FEE753AE5199CB195F0DE799ABFA3D5BC0AE7CC6973A9BB5CC781AC98C5DF6EF0069BD717G4D0AD17DD8C15B79EF6A49B34335D03E99E027BF511C8F506847F67F7619084FBB1B7CD3BC6FFC2AA2FC5FD8D5E15CB792AB489864F38FFB2DD2E87CBFDF11434B8299D50BA2B92FC042457A164A2F085E81C957FFFE2C725332F07CBF2B885747585C2036AB19FF0AB86E
	673C2DED5CF7CD15616B5EDAE9DC77EB15616BFE23B2F25D7BAA43575DD199396E5E4A296B9E6341FA7A7D98FBCF9A6ED5467AE94C4541F5295FE80EED3B2D77E367ED143F92F8681876A3053C4B2AFB871098AD60F9135DDEB323E9D25C17CBF8BFCFB45C13DA476CC9062BE9AC58B6AAEF23F78713E7A107E9C1A2455F678B42DBCAB04E2B2608732AB0F1DEB5C51CD7CDA34E2B2608732AE944F99529CB1F43667032B777E89DBB1460BA1EE2F34BBF3FCE6A6801B9C572298FCC9AC5C5E4BC0707B57EEFA861
	F6D41E8D6F173A3346FE39F0B63CDF2E1C0D6C172E33617D726E5948FE99B89B2E8F503A2E50567572A99E3B5D6A99DA726EC84E981E33C99D55521E66349F9CC55A931C7634DFCBDB46E9977911361653360FE9E9CBB96D4AB1246D60343EF1ADEDB9277D0FF12435F35A0F5D51521E61343BA710F60253A6CCE85B7C946FF3A31DC6FDEE9E6BE771E37A39084A1B18546A2E60782F24A15E2238AD0158FA22A6FCECA554984756BF54040F2D27EAA24756B7EB4247561A1A4831753D9A63BE97ED52567DED6E77
	C3696877846E77275337EB473AE2745327368561CB906F4C886E4F27997ED0E6907DA924CF4E54366BE95E2E2BEDC66D3A0A35677A306D3A549C2467B4622B778561CB913FA3B788DF0678FF8B4617A37EF37B036BD74A706201A07AB3D80F9B063952E6E6FF66F838FAD49D8C525300E37F495A70F1D8DEEB9C07553561633021B6F29C3656060F43765A48F158D3BB7598774241A05FD5A07E093CA07C5B081FBC945C86E58CDFF2D8CBFF2A985B2045B016F2196F0B433641564341FA4A99BE61C8109E9E7BF7
	730370BC469B0F863765A906CF9748F782E4F14CBD2C407AFF1C7441DC814FDAB542FD8F33ADFA1C1E3922F97D9323C4DE3FD7F4029B55050F7F0E7AAEE58A72EEG7AADGB9002FG683E037D79B71789EF9DF947041D7421786F2AE74B9A48B729E4DA406614AB842FD9B114D07C06B748BB7D8D1A778482270E315E0F09A4178ABEE54DC9F0DC38CA5684CDFE0F68321D9FF6311CAB207F391BA4764E53B31D1C176518F53B34F145F2B46A0B178651974B6FD09FA6316BE66E0BC6F7BAEB17E2BE6EFCE34AE7
	765993614E72BD202E158AA668193DB40EDF2062ABB4F8FA16AFCF46332D4DD036F88277FD8E2BFB53D913096602C9447D268357335513186FBFD69FFE9C78DC3D71B87045FA63FD003F2F1FFA9F60497A297B6FF68F7AB1704D07CFF2DCA037D82B668B3DD0878F2F5B5B63D837890EABD2F39072FE7C2AC97E8E63ED149748A9FE1C067256F35EABA63EEF46F105E3A82F7AEE223977AE413979BBC8960E0B636F9A45F35C57D5DBC85BAD65386F0FA1EEA547ED3B0338F59CF7F482F11B6E22ADF355E76EDB61
	FE67FB087BD9A75A1C739E72D67077C16C1C6EC76A5E2F9F6EE3B82ED5C25E799C67D1E3E8835CEF6638B5CE2493229057EBC3BA8B47BDE9C33A1EA8BCEF5DA860395345005B900563D0C9AF59E7647B8B6414FEE565852F43D6AF8E342A239A5DC7182572674ECAB41782344E4273217EBF607950450FBDACF4DCB2FEA7F9FD47E42AED966DF7B1338267C37D0378CE6937D2504FAB20FC6BAC354F24E84F2F93BF7EB0056E47527213295AF2925F641BC301F2B1281C587BF806367C43C165699AFEDA37270FE2
	5D36BE3DC4103F949D76DB1E0D7750BA5959F55E060F25F4FCFABC0D56ADFB886B96F78F562DFEA85476FFCC535A268C055A5642EC23ED7C3C9F5BF86DBD382E1EAF13BD38028F607D5F2877647DF5FA7F8759E88F0B50CFF71FEAAA20BA4E996AC87B93488F4C69EFBB499C5DA7DA07863C6EE1178D468F353FFD59C5FCD28B75E98520F3C876F51CC3E440C5814481AC87D87F819C1784933EFBA2C4136F4866DED4A3BB1A70DB469B310D230DF38CADF4838D01A32C3D65684079EFEAE3979F0B1693DD2A3EF7
	AE8574C9A65417E420AFA50C3E57D859C63DBEBE4EED0E467A5EBB225657BBAC51B80F9B551E1F2F58FE0F61370954DCF7B635A917DD373E767194AA734B23A8135EFF47CFE4740B32AF3067724BB1BDEE7F9D2227185FD7CF845F47F786374D1E4B81DF193B50D79D33753ECA8F71159DE888202FA6E687FCC5F5DDCD8F2E43EFED413A3B2E84F4DBA5549DE320BBA3C477C220D922513DC227FB0EB3D8571C2B81DD1B1C28EB3501AEF3082E8DC033C123EB0BC697157DD9CBC076DA9B4AB65D2B173DA3026C1C
	FB83325939C0E1BAE7167463C6777B66233959AF54F9A97F5E5077AFFE2B620B6F8DFD7FE28E1F872B21AC6EDEFC17E7EE9B99A7CCF3924DF9G95G96G8FC06C9C4C573A9AC8DCCE39375D617634C2C2A7EBD2B0F65EA4657D560F764DA7B3F08EDA7A154F8A8977B606FD7FA2EE8EED3F656CDA706247D2481556AF2F1D54AF994AF646A41A0B811A81FAG14982C5FA79B587BBE64B1CD1D2208D63B7A358F7E5047A10D8650E451C26B767B2177DBB79AFB49FE5E07E20C47BA823BD86CAD841AA5B1B47654
	7749E2F47DF710788CDFFCA961717EE62740E9FE51C166D57EC2E203DBF6FB0BC66D8EC522F3F565F5FCB63FBA8667EA6F7550BC64EBC1F9C87C7550391C5894A87F4E7550BC6449D4EDF9E6E768DC0F7CB4863EF5D3BBBEE7FDDCCE45FA6B46678FD2BFE6FFB010E351FA4D9A47FAB5C359C15597C0AFE87ED4DFBD58A5F03D7F3693E3AF7771C70446679AD30F04519B45742D56684DF66625D11F3B026682EACFEBBA5A13F99F4E037F5D9DE8A7D750DCC1E378319B6A7C8E74BD77E14CBEFC09FC0B32D39C54
	BFE18424456B76C8DEE50CE2552F39B17D15DD28FF623E297C3117FCAA15714C1710E7E9981E70F26E7684646CF7211CCDD36A7E54BB819EB3571DFFBF7AEB453B241C7641DF8B015F2614406F39421F7F5968E3FFD69D341DBF5A96FE2D7C09B6633572A3ED46EB654F34CD7DBC7F0936705F1CCCE853FEF31246657CDB247F76C03B78819682AC81D8F1BF466879EB0785F5DCB598D31BEC83F46FC5F4A9283F30BDFCDD0B5BA3FFFF7C6DF6B5BFF6AB8A792A4B000478F36D243D9437C7C5D2DCE3BB711157B1
	E0D7A8A943DFECA771A6CB7DAA1A466021B1FE567CFE2338CDBEE704E3E330980849F3573573C5CEEC2279C46C54EB906A67A4D586BBD357C93E9BE5586F412B97E1FC3F5AB7A8D9158EF1006B3DB7685D03DA5059B1AD3D3F6BA373149DE823819681AC87C8825884A04CCDB4E78394G5482F48348GD1G7381628192GD64D45F8C86AAA8CE7BBA059621BEE48098E92964C7E362073596BC15E6639D35BCF75BDFEE337B65E69B0484A3EF00344AEFF57DC7D6497FD4B1A35D517D6E7668309665C872656C9
	79BEA6E9790A0127F1DAFC07DDDA3EEE6011274537BBC8DF94704C0F40C76B3F70D6783E76482D48FDED71AD753BE850C7BA46BCEC2F7C09DBE4CF585D5F6F13F81F7E3BDBD99C576243CF4D30F5F9507370C5E07732883633E75FEA2E329AE8C9BEC1F1B7D55CC640119C0562BEB10EF4A91C7761F124CB613EF8559A5E97EFD8A37B620855F85CA9346A471DA22B7138D3EA550EBBECBC3312B1E7G7AC5B7272B61389B9C57204AA438AE07CD31F3FC0BEA9741B7CBC4A1622F2AF60D2A38EE066B5060EE60B9
	8AABE9CF28321DFCC317BD97361275DA3FC31659B98A1546610266657E98D0EDF4F8C40D5DB2475D60EDE1CF57370FB3DD5BBE2C3D3B74F4B73B74F4CBA4BD5D17A4BD5D5BAEBDDD0DCBCFF754C05EB183F9E74774F475E3DABA3AA6977F30D360E30E5AD4941F6B5F9540E3D389747F811D3FD288B13E7827C23AA2EC230FB894E1177A8CA42FC17D000FCF917651E799F91A0F9E6561D7E1946188AB2DD3BF32D21427F92821214A224FB17270C186084DE00FAEFCDEE1F7704AA165513D9F48FA7074F02A10F9
	DE5886592A47AE3688696A6799DA059DFDEAFCCBDE2085416AF7ACCE826FC915372AD5C835922383F8AB415352F60FE8150044EC933DC32A045B42DDA16326E06E778E74298A94A17566791B20D63DA34566D6E13BE2A7798459C8D0043D815196B2133002AABFB937A97C8E7EBC6A9FD4EC8F2FD80B9A436BC7CED7263D78C8DA2AE0EA913651BE5DA218C847048A2A75EA915220CF2B324C822E99604FC7CC597997401A03302690E05F06F8CF3BF65AB25B9AF6EFEB63C3ECCF6B21409A064E7F66B69243959F
	02FC61C3B8075F30106F64074BBF5A1D22ACAB22BCD4673211DC24FECC118279656EB6A25F07B42C10163D26662C039A1E7F85D0CB8788A53D3E1A59A0GGECEBGGD0CB818294G94G88G88GFAFBB0B6A53D3E1A59A0GGECEBGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG93A1GGGG
**end of data**/
}
}
