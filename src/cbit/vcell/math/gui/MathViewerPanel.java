package cbit.vcell.math.gui;

import cbit.util.EventDispatchRunWithException;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
/**
 * Insert the type's description here.
 * Creation date: (2/5/2001 12:58:17 PM)
 * @author: Ion Moraru
 */
public class MathViewerPanel extends javax.swing.JPanel {
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private javax.swing.JTabbedPane ivjJTabbedPane1 = null;
	private MathDescPanel ivjMathDescPanel1 = null;
	private javax.swing.JPanel ivjVCMLPage = null;
	private cbit.vcell.math.MathDescription fieldMathDescription = null;
	private boolean ivjConnPtoP1Aligning = false;
	private boolean ivjConnPtoP2Aligning = false;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private cbit.vcell.math.MathDescription ivjmathDescription1 = null;
	private javax.swing.JEditorPane ivjJEditorPane1 = null;

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == MathViewerPanel.this && (evt.getPropertyName().equals("mathDescription"))) 
				connPtoP1SetTarget();
			if (evt.getSource() == MathViewerPanel.this.getMathDescPanel1() && (evt.getPropertyName().equals("mathDescription"))) 
				connPtoP2SetSource();
		};
	};

public MathViewerPanel() {
	super();
	initialize();
}

/**
 * connEtoM2:  (mathDescription1.this --> JEditorPane1.text)
 * @param value cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(cbit.vcell.math.MathDescription value) {
	new EventDispatchRunWithException() {
		public Object runWithException() throws Exception {
			try {
				getJEditorPane1().setText(getVCMDL(getmathDescription1()));
				return null;			
			} catch (java.lang.Throwable ivjExc) {
				handleException(ivjExc);
			}
			return null;
		}
	}.runEventDispatchThreadSafelyWrapRuntime();
}


/**
 * connPtoP1SetSource:  (MathViewerPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getmathDescription1() != null)) {
				this.setMathDescription(getmathDescription1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetTarget:  (MathViewerPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setmathDescription1(this.getMathDescription());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetSource:  (mathDescription1.this <--> MathDescPanel1.mathDescription)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			setmathDescription1(getMathDescPanel1().getMathDescription());
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetTarget:  (mathDescription1.this <--> MathDescPanel1.mathDescription)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			if ((getmathDescription1() != null)) {
				getMathDescPanel1().setMathDescription(getmathDescription1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Return the JEditorPane1 property value.
 * @return javax.swing.JEditorPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JEditorPane getJEditorPane1() {
	if (ivjJEditorPane1 == null) {
		try {
			ivjJEditorPane1 = new javax.swing.JEditorPane();
			ivjJEditorPane1.setName("JEditorPane1");
			ivjJEditorPane1.setAutoscrolls(false);
			ivjJEditorPane1.setBounds(0, 0, 160, 120);
			ivjJEditorPane1.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJEditorPane1;
}


/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			getJScrollPane1().setViewportView(getJEditorPane1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Return the JTabbedPane1 property value.
 * @return javax.swing.JTabbedPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTabbedPane getJTabbedPane1() {
	if (ivjJTabbedPane1 == null) {
		try {
			ivjJTabbedPane1 = new javax.swing.JTabbedPane();
			ivjJTabbedPane1.setName("JTabbedPane1");
			ivjJTabbedPane1.insertTab("Equations", null, getMathDescPanel1(), null, 0);
			ivjJTabbedPane1.insertTab("VCMDL", null, getVCMLPage(), null, 1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTabbedPane1;
}

/**
 * Return the MathDescPanel1 property value.
 * @return cbit.vcell.math.gui.MathDescPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private MathDescPanel getMathDescPanel1() {
	if (ivjMathDescPanel1 == null) {
		try {
			ivjMathDescPanel1 = new cbit.vcell.math.gui.MathDescPanel();
			ivjMathDescPanel1.setName("MathDescPanel1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathDescPanel1;
}


/**
 * Gets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @return The mathDescription property value.
 * @see #setMathDescription
 */
public cbit.vcell.math.MathDescription getMathDescription() {
	return fieldMathDescription;
}


/**
 * Return the mathDescription1 property value.
 * @return cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.math.MathDescription getmathDescription1() {
	// user code begin {1}
	// user code end
	return ivjmathDescription1;
}


/**
 * Comment
 */
public java.lang.String getVCMDL(cbit.vcell.math.MathDescription mathDescription) throws cbit.vcell.math.MathException {
	return mathDescription == null ? "" : mathDescription.getVCML();
}


/**
 * Return the VCMLPage property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getVCMLPage() {
	if (ivjVCMLPage == null) {
		try {
			ivjVCMLPage = new javax.swing.JPanel();
			ivjVCMLPage.setName("VCMLPage");
			ivjVCMLPage.setLayout(new java.awt.BorderLayout());
			getVCMLPage().add(getJScrollPane1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjVCMLPage;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
	getMathDescPanel1().addPropertyChangeListener(ivjEventHandler);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MathViewerPanel");
		setLayout(new java.awt.BorderLayout());
		setSize(433, 362);
		add(getJTabbedPane1(), "Center");
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MathViewerPanel aMathViewerPanel;
		aMathViewerPanel = new MathViewerPanel();
		frame.setContentPane(aMathViewerPanel);
		frame.setSize(aMathViewerPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Sets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @param mathDescription The new value for the property.
 * @see #getMathDescription
 */
public void setMathDescription(cbit.vcell.math.MathDescription mathDescription) {
	cbit.vcell.math.MathDescription oldValue = fieldMathDescription;
	fieldMathDescription = mathDescription;
	firePropertyChange("mathDescription", oldValue, mathDescription);
}


/**
 * Set the mathDescription1 to a new value.
 * @param newValue cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmathDescription1(cbit.vcell.math.MathDescription newValue) {
	if (ivjmathDescription1 != newValue) {
		try {
			cbit.vcell.math.MathDescription oldValue = getmathDescription1();
			ivjmathDescription1 = newValue;
			connPtoP1SetSource();
			connPtoP2SetTarget();
			connEtoM2(ivjmathDescription1);
			firePropertyChange("mathDescription", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GCCFBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BB8DD0D45739CEEBBACEE3DF680434A6E35EF30CCDC8CA72FC0DCD492B13B1F9365106F921949BBB05BEA712040E66453CB8AD4D2349E5F791B651C8A26611042424B589C6A422989151481F72334882ABAC7263DE60820BF7FF5C3D4002206F7B4E39676EE539F797CDE4661B3B67BBBF5F797E3FF36E054B7B5B322CCCC39E47E5E6F1725F31CC0EDBD54EF13FF8F24B9F982E7C33C4B3277A7B9860
	ED2EE75A844FFA684B3B18E84E65EE93F3205D836DEDFD09667F035FFB38E8F151B17821C34781FD09D1F7CE052763ECE4F432C97B85E9A7BC5F82F0G8E1F311FA17D5725FC993FD046B348B4G2E88473CBFD6A0633641189C401D8630955171A2BC6986EE29A8174775FCBF065B7EAB1FE1972E23DA13C13CBCF71B7CAC64DE4DDC329FE9550C6D146794C15B81004C9B3971B37B61D9E93DB4FCEA205FA9150C8F8822D8626225111261B1E7C5C5B37C6AF08A93024F4A3B85914577B92EF76BD88E194FF149
	3056B202FBA18BE958613797E051678CFFBE9B712970BB83A06FG636B64E715723E6DD7FE46A59DF619F66B70D5FC0072E3BB90642B5015E2F80F68607EA614F594742D82D8873095E0E7F12239986083227B150D1F43332ADF2A7138DC9EF71557DBAD8E7A1ABD0302883FABAA20C7463589839E5FA047D17DB60C95EB6CA79C50F91D57BD0F4AA4668853F5EC5BC3DC7243BFB0E4EB48A4B9660A2136184A2227B8A893CABBCA1776F471ECDB1CCD3B13D3530EFAE903B1CB03F6EC7286E3143C4E8A956D0D45
	286B6E9D286B35709B6761FC0A9FA2780203C1BC354B97094DE07B9074C59FE436E1FF0B6D45E2DA4E65167ED0D38ECB1ED8ECC8BFC87710DB923A1775446EAACBA84DB7153DBCC370BDAABC5DCBB741E3FB9A7AB681D07B7AC9B37AE96D9760B7G8100A80015G71G1B3EE0B6761746AF66E9E3D65EA7D50FB945C141475139BFE9FA971EC2C072718DEE3F443B87048E5E67647BC5414F49E3FE5E04B2681FB5EF8D317D8120F1D6F08BBEDEF2FA5C30BA6F92A4416727E356B73D0DE3FC826935B9DD8290F0
	F9B9366E2F1B7640D3647D52F96FA0AF894191347FF7CD2813F13E83D6048560B7154BFF1DC3F9F107924D79GC507189CEC96DC2FC970C140282830F8BC17463CB664048B9CC2B95FC7E2C7A57C369DE2B27EFD8B62D6C3BBC9D967D64BBB2AF5EA1D8338FD5EB749FC0C5F01F352E03C2914594DFF5B195D546EFA10AB5EF007265D9426ECB09616D2FBA9AF8D759F112C0BFBF31432B87FCA16DD4727987D6B71F56D1831F3079E8D236CA3DF078615F3C3AB6AEC816CF7A9406AD2A66BDFDA8A296DD673FE01
	D9EB0B8F8CCD988CCA1E6E73696CBCD92658B64BBE33CB61A30574A7415A99G7B8EA71AADG52E1A6CBBE5B9E221350F53E3EAC27888D238A1F95C2676B5020B2DB5D0C79CA98975CD22D60955C037043AF777DC7B352117DF948234CD9CF70DE707F9AF0B83F02FF3A99FD1417A41F33FFCC925A85C9F23A07037D4F90DA7E31FEEFB0F4B0DAFFE8C65EBC93607F4A784D4D68BB839E37DBA04AD326487D4F915F95C441851B2E710C39A50A5FF28E6B1BCB42249CBBDEBA3703C35F9747B08E511AE1A50F7273
	7A1CAEB0898CE55C564368570F0D652BE43494F0D87B2C01E752E1661F937FE07E39EF6AFEEE4DC52FC1AB47AC7951ED0632A354276A0F847D136EE9D30B765E1FA7B1C4467B69DE57BBD0EE21D50C110C7F70E8AEBC315629957C83BE279785D5CA7D64DBEDC8E384E8CF83C49FE1FE52EF45FE9613E487297108A295B35A7D9114454A9DF9B2AF3150DEFB044AA2E8BBAD2DC85BAFDC9E93A054E3F0ECD2E45E517ACEC8DF07ACFF5A5F570A7297D5F155D106B45F49E175E4C19925D7D6C6E318951E9F811E0E
	CBD646452A7A5782244963FA0E62387B4DEC1C69A89DD7G4FE2G4BD1D9A7DF6238270658381823545F579C25741364F151E41CEB180D933F24B1E1611741F5CBB8E6DF2F6CC7BBA2B569A8BF4E87CA7C93608B95950DC4F9347EAC9A4F1147EF7A12551936C954D97E31C473A1007AE34C66FE3D0B55195117E2B8F1DB12D12FFEF69C237BDDF8ACE8F36BE2A60C54A6625B1166DA68CBBA466C61F72D6ADCD76577FB861CA44D4A3ADA542636C90A7BDE5B9B709CF27A7CD283840DG536B6DED38DF4C43B2DA
	2ECB1EA135935AEC9A50ADACCFB45B4B911F170D3E0ABA26FC8E9CE1FCC6CD7D08F35CF11761CD9DBE1716D37ED6172B4E891F9EB5D2FAA7F2983D6D50DFFCBC51CC7D65736C5DF37DC57625DF6660DE2491271F6E65FF2ACE4B34629FDA4E45E5AFB6E85576A377ADB18C9E27FBD8FCBC3897EEF30AA18F006EA74B4C76138CE372AA203EA771E66F34BA5ED8G3FGE085C0DC855BF314D9EB4FF45DC4E55D84981FF3024DB97E8663E545899C57E348D351B98DB891A0CA994F5371906CA96F8FFE2466BD073F
	C5137745FF9CB6ECBDC1F94E2B8C72BE1D14E208CAE23CEF9FE275F18F0C092EE467363CD378A4F1D9711B6AF7CF42F3D810BAEA1AEBADC5165083DD73ECA91C58EFC177AA91F977F0C9BBA49E7770890E1D857E77C346433E5A95DC7976CB1ABC909E653DEFD771107F48D1E371A34C1EFEB04C64DCFB926269C9A6373F8E235CF85FF0A925B95D45E8AE08DF45656F791EAE4DD5A7A92D6413C11A754F2698FAGE87EBFB89EFA86AABE952C51CE1F1ADB2F513341BA92C3EC2768594028609389FED005273CDD
	18E43CC9503771942BE76F6EA0B16CAB70D5GAF40A2009800F5DF315871C17B91AE42F921418DE53C1B975BE7A5FED63737A3DD4855F2FBC33B5AA664DAEC874AA1752B795727F45E96B2AF63BA66D19D6E3F203E2BB03D5DE8B06A683078B4DD3B72F4D007D4F6676C68EF5300DF823092E09DC05AE9A6378B3662C8F2E3E7A7D9E014272A1CC8E7721C2A597C52F9AD916795074C23FC2C68A267C668F3G84G228162G12G522B98BFB1366AC87CD431425066D1FE560496F7EC3FEF1AEF0C4F77A24E4B2D
	1EBD0F461D77CBBE63A25DA1E15C2135970D5D66A9F56CAE2A26E7C19BBCC7GE80EEF1EE6B9FEC1B54B7135B368EFF150CEGC82BE6E70A0DB74873739167F1B5DABC176E7C10532CD16A861D1207141950CFF95D152966B59F562B859881182EE13C7E4518A36FA93A06657319B36A3AE5756E995DFC9EAF6FF1EBCD50172C71FF126B96219B6D303896EAA2G8740B440B20055G1BEA199D3EEABB91498E6B703083B6C84CEE2E81D2193EBA94AAD32EEE368C35F511B39CBA2FA424DDD02765E74F75A0FFE5
	50E7859881D88890833096A02D0E71E7B9DF9509BF656A44662981FCBD54589AEEA66FF7691C7D4E4F669E08BC6F0C961FC29F72D988FD15GB6GAFC0B440CA0024B30C4FE567A34693951F6162893D2F29A53576D6D81FBB8BF10C60BE8EA0EE9F34AB4FB29F7C4FC94C678E253D113431A623ED47E4687D860E0D14D7668B1446649C9A46EFE8FD84AA5FFBBB744F7D8FF6E81F7B9F6E50BE77BF5A71B645439A6ADBC1567FF8C778FB01759DDA77829F923EFFEB40D86903733153A59032B4F689010F29FD34
	0D392909A0E5FFE86ED46C6E1E0B284740D9E6DF97BB8FEB58978DFCEC911B407BDA06069463EA778A83EC4F9DF6FD79755A3565B7E057161F539EDEFE176DFA7223B2FAC15A4BE95C131C836F10EDE78F9748B14BE32C1247DA2A2C7DD017BE9FBF6D52666367DDF87674FB46FC83C268DE1F684AD77A024E58A089AE5C8E9D739419AFC151AC4C61B5114C27FDFA73FF5F05B9245FB9687449B7961447EA331AC754AF351583B9BAF94E4677778B03F21E23B92CEA0A3D930ABE4B72F55F953441F8E82782E4A8
	3121EDBADC8C4C2B1F9D970A20CD6B70B8127FAB6BE99D0EC0710F93FC3D8ACF6B734699765E4B86FDF1756C6C317B8D46EF1D64E98E72BBDC2743EF7B004FA30A33727A1FE7C26F3BB05695B4A41A8FB5303CDE1749E4D25F40E4F2DFA6390305769200158DCCA62F99D1A66B9A34E3E2B26037B5E86505E487564B2646C4F3A1C0B90095405B487CF566C244F3C6DDA04CB943532DEF67635D5AF6BE5D2DEF675F6E0EEC670B3B756D7C766E48F63E34BB3C5F2FFFF7B7099BFE3F60A7C5CDADAF7132AF148E3F
	49FCE14867F155144AF4DF6A5117431FFA3465105123AF87E3EFE4B96C6C5517431E5E48F2A8685513836575B733F9854F17F55E97C667FDBABA6F8B23733EF9683CAF0C4E7B662173BE6D5856BD0EF758A2BF69991360CC5B08BE689BE73E9B856D9800840054C6FA8E2131605FA6F03DA12814C0E4A401EDEC42396581B637965AF600G40920038A696DFDE2FC59FD7C549D23A477BAE6ED26BC34EB3547F4FCC050B0905963DBB0BC492E34BAC216FDCD3883E5E927A4EF5700AF22784FDEBAC2C26F3CE331A
	EEDFB3434593DCBD34FB1AD91CFAEC06D3767C246A37F5C66F7D55B7D75FB9EFAA8D9A333F384A4EE2A34DACE65BB91459B2E84781A4A832E84C8C273334E6BD1DFDC0EA330C6650FB26CF88FE673950FB2687B359BDD38174ADB84774335704FBCD05F60602F318189EF3DB986E56AC4415C13B3E056505D4073E0FEFF1E87B784B8E6DBA6C4F0E70F5586B8E3DB8C4793BEB1C65699E58DFF48B734167CBF03E120FCB78892922225A036FDDAC5421294E1EA5E7941C9F5F42F416BB01EB1A2C1013814A2C6CDC
	9D78141D2BE36FDD4EB936EA3F8F58E41BB1D82CD4FFDEEB70DCDD66CAB1D01AFD81C6B3967AD32D08DB9CD05F95233EB69868B91676BFB62B9FE502328D76EF1B55CFEA94233A7F6F136AFE14515D72FC4A5BD31FB05EB21EDA4909BFDD287B2DD0F1AB6549AABF23D26F4CDC18BEE5247652BB45ECE8D12BF21E3B0238D550CED0F01B898E5F9D611D86450DDE897551D52D73BF67A5C498CBE9FCFB8E0D6BB967C5FA171E5E0AB2D8203CDFC85558930D731BC9FC1478FE1BD3920553ED784DD85F88276C336C
	EAE8FCD85896DCEBC95B6CF5E35BD81D9BCF624D1A36507870DB02CFE88B0D8FFD9C0B8F1B202F361D79BD1F497498534E747331814FF3C9CA7BGE963FBBD5AFEB8F33EB19657385E98CBE9444F1B460D1C5F29EE0ACD183F79B14963A745BBC49B9B394FB0B13F5D8A7B27B9FD422464F498E38788GAC810833311C3E1C44D0814E3964F8CC56FAB40B2D3551466437EC4E3B07794964219B1C7742F54F233674AC090FDBED21E729AD841FEE8BBDCB3DBB41E23469FC22F964BCFB57D165C45945C3BB8D006B
	C8B46783148358BAD82E3903BF44C5B80358BCDE8BA4A3D115BEA8FF83019B7B166E71EC968BD77D7B83DC5CF7EAF56FCFC7BA289DAF121FC51B6F4C44A765AFE994790B033EA400F4005CCE2811GAABB99FFA93C7CCE822FC12AA4099F98A1EFFC15CB9527B091C4E3B1B95809B215268A4370E16D247B2176E776616FD93769252C6F58BF508EBBEA1AADD6FED8207969DE657EBC3613653EF53D6A7CD0F820C5B3BF2477CE99D2E55AB976E06E4B3DDCE8246BBC5D2DFE4F13FB17E84854D88721D21EDF2FDA
	074626262B6CDEF15A4E6255AF2E31F835CC41BDF70D5520EB6D4C4792B90CD989CABB1934713DACED8FF25FC41D18E0570EEF14464CB7C2C3AF3ED17B88E44E5FBE5EA76F33D5EFA0CA65730F89EDE008977D02629B4BA6547AABFF63DB1A5F61A02449B248E04F3DF7E5D27B3A5B446C2B2C0B55BF9BCC21754F4B1C3AFE494E8A2DFFB2E7759F4F8A2DFF2AB2557D1732C26B9FB61F721A102566156AA9ED02D3FE3F2C7ADDB0F1734FABC7EFAA8D9AFB9A1D7AF5FC2BD33B0E6FF4EA57713D4E70774D02D37F
	BBB451297E8E0D464EADA26ACB847BD884908B3086A029CBF967647CBBC76226C64C2C9B9C463B827C9AD6E274D3C675F9CD9D0D7C8D6D0B23786DCD3FC712BCAEDC1F61DF99C5FDC99EAFC1D2DC7AA84A48679C9E1168D0997F5AA85A3DA88C91B4353B6FCF619DC30D006F6B190FCD88AC56967C789E2E60EF278D4C5EC375382D0B7AD64105E00C8C5A500FE75D15DAE14C600570F597157D149B73D6G46C6834481A4G2482E4DCE0727F27CBC5706C60C7675E6283129E31088EFC3C53AD495FB620994932
	784D25CF746603869B61485652BFAA8CC8B6FE18E3F7AF52D5D6EB65F6533B17A2F8D6F653B3842D3D132F6507610F5659FF45CF18E53FBF7B8609FD41DBDA79BB3E87AE13EFF9E1EDEFB76379BD71C0981E2DBE0FD770C91394CB3E3C1375305C2456C3942C3722BB3C9EE45B9275ED76D5B1324D9ADD346E9C96EC13DE792EAB47057666999A728B0AEF6CF265AA38863F5563F762A59815C30A2F901EF1305FA400F4005C9E28E1GAA812CGA3BDCCBE7F628AE79374709D34891A231FA03546C2D843E9E26F
	8D1FA43825007B19D13987F46B4B623B6E4832385D2D6D3FF73A677A6FBF3B357DF705DB6D3F3436DDFA155536F1305FEDBD6C7EBE75AA2B6F0BFA593D42BB57F02C835A810028DEA637FF3D7C16BAF6D25311E9BEF2996320538DAA61C5679479C410FEF3C5E5752809498F739D45BDE6E272FBD959FB1ACFDFFEAF79A24BAF5D27AD3F57FCF365E774EB4B4F6CD74B0F625E7253F5FD4A4BB30A4F73E3FDC96FDE1BF9B75426189B685D8E7F694E20CCBA1D035288459784F68571758252D7E26172B967697965
	6115B7B86F0F57BD0F1E213EC3ECA426B774ECF59B412F6A8DBDDB65DFE37637867A767531BAF671B5CE594B9D2A5F9FDD3B79354B311BCA037ECF5E5EAB9867E3DF6432A44EDCF7F90CB806DF623248B70C72B7E5575435EA7AAD833A352A7D227C3FF397C33FA9EB1FC11B0D817C5A0B4CDF6F19BE4869672EF697AF0A92AFDE2AF28FE29E2B1E1404E09DE41F41757DEC0C5CA93F9F1F41FD0F2A667CBFD0CB8788CFD68194B593GG5CB8GGD0CB818294G94G88G88GCCFBB0B6CFD68194B593GG5C
	B8GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGEF93GGGG
**end of data**/
}
}