package cbit.vcell.math.gui;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.vcell.desktop.*;
import javax.swing.tree.*;
import cbit.vcell.parser.Expression;
import java.util.*;
import cbit.vcell.math.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class MathDescPanel extends javax.swing.JPanel implements java.beans.PropertyChangeListener, javax.swing.event.TreeSelectionListener {
	private ExpressionCanvas ivjExpressionCanvas1 = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private cbit.gui.ButtonGroupCivilized ivjButtonGroupCivilized1 = null;
	private javax.swing.JPanel ivjJPanel2 = null;
	private javax.swing.JRadioButton ivjJRadioButtonName = null;
	private javax.swing.JRadioButton ivjJRadioButtonValue = null;
	private javax.swing.JLabel ivjShowParametersLabel = null;
	private cbit.vcell.math.MathDescription fieldMathDescription = null;
	private boolean ivjConnPtoP1Aligning = false;
	private MathDescription ivjmathDescription1 = null;
	private javax.swing.JScrollPane ivjJScrollPane2 = null;
	private javax.swing.JTree ivjJTree1 = null;
	private MathDescriptionTreeModel ivjMathDescriptionTreeModel = null;
	private boolean ivjConnPtoP2Aligning = false;
	private TreeSelectionModel ivjselectionModel1 = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public MathDescPanel() {
	super();
	initialize();
}


/**
 * connEtoC1:  (selectionModel1.treeSelection.valueChanged(javax.swing.event.TreeSelectionEvent) --> MathDescPanel.refreshEquations()V)
 * @param arg1 javax.swing.event.TreeSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.TreeSelectionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshEquations();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (ButtonGroupCivilized1.selection --> MathDescPanel.refreshEquations()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshEquations();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (MathDescPanel.initialize() --> JTree1.model)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1() {
	try {
		// user code begin {1}
		// user code end
		getJTree1().setModel(getMathDescriptionTreeModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM2:  (mathDescription1.this --> MathDescriptionTreeModel.mathDescription)
 * @param value cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(cbit.vcell.math.MathDescription value) {
	try {
		// user code begin {1}
		// user code end
		if ((getmathDescription1() != null)) {
			getMathDescriptionTreeModel().setMathDescription(getmathDescription1());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM4:  (MathDescPanel.initialize() --> ButtonGroupCivilized1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized1().add(getJRadioButtonName());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM5:  (MathDescPanel.initialize() --> ButtonGroupCivilized1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized1().add(getJRadioButtonValue());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetSource:  (MathDescPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getmathDescription1() != null)) {
				this.setMathDescription(getmathDescription1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetTarget:  (MathDescPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setmathDescription1(this.getMathDescription());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetSource:  (JTree1.selectionModel <--> selectionModel1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			if ((getselectionModel1() != null)) {
				getJTree1().setSelectionModel(getselectionModel1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetTarget:  (JTree1.selectionModel <--> selectionModel1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			setselectionModel1(getJTree1().getSelectionModel());
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Return the ButtonGroupCivilized1 property value.
 * @return cbit.gui.ButtonGroupCivilized
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.ButtonGroupCivilized getButtonGroupCivilized1() {
	if (ivjButtonGroupCivilized1 == null) {
		try {
			ivjButtonGroupCivilized1 = new cbit.gui.ButtonGroupCivilized();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonGroupCivilized1;
}


/**
 * Return the ExpressionCanvas1 property value.
 * @return cbit.vcell.math.ExpressionCanvas
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ExpressionCanvas getExpressionCanvas1() {
	if (ivjExpressionCanvas1 == null) {
		try {
			ivjExpressionCanvas1 = new cbit.vcell.math.gui.ExpressionCanvas();
			ivjExpressionCanvas1.setName("ExpressionCanvas1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjExpressionCanvas1;
}

/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setPreferredSize(new java.awt.Dimension(600, 400));
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			ivjJPanel1.setMinimumSize(new java.awt.Dimension(22, 22));

			java.awt.GridBagConstraints constraintsJScrollPane1 = new java.awt.GridBagConstraints();
			constraintsJScrollPane1.gridx = 0; constraintsJScrollPane1.gridy = 2;
			constraintsJScrollPane1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPane1.weightx = 1.0;
			constraintsJScrollPane1.weighty = 1.0;
			constraintsJScrollPane1.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJScrollPane1(), constraintsJScrollPane1);

			java.awt.GridBagConstraints constraintsJPanel2 = new java.awt.GridBagConstraints();
			constraintsJPanel2.gridx = 0; constraintsJPanel2.gridy = 1;
			constraintsJPanel2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanel2.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJPanel2(), constraintsJPanel2);

			java.awt.GridBagConstraints constraintsJScrollPane2 = new java.awt.GridBagConstraints();
			constraintsJScrollPane2.gridx = 0; constraintsJScrollPane2.gridy = 0;
			constraintsJScrollPane2.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPane2.weightx = 1.0;
			constraintsJScrollPane2.weighty = 1.0;
			constraintsJScrollPane2.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJScrollPane2(), constraintsJScrollPane2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JPanel2 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel2() {
	if (ivjJPanel2 == null) {
		try {
			ivjJPanel2 = new javax.swing.JPanel();
			ivjJPanel2.setName("JPanel2");
			ivjJPanel2.setLayout(new java.awt.GridBagLayout());
			ivjJPanel2.setMinimumSize(new java.awt.Dimension(106, 30));

			java.awt.GridBagConstraints constraintsShowParametersLabel = new java.awt.GridBagConstraints();
			constraintsShowParametersLabel.gridx = 0; constraintsShowParametersLabel.gridy = 0;
			constraintsShowParametersLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getShowParametersLabel(), constraintsShowParametersLabel);

			java.awt.GridBagConstraints constraintsJRadioButtonName = new java.awt.GridBagConstraints();
			constraintsJRadioButtonName.gridx = 1; constraintsJRadioButtonName.gridy = 0;
			constraintsJRadioButtonName.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getJRadioButtonName(), constraintsJRadioButtonName);

			java.awt.GridBagConstraints constraintsJRadioButtonValue = new java.awt.GridBagConstraints();
			constraintsJRadioButtonValue.gridx = 2; constraintsJRadioButtonValue.gridy = 0;
			constraintsJRadioButtonValue.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJRadioButtonValue.weightx = 1.0;
			constraintsJRadioButtonValue.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getJRadioButtonValue(), constraintsJRadioButtonValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel2;
}

/**
 * Return the JRadioButtonName property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButtonName() {
	if (ivjJRadioButtonName == null) {
		try {
			ivjJRadioButtonName = new javax.swing.JRadioButton();
			ivjJRadioButtonName.setName("JRadioButtonName");
			ivjJRadioButtonName.setSelected(true);
			ivjJRadioButtonName.setText("name");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButtonName;
}


/**
 * Return the JRadioButtonValue property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButtonValue() {
	if (ivjJRadioButtonValue == null) {
		try {
			ivjJRadioButtonValue = new javax.swing.JRadioButton();
			ivjJRadioButtonValue.setName("JRadioButtonValue");
			ivjJRadioButtonValue.setText("value");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButtonValue;
}


/**
 * Return the ExpressionCanvasPanel property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			cbit.gui.BevelBorderBean ivjLocalBorder;
			ivjLocalBorder = new cbit.gui.BevelBorderBean();
			ivjLocalBorder.setColor(new java.awt.Color(160,160,255));
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setPreferredSize(new java.awt.Dimension(700, 400));
			ivjJScrollPane1.setBorder(ivjLocalBorder);
			ivjJScrollPane1.setBackground(java.awt.Color.lightGray);
			ivjJScrollPane1.setMinimumSize(new java.awt.Dimension(22, 22));
			getJScrollPane1().setViewportView(getExpressionCanvas1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Return the JScrollPane2 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane2() {
	if (ivjJScrollPane2 == null) {
		try {
			ivjJScrollPane2 = new javax.swing.JScrollPane();
			ivjJScrollPane2.setName("JScrollPane2");
			getJScrollPane2().setViewportView(getJTree1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane2;
}

/**
 * Return the JTree1 property value.
 * @return javax.swing.JTree
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTree getJTree1() {
	if (ivjJTree1 == null) {
		try {
			ivjJTree1 = new javax.swing.JTree();
			ivjJTree1.setName("JTree1");
			ivjJTree1.setCellRenderer(new cbit.vcell.math.gui.MathDescriptionCellRenderer());
			ivjJTree1.setBounds(0, 0, 78, 72);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTree1;
}

/**
 * Gets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @return The mathDescription property value.
 * @see #setMathDescription
 */
public cbit.vcell.math.MathDescription getMathDescription() {
	return fieldMathDescription;
}


/**
 * Return the mathDescription1 property value.
 * @return cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.math.MathDescription getmathDescription1() {
	// user code begin {1}
	// user code end
	return ivjmathDescription1;
}


/**
 * Return the MathDescriptionTreeModel property value.
 * @return cbit.vcell.math.gui.MathDescriptionTreeModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private MathDescriptionTreeModel getMathDescriptionTreeModel() {
	if (ivjMathDescriptionTreeModel == null) {
		try {
			ivjMathDescriptionTreeModel = new cbit.vcell.math.gui.MathDescriptionTreeModel();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathDescriptionTreeModel;
}


/**
 * Return the selectionModel1 property value.
 * @return javax.swing.tree.TreeSelectionModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.tree.TreeSelectionModel getselectionModel1() {
	// user code begin {1}
	// user code end
	return ivjselectionModel1;
}


/**
 * Return the ShowParametersLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getShowParametersLabel() {
	if (ivjShowParametersLabel == null) {
		try {
			ivjShowParametersLabel = new javax.swing.JLabel();
			ivjShowParametersLabel.setName("ShowParametersLabel");
			ivjShowParametersLabel.setText("Show parameter:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjShowParametersLabel;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION ------- in MathDescPanel");
	 exception.printStackTrace(System.out);
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButtonGroupCivilized1().addPropertyChangeListener(this);
	this.addPropertyChangeListener(this);
	getJTree1().addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}

/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MathDescPanel");
		setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));
		setSize(564, 475);
		add(getJPanel1(), getJPanel1().getName());
		initConnections();
		connEtoM5();
		connEtoM4();
		connEtoM1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MathDescPanel aMathDescPanel;
		aMathDescPanel = new MathDescPanel();
		frame.setContentPane(aMathDescPanel);
		frame.setSize(aMathDescPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getButtonGroupCivilized1() && (evt.getPropertyName().equals("selection"))) 
		connEtoC2(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("mathDescription"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == getJTree1() && (evt.getPropertyName().equals("selectionModel"))) 
		connPtoP2SetTarget();
	// user code begin {2}
	// user code end
}

/**
 * This method was created by a SmartGuide.
 */
private void refreshEquations() throws cbit.vcell.parser.ExpressionException {

	TreePath selectionPath = getselectionModel1().getSelectionPath();
	if (selectionPath!=null){
		BioModelNode node = (BioModelNode)selectionPath.getLastPathComponent();
		Object objectPath[] = node.getUserObjectPath();
		Object lastPathObject = objectPath[objectPath.length-1];
		Expression expArray[] = null;
		if (lastPathObject instanceof Function){
			Function function = (Function)lastPathObject;
			Expression exp = function.getExpression();
			if (getJRadioButtonValue().isSelected()){
				exp.bindExpression(getMathDescription());
			}else{
				exp.bindExpression(null);
			}
			expArray = new Expression[] { Expression.assign(new Expression(function.getName()),
															exp.flatten()) };
		}else if (lastPathObject instanceof Constant){
			Constant constant = (Constant)lastPathObject;
			Expression exp = constant.getExpression();
			if (getJRadioButtonValue().isSelected()){
				exp.bindExpression(getMathDescription());
			}else{
				exp.bindExpression(null);
			}
			expArray = new Expression[] { Expression.assign(new Expression(constant.getName()),
															exp.flatten()) };
		}else if (lastPathObject instanceof Equation){
			Equation equ = (Equation)lastPathObject;
			Enumeration enum_equ = equ.getTotalExpressions();
			Vector expList = new Vector();
			while (enum_equ.hasMoreElements()){
				Expression exp = new Expression((Expression)enum_equ.nextElement());
				if (getJRadioButtonValue().isSelected()){
					exp.bindExpression(getMathDescription());
				}else{
					exp.bindExpression(null);
				}	
				expList.addElement(exp.flatten());
			}
			expArray = new Expression[expList.size()];
			expList.copyInto(expArray);
		}
		getExpressionCanvas1().setExpressions(expArray);
	}else{
		getExpressionCanvas1().setExpressions(null);
	}
	
				//Variable var = getMathDescription().getVariable(varName);
				//SubDomain subDomain = getMathDescription().getSubDomain(subDomainName);
				//Equation equ = null;
				//if (var != null && subDomain != null){
					//equ = subDomain.getEquation(var);
				//}	
				//if (equ == null){
					//if (subDomain instanceof MembraneSubDomain && var instanceof VolVariable){
						//equ = ((MembraneSubDomain)subDomain).getJumpCondition((VolVariable)var);
					//}
				//}
				//if (equ == null){
					//Expression exp = null;
					//String title = "hello";
					//if (var instanceof Constant || var instanceof Function){
						//exp = var.getExpression();
						//title = "Expression for "+var.getName();
					//}
					//if (getJRadioButtonValue().isSelected()){
						//exp.bindExpression(getMathDescription());
					//}else{
						//exp.bindExpression(null);
					//}	
					//getExpressionCanvas1().setExpression(exp.flatten());
					//getEquationTitleLabel().setText(title);
				//}else{
					//Enumeration enum_equ = equ.getTotalExpressions();
					//Vector expList = new Vector();
					//while (enum_equ.hasMoreElements()){
						//Expression exp = new Expression((Expression)enum_equ.nextElement());
						//if (getJRadioButtonValue().isSelected()){
							//exp.bindExpression(getMathDescription());
						//}else{
							//exp.bindExpression(null);
						//}	
						//expList.addElement(exp.flatten());
					//}
					//Expression expArray[] = new Expression[expList.size()];
					//expList.copyInto(expArray);
					//getExpressionCanvas1().setExpressions(expArray);
					//getEquationTitleLabel().setText("Equations for "+var.getName()+" within "+subDomain.getName());
				//}	
			//} catch (java.lang.Throwable ivjExc) {
				//handleException(ivjExc);
				//getEquationTitleLabel().setText("Equations for "+varName+" within "+subDomainName+" *** "+ivjExc.getMessage());
			//}
		//}
	//}else{
		//getEquationTitleLabel().setText("no variable selected");
		//getExpressionCanvas1().setExpression((Expression)null);
	//}	
}


/**
 * Sets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @param mathDescription The new value for the property.
 * @see #getMathDescription
 */
public void setMathDescription(cbit.vcell.math.MathDescription mathDescription) {
	MathDescription oldValue = fieldMathDescription;
	fieldMathDescription = mathDescription;
	firePropertyChange("mathDescription", oldValue, mathDescription);
}


/**
 * Set the mathDescription1 to a new value.
 * @param newValue cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmathDescription1(cbit.vcell.math.MathDescription newValue) {
	if (ivjmathDescription1 != newValue) {
		try {
			cbit.vcell.math.MathDescription oldValue = getmathDescription1();
			ivjmathDescription1 = newValue;
			connPtoP1SetSource();
			connEtoM2(ivjmathDescription1);
			firePropertyChange("mathDescription", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Set the selectionModel1 to a new value.
 * @param newValue javax.swing.tree.TreeSelectionModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setselectionModel1(javax.swing.tree.TreeSelectionModel newValue) {
	if (ivjselectionModel1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjselectionModel1 != null) {
				ivjselectionModel1.removeTreeSelectionListener(this);
			}
			ivjselectionModel1 = newValue;

			/* Listen for events from the new object */
			if (ivjselectionModel1 != null) {
				ivjselectionModel1.addTreeSelectionListener(this);
			}
			connPtoP2SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Method to handle events for the TreeSelectionListener interface.
 * @param e javax.swing.event.TreeSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void valueChanged(javax.swing.event.TreeSelectionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getselectionModel1()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GD0FBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DBC8DD8DC551579AC36E90BB56D079AED5AE52D3634E29BEDEAE9250AEEEAD3255B943146CADCD436E2B76D26B56B26167D3C8C93831A9FE2D0139AADB53102A18804A4885190A089A8B184C68289C19E4C1B9F98E606B7EFE0A0E358F36FFD673DB743FBCC42FED93E6FFC6F5DF3FF4E4FBD775CF34FFD83A979DB623AFCCB89A1796B0872F7A01F90FB8FA1D75F7E73AFA02E6E2D0CA2227B7BBB4096
	D2F35E8A4FD628DBFABE2328189C8A97C2398F4AE5610C22D760FDAB499653EC70E2C2E7A154FD58F2F58CBAA39DC8E7BDAB7B27B740F39340G6068B379ADCAFF7E74B6859F27609172AD044CAB23ED3EB13DC3412D06B60500BB8850D1465B3B604999383C3ECEE9577765A43266DE4932110E239B93E11952F71572ACA54F64A714D3DA690CCF5AE797147BG287085642F15EF4173E04708737D21C137DCB9BEA4FABC1523026C2AF4865D757547612DC58C8CF588DE51C30A5F26E31510C256171095B04EA2
	065BBCCA4737413B87A06EED444F73D1FCB63C2F25655DA853FBEF9DD4F86EB977C312D9B3EA5DECA2D359EEAECB47EECD26D51E15166DCC7FB71D24FA0E073A45GCB81F2818AABE05E81DEE573FEEB475B70BCBCA8B77BC6C7FD5E43FEFF1347AE9D7759C58F3C5757C30D026B9407FC121D90BE37995395867C4C863CDF76C57763BAC95A0B731C5C79DD12757D2BAD6B8DF41215F44E52D841F551D3216904535ECE4CE807AAA26DB01276A92227DD715083856B8CE8375E73C0C13CB2CE220EF6F6851D6B4F
	B09BC803F75A6F85BA6F8C7FE5065F35C743F31BFC0961E939856A127620ED74ECC2DE5A2D5713626AEB8C7530706EF84B06CA4E432E4AE8DE9A7DF46C0ECACEF33B4A4B478C9F2F43F3DEBE4B6C141617C1DD42BB99C55C3E16F451B5BAD015D19486C8GC886C8874885482BC29B7BCB47BB97E8E39D02A4B7855D9E3BA8915EF749491761A906E4C9E87386E441BBA4F68B12DB9874088122347949C92A034108FEF7B35B9F829A47C42FA889325B67055105D1D19625GEFF35F49AD340DA432DA1BFBD48482
	23FE02635EFFF2ABBCBDC2C07E58EF97E4D1EB416B9FBEC967E4DC680691E1GC5C7DB4823B62A2F9D5599C535GAD5528076ECEBA5E0722846E223E3E5D679B897AEDD49212D0CD75DC45FCC78F3C7B2BD147ABBF263895D0DE2D0EF3C5670B3AF1DA5CC314FDC11A44B57679D1F06044DA13D1D48A5082B0G90D703B674079E3421160DB7130A872EB23421D43067449AEEBBA9B551EB699AC60372198DF5E4AF5082E85C0B3E7F55519E13355622704246D3F85357DBEB0C5762CCDFD2EBCAE33D32F6687BBA
	E59D6B6B8BE20C3FC91D4B8FCF51399CG3942G0B76629CAC6BAC65B65DA484C4346293929820E857E60473F954DF854F4D2C9FA1BB990E1017GF683507D6AG401BGF43FA987F8C515718C6B3B8468E681D8EBB30AAAGECGE1009BG528156G6C5887F38D605907F3906FCB1BC53E0D8ACFDB943EDED2689A355D99455FEE13F687AEC02F978BDC16BBE715E533B227C54AFC3F204C1F59F8FAF9B71A345BF289E46136F3C79765D79C973DF20B68973DF6F889A8F5BF6D22B2A87E4E61D37B5C4770FE70
	0F4D601082AA7ED7DD14CFC116A577E0D0963BC4D9F6FB1DDA7DC30CD6A0B86857DCAB524A6E223A72CD00FFD45B7FFB9775ADC3BE2FD7E4C62CF6D16A1FE03ECD74082340F433AF6815B97E77B69A7B0D08130AEF7D236DB9C2FD23A7C87DB40F27968BF4DE7C12FB941686F575A4E79F75FB4748B61D0E92GC7634294F8266FC31FB53193FD562E29EF1334CF7C9623BDF8610DD7DAAA76F37F5138DF73D91C2747BEB666BD1779D8859FA8E0380CBAEA9711919E37312DC492286DB485E55967BDA679027EE6
	77385B631E926D55EA1B52B70A61B92A74175CFE2A4CEADE370E6DCD47A36BEC12A832AD113709FB0E4D9BB045260155D4ABBEA92E0779A410CF86085F0FBE495ECD6BF1DFD01CD1334F230C81F5197B293E9FE13E9BF5F643FE2EEF661B8F507A673DD83F834A358734FA5E7FFBDEFD7F7883517D9FD66B53211C232B67FC1EBCD54CE49B8B0A301D538D70C355EEFACE3D98D5572D58902F9FB8C5ED48235BBBDB6AA84DEB7CF8DED8F3006FC99B6AB85DDDF51C76EA566E649836DB2054A7557176E9916DDE10
	305D41F70D5BA53FCB5B5D2936333D4B7D33871EE100C5G15EA3BAB8258EE6D3B5C1753F64575DABBFBBDED57A5E33B2AFACE37351E6F2F345D6BAAFF5B0358EE3152EE99BC33E95B86BDFF3FD35B15B4707D2222C1592B9BB8DDBE5E7563582E230153EBD45A39A24673CDE03B38863E6FD4685AEBF26C8CE13BC58D1C2FA58DBCBE206D289CFC5E1ED45BADD76AF39BA2670D7B0E274A691AE1E731E1E1DC88D586A6404F5557FF4016A6BFFB5D4262A75A3E76A01E31D69650356201F29C459DC4FF722B0DF8
	46CA98C9A2053F49ACB0BBB7AEB94879D8F1D073A7CB2E1EA860EB71DFFBA94DED6F41196ABDDC078F1F5247F90783815F101B05180A8DFF21C76FEFB86E4A1E676169F0CB81398DB604905A7BD5BD14DF9A03AAE8C59F5F5C3913684F266CC0EA641214B34C27C7757226EE7E547202093C875F63F2763D27BBD37E606982FE962876EED0FC5CA2284F845870BE45FB3D6C6CDF0F7A9D5A0B7496CC5DC8862E3A4E14DE477B1C0E7FFD0DDEDC493E82AEE7E9EB8D3910B3F8349745330B45077CA64178596FA33F
	07FC14DFEA133CDD9ABB7BD01A5B8EE594F5GF0BF7C56D8915179E1D57F8F33D8DE929D1298F09D998B32798D1415F7AB7A3EFEEBA37A406FDECF8ECE77DB0C4E7073B73BAC738FF139979F521D536EDFE9D98340F91B9AC3997220CDEDA37276A8433B3DEE59AD5039AEAB673CD5F95F0027E03717356B56CA656141GC495C3B2371286E0D561756657753C968A179B729A7F245362E964BCA6B4EA3C36E62E3474E5A22F3592721A85EDCA8E23FEF3D5FCBB60628E238CA782F49E8449D94D77961BC33F3724
	C23BDC008DCD58FE023517DD6EG67BD5C0B3C4FCBDFC236ED3D4210F746EB93673935C9633D64311516324710775B824863C2E8339C0073146AB662293099E58B4B58EF8760EC4D48EB1C1772929583A8BA7F53E13D4ED356479B726D7A56C2CBFCB367F7C93346F7BA701C2D725D94C47A56160C2203ADC87F5B41E87B60723CBA2C17C706768B81D255FE7787299D0D72E5242C232D63C8E3B934ABBC02B9321277691345F984E31F78F11CA35E77BE35EFA3748B9DC1BA5D93C67A61FD96CEE01F4550BE7788
	6A3ABD0478522399C5BDC7F12C0FFD1BC8F43C043C3FB809EBFB8134DF2676F976BC1D8399DCC697762BE412B43B842FD3341769D78F8B57ABED7A46C7A82A1C1FCFEE1B11DBA24734F3EC493119E7DA1EF3B9E9253C159D63B9178295FF06616BF4F8AE4B6385A8FFAB54A59F43BC4113FDF4FFACEE057D982085208FA08C302895772557FA771298F918B62F8C5B1660690AB8B0E0BE2417520598DFA9BF582B1FFB4E4729FEEADBA9C0B393E09500358D7672B664217FF4CC9E0E048CF960FABE6025FAEEE90B
	1DA3C0607D0E30FEFD97510F2F5372537A7C32F54B871682937F922F0C3D28CDDB27DCA7E4006AA48B70EB810ABF00D88120758354C952690AD8BA411C17228CAED321EFEE3AF859F7313A607D6E71C75B386B0348B162224A3CDF660CFE15D1652428FEDCEF5D820D8D5320AE8BE08DC07107307F81F4G489F227E7E6B74FBB1ED0AAED51B2F99F02DF0F6E80EBE5F2A3C4E9B0B151FB61671CBB17BA5FCE8A463AF86290C49D0378CA09BA08F20349D7CB840C0BB4AF874CC43854AF81849B5D3C24EE73DB4B7
	79DAE3761B57EE546F8FF3241797335F42A8FAFCBFFA39091EAD8C4E891D025D6D63218FD1728E2B1C51F90745B0E6A6C0AEGBFD3FC51D12870C40E232FBDEE27F3D687E59B0087E0BEC0B240B200D547F14E961EE90AB5E7EACA9A668DF3B8864649F5129A181BAE6F0D594F7AD1E4BFAE7BD3EEBCCF6D7888F30A1749F363E1C14CFE360F0C56475DA25535876A6683A4822482E4836481141EC0DD2F0A2DEBD54197226B56605C646C0E592F6E04115DAE363DE2EC37B462D06C75F3AE3D3DF61C60769A0667
	0293E82F1D43B8E7C9A7F04E360F4FCD1637E2764BBEE1546FD7F32477EFB17B2DB5247775093951CB0E592F384328DFE7E8EE7486E276ABB324777573F35BF713E7742B0CAAB7C6516377D03F6077D0D0678160386FD8A8EE811413BA502ECED9E91C1F2E1685D626B6494BCF96185D4FECD27A4D260BD840E9D82C33513810FB1E59007B16BF7519676B7F5CE71C2FFF364FB8DF3F6E6C960E07B174371DD83F716C6C797C174E1A6773BF69B7675351EF4C27275F18CF29FFF6BE277A4D78FC0D697D5796FACE
	1102DE59BDAA3221391F93C374DB9170461DC1AFF755F474C0F41CCB507F93A735296C8E7473DBBE29A1B37D7C913BDB76C9B808CD9424938E076A643B7C629072DDB8E02E234D8346BAFAE940D8C72F8E4C2E231D83336B6867AFEFE67D8381B140023796C196143AA7E4FA47B0639E66A30896881E337F47DF2434B9A27B1AEBD43A8302390CCE41D846D10166BF833E20B4A4C64BA18B5B54BAED43EC1345D14A8EEF73A96BAF8B12D31C2107B8561F5719753FC2B05395177507E3BAD90F6FD347FEF050DC56
	C7860DE54D99B41775BF86E34B3AE650DC563F8C461655BAB43B2CE312DE56DA957FE66085855F6110FC239D55CADC7095EBF49CCB6F6573E04D941F4438E0178B63583213189B3F51416E11209C82D8F0927DF6371B6E9BC9A7A37DF32AD2DEFEF2265F66F21D321B4FC53F5DF8AE6CF673399831471E8B59EEBE97676C3167A24ECEF5BA68363BA5A5434BF57DD4142EEB147DE62D5BE88F4FD1F43256C0B7FC3C9F49B8279D322F23DA65B1DDB457597D22314E9E924DF516AD4656591322394ED60B31F576E7
	51D8E753C13D5DD299394FF79E21BE4DA0366D9A12FC9E8F3D41A1F8663853055F4FED68C4BBF538291D36C0398FC06ED4630FE12339086FD43E416AB41B0B0E7148395D2B608BA7747C57286D9F1808ECDF2B60BF9F524F292E7DF93DDF566E04F3883D937788133E20CCC8E997156DAF6A5D779260B79DE08DC0E197DF43DCFF37B07A8EB8A9025A58E616477A5EE5413EAEA8078196812482E4F5297972EE2AABFECBD62D4C315539D16FFF14BD056B7FDEAB55BF653F45067A3F0C5DB707211CG10ECC37D17
	3B22753F542669FC853C2F32C54E814FEDEEF752714847BC3739DE453F49705BF4F81E733C0979A9DA2E023A040FB1A69DE5675335D05E500D385B982E944AD5AA6E55E10CDD8F2A384D4358AEDE457955F68B3BD14625B3E454C3EE37D9DE77B74CE6733A23733AB98C3F61D4F4DE5763D66F9020EE5EA964494BF84A01F21E0A4B9AC1BECBFBB0AF3EB39F3FE1ED81DC3887ED273375D5433557648B35F3C36473BE12DF2874DF520373FEAD9BF395142D3D99C5BBFA71EEAF748F3C5BCB7E6675A46F81633B53
	EC5B27165ADE65DB4CDEADA7CAC6D7DAB84DA7ACC8B3816A53FB59F70F857A3B892A0F9F9670F38B2FBF96D1CF77D17ACD12D6BF99D1CF79F5DB7575B7C554D39D6DD47AF3596EFB93E54B3BEFB1717CA04E74FB621253DC26BA6539A0675AFC7FEF278A385D7C520AF663D76A63CEEB3632905E13CF9B2D0D2759DACBBB9D3DB6AC3D943F62F4745A185F03EBE3B554594E200DB4B2BF1A8265F495F7279B6DE6350ABBAED2DCE3DFC6D1CF9F5A7C5F58BA74C0B99EA0C9456FE678E5FD7C7B867A6D82475F6218
	6D8C36C9996BE24EDDC98AED6D1CF7EFCC9A97FB56DB2F4C3F36AF44B17D70BBA4513E360F6A672BEE5C0FF27B50277E424D6E37E0E3BEF816FE877F1117DA4E123334FD4DF00BB2663C33467B8F2EFB3676218D051794FC52D9BE3F947858E3BEED6C4F29E367990C3DAEEA6C62FEEDECDA372BDF9B1B4F7D43AE34072AFE1C4BECA65BBC357CBBD64ED667DAF2471A073902C6730B170C866AE6AB39FC185AB27D18201386DD12A8717D78EB433827A6GBF49G2B812C1FF0FD73FD772991EC338370D5G9DG
	FE00851F28FBE37E5C3E0FBFB047FE7E0B6E477D4A88BB27AF7EC4338D0E1799BED507677E661F54FDE69954D58CE0CE5C6627BAD9G65E40025GD9GF9G5B84BC3B47BB69372C3366E8EDBEFFBB84439E5DF11A4B374AB2375F8D5C359E7D79129FFF0724FC364574BB148A014FF13B72ACFB7C5AFC7A6472BDB1C6658BC35DC200D400CC00DCGB20872E5BA15FBBC1A0EB8AC4B42100BFD6123A6B75C62040626019CDF073FE5B1D7890CD3B508FE39EC1A62DA205C23623EC5F03D06D55C4F98AE914AA903
	E8FBF9ECCFC807F28E40DA95DF48761062A17E7D823D73D76E2EFA746B0D36B753E94EACF569A6F51C4637A2E82C1FE55E564DD2E76663791ABE651A99DFFB551CF9AD485D8EA0834CD7F4407D6A2F5D68D79307E64A2077299416C01BE5C31ADF4D9A52568867434E4EC7902C3BC70323DD6EA911703DA44C765ADCE83FE688771241F27A9DD1174BB7217DBA21DD9894BD4AD857F552EFA57537D7B4DC67F5371C5A92D5572D5C45736FBC7A1D7AD827544EE5EE31A36DDB79BEA685C53ED692A774F75DF54FDF
	E6780DAD059EBB5713C7F9663DF4DDBE9F6317E774E394DF6731641B0CF10352F731DD0B8DF9DCB8245EE164C05D5F887FDE3B10E8FFFCEF8C48741D53FDF4832E739DB7FD0334BC58E259E9C2F7072870AEEAF473FC25851CF60ACA7B865108766AC31C766F0234446D67CFAE341FAC5158FE74B6349A5AD89D5CFEE8F91BA35AFEFE9220F64CEEFE2A516F7EF4984F873B20FD1F83637B7E861A8B3B606F631AF59B9E41B35F4691B58EF7E06C5FB042FC8814F3G729C18C75A6E4136A5CE0C590FF922E376AF
	1308185C939D3367C7545F64090E593F96D13F52939D33E3FF6EDB46ACC4FD1F523D5F18FF2962884D2F5DF1C9E970FD652C5FBCC7E4779B6708067D46B9EB3FFF767B05105F7CFEE15A2F7F3DG5F97FFBCCE67269DEC4185908F1088304409FB6246B17AADA23FFD0D5E8F0F581DB4C7C5FF55A52B7927B1F3D97FFBAC76EF4108C43F239D7401B79C2563A37EB996C748BEBFC3F25C8BAC4FAA391DAE19B7D570DBA4EA639E514150CA2E5DCA4F01FEC9F40812A45A19D7A70ADFFFF99DED3F9CE44EF222EFBD
	B4BDF3AF6AD6FF77DA6862FBD1A9BCEBDD7C9E375DC55B5C9171DB8863FD6E91E23C3FBC4D7CD4820C1368C2BE1A58F7173ACC1B729B046F6D5272C2B54A38DF5D9255360667179BFA0D6E1D5301C6368B738FD73BB0AEDC8B38AAB77A276A81FAFF2F669FAA0589393E7E186436B789CE1E0060FE6591977A95179BFD50861693C904F28A40F2B77A20752A0F4EF59B6F8F66FB467110763EF41228BA1D6F20FD3C62C4A932D9596286EB25BF6CAB2B2E5ADFD13A372A9C3FC5F718FC0B4EB6EE4E63D5CE6431F4
	98E36431A9F62F8AE5F998574775927DADD537B0BC73A68B109D124FAFCA72A447725D1D0F65B9C7D4FB4D155EB49B83D6598740620941E1B8535A84A7C13F650A481DA6GBFC943331F51B95DEB42F42FCB0536ABG72GCAC6B20A4AG9A81ECGAE00B0C082C0B2C09AC0A6C0AE40DA008D9E30FB8F4A1FA2174FA23FE2A84CC9C8021B3A89057F1FC470DF8B6335FAE6671F4F4BCE751B16BE0F717EEE3E674FBFCFD47A7799661E751090458F6F77D04CFE2FC715F93F97C766F63E7B9E5B4797FB224FF7A9
	8C1F6A09BE5F9D9ED14FF7D0D7B10AE70457BD97CBDF799D6E3839BF7F79F8ECFF1EB14EFEAB81FE58B669D76E9F9E9C273E5567F084C4F55F489AAFD6F1ED018EDF40CD439DBEEFB7CD53F9636B7C3569D2E23A4E77D7D5D51456D6D515F3DD1CD77FAF4082504332D174BF77CC232FA2DE74D5EBD85BBAA8F7G383C18ABDDF6D61FCFAC5DFD42B01F38766C14E51E175B4B8DDEADAE4D0538144BD01E2F49A0763CEEAEC3CDCDC5E9CDCDB95AFB007DBE056E97ABD4DEEF9759B950876B96205107F33CE856DC
	37F98C741DB976FB7C227BF15B1D4776059EDF34CDFF1E616D3EE81BFE510D7368073ACCD55E8D91EB314E8FFB30FFF69F427BDD67B462FBC069AB9B0C41EDF4FC0A3E2B3117F2D8D36E4F27E89C25FE2B4FFECE52858D3DCEFE4E1FE6FB5EFCBF170D636298AED14171F1EE8A1B2F37DB4331575B6DE16378692E704C78691E30F17C149E5647CF4A6FD4435467BA411F77286DFE2D62FAD55C43ECCC0ABB65364BAE957FA8630B62DBC5CAD07DBDAA63EB0261FA945CAA9D2ED7417DB1CCFD86086C72C9587769
	B0BD7FBA5C9E8FAFBF435A383D60C2D4FDBC4BF8F47B859D5F56CF91572B4EC526417CBC94B1BF5CF64AA26E0FD321EEF98C1B635F0324ED5D48F873383DE2B37F2F866A18BF98A16A7B9D3A77E3A3177E7CB3707FC0A3EE0E7FEB64ABF36CF75FC577637E47C5281F4971C77B25B106DF6D0F76CB4F287BCB9E548D0CE11CD8406EF517C2B99B40AAE5946DG2882E815B0EE7A4F69B2E29EB77148DA8B1B38DC21DE142B8F4671CB1A5D45417BC200E44968CE6A9DF67F1AA6C55FE53E4B704B25683B4C3BC44C
	D5E4C3DDCBG7D6DE75D1AEDDE29FB5FF649727D5A1CD6DFD29AFC3D6FB47081E591BE0063EEE1E703A450CBCAG7338AF2BF7B1CB83F8F6927E217B7D96F3079C3FA334D14323BBD446BE641E49C30BFB269F225E835FA7F46F302FDE723958FEC9E970753141E23E8FEE35445E87F7D80C7741B7ACB3774137AC467B609E0BFE9F64F3F1E5AF667ACBE41C7B91966316C179200A9B5BCBF183D08E293847AB50C662D5DC1595737FD9B22E33FD8E3A2F2DD64B07D839B808651F09BDCA7D251B63ECC6637F7A7D
	2D9970B8F819B3729EF691C5ABB959BDEACE568822F332354148FB585620662BF9EEA5054D1B8D7083C14C2DDC464EA103BE09FDC045F3BC570EE32EA49E5A5DG309CA08720D84D794F5F4BECCB989AF1CA3E20570EB492591C67C15B42F13C1BF82682652898B74EAD2F53495188EDEC63DAEE59B59EADC7AF339799707346111F3FCF51F5FFA4641744GBDC3B48B5EF1A1C03FDB62799F3FC31F7FC99E67326440F36D78EC7979BB2D5A7BE36C7F49F1FA83632544747CF2A0728CF6177A5B516289587FA650
	B77E6C2F6A6FFCF43FFF27D707CDECBE1AC4410BE72022893C431FB701E720BBEA6838A9D0DE8E108B4079FC27D06373B795D4EE1547E61F47A7D5FA68B2BFA68913FC6C5DFBB01FC0C2971BCFE869557463BC2D517D3AF8A167BB2E075BADEF1359727F51330ABAC9F220CE6AC22813F759779DFEA84F87C88C297EA2666FB20CF39D8F446CE71C6B108DFFA71192B277D7BC9E29594B6EACC25171D783432F88C547DFCBEBB07E4A013A56C91437EA0F1EFEB26053A6AF64DCF833E3B6F9B38D46607C5D4C741E
	BB994D77ED8C3FE6B21A6FC3CE641BCCE5945927F0AF78E2084E69B2A8E7CD21ACF57467368AFF07F56F7756DC7AFD7E71CBCA034BFCEC4F4CF827FD4F4C18EB29C37D76C9554D771D1ABED2F56FC71C17DEB77D17148677A35707280F9822EE0B207F7F91331112F399C52567704E61E1553F371F1BE9235CBF9D6DA76A387FDCB3A3D74EFCE3D9757E2A8A8AB57B7615ABFEA6DF4D038F1CC33DBF9711BFD98878E4833AB3677AB5A74E753FD89077069367FAF7BE7FFFDEDB4971701720BE7977E41DCC2CDEFA
	29CE56717FC4A5114DAA4BED6C1C1FBD3E373E6071EF94D808350DBC47633DB6E225C1DB9BD947E23AB6D2G71DE087EDFC02B9E82E364BC31DCA0D6A2AF4EF466073F745003491F3414D80885083BC4CEED5D848D7599BD6A9F07E7218371C77E82C2ACBDD8A2B432FDD9A61B69978525FE7C24207E8246C8859EB7C5CEE87E0D2FFC26784A3DC18BA9BCCA1EF3889E3FCBE8D3F459CEDE98E46A91A5E8AB13E2763FC65E013E6F303E8D6D44B29410492B9A1ED9A22F6D728BC3A2B4A9328B52889B013232798C
	A9F2C84EC1C6C0A616B3C74FGD9D62255DB5A4973320BDE995218CFA62FE8C3F750D32ED25140D4C71ECDCBCB73333F590567AAE325CD2CDFE262333AD2CE0E3E84FFFE5D1F2E466F3FB5227C51C7E1FDCB757F89CC6B3F0FD8FB791069B7960553FCCD6C180E7EFF8265AC7F5C83F8F99A73811367779073BB202ED1416311854F48E12F1D5E87B5CD4A22F667DBB9CD478FE09B2512576D1B26FC8F6B7A7CAFD0CB87882F5A756E179CGG0CD8GGD0CB818294G94G88G88GD0FBB0B62F5A756E179CG
	G0CD8GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG519CGGGG
**end of data**/
}
}