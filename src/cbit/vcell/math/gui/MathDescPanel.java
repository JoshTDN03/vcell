package cbit.vcell.math.gui;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.vcell.desktop.*;
import javax.swing.tree.*;
import cbit.vcell.parser.Expression;
import java.util.*;
import cbit.vcell.math.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class MathDescPanel extends javax.swing.JPanel implements java.beans.PropertyChangeListener, javax.swing.event.TreeSelectionListener {
	private ExpressionCanvas ivjExpressionCanvas1 = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private cbit.gui.ButtonGroupCivilized ivjButtonGroupCivilized1 = null;
	private javax.swing.JPanel ivjJPanel2 = null;
	private javax.swing.JRadioButton ivjJRadioButtonName = null;
	private javax.swing.JRadioButton ivjJRadioButtonValue = null;
	private javax.swing.JLabel ivjShowParametersLabel = null;
	private cbit.vcell.math.MathDescription fieldMathDescription = null;
	private boolean ivjConnPtoP1Aligning = false;
	private MathDescription ivjmathDescription1 = null;
	private javax.swing.JScrollPane ivjJScrollPane2 = null;
	private javax.swing.JTree ivjJTree1 = null;
	private MathDescriptionTreeModel ivjMathDescriptionTreeModel = null;
	private boolean ivjConnPtoP2Aligning = false;
	private TreeSelectionModel ivjselectionModel1 = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public MathDescPanel() {
	super();
	initialize();
}


/**
 * connEtoC1:  (selectionModel1.treeSelection.valueChanged(javax.swing.event.TreeSelectionEvent) --> MathDescPanel.refreshEquations()V)
 * @param arg1 javax.swing.event.TreeSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.TreeSelectionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshEquations();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (ButtonGroupCivilized1.selection --> MathDescPanel.refreshEquations()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshEquations();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (MathDescPanel.initialize() --> JTree1.model)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1() {
	try {
		// user code begin {1}
		// user code end
		getJTree1().setModel(getMathDescriptionTreeModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM2:  (mathDescription1.this --> MathDescriptionTreeModel.mathDescription)
 * @param value cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(cbit.vcell.math.MathDescription value) {
	try {
		// user code begin {1}
		// user code end
		if ((getmathDescription1() != null)) {
			getMathDescriptionTreeModel().setMathDescription(getmathDescription1());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM4:  (MathDescPanel.initialize() --> ButtonGroupCivilized1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized1().add(getJRadioButtonName());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM5:  (MathDescPanel.initialize() --> ButtonGroupCivilized1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized1().add(getJRadioButtonValue());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetSource:  (MathDescPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getmathDescription1() != null)) {
				this.setMathDescription(getmathDescription1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetTarget:  (MathDescPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setmathDescription1(this.getMathDescription());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetSource:  (JTree1.selectionModel <--> selectionModel1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			if ((getselectionModel1() != null)) {
				getJTree1().setSelectionModel(getselectionModel1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetTarget:  (JTree1.selectionModel <--> selectionModel1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			setselectionModel1(getJTree1().getSelectionModel());
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Return the ButtonGroupCivilized1 property value.
 * @return cbit.gui.ButtonGroupCivilized
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.ButtonGroupCivilized getButtonGroupCivilized1() {
	if (ivjButtonGroupCivilized1 == null) {
		try {
			ivjButtonGroupCivilized1 = new cbit.gui.ButtonGroupCivilized();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonGroupCivilized1;
}


/**
 * Return the ExpressionCanvas1 property value.
 * @return cbit.vcell.math.ExpressionCanvas
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ExpressionCanvas getExpressionCanvas1() {
	if (ivjExpressionCanvas1 == null) {
		try {
			ivjExpressionCanvas1 = new cbit.vcell.math.gui.ExpressionCanvas();
			ivjExpressionCanvas1.setName("ExpressionCanvas1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjExpressionCanvas1;
}

/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setPreferredSize(new java.awt.Dimension(600, 400));
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			ivjJPanel1.setMinimumSize(new java.awt.Dimension(22, 22));

			java.awt.GridBagConstraints constraintsJScrollPane1 = new java.awt.GridBagConstraints();
			constraintsJScrollPane1.gridx = 0; constraintsJScrollPane1.gridy = 2;
			constraintsJScrollPane1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPane1.weightx = 1.0;
			constraintsJScrollPane1.weighty = 1.0;
			constraintsJScrollPane1.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJScrollPane1(), constraintsJScrollPane1);

			java.awt.GridBagConstraints constraintsJPanel2 = new java.awt.GridBagConstraints();
			constraintsJPanel2.gridx = 0; constraintsJPanel2.gridy = 1;
			constraintsJPanel2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanel2.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJPanel2(), constraintsJPanel2);

			java.awt.GridBagConstraints constraintsJScrollPane2 = new java.awt.GridBagConstraints();
			constraintsJScrollPane2.gridx = 0; constraintsJScrollPane2.gridy = 0;
			constraintsJScrollPane2.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPane2.weightx = 1.0;
			constraintsJScrollPane2.weighty = 1.0;
			constraintsJScrollPane2.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJScrollPane2(), constraintsJScrollPane2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JPanel2 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel2() {
	if (ivjJPanel2 == null) {
		try {
			ivjJPanel2 = new javax.swing.JPanel();
			ivjJPanel2.setName("JPanel2");
			ivjJPanel2.setLayout(new java.awt.GridBagLayout());
			ivjJPanel2.setMinimumSize(new java.awt.Dimension(106, 30));

			java.awt.GridBagConstraints constraintsShowParametersLabel = new java.awt.GridBagConstraints();
			constraintsShowParametersLabel.gridx = 0; constraintsShowParametersLabel.gridy = 0;
			constraintsShowParametersLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getShowParametersLabel(), constraintsShowParametersLabel);

			java.awt.GridBagConstraints constraintsJRadioButtonName = new java.awt.GridBagConstraints();
			constraintsJRadioButtonName.gridx = 1; constraintsJRadioButtonName.gridy = 0;
			constraintsJRadioButtonName.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getJRadioButtonName(), constraintsJRadioButtonName);

			java.awt.GridBagConstraints constraintsJRadioButtonValue = new java.awt.GridBagConstraints();
			constraintsJRadioButtonValue.gridx = 2; constraintsJRadioButtonValue.gridy = 0;
			constraintsJRadioButtonValue.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJRadioButtonValue.weightx = 1.0;
			constraintsJRadioButtonValue.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getJRadioButtonValue(), constraintsJRadioButtonValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel2;
}

/**
 * Return the JRadioButtonName property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButtonName() {
	if (ivjJRadioButtonName == null) {
		try {
			ivjJRadioButtonName = new javax.swing.JRadioButton();
			ivjJRadioButtonName.setName("JRadioButtonName");
			ivjJRadioButtonName.setSelected(true);
			ivjJRadioButtonName.setText("name");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButtonName;
}


/**
 * Return the JRadioButtonValue property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButtonValue() {
	if (ivjJRadioButtonValue == null) {
		try {
			ivjJRadioButtonValue = new javax.swing.JRadioButton();
			ivjJRadioButtonValue.setName("JRadioButtonValue");
			ivjJRadioButtonValue.setText("value");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButtonValue;
}


/**
 * Return the ExpressionCanvasPanel property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			cbit.gui.BevelBorderBean ivjLocalBorder;
			ivjLocalBorder = new cbit.gui.BevelBorderBean();
			ivjLocalBorder.setColor(new java.awt.Color(160,160,255));
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setPreferredSize(new java.awt.Dimension(700, 400));
			ivjJScrollPane1.setBorder(ivjLocalBorder);
			ivjJScrollPane1.setBackground(java.awt.Color.lightGray);
			ivjJScrollPane1.setMinimumSize(new java.awt.Dimension(22, 22));
			getJScrollPane1().setViewportView(getExpressionCanvas1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Return the JScrollPane2 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane2() {
	if (ivjJScrollPane2 == null) {
		try {
			ivjJScrollPane2 = new javax.swing.JScrollPane();
			ivjJScrollPane2.setName("JScrollPane2");
			getJScrollPane2().setViewportView(getJTree1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane2;
}

/**
 * Return the JTree1 property value.
 * @return javax.swing.JTree
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTree getJTree1() {
	if (ivjJTree1 == null) {
		try {
			ivjJTree1 = new javax.swing.JTree();
			ivjJTree1.setName("JTree1");
			ivjJTree1.setCellRenderer(new cbit.vcell.math.gui.MathDescriptionCellRenderer());
			ivjJTree1.setBounds(0, 0, 78, 72);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTree1;
}

/**
 * Gets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @return The mathDescription property value.
 * @see #setMathDescription
 */
public cbit.vcell.math.MathDescription getMathDescription() {
	return fieldMathDescription;
}


/**
 * Return the mathDescription1 property value.
 * @return cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.math.MathDescription getmathDescription1() {
	// user code begin {1}
	// user code end
	return ivjmathDescription1;
}


/**
 * Return the MathDescriptionTreeModel property value.
 * @return cbit.vcell.math.gui.MathDescriptionTreeModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private MathDescriptionTreeModel getMathDescriptionTreeModel() {
	if (ivjMathDescriptionTreeModel == null) {
		try {
			ivjMathDescriptionTreeModel = new cbit.vcell.math.gui.MathDescriptionTreeModel();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathDescriptionTreeModel;
}


/**
 * Return the selectionModel1 property value.
 * @return javax.swing.tree.TreeSelectionModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.tree.TreeSelectionModel getselectionModel1() {
	// user code begin {1}
	// user code end
	return ivjselectionModel1;
}


/**
 * Return the ShowParametersLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getShowParametersLabel() {
	if (ivjShowParametersLabel == null) {
		try {
			ivjShowParametersLabel = new javax.swing.JLabel();
			ivjShowParametersLabel.setName("ShowParametersLabel");
			ivjShowParametersLabel.setText("Show parameter:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjShowParametersLabel;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION ------- in MathDescPanel");
	 exception.printStackTrace(System.out);
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButtonGroupCivilized1().addPropertyChangeListener(this);
	this.addPropertyChangeListener(this);
	getJTree1().addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}

/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MathDescPanel");
		setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));
		setSize(564, 475);
		add(getJPanel1(), getJPanel1().getName());
		initConnections();
		connEtoM5();
		connEtoM4();
		connEtoM1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MathDescPanel aMathDescPanel;
		aMathDescPanel = new MathDescPanel();
		frame.setContentPane(aMathDescPanel);
		frame.setSize(aMathDescPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getButtonGroupCivilized1() && (evt.getPropertyName().equals("selection"))) 
		connEtoC2(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("mathDescription"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == getJTree1() && (evt.getPropertyName().equals("selectionModel"))) 
		connPtoP2SetTarget();
	// user code begin {2}
	// user code end
}

/**
 * This method was created by a SmartGuide.
 */
private void refreshEquations() throws cbit.vcell.parser.ExpressionException {

	TreePath selectionPath = getselectionModel1().getSelectionPath();
	if (selectionPath!=null){
		BioModelNode node = (BioModelNode)selectionPath.getLastPathComponent();
		Object objectPath[] = node.getUserObjectPath();
		Object lastPathObject = objectPath[objectPath.length-1];
		Expression expArray[] = null; // for non-stochastic
		String expString[] = null; // for stochastic
		getExpressionCanvas1().setStrings(null);
		getExpressionCanvas1().setExpressions(null); 
		if (lastPathObject instanceof Function){
			Function function = (Function)lastPathObject;
			Expression exp = function.getExpression();
			if (getJRadioButtonValue().isSelected()){
				exp.bindExpression(getMathDescription());
			}else{
				exp.bindExpression(null);
			}
			exp = exp.flatten();
			//stochastic variable initial value must be an int, therefore we must make it here.
			if(getMathDescription().isStoch() && (function.getName().indexOf("_init") >= 0)) 
			{
				try{
					double value = exp.evaluateConstant();
					expString = new String[] {function.getName()+" = "+Math.round(value)};
					getExpressionCanvas1().setStrings(expString);
				}catch (Exception e)
				{
					expArray = new Expression[] { Expression.assign(new Expression(function.getName()),	exp) };
					getExpressionCanvas1().setExpressions(expArray);
				}
			}
			else 
			{
				expArray = new Expression[] { Expression.assign(new Expression(function.getName()),	exp) };
				getExpressionCanvas1().setExpressions(expArray);
			}
		}else if (lastPathObject instanceof Constant){
			Constant constant = (Constant)lastPathObject;
			Expression exp = constant.getExpression();
			if (getJRadioButtonValue().isSelected()){
				exp.bindExpression(getMathDescription());
			}else{
				exp.bindExpression(null);
			}
			exp = exp.flatten();
			//stochastic variable initial value must be an int, therefore we must make it here.
			if(getMathDescription().isStoch() && (constant.getName().indexOf("_init") >= 0))
			{
				try{
					double value = exp.evaluateConstant();
					expString = new String[] {constant.getName()+" = "+Math.round(value)};
					getExpressionCanvas1().setStrings(expString);
				}catch (Exception e)
				{
					expArray = new Expression[] { Expression.assign(new Expression(constant.getName()),	exp) };
					getExpressionCanvas1().setExpressions(expArray);
				}
			}
			else 
			{
				expArray = new Expression[] { Expression.assign(new Expression(constant.getName()),	exp) };
				getExpressionCanvas1().setExpressions(expArray);			
			}
		}else if (lastPathObject instanceof Equation){
			Equation equ = (Equation)lastPathObject;
			Enumeration enum_equ = equ.getTotalExpressions();
			Vector expList = new Vector();
			while (enum_equ.hasMoreElements()){
				Expression exp = new Expression((Expression)enum_equ.nextElement());
				if (getJRadioButtonValue().isSelected()){
					exp.bindExpression(getMathDescription());
				}else{
					exp.bindExpression(null);
				}	
				expList.addElement(exp.flatten());
			}
			expArray = new Expression[expList.size()];
			expList.copyInto(expArray);
			getExpressionCanvas1().setExpressions(expArray);
		}
		else if (lastPathObject instanceof VarIniCondition) //added Sept 29, 2006
		{
			VarIniCondition varIni = (VarIniCondition)lastPathObject;
			expString = new String[] {varIni.toString()};
			getExpressionCanvas1().setStrings(expString);
		}
		else if (lastPathObject instanceof Action) //added Sept 29, 2006
		{
			Action action = (Action)lastPathObject;
			expString = new String[] {action.toString()};
			getExpressionCanvas1().setStrings(expString);
		}
		else if (lastPathObject instanceof String) //added Sept 29, 2006
		{
			// to check if the string is the probability string
			int index1 = ((String)lastPathObject).indexOf("probability_rate");
			int index2 = ((String)lastPathObject).indexOf("=");
			if((index1 == 0) && ((index2+2)< ((String)lastPathObject).length())) //has probability eqution,but don't calculate prob string, since it is not a constant value.
			{
				expString = new String[] {(String)lastPathObject};
				getExpressionCanvas1().setStrings(expString);
			}
		}
			
	}else{
		getExpressionCanvas1().setExpressions(null);
		getExpressionCanvas1().setStrings(null);
		getExpressionCanvas1().repaint();
	}
	
				//Variable var = getMathDescription().getVariable(varName);
				//SubDomain subDomain = getMathDescription().getSubDomain(subDomainName);
				//Equation equ = null;
				//if (var != null && subDomain != null){
					//equ = subDomain.getEquation(var);
				//}	
				//if (equ == null){
					//if (subDomain instanceof MembraneSubDomain && var instanceof VolVariable){
						//equ = ((MembraneSubDomain)subDomain).getJumpCondition((VolVariable)var);
					//}
				//}
				//if (equ == null){
					//Expression exp = null;
					//String title = "hello";
					//if (var instanceof Constant || var instanceof Function){
						//exp = var.getExpression();
						//title = "Expression for "+var.getName();
					//}
					//if (getJRadioButtonValue().isSelected()){
						//exp.bindExpression(getMathDescription());
					//}else{
						//exp.bindExpression(null);
					//}	
					//getExpressionCanvas1().setExpression(exp.flatten());
					//getEquationTitleLabel().setText(title);
				//}else{
					//Enumeration enum_equ = equ.getTotalExpressions();
					//Vector expList = new Vector();
					//while (enum_equ.hasMoreElements()){
						//Expression exp = new Expression((Expression)enum_equ.nextElement());
						//if (getJRadioButtonValue().isSelected()){
							//exp.bindExpression(getMathDescription());
						//}else{
							//exp.bindExpression(null);
						//}	
						//expList.addElement(exp.flatten());
					//}
					//Expression expArray[] = new Expression[expList.size()];
					//expList.copyInto(expArray);
					//getExpressionCanvas1().setExpressions(expArray);
					//getEquationTitleLabel().setText("Equations for "+var.getName()+" within "+subDomain.getName());
				//}	
			//} catch (java.lang.Throwable ivjExc) {
				//handleException(ivjExc);
				//getEquationTitleLabel().setText("Equations for "+varName+" within "+subDomainName+" *** "+ivjExc.getMessage());
			//}
		//}
	//}else{
		//getEquationTitleLabel().setText("no variable selected");
		//getExpressionCanvas1().setExpression((Expression)null);
	//}	
}


/**
 * Sets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @param mathDescription The new value for the property.
 * @see #getMathDescription
 */
public void setMathDescription(cbit.vcell.math.MathDescription mathDescription) {
	MathDescription oldValue = fieldMathDescription;
	fieldMathDescription = mathDescription;
	firePropertyChange("mathDescription", oldValue, mathDescription);
}


/**
 * Set the mathDescription1 to a new value.
 * @param newValue cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmathDescription1(cbit.vcell.math.MathDescription newValue) {
	if (ivjmathDescription1 != newValue) {
		try {
			cbit.vcell.math.MathDescription oldValue = getmathDescription1();
			ivjmathDescription1 = newValue;
			connPtoP1SetSource();
			connEtoM2(ivjmathDescription1);
			firePropertyChange("mathDescription", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Set the selectionModel1 to a new value.
 * @param newValue javax.swing.tree.TreeSelectionModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setselectionModel1(javax.swing.tree.TreeSelectionModel newValue) {
	if (ivjselectionModel1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjselectionModel1 != null) {
				ivjselectionModel1.removeTreeSelectionListener(this);
			}
			ivjselectionModel1 = newValue;

			/* Listen for events from the new object */
			if (ivjselectionModel1 != null) {
				ivjselectionModel1.addTreeSelectionListener(this);
			}
			connPtoP2SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Method to handle events for the TreeSelectionListener interface.
 * @param e javax.swing.event.TreeSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void valueChanged(javax.swing.event.TreeSelectionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getselectionModel1()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GCB01B8B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DBC8DD8DC5515F10BEB364DDAECE9B72B594AE735E20B0A9A5B54D20B5BE8534A56349FEDE39BC33A4D565845B65528ECC53D8CBF99B21304A4A401C00070BB98828CBF8186E27899A2980298E8A49A8D837300B1434CB873C80826F54F39775DB70F613D19047D32FC5F795E3B677E1C5FFB6E39773E016494C5E6246AF288C94DA052DFF3AAA17691C22A7BFFFD1463E67F3C4EC094FF8781F612097E
	F4F8AE063A743EC4C3B67975E1BD1417C1F96AF822E19F3C6FA6B90DF1437022C1E7A9546DEAFBE8CBF0BA0F9E64F436507267730C705C8E9089B8FCA641B31B5C1617AB61D7CAF88E29BAC2621E43B65F4FAB10F0F5D06E85388C907E9CEB9F854FACCA79FACB0B546E6CCDD1E473CF26F55BF09C45189C744F333E555233183C101A70BC527ABD65937B58213C8CG05CFA37BEBAA6159BEF8FE720D71B107D8F3E1DCF0BAEB26ED62D44D640C43E2B989EFD641B7BEE8F389CEB23899472A592F27FD89490572
	DA0AFB74G0E9F816F51GABE57C11E244973F304E5082B078821769E8E53B447348275FA1E5BBEE4D5A21A153548BCC1670977CB2E5BF901519C7751FD10AFA0E073ACDG69AF2EB318GFA8126G72295D0DA52F4333F3CC6CF6CFCF3BDD1D9ECF17536EBD69368BCEF837D820C6421D92465DDEBBA14C36C9F955AA7C8483566FAFD75D0F69A42A015BB97A54BDE46D83B769362868E4ED54855D229719AE163E685789235D30DF0B760A97677A61DC5A6F92A56D75E419AEC305F64A3337686225F156ABE897
	3F0436EEADC4DB93F847FEB8F9987ECD0A37AB704CA79F27BE0365B0285B7892770D116D1C177E745BC83679CB2AFAD87A6FB7687A13998F7664C0DEDE24FE971E4CE866493C988EA2BEDE01E73C345376D8567F4FBAC382G732F6D65B8C7A37F324E908B10G1084E0FC997C8C207DE56EE3FFAD293DC29F9B34F9452E990753AEF8896B3B3DF4AFBC05D951EB6BF379C41BEBDCB8ED73BAECE3CE41C724B67BCAD187E3F37A95D05F9F879AEF8AAE41EB939DEE970CEE1B96C4416BE3ED4ACBF7E29B2FC0EB07
	9D538290187690BE6E61525D70F45AFC62DFBDF61BA878DB307A26D23449855BE998918610F4341334D5203E4E027CA2C0182C0798BA5E89418B6142E269F73B4F4FF806D1921270B26A79AD9ABB1642FB4C4BDC474D15084BCDD9E728CB6163BCDD3ACBB10E55B10E6C5B3C17789CBBD688811CD8217DA8C098C0A4404A946EC3FF9C61BEE45DF6B7297EC5382A8FF97EF80BEEFD8A731D64144039F41252C0BE0BDFD9E768G9885D8748A0F7DBFBBB022B15742A4DE70FDD462CDD9EFCDD11F0B73E3499FB4E9
	EC11668E3EE7C873D8D91F96E27C6D32AD6FB021ADA3C12ED800352FF09B141495B31F6E3279846E45EFFB4181853B5FA20C4F1462BAF86E207D88A925B8C276G9C8240752A99209CG571BAA00FD320CBB8FE25F4DC0376055F586AB0093A082A096E083007135F506C60033GE1G512FF19BF495478511EF1B4453CE092FBD92DD353625817C9D52E857FC85FA3DDAE0324C8415E507E453AC495E8649FEDA63A9655D2651EE67B5100579CEEEB972ABDC90DC22D57088AEBB3C78243A22F214C10AF793EE39
	CFB945FBA0BEF6C3C0724978C3654827CD943D0E3199D19892C451611A7457B7D0DA3E19B10FBF34F2DA16F254157BA244C7397D31F20CAD63EE17CB20CEACF7116ABBE9EC931C42B4B05D6D1EF1098C7FE68566FE6705CBD2ECBDD111C9B0B6BAE7B0CE33FCAA4606F671F89D53B0B5B05413B2027928EDFF2EC2C789603F1897A643538875ACE6DDAC65B12B6C133BC85C39732AEB7052BBBE2FF3C29FFCDFA4BDB1E6B11E5AAB55F96F22B1D6427B52A86E67AD6897F3B3BC66E33B0957063E53B5A30AEE571B
	DE770C275BF14161F4FCA2584DF21B6212ECF8CECB7D3D8E8FAA534C6AB25E49D50CAD558DFB8501AE092CCDD8A6359BB0C54DC0EB4CD2CCDAD7C5E39248379CA09E004971F0A55673F5C18AC65DEE27B486546524223EA3E86C66BA5BG7DF99E9EC66B63647A33D096D37D752C3FD0246C9F1F9A587FA6395E28CBB414697C750C4FEF193229EC9F4F88301C6382F8C2761B7BCD3B826ACECBBE446A9FB2218FB995EBE7188EE91EBC48778B0DD046B529DF22EB57B1BF28CB43F6DBCAF83B55D27DC629BDC9D3
	36FBC4EEF7B9CD3DDD92EDB7D34A5BC5C09963F3B4BCE381568254486D3A4BF83B1674C49A4B315DE03A3F5D6D6958AE2B1C377324B33A0B61096BAB36AB1479FBC2EE37C9EA274FG7EGBAB2147CC5D670F6430047754289CF3AD6E7B03AEC3C11CA5EAEBC0351DBA4350B1AB3DE390937DB89F8DCF71C0A76FEB91E145B2D15785A8C30C8EA07F2B03B5DDA455BE5E732FAD366DC3B315871FC954E993A977B48F641B6DB633B88F14EE2F90BCECD3677FA1C66CF58DE04B1589E6BA51AC7C76318084B647164
	E75B789EAB62FC9409CD3DC5F35F38B91371113B459FCF1C4FCF243139E8BA04B4C720EEEA8B1F07CDD54ABC2F5367F30FBBE80AA9797006AAE53CE138E72A3642F342617509FD30A04CF2FF7FD395720BB928041674710D52D2225C1B528D29DAC81276B0FFBBBEC75E9D33BA03063C17A5B917A964CD38BFAA136D851E267B950CD1EB21BEC71FE86857239D4B0A685EBF1D6BF73C01538B7F648EB27A152FE8528B57B3BAB1FABF3DE55F1ACCE3F296775613AB590387C6D13EF7D9D144795D886397E7F1FEDF
	207C22CF32F697685E87E90EC01BF0G96071FBA18C594F1D8567FEFCE210D3D4204D770CD75FCBCC36D6BB3D51D1674FD5B6E8E9E9F6F390D34FFF6C6273607DF3CE3DC37AA0B493DA94BAFFF1873EB7A25G0C373A92AEC37BD60847DBB9EF7FC2718E17C3F458505626AA46DB1D2B841EB63B5D542F18ABB51DE3BE48AA46C566A5ED402A446B5D05CADE7536C52A3CAEF9E6CC973D15711830554F2B6736F2FD98G63758FB22F8506C44330016B77EB259C3F84F0AB8DDC060CB234034DBBE9E6EB4BE74D4A
	35A5855A190CE0B3A3EFFF183697279CBE467B65B31C77C5714BC96E6E452A3CA30C9A994F0B0DFE5E97AFFFCA378C007168AC63BC2E01B6595B403FA9CF477255F86A5D46E52BAF677D4E82AEE29B6755D2043C8464G124E1F6BD46AFC45169BD4791E3A734B3A78ED0C5F4D5B7CFCAFC71EC7E233987DE4193EF5FB226172F6CE7FDCC520FFB0F9FE36DFA94FF2E83F86A0C56E77CF9568C753EC9AC9736847951CC6768E109D0079DA4E9B7824F99E6139CFD7A537916BFBDDA56F3B887A2D58416998CDEA7A
	E1FD86CC3C4FA6E8EF4A663A56D5F17CA86016E673318C455BC9E03E44F9DFD5456776EAE82F5F497BBCD80BB690A1E48C71FEB5D4126EA91BEBD2301B143307266BB5434A46BD082AE27B1355734E16BAF6A64A7B58E145BB87F666F21E4653A928CF1564E278990A1FD56019AC2F9C6072AF063AA4G368EF557607AB838AB5160848883D886908B30F697DF17AE3E5EC0C21C437439C4D836EC4E21B99B86FE9EF28869C20EAF154D071436E7FC5CD70B3E158CB4F3F6A79A2A812CG765D1C079507C27250B3
	2B4A83537333052867305D737529852C5F4B345F322B684766E955FB4A7365741DBD3AB40D7892AF0D3DF637FF1EB21D3CE7C61D9464A49ADAG868126G9667F01D682A2BC369041FF9C94AE0B2BDDC34B0DD4497DD2DAED83F4B8783FDBCAAE76E98AB834A52BD403CFEB581650D817D185EE26AB1B7A4FBA0DF86E884988490814281166F617AFB3B7AE8C81F4229BA6C6E86DCAF6C9D3A837737B22FC7CAC21DCF2B4BE88D59AFE10F1A0C150DA8E392546977C2FE82508EB08AF099A0F2AF17B1323A6D8AE5
	6C24F24D17107139E901723D9A32DF5CDE35FE3717AE0C5E7DA17B2D89204756233DDD3837D059A71C32599DEE167A90695C216BDC603943A698B3E79F2CB7GECCF716DE63D44D347BE9EEB6FECC21B4DC2B982A09AE095C09200BE97E2DEAE3759F355DD21ECA69FC9035D78990E0AF3B21DF84B96264BC5A17BD9F36776E332DF48677B2933D04F46EAA9DF988F47C3760B48D51B9F854D286BE828DB85309EA08520B88F668940E89E57757143A1F5ADAB78CAF47D6A8265B4D6046AB71B276637B1437B547D
	96B38E49DF7F3BC5692F61B08E7AEBACBCD767F1FF554BB65B1847ED76C4C81E54E5F9AAE43F627DEA7DEE28DC983D2F046C5722CAEF5834B0FAE3A17B8D2A5253D7AD0C5E5E107D2654652BDD583ABBB62FDFCDC0F9D1GBDF68F75B43B07023AE8G06DBD9003855D05E381F7B55470518679B73F979D3DAC61FE46534C22D7B196DD23FE03A88850CC6C1D09AD7F24F938CD8EC692F51BE2F9F2AD1BF2FBFD323FEDEFF2EE6A74343984A5BCEDEBFD9937CBC5FDD23FD1E7F5DDAEDBE63EA5579FC2CD61D4F78
	5A60FCA654EA71F9006A7D17BA5C27F8E7DC22E3DA20C333B8A74C6237A2900DCF4D38D8284651FD01F9AE61717F3D96742962FC9E674F57551379F13E476E905DDEBE4830E0733EBDB1A18779A10FB04E799EB3EB6B48E1D657115B2C2E2399F3F09D7D4D9CDCC7BF5E3B03767779849FCD5E2CB651A655BDAD629D433CFB18814896885FE7BFC04F2630CD0F686E2E1769BED42FAD63A3756AB27E289E4FBFFD6E996F3890A847CF6BF365BA7F0259A78A53488EEB73AB5ADF34F9A705F9FAD8C77B33BA2D7ECF
	57EB690A49BADD221075E413BC3639D1DB5616C6F5D95FE854163527B1342C830D5A327E35B1342C9FB686173532D4A9EB230C7FCD29C1428FCEF85D5303E6A9AF08AE8C4CE371DE3E9D664CE0BE4F8BBEB947735829FCFEB65E18CB6F11203C82E0359C472F33603A31B1A0BE27C8656C0279F11B49F5DF1336ADD6B4295B6261A6EDDBBC5A945A96BFED523645AF1AC25BE2DD936AF44CE1F7F82593DE266B3B4A666A3ADEDAEFBE4DD7DB434BA41D342868060D67AE67B69D945D03E619470AE6ED1D9DEED657
	D9C333364EAC4D21F5565D2C2D33371AC36BEC28D9DDE7CD95CA3FC599D94C1F6C411826125B8E0DFB5DCEA75E60903E67A8ED655F4F7597F0BFAD580FFE9A8665E5G4B8B381FEED335C53CE403751A36482C1CEB5B86897FF025127FFA397D97CCF35BB7CA78E3D5CA1BAA5A57AA63327FCE78557DF8A76E34DDF24F08040C9E40393BA71F4F5D4D402F91F00DG3DGB807197E6E3B0874A7E02788EA230BD9FBA1767DCD816F9B856DE381568224G949472B34E0B27D1D76C164CAC5978C3FA37AD479FE9CD
	E17A5FD0087AC77E438A397E1B2C287FD8A8A7GA495F27DFFF6AED07F69C5FE1D6742FBF551DC9B30334DA89AF7BA0A58596696993F1C62C794F8F666E921F8ACFB20AE21086724CBAD48EBCBF122213F1863FECBF123D076483863EDBCF73DAC633E144F5B454B386773F93BB545DCC6D3EB301C5DF4D06BDCB71C7AEC7B4140F35D1BA93E7FE06039EE49FE798E816A628EF21E4AA8CFE5A5305FAD11F917F3715192FEAEFEB41FFF439A86385892FEBEFF2AB7DFF56EF539E77B19A3B23BDFCF69E07F4DA55C
	6E8F50B12BCB938DD60033257CEEEF36025F6DC5FF63B692734A4D2AF7276B07E7F5E2A9534F52D27F19E85983D1190CE66A81CEB3816A0DE56853358714F793280F6F2431FD8B2B374D2947F5943FC97257FFF9CEBD726BC8D756BFBA279EF5D4AA75E732BDDE4EE5CBF9BC06B89F7CCC73DEF8380C49B4ABBD633E9111FAFB7A3ECC66B74F94F23F09116AD71679FDE58D3CA715294D0D3B68DCA36501F363C10A4FAD8F1C9BEDD6BEB76A20AE221C7B48D769FA1F8CE5E385476D31F13F2913F15FECC15CA2A8
	AF2D60BEFF8F1DEF51D00E8758A8639F22F8FDA57B3E813FDDE0780E5CE0FB306D52D8D7336F5AA851766F734E0424F135FB3DAD127D7D6B423DB4F630BBA4415ED2097E7218052FC726CA9ED313AD74FE8B96664B000368FB8CCD3619367F204DAA0D99D7293E7E70F9CF67BE34C158A361B7D6B27BA230319F6F700F3D35000F5DEE1ABFF6C6405803A67F58D8E7B77947E636BF564A7D41E362367C6AFE14ADCEAEC752B2FE3FA145437D216C30D070536C3CE6B438EEF613B69A5B70E302D318F4F985AFDB0F
	076475B88178C982282B0278D745744D565D3B64F577AC60BDG61GB1G2B2B388C5D2A39C9A8FF5CC95ED9E03F4FDFF5BF96D72EAFC0BDEC2A727B86435FC871A98ABC0BB75F1557997D6B0986676B7CCC7C1ECE5449EAA8A781249F029C84209DE064905F3B7F3E853FE58DFAC6BB6C7674C3B26CD4EC2719FC198796763B01C73670F83E7C21EF12957FF8CC73BB9467A1E663A552F3640E08D4FCB279BA3BD13ED828DB83108210D31DE8B081F4D4F379EADA25FBBCBC0E6894C55B78947D42C7BE5CF08897
	7DE8CC6458BCA4C5B88F07E19CCFB50F4B9EBD6242203CD4467DA90B4F57D89937E3AB6256C3B9391A7B5E3DF4CDB09ECEB41481349C66786FD17C60E1767D825E79CB734D2A1CEF58DECB27E5C16A0C9AF50C46FBF3E8EC89E2370CA0F5DAB11E4D693B4F4D4F2FD74AF7BCA2703784E0B940AAC987AC2ED65BF8DCDD2FA203B226A2EC06B67A9AFFDCAD28714F914647A3AD68E3102CBB26E726079C1F88042DA5CF523556846D9BEB78DAB2C63F959B1AF2DF747FBA215FB6A6B82531EEBE055FCAAAEF2FB0DD
	E7F5773D3BB3206E34F4974F3E73F8B6D7196B0C56B01943E45ACF31F54CBBA3303992F9D1F9575D3275EF2A5F58A2AC2DE1FA0A161E55EBA2D25998CF3C2F9CA37B66C9DD2A46989B243E1BEA7C39A14B8BEFEC63F798E5350906A2423E5756937F9FDB9B7F23875F995D5F9A79BCAF7856570975D747F4259AF44F56CA3C577A692EEEFED14FE83795F05A9BD4E9EFBA46E8DB5F4492731F532D5CFF8A6A547DC769C3F55046DA477C874BA3F5017E73FD9F7AB13D79B173387BE9BE5F9F58217D32BA1E5FFF58
	06E7E1D77CFDDC37E241A3FC4F77C3B977CF2863397F1FA9BD2399E288C03B191FA3BDD1405B8E1BF94E7ECAC1E04EFE93D1665C3573F276D4221D5323BD7F0DE86774990A7EAC36FC01FEA6405EA3946FBF483FD6F904BF2E2D3926B4583A721DCE6DB32207BB554F08D6F62A1FD97F24B3787D424FBB356F971E6CD47EDE002D0BB93DE81BA5608BD1G71G6B81B61B791AB859055FA2325B5740753047BE09E7D4782BAED1BEFF6A5616751D6E503F85FB2F9B3F239DF3C3B41C4671B9FE349B6DA53ABD9449
	F0C2B76A486B181C92D9D389FF3E9BFD5CA9CCD0B41B137B0AF09F68718A930257AB58E9D4A7D2DC2F236BF7F6BD64BC75BC365E201F3F96FDCD4F57225EFA36960D42D32CE77738CB6A31CD66D665D92E7ABAD731D5FDFDF903668289B04EFA190FAEAF4EE345C91B749B04FB4B7C67C2755238376C8CE8DB4F4E177FE8D53BF7B6B6A49A0A9B7879C352B91E9736G4E53406313F994A724FC7ED0E33BA8DAACEFFA9D76AE5BA4BB00E0F125F114471528869E0346C6F14C75D0CE8648EE64B168839B0F5126C6
	7575C1FB4D38334F7FDEF80248BA5D170BFDDC4245E24EE60D55815E0ABF6CB3196B0ED497B754D571EF51A7B43EC5278BB76331AC0F73B85A48F36447CF50FBD5A8AFEF6473A3259BFFCBF55A76517C1BACC08EFA5D9E41ABDEE2D8363A33319E6BA7323FF6D94B354600D9769630787658C730279D36CD929E373E5C264C2793001F0D0D4177680C6E1FCF62DA1782EDF31BE0DDG98861882D88490819085908B10G1084C00EC02E8CE082E881688798BD42655FF53CAA087C122350A06135B9B0CCC87CF794
	A87997E13C45C702734F6CF2C3AB374B32A36A6B3B761A7F1FEF93197EF5A177DB89817C30FEDF8C592FB0204C7A2DDA607ECEE07B3BA3017BBB975B5F9D895C5F3D645F5FB5437E2E196F91928A2E163E74BB5CDE6DF8DE5A9BBA1ED777525FCAC09C9E3E64116E9F4C3D98DB5D9393BEC1DEB70E74E64B38BE5F205B6740F40759AD639D349B1B67023E18E84E73A3F5F555450DF5F5D5CC970F6939AED6039E74ADBC7EEC4F62312A2305472A76AC7A3DAE14438122DA78D9692A8F14670945075ED2BDCFCC7E
	E0C69757427CE5C30BBFAF0D053C14497039D3FE99F22D055AB25457D7975757D7F1FF2F68C1DEF13D48ED653C9EEA257BC0A8CF81ACEA65B6FEEE5EF97E1565C0E4F4E17DDA2F3A9F735DDF52F5E1E9EB20CFA7D27C6D2D01BEBDB54A6D9883F5B996AE6F18CDC9FF9670CBAC41E3886BD7257ABF8CA2253E4BD546E0BE3A7A843E4B391734D9136E4FCFE09EA5FF2BCFFFCEB2848DDD1352B9AD5D932D32B059986EDE0ADBAF6158B899835A734DB890FA3E6D99D04F1F72876667CF45836A79D34500B2FF12FE
	27BA00B1F7926279085C2ECE461D11F1CDF4CC443D6B300BD3B23E0D720578DE81894A3FC725FCDD24389189F7DC01BBA361CE8CE04CG11275CDE5EF7F0G773F938E27131507E99B078BC2082C0FB314C7074726607BC399F7C636453B85736DF336C0E99F66BBCB665CA725C0DDF6DBF01FE35F03446D5EC6F9F3BADCC2B77B2F8672186795FB9ED1717E4A7F437EE7EF413527912FDFD8FC7975827B6D4EDAD8DC0A21EBC0D9DBE0DC7AAE4557358546252EAC9E175A21AE320D67099F8CE1FE195E8E79B500
	9560AC0087E0F1BB4F1B7A5EB1916D3C09E5567E340949F528074B358C4609E9777B5DCAF8DF8310542EF6A7F5ABDDAF4851403B4C3BA8BE7BE860DD2639151FD594C3DD58D19EEF570E7AFD733F946F2E51EB6FC3B7DCD39AEC3EDF324D0F81FF37A9E3G43F5503D41C650CB72D1FE0EFBC79EBF5BCDFF036F1DEC4A5FEF51F0487085335B7CF89E8E25313F5EBA1F07285679F1685BD9FE7D7FC0715E1BF56DEDE13B26B4587C189852DE872707C22F0397065457414BC37357416B065457419B06146BA033C5
	D78FBF6B9FFE035B7E1299F1D3D03EAC635AE69097896595B26E8F866EA371B2EEEC0C1F7F979C63736C0ED6DC576A64723D34BCA8171BDBC7247AEBE763C1CA637F7A7D2D9630BC785D3C397730AF62FFB0134EE4E3732CC17A871E490A47665E43AEBE660F556CEC65BC35DB8460A30F713315F0F3A67591AF7D000A1D715CE966E7A57150EE83C0F6C722218CG6FDDD83FD3B35437EC6367A73D6E99171D5378085A3C9D5A76F6703B09D4A317435921FE361C2110E391340968701FADC7F5844A71856AAF4B
	819F574179B978891E89764CFA3C028F77905DB657851B8F3FDBE267BF6BDB1567BFC912ACE51D301F6F8CF6BE1FF75A7F5E7EAE116D66B297934D7DCB735CBD5893E63E168C822D451DBCB67EE83F7CBB9F456F5F716A300B5A23CB3039789EE8DFBD3F430F6B64FB2045A20E1B8C656C2EC40389007139B24B4F67EF8DA8374CE3375B697656B8F11A3F6935DDE2E3579B79F9C2C757551EA7BC3D552F1F2DC6BF5D6D2DD7323FE3FA781E6EF5926C7CBF502ADCA73972F78D33DDDCA7F7D9100998A82F82D85F
	456345AF4C8BBB6B78DD48FE6AE79D7F502056AF39CBBBDE31FCA4055A54589D18FFE54C50EFE73A83732F9BC51EFF15C15D62EEB9BE9A157413GCF2CD732AFBCE089A6EF0E4A980C3FB4FAF6EA328672ED2478C6EBA05F77DAB85F9DD0F73B152F857F5A00B6557740DA5043E5514D9019BF0362BDC23C766B7C5D57148613F940B8BF5F99B24E4F399AAD7237CF32EE324E797531CB717E20655A6B66275714860BA3B18D98A346B1EC919E7FFFC4FDE498F4B05A436F9CCED8F8FCDF52B35FC7D9FCFA8653A9
	E95C73623C33F29A9BCD66A3F5558875CDCDD5D21C79584263E3242C778BF366499A40A729501DEF6BFF36F0DB7FD047F1DF32F0DB9FCAE57F4F8B723137EE047A68E7C906C852DDF829CEB258FF2272129DB24BFDF41F3F7EC203A56DF7DFCF531174BE1249723DBE120EC9DB9F4920B9DD9FC903FCEF967FAFE03A92FC9F133F935D95E23DE4577CE05EF963133F0ABEE74D51919D901F9298350C0B186AD3FA989FBF8AC287720F54F0C2F4A33CC4B0335DAB129D78C5C13107FFD2E03902B1E201476DF38D1A
	FA473E4FE5FF31E1C6C77447C966044D69193275C93A6CA706B12A9E418BEDC512CD7F57C8AD742D25FD5B7A09EE5CA712FCBF1EFAA22B9D72584685E812E537F94F539110159D6F132C896F6498A5A0925D7B475F8732340455BB7B49D6F18A2F8CB1679349BE7F5003384B15AA5A286A48EBF1F1F19E7A97DCF826B2DA5ACE7BC5C63E26A8ED5820AC411FC771272871F86E1FD39E98382CECA97FBF014F145FC7A4DF7F2166B7963DFDECCE1C6D8B7CFF829F1C2477C800DF5E474F836E6EBFCC346F000626ED
	CE27E8F31E6FF45971BE286B12A8786FFC47CE6278BE5EC62A14FE93F592797EC85167FF81D0CB8788B63BE59D639CGG0CD8GGD0CB818294G94G88G88GCB01B8B6B63BE59D639CGG0CD8GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG9D9DGGGG
**end of data**/
}
}