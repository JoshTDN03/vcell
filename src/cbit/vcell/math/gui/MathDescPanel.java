package cbit.vcell.math.gui;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import cbit.vcell.desktop.*;
import javax.swing.tree.*;
import cbit.vcell.parser.Expression;
import java.util.*;
import cbit.vcell.math.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class MathDescPanel extends javax.swing.JPanel implements java.beans.PropertyChangeListener, javax.swing.event.TreeSelectionListener {
	private ExpressionCanvas ivjExpressionCanvas1 = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private cbit.gui.ButtonGroupCivilized ivjButtonGroupCivilized1 = null;
	private javax.swing.JPanel ivjJPanel2 = null;
	private javax.swing.JRadioButton ivjJRadioButtonName = null;
	private javax.swing.JRadioButton ivjJRadioButtonValue = null;
	private javax.swing.JLabel ivjShowParametersLabel = null;
	private cbit.vcell.math.MathDescription fieldMathDescription = null;
	private boolean ivjConnPtoP1Aligning = false;
	private MathDescription ivjmathDescription1 = null;
	private javax.swing.JScrollPane ivjJScrollPane2 = null;
	private javax.swing.JTree ivjJTree1 = null;
	private MathDescriptionTreeModel ivjMathDescriptionTreeModel = null;
	private boolean ivjConnPtoP2Aligning = false;
	private TreeSelectionModel ivjselectionModel1 = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public MathDescPanel() {
	super();
	initialize();
}


/**
 * connEtoC1:  (selectionModel1.treeSelection.valueChanged(javax.swing.event.TreeSelectionEvent) --> MathDescPanel.refreshEquations()V)
 * @param arg1 javax.swing.event.TreeSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.TreeSelectionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshEquations();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (ButtonGroupCivilized1.selection --> MathDescPanel.refreshEquations()V)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.refreshEquations();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM1:  (MathDescPanel.initialize() --> JTree1.model)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1() {
	try {
		// user code begin {1}
		// user code end
		getJTree1().setModel(getMathDescriptionTreeModel());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM2:  (mathDescription1.this --> MathDescriptionTreeModel.mathDescription)
 * @param value cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(cbit.vcell.math.MathDescription value) {
	try {
		// user code begin {1}
		// user code end
		if ((getmathDescription1() != null)) {
			getMathDescriptionTreeModel().setMathDescription(getmathDescription1());
		}
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM4:  (MathDescPanel.initialize() --> ButtonGroupCivilized1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM4() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized1().add(getJRadioButtonName());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoM5:  (MathDescPanel.initialize() --> ButtonGroupCivilized1.add(Ljavax.swing.AbstractButton;)V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM5() {
	try {
		// user code begin {1}
		// user code end
		getButtonGroupCivilized1().add(getJRadioButtonValue());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetSource:  (MathDescPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			if ((getmathDescription1() != null)) {
				this.setMathDescription(getmathDescription1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP1SetTarget:  (MathDescPanel.mathDescription <--> mathDescription1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP1SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP1Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP1Aligning = true;
			setmathDescription1(this.getMathDescription());
			// user code begin {2}
			// user code end
			ivjConnPtoP1Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP1Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetSource:  (JTree1.selectionModel <--> selectionModel1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetSource() {
	/* Set the source from the target */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			if ((getselectionModel1() != null)) {
				getJTree1().setSelectionModel(getselectionModel1());
			}
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connPtoP2SetTarget:  (JTree1.selectionModel <--> selectionModel1.this)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connPtoP2SetTarget() {
	/* Set the target from the source */
	try {
		if (ivjConnPtoP2Aligning == false) {
			// user code begin {1}
			// user code end
			ivjConnPtoP2Aligning = true;
			setselectionModel1(getJTree1().getSelectionModel());
			// user code begin {2}
			// user code end
			ivjConnPtoP2Aligning = false;
		}
	} catch (java.lang.Throwable ivjExc) {
		ivjConnPtoP2Aligning = false;
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Return the ButtonGroupCivilized1 property value.
 * @return cbit.gui.ButtonGroupCivilized
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.gui.ButtonGroupCivilized getButtonGroupCivilized1() {
	if (ivjButtonGroupCivilized1 == null) {
		try {
			ivjButtonGroupCivilized1 = new cbit.gui.ButtonGroupCivilized();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonGroupCivilized1;
}


/**
 * Return the ExpressionCanvas1 property value.
 * @return cbit.vcell.math.ExpressionCanvas
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private ExpressionCanvas getExpressionCanvas1() {
	if (ivjExpressionCanvas1 == null) {
		try {
			ivjExpressionCanvas1 = new cbit.vcell.math.gui.ExpressionCanvas();
			ivjExpressionCanvas1.setName("ExpressionCanvas1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjExpressionCanvas1;
}

/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setPreferredSize(new java.awt.Dimension(600, 400));
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			ivjJPanel1.setMinimumSize(new java.awt.Dimension(22, 22));

			java.awt.GridBagConstraints constraintsJScrollPane1 = new java.awt.GridBagConstraints();
			constraintsJScrollPane1.gridx = 0; constraintsJScrollPane1.gridy = 2;
			constraintsJScrollPane1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPane1.weightx = 1.0;
			constraintsJScrollPane1.weighty = 1.0;
			constraintsJScrollPane1.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJScrollPane1(), constraintsJScrollPane1);

			java.awt.GridBagConstraints constraintsJPanel2 = new java.awt.GridBagConstraints();
			constraintsJPanel2.gridx = 0; constraintsJPanel2.gridy = 1;
			constraintsJPanel2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanel2.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJPanel2(), constraintsJPanel2);

			java.awt.GridBagConstraints constraintsJScrollPane2 = new java.awt.GridBagConstraints();
			constraintsJScrollPane2.gridx = 0; constraintsJScrollPane2.gridy = 0;
			constraintsJScrollPane2.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPane2.weightx = 1.0;
			constraintsJScrollPane2.weighty = 1.0;
			constraintsJScrollPane2.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJScrollPane2(), constraintsJScrollPane2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JPanel2 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel2() {
	if (ivjJPanel2 == null) {
		try {
			ivjJPanel2 = new javax.swing.JPanel();
			ivjJPanel2.setName("JPanel2");
			ivjJPanel2.setLayout(new java.awt.GridBagLayout());
			ivjJPanel2.setMinimumSize(new java.awt.Dimension(106, 30));

			java.awt.GridBagConstraints constraintsShowParametersLabel = new java.awt.GridBagConstraints();
			constraintsShowParametersLabel.gridx = 0; constraintsShowParametersLabel.gridy = 0;
			constraintsShowParametersLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getShowParametersLabel(), constraintsShowParametersLabel);

			java.awt.GridBagConstraints constraintsJRadioButtonName = new java.awt.GridBagConstraints();
			constraintsJRadioButtonName.gridx = 1; constraintsJRadioButtonName.gridy = 0;
			constraintsJRadioButtonName.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getJRadioButtonName(), constraintsJRadioButtonName);

			java.awt.GridBagConstraints constraintsJRadioButtonValue = new java.awt.GridBagConstraints();
			constraintsJRadioButtonValue.gridx = 2; constraintsJRadioButtonValue.gridy = 0;
			constraintsJRadioButtonValue.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJRadioButtonValue.weightx = 1.0;
			constraintsJRadioButtonValue.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel2().add(getJRadioButtonValue(), constraintsJRadioButtonValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel2;
}

/**
 * Return the JRadioButtonName property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButtonName() {
	if (ivjJRadioButtonName == null) {
		try {
			ivjJRadioButtonName = new javax.swing.JRadioButton();
			ivjJRadioButtonName.setName("JRadioButtonName");
			ivjJRadioButtonName.setSelected(true);
			ivjJRadioButtonName.setText("name");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButtonName;
}


/**
 * Return the JRadioButtonValue property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButtonValue() {
	if (ivjJRadioButtonValue == null) {
		try {
			ivjJRadioButtonValue = new javax.swing.JRadioButton();
			ivjJRadioButtonValue.setName("JRadioButtonValue");
			ivjJRadioButtonValue.setText("value");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButtonValue;
}


/**
 * Return the ExpressionCanvasPanel property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			cbit.gui.BevelBorderBean ivjLocalBorder;
			ivjLocalBorder = new cbit.gui.BevelBorderBean();
			ivjLocalBorder.setColor(new java.awt.Color(160,160,255));
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setPreferredSize(new java.awt.Dimension(700, 400));
			ivjJScrollPane1.setBorder(ivjLocalBorder);
			ivjJScrollPane1.setBackground(java.awt.Color.lightGray);
			ivjJScrollPane1.setMinimumSize(new java.awt.Dimension(22, 22));
			getJScrollPane1().setViewportView(getExpressionCanvas1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}

/**
 * Return the JScrollPane2 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane2() {
	if (ivjJScrollPane2 == null) {
		try {
			ivjJScrollPane2 = new javax.swing.JScrollPane();
			ivjJScrollPane2.setName("JScrollPane2");
			getJScrollPane2().setViewportView(getJTree1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane2;
}

/**
 * Return the JTree1 property value.
 * @return javax.swing.JTree
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTree getJTree1() {
	if (ivjJTree1 == null) {
		try {
			ivjJTree1 = new javax.swing.JTree();
			ivjJTree1.setName("JTree1");
			ivjJTree1.setCellRenderer(new cbit.vcell.math.gui.MathDescriptionCellRenderer());
			ivjJTree1.setBounds(0, 0, 78, 72);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTree1;
}

/**
 * Gets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @return The mathDescription property value.
 * @see #setMathDescription
 */
public cbit.vcell.math.MathDescription getMathDescription() {
	return fieldMathDescription;
}


/**
 * Return the mathDescription1 property value.
 * @return cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private cbit.vcell.math.MathDescription getmathDescription1() {
	// user code begin {1}
	// user code end
	return ivjmathDescription1;
}


/**
 * Return the MathDescriptionTreeModel property value.
 * @return cbit.vcell.math.gui.MathDescriptionTreeModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private MathDescriptionTreeModel getMathDescriptionTreeModel() {
	if (ivjMathDescriptionTreeModel == null) {
		try {
			ivjMathDescriptionTreeModel = new cbit.vcell.math.gui.MathDescriptionTreeModel();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMathDescriptionTreeModel;
}


/**
 * Return the selectionModel1 property value.
 * @return javax.swing.tree.TreeSelectionModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.tree.TreeSelectionModel getselectionModel1() {
	// user code begin {1}
	// user code end
	return ivjselectionModel1;
}


/**
 * Return the ShowParametersLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getShowParametersLabel() {
	if (ivjShowParametersLabel == null) {
		try {
			ivjShowParametersLabel = new javax.swing.JLabel();
			ivjShowParametersLabel.setName("ShowParametersLabel");
			ivjShowParametersLabel.setText("Show parameter:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjShowParametersLabel;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	 System.out.println("--------- UNCAUGHT EXCEPTION ------- in MathDescPanel");
	 exception.printStackTrace(System.out);
}

/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getButtonGroupCivilized1().addPropertyChangeListener(this);
	this.addPropertyChangeListener(this);
	getJTree1().addPropertyChangeListener(this);
	connPtoP1SetTarget();
	connPtoP2SetTarget();
}

/**
 * Initialize class
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MathDescPanel");
		setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));
		setSize(564, 475);
		add(getJPanel1(), getJPanel1().getName());
		initConnections();
		connEtoM5();
		connEtoM4();
		connEtoM1();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MathDescPanel aMathDescPanel;
		aMathDescPanel = new MathDescPanel();
		frame.setContentPane(aMathDescPanel);
		frame.setSize(aMathDescPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Method to handle events for the PropertyChangeListener interface.
 * @param evt java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void propertyChange(java.beans.PropertyChangeEvent evt) {
	// user code begin {1}
	// user code end
	if (evt.getSource() == getButtonGroupCivilized1() && (evt.getPropertyName().equals("selection"))) 
		connEtoC2(evt);
	if (evt.getSource() == this && (evt.getPropertyName().equals("mathDescription"))) 
		connPtoP1SetTarget();
	if (evt.getSource() == getJTree1() && (evt.getPropertyName().equals("selectionModel"))) 
		connPtoP2SetTarget();
	// user code begin {2}
	// user code end
}

/**
 * This method was created by a SmartGuide.
 */
private void refreshEquations() throws cbit.vcell.parser.ExpressionException {

	TreePath selectionPath = getselectionModel1().getSelectionPath();
	if (selectionPath!=null){
		BioModelNode node = (BioModelNode)selectionPath.getLastPathComponent();
		Object objectPath[] = node.getUserObjectPath();
		Object lastPathObject = objectPath[objectPath.length-1];
		Expression expArray[] = null; // for non-stochastic
		String expString[] = null; // for stochastic
		getExpressionCanvas1().setStrings(null);
		getExpressionCanvas1().setExpressions(null); 
		if (lastPathObject instanceof Function){
			Function function = (Function)lastPathObject;
			Expression exp = function.getExpression();
			if (getJRadioButtonValue().isSelected()){
				exp.bindExpression(getMathDescription());
			}else{
				exp.bindExpression(null);
			}
			expArray = new Expression[] { Expression.assign(new Expression(function.getName()),
															exp.flatten()) };
			getExpressionCanvas1().setExpressions(expArray);
		}else if (lastPathObject instanceof Constant){
			Constant constant = (Constant)lastPathObject;
			Expression exp = constant.getExpression();
			if (getJRadioButtonValue().isSelected()){
				exp.bindExpression(getMathDescription());
			}else{
				exp.bindExpression(null);
			}
			expArray = new Expression[] { Expression.assign(new Expression(constant.getName()),
															exp.flatten()) };
			getExpressionCanvas1().setExpressions(expArray);
		}else if (lastPathObject instanceof Equation){
			Equation equ = (Equation)lastPathObject;
			Enumeration enum_equ = equ.getTotalExpressions();
			Vector expList = new Vector();
			while (enum_equ.hasMoreElements()){
				Expression exp = new Expression((Expression)enum_equ.nextElement());
				if (getJRadioButtonValue().isSelected()){
					exp.bindExpression(getMathDescription());
				}else{
					exp.bindExpression(null);
				}	
				expList.addElement(exp.flatten());
			}
			expArray = new Expression[expList.size()];
			expList.copyInto(expArray);
			getExpressionCanvas1().setExpressions(expArray);
		}
		else if (lastPathObject instanceof VarIniCondition) //added Sept 29, 2006
		{
			VarIniCondition varIni = (VarIniCondition)lastPathObject;
			expString = new String[] {varIni.toString()};
			getExpressionCanvas1().setStrings(expString);
		}
		else if (lastPathObject instanceof Action) //added Sept 29, 2006
		{
			Action action = (Action)lastPathObject;
			expString = new String[] {action.toString()};
			getExpressionCanvas1().setStrings(expString);
		}
		else if (lastPathObject instanceof String) //added Sept 29, 2006
		{
			// to check if the string is the probability string
			int index1 = ((String)lastPathObject).indexOf("probability_rate");
			int index2 = ((String)lastPathObject).indexOf("=");
			if((index1 == 0) && ((index2+2)< ((String)lastPathObject).length())) //has probability eqution,but don't calculate prob string, since it is not a constant value.
			{
				expString = new String[] {(String)lastPathObject};
				getExpressionCanvas1().setStrings(expString);
			}
		}
			
	}else{
		getExpressionCanvas1().setExpressions(null);
	}
	
				//Variable var = getMathDescription().getVariable(varName);
				//SubDomain subDomain = getMathDescription().getSubDomain(subDomainName);
				//Equation equ = null;
				//if (var != null && subDomain != null){
					//equ = subDomain.getEquation(var);
				//}	
				//if (equ == null){
					//if (subDomain instanceof MembraneSubDomain && var instanceof VolVariable){
						//equ = ((MembraneSubDomain)subDomain).getJumpCondition((VolVariable)var);
					//}
				//}
				//if (equ == null){
					//Expression exp = null;
					//String title = "hello";
					//if (var instanceof Constant || var instanceof Function){
						//exp = var.getExpression();
						//title = "Expression for "+var.getName();
					//}
					//if (getJRadioButtonValue().isSelected()){
						//exp.bindExpression(getMathDescription());
					//}else{
						//exp.bindExpression(null);
					//}	
					//getExpressionCanvas1().setExpression(exp.flatten());
					//getEquationTitleLabel().setText(title);
				//}else{
					//Enumeration enum_equ = equ.getTotalExpressions();
					//Vector expList = new Vector();
					//while (enum_equ.hasMoreElements()){
						//Expression exp = new Expression((Expression)enum_equ.nextElement());
						//if (getJRadioButtonValue().isSelected()){
							//exp.bindExpression(getMathDescription());
						//}else{
							//exp.bindExpression(null);
						//}	
						//expList.addElement(exp.flatten());
					//}
					//Expression expArray[] = new Expression[expList.size()];
					//expList.copyInto(expArray);
					//getExpressionCanvas1().setExpressions(expArray);
					//getEquationTitleLabel().setText("Equations for "+var.getName()+" within "+subDomain.getName());
				//}	
			//} catch (java.lang.Throwable ivjExc) {
				//handleException(ivjExc);
				//getEquationTitleLabel().setText("Equations for "+varName+" within "+subDomainName+" *** "+ivjExc.getMessage());
			//}
		//}
	//}else{
		//getEquationTitleLabel().setText("no variable selected");
		//getExpressionCanvas1().setExpression((Expression)null);
	//}	
}


/**
 * Sets the mathDescription property (cbit.vcell.math.MathDescription) value.
 * @param mathDescription The new value for the property.
 * @see #getMathDescription
 */
public void setMathDescription(cbit.vcell.math.MathDescription mathDescription) {
	MathDescription oldValue = fieldMathDescription;
	fieldMathDescription = mathDescription;
	firePropertyChange("mathDescription", oldValue, mathDescription);
}


/**
 * Set the mathDescription1 to a new value.
 * @param newValue cbit.vcell.math.MathDescription
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setmathDescription1(cbit.vcell.math.MathDescription newValue) {
	if (ivjmathDescription1 != newValue) {
		try {
			cbit.vcell.math.MathDescription oldValue = getmathDescription1();
			ivjmathDescription1 = newValue;
			connPtoP1SetSource();
			connEtoM2(ivjmathDescription1);
			firePropertyChange("mathDescription", oldValue, newValue);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Set the selectionModel1 to a new value.
 * @param newValue javax.swing.tree.TreeSelectionModel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setselectionModel1(javax.swing.tree.TreeSelectionModel newValue) {
	if (ivjselectionModel1 != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjselectionModel1 != null) {
				ivjselectionModel1.removeTreeSelectionListener(this);
			}
			ivjselectionModel1 = newValue;

			/* Listen for events from the new object */
			if (ivjselectionModel1 != null) {
				ivjselectionModel1.addTreeSelectionListener(this);
			}
			connPtoP2SetSource();
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}

/**
 * Method to handle events for the TreeSelectionListener interface.
 * @param e javax.swing.event.TreeSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void valueChanged(javax.swing.event.TreeSelectionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getselectionModel1()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G41DAB1B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DBC8BD4DC553551108695A351C4C90215A4A4C50DBE7A0CB5D63A9E2DD96B25ED5EAA35E99B915F424A2A34AF5654467732EADEFB1881831A8FB42828545246DAE810C092B50D51A6C0B4312888434704A45C19394CCCB24C8CF76E40G833CFD4E397B4E1D615E19042EBC565A6B5E334FE7FF4EBE7B6C334F9DC8659F52CA0ACC1504941590656F5DA2C26C3D042C5B3A77B344ED7DBC370CE87E7E88
	D0C16E8E95433334A337AC61765C32F27260C4A9142B21DC38B2376CE5F85FC37A6C5996F8B1201382F5892B777CA9B61D27BEC7BA5BD9F9693E9D705C85D083B87AF4F7D07A776F2BD2702D8A9E2148C44831CE5AE6433EEA851789ED5681EC23FDBBF97BDAF8F286669CB92C346B1B1FC136FCC7B26D2463E846C4C8D47A2ED21EB56457C5968B25753F0CCF5A27G6A2A81C705B713D79B7E824F236D979D9F582CAE39E158A63A5D8D03026CECF084DCC70EFC82EF2D225F56AEF8C4B749E1E31D28AFE5FD29
	4EF24B7A3AA84EBFC2472F0477FA0056AE44970CD2FC9A3C2F814869C2195E7F4BD105675E717BC8685E37DF58EDA0D3E19717253CBBACD35612BC53ABCC7F7BBB291E5B204E8710G1081308E209060B5B66F6FF47C951E472DF20BF7F0506BB96E73B53B6D52A7DE3B680677A3C720C641F508B62FE4A7044F2D393EDE071FD8407BD5DCF6BF2E130C03B84F2BBA6EA6F9775CEC5A2E23133C0CF19369613A286A896B04537E581076611EC8BB0C245DC334348F05B618CBF4E8373BB6185B14F17AB53453FA68
	DCBF41ECE0963C53FEAF50F9E778E7983EC00367B6B94A7034DC5C1BDB666CC55B685D053C3495AFA365CD37686AA165DBC926753D1C07025EE8DE5247685865DFF01A2F283C5C4F70ED9ABC6765674CCEE9B9916AAC27F34B38FD9D6E22EB3466CCEE59D1G8B009BA089A083A06B8C5A58D4477ECB3431F6C1121B83AE37DD14886FFB3873A5F80AC1D992CEF97C326031095D0264922CEE51CF14B647BB298E2C917DBEE436EF839A9F099ED192E4175783238B0322ACCAFE5E66334E8A5AC692D92D45B5A882
	01C19F41F1FBBA774053AD7865AE1FDD1045F08BDEFF3E134E4930508DA342G0A0EAA0858CD75158772EF81A86EC3BD6432717EA1CA60AE0E9CE973FAAF86FC96AA893174D1BD8B4CF7D441FBE39F6AD868213894A8E72A63D4D8FE27992755E5236C8B52A82E31A7C74001133550BE9F2078ECEED98DC06BD93421DF74228D356E3C0B547FF0212E8D2D85FB6EBF4BEDA7F8B6FAADBD4BE8D0BE5320AE9BA09F001CC35FBFB552EB30560A95DE68BB652F66EC645A23FCDF1AAFC9B12431DDD9BB743DC4D9475A
	FAF31C71F729F3793DDEBA17B5A057D1003EF3B887ED169AEE534D02DFC4AB7ECC8283946D619961FC5EB156884F5D2C9FA1FB990E1097817681507D6ADD00BF83507D268E60E5D546FFE3FDE5201B8A3096E093C065F96087408E1084309AA08F20389F7618FE1C034D2359B1645B2970D421707522C2D72F6D5EA87E769934FB779274FA3940E559BB96CB165D4A1C16A9737D02B2FFC663E9655DE9502E628A4842ED27390B72AB8E0B9E39D574099EBB3C78153AD3DDD486455F8DF855BE1FB13C8F7CE38BB8
	A43F0A6F6A22FC8A32AC392C81D96C94E55965F1046B4FB2DA7E005597F62DC84B5EC5F5659D817F2836F7F5D15FE273FABCA2B3E2350BD2FF1179B651AD8E8253AD5E00C7667821EE9A7BDD94C7955F9A68FE0ED05F688ED0BF4D6329CC014E0BCFF28D4252202E1E2477D33F972C2F52684882B89A97866119540FBEEBE4AF7A2CB746EEA75967FDA63DBDB8E5458D26CD7D5CFF90A16C33B8CF83BD7A3C3B190FD570FEB343BDF4185AC5E40447EDEC8F1184EABB4D81D976FABE123C81DF0BEB5865F60D0976
	A635CD4D1F4A61B9287417DCBE2A4CA6DED772F915E6EC254EA209A25B92F91B0467583C81D3EC9AD8CD136213CACFB31F84729D82E89350A7957650FA5C9794E75462F5ABE3C05D82016A3BB9D8295119DD607AE63E59CA6BBDEAFD9E54ED5154737EFBC6357D5B2C517D7F2E56A7C1B9DDD34F797CE1EFB913EDA8A042F6CEB740FF28F613577B3B283AEE4506F8FDC1AF35A137E66FAC36D11A4F0E61F9E135156FC96B953A85D6CEBB13353BF79C5B355BF83D53465B4F32E95BF9C358EE1BC1BB371D365BBB
	016DAA6D5CBF574373A8C09FC0035A6E17EA3BB5F66E4BE93B9CCD3BB7C45A6E3EC9EC37594E69160AFCFF256DDED7791B1842F6BE1137CB04E79AEDABEA797B14E03B8DA25FAFB6094ADEBD406972711EAB42F665831C9E2D276DEA8734637DC0ED57BA40771DCDE238FDD80E39A6EC57B740791287F8FCC05BD1B9783CFDE246F649CAFD46C0643CF15F712BBA3AE658D96C02B0AC849B7CA360670E9C7918ADCDFE767A890B1FE87BAD83F8465A55C857CA3D83468468F320BF797ECEBCE3AD3818C14AA7FEE0
	B6BAB74A8E4EC70AA36CCF8A5A83E63E96BB4ED01A9B212E50016B707C975AB86F385F6F3539D8082958702E53DAFF43F1FBCEBF8F4F81176417CF410690C4FBFF65B4651746208ADA51474A3DFB0976EC4A8E24FAAEC9B943CCFC2815B7EB7704698583F937A9F2D6BB43725ACB1FB173334042608E454775C17D820075CE0AFFA8484E7EA26A57F69069A50F2DA07D8B979B52ABF7F1BA0D2EB03D04EB8E1A391CB5A78F10CBB903C7FBD1BC3B8C0CA23FCE98BF4D057CAE9F257CD21B646D5E985F2168F6A334
	A93F10DB467D70F563E5C46307D57DBF52C167D89287A4516FBCB194E0736B2F2D6BD6743DEC4FB1C53E75F7AFA3C7274E19744E70093B1D261397385C3E8BE179B3CD0F1A5682F05E7EF39CE54802B6DBD45ECE04A85E65F149AE014EF5ED9D672D51C393B5025DDE5B26D9AB8D472DFE08AAECB237127700D505573BDE5772DAAA4C5165B569E78ED37DC54E2365E21857AA732326FAB3721A92C2DED3214D060B285F3689446FF043DAF4238C77CC50F990A4C7935FDBB67935FBCB885AE5G2CD75BBF425A4B
	CE171F739E7A82F91F35FEB5295AF33DAE6F94725D1C6752C14DBAAEFF5434359CF9FFF592F96C05B649G1C273F49FABC2D9BC4597255FEF9002B74A02F05C14ACBD48C20687C6963DA1D2F591E244B3773ABA926B68F67D7760479CE2DF85414D901FC2F1CC27AEB214DB6157ECE92ED9FDC1E2988F98EF9F34BFA81C2DE6C77AE3371C13E0C14F5B4C210C6B234DB67459CD96587744962BC02314FE602F3447B6EAF423E4417DBF65807F43EDE24279F5EE71B5A47876DB3FC286BCC93627381D7B504E35DBF
	3A0BC447CB487B309957F6BB34CFD47BA45451B91041E5F4E23F86A6C90BD370B8C4FB2DF67530F03D4122EDFC02226A78796409E939256C2170B9F6435074B3AD4F39DC4D762742A11EF3B12B78A4065F2A41F3D9AA9BD17ED2A9374CADE11EE0709C5D9FF3203C8920581FDBD68DF094204F0F7B52525387C91CBC4CA90F8C5B16606E0CB8B0E0BE648C258BB13ED2BEF3C6BB771C0FC74ED35B8A824D85G2BG56829428BC7C64CCDC9ECE84F5F960FADE9224FAAE1663678890F83F5BD93F6A4B684757E95D
	E9EDFE393862E31359403F34A9E3774961F54AF512A0D01D2482FE8DC08EC0A1C0E9GF5D25FD79FCFA71873D21441E5F20F4ECC97E323172B8B5E6F2F6351B6DE9B089C23B52A4C7B9D1E562FA12A6C0C6A477516EB253161AC28CB85D88D1083308520FC984EBE43283F513E77635A94DD2A96EF8B60CE425921A57AFC2B72DAB00D57E850177169387DAC43FAB2FEEE27B23A21AE91A08DA08BA09FE09BC04D884A781D3E77AED14663CC2E6992F2BE3F9C1A19FC2B6276BBB622572FE3E2E6747A63766B0D22
	477723171A6959C2671C50A158DDDE9E7A90A56FD0A1C5679DFCB06682008CGFE2658AB17AABCE50F202F7D3EC867ECAB14AB03F00E83B8896086C884D89544B92BBE5B9CEF4E5414B44C9B66F0F40C136B24E6F2E63AEC085BEFEDB0329F175DA763F9AAAF08B9451F4E1007ADF17BD50E6A2D0F8F9DD45775D0F792209FA0841086108510BF0A3A764557352A60CB51752A2919497975387D360E6A59ED2665E5FD3B259107E22FA543DAFBAD9F6376FA941E6DE3E82FDFD3674CB906F3B6C1E6A64BF5F17B25
	0D6975FB3BE8E674DA6276DB23CB4FE41A993D72387DF2F469FDED067456466DD728CBEFEF5D4C765D26E97D9A224AE4BC329F3F077A8D3F07023AFAG0EFB2401625A216C9CC73BCAEC24F1FE12DA3E111529CD72722B0DC677B33B14FE31F4918FB80D03B1E9DC4ABDCFAC603EE5781CF13EFE621CFE3EFE76B97DFC7DB567AAB89E46505EF6E27D7CF33173790B4E9967739FBFEF4C674F4F6B7339793CBE1F7FFDBEB61F3FB9EF44676F195EFF444EE9D240A33B86C5B6B477F3E210FEAB825E38A360612E1A
	0E6E0F0EF3897A7F84A7352934F174738B7B8F1069FE7E045DA5FBA59C44A28A52E783832A136F7409B664BBC9B05651CD023E0E96897ABA3ACD082D232F8831F5746D17F6337EFE3F68E741DB2BA08BCA5D93B23DE318F68F73A9C48B844F59824BCD51B6A7E4EF4B8115EE0155D8467F326A4B78CBAB4DFF7A3D8149A6C64B3155DA255605B74CD332B8C85961ED0AEC343FACC88EF11A9ECAEDD5EA1DD17F8A1B112E382C2F05B432FE7236BA76993B312CD63B3E2CCE3B312CDEFBFCD903F6E3D9276C71E5CD
	344716750791329ED27157CC3C20605B87A46FE0FB139297BC58989D4752FB79ACD8B3B96398971C12B00EAD9C475CF84D903BC78A65169D86E88F215F7E45B05DB71C21C87F9CD24A492169FE1B4B7508E8BC97BF91756722D0B41E0B274478F331D5B41E0B5F0A716722F4006A546A323BA4A5434BF55DB399296B834AFE9310757670F4C5A7EBF4F443477B7D944EE93B6CEDEFD2F9ECF7986B2C47212F33338EE31D599D71F5B668B056196C082F3389073E4E9E1F525AAD15117BFC47896A53F4E25BCE1B64
	F53B698D8E41B3477B43787D5C7A905A69F77C54CE0BA7F24B2A818ECD201DBE20BB97ED934AB7D893C6F3311AC44E6DC1856FAE5272FFC0ED7FB7D3E47BC38A7EC913F6CE436DCF57E97DF278CE784537681D38DB987586E4C272A728EC75EF615A15211C84309AE05D84DF43DCFFDF9D217487602488EAE31BD956A46D7BF483762D0572D100BE0090C06AA466B8C73A292E78ADD913B247094E1DDA7F236CA9DC7F4FB6D27DD37E0B27D07F03DDD47FC721EC81F0CF217EBF1522751FB09556F98A3C2F1A0A1C
	831E5BDC407CCE76944FEDEED771E98C3FD10367B94FB7991E16B7D39EE6E1CCDAB2C2F9DD836575AA6ED3064B0772E695F74F88462E5BD4DC120C6D5A2EC25C13B2366B3D8AE5EC9E0E9533E7DCE514577DC026BCE7DD951D57BD49706B2F0A4E6B667855BB8428BBF6B572749063A99D4AD9AA6E58B07219FFB56645ADEF61B72C45334196E6236DF41CFCCDF76DB5FB03ED5C90793C273ED52A7417E72B6B0E0D398A4AEB8172E6635DDE70CD3C5BDB35F299A99E553FBB4D37CC18364CD63E45CC8867C4F316
	6419B84D2A7DC8538275C989947761FE6D5D845547FDE6FEEE61754108FA3A0F52EF124275F7C454D3FEDD455A7A3C08FA2A233DCAFFAE5BF77F0C32ED7BEEA6F15F1BE078BD7186C5262D4AB339E0D1510E5120195B8DE9C23BE91C436BDB6704ED25975E5DF3745646E3EC2D4D1A933DB61EE47814B951EB435F05EBA3936AAA3F04B6A2327DBE8865A495D760C73B49D4F17733F6E4EEEED955DC347945EC3D55C3398D402962D7B2FC62DC7EFD837DF601636B07E21D41F6A9E3DD4E394B29508E1F73CE4425
	F139E73D6D4A7C077705EA66A7789D12E8DFB3176A6760886EC799F351270AA36CFE8BB666EDF369F7708F512D194809EC4D0C34AAE39ECB545FFFF05D33358FEDA83C28601D09FCFEA970311F710547AE8E6058D9BAE317C40D1D23991B5695E84666F37F056AC7B6A762DC364AD436E35728BE1E1569779B3C7CA3FF3CF918A904E9BEF545E820EE76101FB1BFCCBFA66820C117A4CAFCBFAE8A601EEA81FE5CG19GEB2F617A667BEE0F1A074B837CE60072EBE13F86E83F96E5B87D564C3E0FF74E305F524B
	6E477DCAEA8355036F5A30EDF07C8A068FE9704ABE256EB309D03769DA4C09EF9C22BAE93F8EF48610G108A10853071BABC3B173B68372CB1F334962F2F8D02E13766B84D657B7D7E197DEE601B5B511F2F7E7A9DE44D17DA8D3FC359F49D1F639DC94AEFCC9EDFD4C41FDC3E0BFE767D9154758204G96GE4GE4A721FC3DAE659E0F26A30E4B32E0F332AFFC546406CB9C8923E9A04757614BCDF49DEE00F1B6A721DFDEBBC6F1455703DF3E9EF1ADA1DC2FC7D51C0D617A219C3C9EED6F8936A7A4C1B99DE0
	0D0A7F954367DC4F3FDF20F77E9CBF5A25DDEF343D11CE53E354A59954A93941889A5BE34CDBC90CBAA39F4F57F4C81A9EDF5F245E71EC817EF64C0373834049F9DC875C2FBE6BC73F5ABFEF3A8CDA1FCAC106B6097342FEB5F5DEF80DF0BEF2A4EAE3902C3B8683031D2EB111703D24106D359950FE75BC5CCB2CF574BB22CE27F7A47C6B04B641AA3A153196F750EFA53537D7B4DC67F5DF6D29082A6BD66E6279F79E8F8FE9E31DFCC566629B107647FC9F1382A2DFABE9A35A3B6E434FDF2D7B0DAD052A9B38
	1E6A15673697979771B13EF7C6BBC679E2372948E08C3B5257F703A6B664E710913C43C8073ABF907E3DB60BD314BF3EB77ECF003EF33A0F6D40F5DEFD67F2527A63D653DE833AF948FBF2186E9BC5B5E6CE7B6DG5236A76B515E7CF7CE5BB3C2CB5CFEFC43E8BF29497A76233521CCE833B6195B8FADEFCC0E361FEF78299D331B1FA6743BF581BC9F94C07B6A79985F1FFB0F6642AE797B38964D06C7704CB794D0637079987B5F4668A5C1B99DA0EBBE6611A606316D067998335FB99C9D334FA75A187B5161
	68183DA822FE77C8F44CFEEBC47D711168189D7BF35F320C3EAA6FF7EA5EFF7456150AA342FE6D29ABCA036FAB0F8D9967088A0774F3C43F98524FD9EF990AFD3F30ED4878FE41ACE9FFAF4077458F583762BBEE4CAD2B85E883688710EF44BDF13EC43FC564372F517B61893B036628682F3AE4B57F64B716F55C9F7F37E089FE7A9D2D558B5EF0100E0F78EB7DF43EE42F0FA1B96E86768D2164F2B8E55ED441AFE467A437B84050FCCDB6B451F320CF9287C4C9926D4C2B93452FFF44766FE410B975C675BB45
	3169FB5153E338972D3B116FC579705CF2A33F475DF193EDF3BA244D656A6FF3E3A17D7D65C6968BD8E01C7E1B100FE6092EE3CD26CD798D423F3C914E8B9DD046DDD2915576G4FAF3F592DF76F1C84B452EE427C4383924605EBG3779A674CFCD7D747EDE4DBFB488A37211A39FC9AEFB33606089886ED74CFE74AB358B5087B5311CC8BF1403G498B5087552BF75C998B74778763BD637B2361771363C45529F908767108A3B548E6C32B8B2C157E302F3629711D7A1A030DF578AD7A00413768EC6366BC16
	CB48E37E820C111F99E7772A8BA186D9086B63CD197E162ADB38B07DA68B106D1257A7CA72A847725D1D0F35B9C4D4FBF54BFFB69A83D659474062E7568BF02635888E02FE0B843571348578F1AE0CFDC667F4DF1B24FBDD885A26GE481ECGA884A0B76716D58254829C8530G3881E681ACG48GD883309EA07FE6147F68F0DD8C7995C3E1CEC292DC54CDA87C9F89E8795F8263155E921BFFBEAFCB07F1DE2AEF515F5F0D777C9D2C44696F8F44BB0FD82278617D5E0F5B6F7528B26FB79C37DFB470F35C1E
	E1F63E3BA57AFCD74D7021DB224FF7AB826A798E6AB65D02E7042BE366C10D772E8F03467E7C13E0FCFF5E9DE43F15GBFEC9975A9778FE7025437FA87867C223AEF74874BD55CA9FF3B576F22618E1F377DD49CE51D5FBFD6C38C5779BB0D0D75B5079A9B6B146F4147D1976DA9907327207F310E232F4ACEC1DF154C5AEE05F279A2D8830BB0D73A6E2CB61FD8336FB35DFC625633E326E30B383D5897056352F208CB398CF71942B234F73DEEAC43018375B5878E54213D1F6B263C527DA2E591721A6FE567C0
	A897821045B8475F1C164F3F349868FBB36CD76A1F19CD2FE07BC25562E81B3E1B615FD89CED536F7AF19E9B21EE01AAEFD3447D51D6406FD8925B0770FEAF6A4ADB2374BD24B3863751DF0F53F7B576D28EEB4A7DF90846D16A377A6C67A41D505063D0F284EC9D1CDC42E56338EA066BD7F0FC1C7D13466B6D1D49786B6D6F137A7153094969715347137A71D37B24B6FED2FE27BAC9FD2E837CF92F5A6E340A7BC2451DE7E3D2DC0F4BAEBBD53C4878227813A2A5287E9E1571B542F03D8A4E2741FD21608213
	54E70048CE2F04FD47A66979F74065F67372A4EB6372008BD175B11B716872899A3E93D55C976ADCFC9E18BEBF5D816D7CA8B97488BF9A023A64B8B6473F87495E33137166F6F944967EDF8D54B1DF99A66A7B1FB46FF7862E7C79E76D7F830D1A385FD66B77EB18E1BF47E577637E27187D76A9FDC934DF5A497019CB227D524D6A7E1285F5B52998A74EB55378B2814AE9GEB8172GB683145E0AF1133F28169847CDBC328E07CDDCAEDBB74AD58D63B45E9A363BD6F86F85F05F2AF7A7E57131BB29DB236FB2
	4FB1FC722D51F719BF75E22EA28D6A0A3F0C7E76CEFF58B6D7EB5E5F3FE2797E701CF6DFD19AFC3D1F14277B00CFE42D8F6038FAF6B6F002DE02DF46BC6EFC89F33B89DF46331370266677DB4C9DF2FCF5F0E7980F6ED0997B9B4353F9785670F4BF74FCA82C7FBD1A775471ABBF9777DED19AFCFDA41B0D7741DB4C717741B4337EBE3852BCFD9F3C532C3F8FFE552C5D8779DC0CF5E32EFF03BA77696D94D78865EDAA6EE1AB45555C16DBF678B644794651C65AD45CF523187FCF3DCD3DFB7251FDADD3AD5BD9
	B9C7ADEF7276AA75D7EE0ECBFC3D641F7F7E5688F89C5CA2C55E4356307FD946F33299D2EB0C7E51B959AD37C55E43162605FDB54F2DACE773D689781AB44C2DBC507E9C339109FDC045F3BC8F35E32E248D5A598112815281683D0B727BC8AB33AD41F651A1F9839EBB52A835D19AD950F6DD9A5ECD4C9DC7B9B625696716CBB4F21025F086DF9A4EAD57AE0D16E3B53317C300BF3694797963984D891E887AA451CF4F90AD02E7D870536F16F87EE721CF1B7FF1AF65322443F34D52D879791667426F8354AC14
	F9DB54DEC38C4FAF6FC61E41FE5D0EFBC98E50AADD063E715FDFD5FF6723797DBB3DBAECE67351AC8A9EBC83B5FF0EF7784716619968CDAB9DB78865E4008CG4E67BDE5E1BE9D63D4EE1547962F5BABB53869B27FC892C67958EB46B11F103D6CF27389777604753331B7CC77C16F251C6F389E9EB07D15444A7FC74FAA6A64BFFC28132D2ACE4E316FBB9A1767161D8468DF0E7E02FCBE33DC472E387D74F39DF7F568758BAEB776D7BC9ED94C66B4E9F9F47C351C61D316C747DF75D60C3F52212EB49D657DC6
	C47C67867C2C74CBB997BE640BA56F821DB1B8FF8FB13DE724C7737D88432FCE0F665BBE04FCE7C35D9BAB54BB638EBA2709D0CEDD013224D9094A5F6D1A778356AB3F4F7F630A5260B2EF981F9E6FBCBCBEBD667A19CF7D76C9554D462130BE9E533CDF087B2D51BF2F1B59D71406F28751C1FD040D3AAD027E7FE9E6A39BC08779AB704E018C21FF5F31F23A0DF27FF4DF9FD147AD33CE4B15B35FD85B74CEE3BD0583EF3FDD277819B70750BF562CC43D6F9B522E13DE403BF568CE1F6B66A11C6B87CD087BE8
	8867FADF917FFFDEFB48374766C17D2AA7C909CC0ABD74D21D14707FC4A5115DAA4B2758B9BFFF78609173634B4DA6D2FC0ABC47633DD3241886ED27C8890B69CE91B344FBC17AA1D631967CC3E41218AE91AB115FCDF7664767BD7C63D567DBABCD4484441DA227D6B2C2C3FDC60F7A478BB1684086DB14CC082997CB04C636AF49E4B77D222046071F949C3904B1320047DD1193DA3462655965B79C8C18C86907643981416DF38A2794DD3611972CCCBD2284EDE5D24E7E5748FE683B1F75FD2F0D18ECFE193C
	9646B3CB64351DBE41A6C213B23BA0DDE4A3D0D6F61FA1E58312434A884844F46643B3C01615E8F5C59BF9DEF652ABC39A7349646570506D74142BD43C47D4C7FE1B1D1D6DE3FF310567AAE325DD2CDFDA5AEFB5250282ED897EFC1ABFCD0D4F772F9165CFBF8DE9DB2A7FCFE0CA7BFD4456B9B643EFAC565D4E57C45E6D517FCFE0857B7F3DD5F764169D3A8373814F045EA246F7C01D03025BAD8B6E0B47BDF6FA9F54BCAA0B61BB5FBBA66878FEEC23D4AAE718894A7785CD1F7F83D0CB878878DE4851339CG
	G0CD8GGD0CB818294G94G88G88G41DAB1B678DE4851339CGG0CD8GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG6D9CGGGG
**end of data**/
}
}