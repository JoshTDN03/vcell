package cbit.vcell.math.gui;

/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
/**
 * Insert the type's description here.
 * Creation date: (4/2/01 11:20:10 AM)
 * @author: Jim Schaff
 */
public class ExpressionTextField extends javax.swing.JTextField {
/**
 * ExpressionTextField constructor comment.
 */
public ExpressionTextField() {
	super();
	initialize();
}
/**
 * ExpressionTextField constructor comment.
 * @param columns int
 */
public ExpressionTextField(int columns) {
	super(columns);
}
/**
 * ExpressionTextField constructor comment.
 * @param text java.lang.String
 */
public ExpressionTextField(String text) {
	super(text);
}
/**
 * ExpressionTextField constructor comment.
 * @param text java.lang.String
 * @param columns int
 */
public ExpressionTextField(String text, int columns) {
	super(text, columns);
}
/**
 * ExpressionTextField constructor comment.
 * @param doc javax.swing.text.Document
 * @param text java.lang.String
 * @param columns int
 */
public ExpressionTextField(javax.swing.text.Document doc, String text, int columns) {
	super(doc, text, columns);
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("ExpressionTextField");
		setSize(190, 20);
		setColumns(15);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		ExpressionTextField aExpressionTextField;
		aExpressionTextField = new ExpressionTextField();
		frame.setContentPane(aExpressionTextField);
		frame.setSize(aExpressionTextField.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of cbit.vcell.math.gui.ExpressionTextField");
		exception.printStackTrace(System.out);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GBBFBB0B6GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E125D7FDE894C794072AA5ADE2EDC9EBAC7DC3CA8B29249251D2A9A9283434E88BA1D891C929255286DA0AFF0436D87F183BA44678153BA4AD06CA35D5B1464B1746B68415EA4E2FA6E2B0B186AA6866EE122C6E6DEEF677F2B94FABFDEFBE6EB6764ED49A78B1B76F4D3CF9735E6F3D591006830B2ABC5E86C2BCD5C47C7D6EA124201610B3CFB786252C6BE8C98DF17D7D8270133BFAA50C17C1D74D6657
	FD3BE15C8B3883B29C8BE074113B3EFDC2BEDB48A5BCDEC24CA6DCB34737DF4836401A9DA08B82061B526B3983F33A3B447C56337924FC0D655D03F6DCB6A5D6083D25E2BCC836FAE69F433316B0BFF1CF834C7BGF8798A12FB288546537D77464E06C6D427F5B2C4B52DB522B8632DE3D1353B7B4214E9D15BD68DFD10CEB997D52A055125E634790DEF8733C1487BE0EFAE13655463B9C178FD8B60G789D4E9CBDADFC9CCE3CC9561D08D456E639C3F1B3777D3B66749D8AA39FFB9BD93C979B98574E6390A7
	0086188FA8849483FE82DDBDD92AB743F8EE4469B1A291C3BFE71A673530F55588D38DFEF7F703C6482E5310E14105F8AE177B82997CF994783E550F3D0F47A47F244CEB4175A524F4598B5E6A8CB1A94DCFF84B0E73D810C0BAA67C6C6F331EFDB0B01DF7534F3EC95CE76F3F343E22AA4359DD1D6BABBA051D4B2E332782186BEDAC5763705BA3F840655B9BD0DE6412F38E4EE36BF17E81685ADBA4B70677CADF7AAADFA63E0E8599631037FA2EB737C554D8CB5A974E0BE593D8CB9BC0DE8E585DDAD2F39890
	845C81B82D129BDB75367F480DFE45F24EC7D5ADCCAD4277AEB3FE04914A40D22E68362368A1BA24D82AB222D11B08B5C5867ABEB2ED5FAA4659901CF1096A54D29C28A6302EC428C3AD1B2FD9E378F10DC519F6D00DD0B8A0E292E937442807D1D3EC670699D69C1ADE41759B8D0C6524B2849641G7C66F159E4E14CF3617E850022D49CEE18E82F17DABA553A3B7B8C63DE549C441B109DED182BBABF56F6B12CAF83F0DB25B64A7AC09FEE13F6661AF5AEBBC1B5046EABD6DC560637817B65D41B4C755743B2
	5741BD2F1340C74FE74CF58170AE2F0D6738306DE14E6FE6B651AFBE4F2D9FFE4C7AF3E32AADF31DCC2F71577F579995B368F9FC7F0CE22EB600BF650006F69963774C031C3367951BCA16DE3300E0B41C0EB8DF7B768476D5BAC9F5A7C8CD2A076107ADB8724EC4CD1A3F23C60ADBEB185C843E77G416C143CF882B929B80E250EC49DBAC09DC75547527A8D6CACBBBAE226CBC51E7549847693A386FCCF2D5FBCD1476AC057A9F3BA35C568BFE7DC259A0D0053BDC6D4F7387CAB8B73FD0F46C52DEC3136B32E
	EBD12CBB7E0E95AA3B708E169A01D0E06912BF5A1147477C8D2EB8639B0B6FF120DD72B1F6C87271707D57484A5B26B7D39F4CFB7599EFCEBB6749CB6DE9BEF2FFBE35B37B7D852B97A137391FBBBB306EB23D2A1C8333A6D96F04B30A81E5A98E041CC6D71D096477981A46C3190AF1FF5407B92193D18A6D898B3AB795371B513A07F4C3A206DCFFBB0AB154DC3D003F734F31DE40BE16BAE45C129765FB1EFBAF1F9455A63D3BB2440D3DA19DBCDE439D6938159E7A36025F7743985A4E83DDFE073C6B46283B
	B71D33EDA3243236A87CFCEA529DD7AE1BB7399346D155321DABC07AA9F9275CC974977B26900BFADE60FF541BDD54B13DA794F7489ED893C7BEED06B9B9D1D2338F508E68BFA1FD5F9FBBC9E6F8DFAECCC15B5795EDE0DA6148BE9F2B60DC97737531AA49F564AF6B4DCBD8BECCB8B38740E5AD75A8AB00794A14AF7EF876DE30AF1E39977C9C4F5C8B8E477DDC8EB65CAF2354876259FA85677D529872E3949EBD908F18B4C446CF225F6F7A65F772BA703B8C6F8372A640E5C085339D2C2FE6FDC30BC6F41B2C
	E47B7EE277BDGA804B9676917ACAE48414A4E121A531DA8EB2CF357BF5ABB86E885F0FD6FB43D7FDF7A64B4BD46A669F16B77543B75D52E7D3CCE569E11F532EDEDA1515E181D755BFDF6A767DC3E9867EFDE68692ACDD47098D875DEAC3FD3526E22187BFF022E1DCFE46CDB08CD42DE3998377D7022F8C737BC328632FFBB2E2A16F7DA7E56E2326249E0565A8F1C62E77609316933051E74FBF7A40139FFG3ABCC091E09D208CC0FE139CDE998F70FA3A90D61DF30E230446D9554BE29AD2E9ACADC6E2F15B
	179FA0979A40CEFB4AD6757D63B08EA9F7C5D522C943E216C058EF99A6351CB817324EA87C9CCDE20E7B410E86188FF88530A2E537777E2F5C478C7EDD880F519E03FDADBA32D6DA93596B72D4E266EF4C33896CF5A30663989134AF6541846655B1CCA66432AB894C19250E0DBBFC2910DFCBE0FCB4BA4A44DCF67541DEF78D73900875038FB0862A2EBA2A222977D9BB9E00057A98576B496CF70AA6E73E535FC9565341174138A97C191544F75E989D35E9AAF6B9C9DFCAF6456EB7EC95BD7987D0CB87887B36
	B5D45886GG548FGGD0CB818294G94G88G88GBBFBB0B67B36B5D45886GG548FGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG9287GGGG
**end of data**/
}
}
