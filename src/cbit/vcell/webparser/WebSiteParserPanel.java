package cbit.vcell.webparser;

/**
 * Insert the type's description here.
 * Creation date: (10/3/2002 1:27:47 PM)
 * @author: Frank Morgan
 */
public class WebSiteParserPanel extends javax.swing.JPanel {
	private javax.swing.JTextArea ivjXMLJTextArea = null;
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private java.lang.String fieldText = new String();

class IvjEventHandler implements java.beans.PropertyChangeListener {
		public void propertyChange(java.beans.PropertyChangeEvent evt) {
			if (evt.getSource() == WebSiteParserPanel.this && (evt.getPropertyName().equals("text"))) 
				connEtoM1(evt);
		};
	};
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
/**
 * WebSiteParserPanel constructor comment.
 */
public WebSiteParserPanel() {
	super();
	initialize();
}
/**
 * WebSiteParserPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public WebSiteParserPanel(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * WebSiteParserPanel constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public WebSiteParserPanel(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}
/**
 * WebSiteParserPanel constructor comment.
 * @param isDoubleBuffered boolean
 */
public WebSiteParserPanel(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}
/**
 * connEtoM1:  (WebSiteParserPanel.text --> XMLJTextArea.text)
 * @param arg1 java.beans.PropertyChangeEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.beans.PropertyChangeEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getXMLJTextArea().setText(this.getText());
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GDCF7C3ADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DA8DF0D4559526B5E9552225B399871599E90B14D634D863C8AD6DE0E1BA0C2EAD0ED8D1A9458EAADAE5D20DA39D3173C888D9B4C04034AE10585822C28BF1C392C816A5595D6C6687B6E413AC79A1C913176C4BE6E133AF6E3EA49B8A52F36E4F5B174D5BC4A8B2F338FB4F7DBD67FE675CF35E0D10777739D9DBB27284E1CB16407E9D5FA288C97F92049AD34BAE4EDB771941A8E87EFD8434DB78FE
	53D6A85320EDE6074118ABAC2D44CEDB4D86E3946A9F406F7705DE5760A17811E09D9B349DDDFE32EC6AF53C4779BA5924AE1AF3205C89E404358E63FAE6DCFF5CECE2FC8F54F7325FC8DBB28461C0B176B1571AB47CA52C5FA6A8F320FD856913E24EE76DC128E31FA4A8E797533E0B205CCEF617ECA9E77D3A3E730C306A517359BBF0AD4D7C1CF20F5231252C9404573721A2B2059B2F9C01526A39602F6C6F8BA8C5237DD2B0D8B4A6758D0B61089436D85A243E1600A2F9C855A30624A0741FF7947759DAEB
	A4F340BE21EEAEC15E2FEBD1B79B20AEC05DD442777A448EAB5BCB4A05E704259B4FE4A45A2BD2C277B83BA4365719BB3A365615627CBFA73A47F12BF1BD60513DE495733D4CAC65FBB1BB316FF2282F81CAD779EF91FECE1941F8G48DA4677F872D33E47767FEE90D6775D123DAB419E3DE5F4EF174AE2FBEC9F92B27792FC2CAB47B3DE8CEDEB005200720E990C25C0DE207D8417F79E87088B76BE25DA9E9A12C37661E1C75097EE10FDD290FEDBAC5042F84DD23F9C76898245DEE76DE11D7DF08A9E1B08BB
	A4AADB1B40313230797702D739A1BBCBC73614270259B3589CA947E2322DB806FAF354215ED261B70E4371145FC078B947E3FCFAD62B889630DE88EDC947391E5BF7723D3837BEA924193F1D1D2D331768AF1332B79CE7FBA80F6D056A78E18B6A78B0706B00FA0122C033019617F39D3FF03CE4BA9D570794A99C9203ADA388F845B192887A24B05375B273D43A56A3BA6E092B9EC7753220C4FBC6CB9E38D5D7AFCB96C432D7B1FD3C2A518BDD7B5D62C4EB67D4CC4646CE758C67911BA82C20E71829726FA3FC
	3306CF4F769861E35D86ED7300E87F8BAE649BAD719899A57CFCCBBCC65EF1F20C1821AD85081EEF3B95FD60A628671DG9F8B648472814DGCAB9414F58DC7E591734A30F66FC6958174B7F862594D542E2FDA8220821FE29D58C87443E209491D81F574BD12FFD93463DC56C3B9F562815C2D2D8D482F288E69707A4GD3047691AAF6E31F30C4DA3D01A18996989A96783C460A7751DE4508F2F658A7AAD22C87ED4F2DC0CC0C0A2DB0A3CCG3F571FC0FD05094FCD055FABCFF0DDA51FC45EC12B41E833F23D
	FC2BE28F1427815CD250E2F1867AF19BE2F81CE3342E8E47F821FF0A155B6546F60EBF670E35C24ED3376862AF7553AF0C1B2C94CB39A7637157C266AD87FE7BC9FEDFBEDB5B2E991FE25547E1A272CE531F2E714604B5322E527EB227E927FAFE2392319A8539D200D2CFF2DD7F2A2210E250A1C6A40E3A46B0GC67245B4CF7BAE33601DA20DCAA145A98DCBA19F7C0830B3FF5432BD064781D9454ACA42C77FD48D0009287C5FDAF6D3BE4C21C5B7EFDFCB5AC5C589877AC69429C5D214C0489F9B7FA259CBE4
	026B0BB0D95F2CC2D98DA063FA20F4D5D679447B9ADC39E57942483097AD066173A3F28F9BAB8D4642CAFE7EBFF2E27C64D46B29249EEB37BA5BD97B551C5955796433E40D694E797FDB63F3974A4E7DA465DDA2BC9F48B6D315B753552E6977556CA55F45653DDADB78B2C43150E7CD0C6500D59F4B32D59F4BA3562931FA592A07D55A16E4C599653110867BB7D9517F754B2110C48CD09DA25038F7239765880482CADB406717141640C5C99056D4A206EF22BE96FE2F28643EF16C1F5CB79E38782CB037E7D0
	B7FE0A5E7D4D6C42AA96EBD745FCA35D534DA751262420B4840A2A16C7C28A654FA27E1B71A3190477CEEFB1140587A7075F079550EA6111A315056D8D6ED3DE28586116A15CC3E6F666E023392DE47C554EF0F8D48C0EC824B14140C3455C9F9E3423BCDE10F390E8C6957791B915584EFD84F30455F2B0C80F825AD6D7211E136B72B43A1BDDC5F3291DEA7B7D935A8BED31F63A4E1FABF391935267A392DC5D6804CECB637C7E2D5A9357560A0229773A316ABDA8039A7FC579EFD7691F51969B7A2C8B6A7CD9
	36ED825E4FF4CE0A29C5A24EB99C8E8C013BC7074CF23E72E2ED4E5785F2E0FEB8834A94A0BAF6138D772B17ECED3513B84C45F34205EC7CF2A8D781255BD8AEC27ADD2A617DBCD0C73FB3E80F75AF827E8A52EF2E1A3BFD26729EA23C63705F32AC9E13B664EAF3CCE7E406AE6E11F29CF49F050E78D83D5B01735A006FF1F00CDC31E96F91FBA4A27787C828444E21482E35894AAB313F8B65C0A09C01385DA7C579D9D658F12F98CBB1B6BB8FCF2DDE7C6F728594B94C2F696AB157A8B9E96EA8DA835298137D
	F20DB6E71D33EBA47B3D84327B184CC99A5997C3BEC877F1A5DA74A576913785A6439B0790BBA4BFBFAF0E0A5122489878C50B6594C1874DFD3FC76EDC6C3F5C2166612508634DD04F2B863B8122717653AE9E37BB01F789087A0B4A9A44B75AB7353DEA1B5676D2215F9AA041497B8F287D292E6E7D50467A9A6EFBD25850FBD9B7F78E3E5C131D6724BA32BAE33ACA2FCB4EB056A7E750BD5EDD43771884FD16B8390D64D5E6F11B93B8BEAFF570F5E798DE90B66DC9CE183327337572DD31F5CB9FB7E6568131
	9C7928966BF357A989319EE4F34CF045E37D218EBC0BB940DF6462D8CF356F56E09D72F9C8B57CC114015D238E1495FC8B2B8FB834F252F9534F61F9AC07B95781ED824A2D01332E61EB3C6618B657F5C52748F5FFB0A9EF74544462B1DF4D64580CFD93A8A3B1F1CDFC5E68A67C9BEB627346D5257CECE7C35B669A9E937D4EB5DD4E5CDBBBF18FF45C9F279D1794B70EE269714B7B756D0ADF074CF75FD026755DF3EAE9DC3B824AB5357C5B53C51B1161B13D1667E4273A508F9F2E833B836A853A84B497E889
	503ABAFEEEBD6DA726BDB7F4D0DE59CEFCC3F5FCC44374F0CF4D35696F27530E936AA70E2372BD5A0D7219202D94488DB488B493E88110211E4BF7FF3BE3BA79545499E464715FE4B1593A469E5475FA18BFDDDDE3D7478E0DFDF964C0C8D1EDEBC9875E53F2B8608F04B86F91426B1743A4E0243C4D67924732191D7A316C76CE7DD8F6D76754F959871D09E2DD1AC37D0278732D278CC69390655DD902BCAB543D27384D5415218F0E2A75E6D2C7BF4D726ED2EDCEFC2D04736B71D95EFDDD56C8148795103617
	143F8ABA317C99C00D40635D3C1A6D2C0FCB119B0AD5BB773B8A746D3C25BF8C91A95E22827F1E7D33B2A313EB56A9FE0F5ECA624195D0DF8734C95575951B56EEF2CFD39D9DE0E5B9146E539375C64F5E5B1598E71DDD7AB8933B905F91F9A45CAF45E3E9304B2436450C26DE1106D0BD344F67E43CA206A14F099F9FA563E9DB2271DF6BCA04D72A7BBF543C47F46F99884BC31EE2B6772A6E4432BE572DAF6B735D09E55D50BD3D2CFF6ACEAC6B266E69E55D729F1425AF608B04D936C279BBFA709E0B2AF36D
	A675F1D587CF9523CF890A637288B89F43E9444E2BEA5C5F8B75A850DC205453748E21783CFF8C579BG8F88AAED99167A0585EE9C7B1392BEB68F6A87016A008601EEF473986C01CE4426864945941BCB4BB8B653206F560609B8B4B5A43A4BB3ECB85F6106783BBC07702D8D71F7F9CA953F4B5D503628017B2A5B48FD18F746E0BCF006735692DEB9546BD4DE35DD75E9AAAFC4F205A854E71E61B1EB5ED17E66B397F82B4FF05D3DD8B4618EAF9247940B45A1E33E692687C16D3A6BA87FAE135B486D7AE6B2
	E79D54FB01220DBC4F0FFE42E37E05731F9496EC50FF27DA6A9D491E55C875185A980B811D907353B5D71770B553207D2087F95BCA35B1B56A2DA3C3900A20246D65935A51667069B256FEFEC2BB6E776E896367CCE84F520C2732BD76B117ED73E34F8B6E87AFA5FCAF9C7630B7A0D6AE4E1C3FAD6FAF4999740C1EA6FE52GEDE99EFEEEAF533757A648B51A54732D6267EBEB62FE53C8726820DA5FC36A1847527A9DD55763BE594956503F339E38EEEB685DDB54B66FA5F2056531C8CA936AE2190D63A12909
	5B6F1BB6B567EA42F7676681BCA5EA7F676C5C7E731B8133C09E20E120D94DFCFCB231958972C87C00C1571963606BACEA66BA5DF7745A5E318EDE63B8712A47D1BF53D5C25EEB1B291F592272A542DF2961D33FB0CB758BEB204D5642E36FB2BF6AEE9E5417822D86CA834A7582B63DBCE63C2D873F15CD9917FA65E1B7DCDEC1CD8847F21512EBFB5FFBA41B5BDF6A434F89333FE1CD78BD416625586DE525A7E37EB6AC29FCA3A614EF9634AD84DA893481E8B3D05ED9AE5F5A1E43D4BE7C4CGE13558BFC83E
	24F061709BC30C0D978F455446B27C3B09D1A92C847AA1D5A4D70BC38CFB64E020FFDC20985BFE8CB106FFB7F070AC4722D005FB9B04C07B229CD2A60F945858FC62936C589746AEB9CB30DED5B8056E961C25BA206BFCFDG4FDC7B5D12721F35219E4D2A2E670EE9F3F9533B97936672DBDB697CA6D69EA81B3F0D4E711BCE6D9CE9377B3237A418434346F635466E82FA8F4C3073EFB333DA79BD3058BE75BD700ABD7E9E40B5E36D790E296F01B30E78FB000F273A5A6BC45E00980CE06CCBB15D071F8F586F
	8B1A5F379D3DDE3EB2313F7871D73A863507CAFF62D85465570FC5CF7B75733BA67F54EF959D7E44EF953DFE6DDB8535675AFDF8DEABG9F6B010CED86E3BE10390D5B72C67FBF84E24BBAF66C7279B1964657EB052F7F05A9312C4926695F3CEFB561F756BED9D164A11C1F73D3CCF8DE0ABCCC1814F73B89F584697520C23BB27EDDA644FDD09AA0EC0A3BE7AAB1AF5324E1C51A58352855556C2D2F363BFBDA2A1B9B5DEE073D39476EEE33F7342838AD29AA19E2FCDDE3F37D3946B3DE3D99687831AA0C512B
	A57C1B8F6EA746A46E13736FD9A5EC7E30BC1B5BDBBC0E5CED543623EDB19B0F79649F6EC7F997C25B8A755C4CFB7F8DE52BF8FE7297DFE0FA4272B03859F14AA52F93EC2EF978E90569F1F46F4709660053BF853AE86CBB8F190AD7742B7614EC575ECF9BE0BF1B5B26FEDB25EBB56ECB0C1B56FD536326E79F0DC77C12F7FC1865D33EFD647B4B40C0C4D2719958172B726AA39EB99240C40B4A7E2B02C2A8F35B612E8672G8D82DD82CA81DAG34341D6B776DFD872750AFCD8408ED0445GFF4739EF7FCE2D
	6DD23533FDBD389F6D905F8483E2B0F011BCC734C047101F4633F308AFDF836B233F253C6F92DEBA70500753F91EA8C82C475585536B717982FD7BFB29E0327D3DDA20EFFF2F97E86D0F7D5D8A1BB72CFEBC217CF78AB08F2039EB0398927D44B7519CCB7CA4A726133600CF99247C7C680E983FCE4275214E7E6652037BDC781A1005BCEAE7072EE86F5255491D896F63159D942B6BBB623F2D5F510CB2951EB3982D67B886DEE9BAB205FD348C0941A0C4A3976CA19F5A0AE3DC11E2FE7A2EE61CBF427B30C65A
	B63FF9BB73B5FC4C7FGD0CB8788F9C95051008FGG2CAAGGD0CB818294G94G88G88GDCF7C3ADF9C95051008FGG2CAAGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG3A8FGGGG
**end of data**/
}
/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
			ivjJScrollPane1.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			getJScrollPane1().setViewportView(getXMLJTextArea());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}
/**
 * Gets the text property (java.lang.String) value.
 * @return The text property value.
 * @see #setText
 */
public java.lang.String getText() {
	return fieldText;
}
/**
 * Return the XMLJTextArea property value.
 * @return javax.swing.JTextArea
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextArea getXMLJTextArea() {
	if (ivjXMLJTextArea == null) {
		try {
			ivjXMLJTextArea = new javax.swing.JTextArea();
			ivjXMLJTextArea.setName("XMLJTextArea");
			ivjXMLJTextArea.setRows(0);
			ivjXMLJTextArea.setText("");
			ivjXMLJTextArea.setBounds(0, 0, 338, 300);
			ivjXMLJTextArea.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjXMLJTextArea;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	this.addPropertyChangeListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("WebSiteParserPanel");
		setLayout(new java.awt.BorderLayout());
		setSize(338, 300);
		add(getJScrollPane1(), "Center");
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		WebSiteParserPanel aWebSiteParserPanel;
		aWebSiteParserPanel = new WebSiteParserPanel();
		frame.setContentPane(aWebSiteParserPanel);
		frame.setSize(aWebSiteParserPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Sets the text property (java.lang.String) value.
 * @param text The new value for the property.
 * @see #getText
 */
public void setText(java.lang.String text) {
	String oldValue = fieldText;
	fieldText = text;
	firePropertyChange("text", oldValue, text);
}
}
