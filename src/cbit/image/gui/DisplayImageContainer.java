package cbit.image.gui;
import java.awt.image.*;

import org.vcell.util.Range;

import cbit.image.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class DisplayImageContainer extends ImageContainer {
	private DisplayImage displayImage = null;
	private DoubleDisplayAdapter displayAdapter = new DoubleDisplayAdapter();

/**
 * This method was created in VisualAge.
 */
public DisplayImageContainer() {
	super();
	setDisplayAdapter(displayAdapter);
}


/**
 * Geometry constructor comment.
 */
public DisplayImageContainer(DisplayImage displayImage) throws Exception {
	super();
	setDisplayAdapter(displayAdapter);
	setDisplayImage(displayImage);
}


/**
 * This method was created in VisualAge.
 * @return cbit.image.FileImage
 */
public DisplayImage getDisplayImage() {
	return displayImage;
}


/**
 * This method was created in VisualAge.
 * @return double
 * @param x int
 * @param y int
 * @param z int
 */
public double getValue(int x, int y, int z) throws Exception {
	if (getDisplayImage()!=null){
		int index = x + y*displayImage.getSizeX() + z*displayImage.getSizeX()*displayImage.getSizeY();
		return displayAdapter.getDataValues()[index];
	}else{
		return DisplayAdapter.PIXEL_NOT_DEFINED;
	}
}


/**
 * This method was created in VisualAge.
 * @return java.lang.String
 */
public String getValueLabel() {
	return "intensity";
}


/**
 * This method was created by a SmartGuide.
 */
public void refreshDisplayPixels() {
	if (displayAdapter.getDataValues()==null){
		bValid = false;
		displayPixels = null;
		return;
	}	
	try {
		int displayIndex = 0;
		int dataIndex = 0;
		displayAdapter.refresh();
		for (int j=0;j<getDisplayHeight();j++){
			for (int i=0;i<getDisplayWidth();i++){
				dataIndex = getIndexFromDisplay(i,j);
				displayPixels[displayIndex++] = displayAdapter.getPixelValues()[dataIndex];
			}
		}		
		bValid = true;

		firePropertyChange("pixels",null,displayPixels);
	}catch (Exception e){
		bValid = false;
		e.printStackTrace(System.out);
	}				
/*
	int red = 0;
	int green = 0;
	int blue = 0;
	int alpha = 0;
	if (displayImage==null) return;
	int selectedRGB = java.awt.Color.blue.getRGB();
	try {
		int displayIndex = 0;
		int dataIndex = 0;
		for (int j=0;j<getDisplayHeight();j++){
			for (int i=0;i<getDisplayWidth();i++){
				dataIndex = getIndexFromDisplay(i,j);
				int rgb = displayImage.getRGB()[dataIndex];
				if (rgb==selectedSourceValue){
					displayPixels[displayIndex++] = selectedRGB;
				}else{	
					displayPixels[displayIndex++] = rgb;
				}
			}
		}		
	}catch (Exception e){
		e.printStackTrace(System.out);
	}	
*/
}


/**
 * This method was created in VisualAge.
 * @param fileImage cbit.image.FileImage
 */
public void setDisplayImage(DisplayImage displayImage) throws Exception, ImageException {
	this.displayImage = displayImage;
	if (displayImage.getDoubles()!=null){
		displayAdapter.setDataValues(displayImage.getDoubles());
	}else{
		VCImage vcImage = displayImage.getVCImage();
		byte bytePixels[] = vcImage.getPixels();
		double doublePixels[] = new double[bytePixels.length];
		for (int i=0;i<doublePixels.length;i++){
			doublePixels[i] = bytePixels[i];
		}
		displayAdapter.setDataValues(doublePixels);
	}
	setDataRange(displayAdapter.getDataRange());
	setSize(displayImage.getSizeX(),displayImage.getSizeY(),displayImage.getSizeZ());
	bValid = true;
	refreshDisplayScale();
	refreshDisplayPixels();
}
}