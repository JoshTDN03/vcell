package org.vcell.pathway.sbo;

import java.util.HashMap;
import java.util.Map;

/*
 * WARNING: automatically generated by SBOBuilder. Do not edit this file!
 */
public class SBOListEx {

public static final String NO_SYMBOL = "?";
public static Map<String, SBOTerm> sboMap = new HashMap<String, SBOTerm>();

public static final SBOTerm x_0000000 = 
		SBOUtil.createTerm("SBO:0000000", "?", "systems biology representation", 
			"Representation of an entity used in a systems biology knowledge reconstruction, such as a model, pathway, network.", 
			"");
public static final SBOTerm x_0000001 = 
		SBOUtil.createTerm("SBO:0000001", "?", "rate law", 
			"mathematical description that relates quantities of reactants to the reaction velocity.", 
			"SBO:0000064");
public static final SBOTerm x_0000002 = 
		SBOUtil.createTerm("SBO:0000002", "?", "quantitative systems description parameter", 
			"A numerical value that defines certain characteristics of systems or system functions. It may be part of a calculation, but its value is not determined by the form of the equation itself, and may be arbitrarily assigned.", 
			"SBO:0000545");
public static final SBOTerm x_0000003 = 
		SBOUtil.createTerm("SBO:0000003", "?", "participant role", 
			"The function of a physical or conceptual entity, that is its role, in the execution of an event or process.", 
			"SBO:0000000");
public static final SBOTerm x_0000004 = 
		SBOUtil.createTerm("SBO:0000004", "?", "modelling framework", 
			"Set of assumptions that underlay a mathematical description.", 
			"SBO:0000000");
public static final SBOTerm x_0000005 = 
		SBOUtil.createTerm("SBO:0000005", "?", "obsolete mathematical expression", 
			"The description of a system in mathematical terms.", 
			"SBO:0000064");
public static final SBOTerm x_0000006 = 
		SBOUtil.createTerm("SBO:0000006", "?", "obsolete parameter", 
			"A numerical value that represents the amount of some entity, process or mathematical function of the system.", 
			"SBO:0000002");
public static final SBOTerm x_0000007 = 
		SBOUtil.createTerm("SBO:0000007", "?", "obsolete participant type", 
			"The 'kind' of entity involved in some process, action or reaction in the system. This may be enzyme, simple chemical, etc.", 
			"SBO:0000235");
public static final SBOTerm x_0000008 = 
		SBOUtil.createTerm("SBO:0000008", "?", "obsolete modelling framework", 
			"Basic assumptions that underlie a mathematical model.", 
			"SBO:0000004");
public static final SBOTerm x_0000009 = 
		SBOUtil.createTerm("SBO:0000009", "reaction rate constant", "kinetic constant", 
			"Numerical parameter that quantifies the velocity of a chemical reaction.", 
			"SBO:0000002");
public static final SBOTerm x_0000010 = 
		SBOUtil.createTerm("SBO:0000010", "?", "reactant", 
			"Substance consumed by a chemical reaction. Reactants react with each other to form the products of a chemical reaction. In a chemical equation the Reactants are the elements or compounds on the left hand side of the reaction equation. A reactant can be consumed and produced by the same reaction, its global quantity remaining unchanged.", 
			"SBO:0000003");
public static final SBOTerm x_0000011 = 
		SBOUtil.createTerm("SBO:0000011", "?", "product", 
			"Substance that is produced in a reaction. In a chemical equation the Products are the elements or compounds on the right hand side of the reaction equation. A product can be produced and consumed by the same reaction, its global quantity remaining unchanged.", 
			"SBO:0000003");
public static final SBOTerm x_0000012 = 
		SBOUtil.createTerm("SBO:0000012", "?", "mass action rate law", 
			"The Law of Mass Action, first expressed by Waage and Guldberg in 1864 (Waage, P.; Guldberg, C. M. Forhandlinger: Videnskabs-Selskabet i Christiana 1864, 35) states that the speed of a chemical reaction is proportional to the quantity of the reacting substances. More formally, the change of a product quantity is proportional to the product of reactant activities. In the case of a reaction occurring in a gas phase, the activities are equal to the partial pressures. In the case of a well-stirred aqueous medium, the activities are equal to the concentrations. In the case of discrete kinetic description, the quantity are expressed in number of molecules and the relevant volume are implicitely embedded in the kinetic constant.", 
			"SBO:0000001");
public static final SBOTerm x_0000013 = 
		SBOUtil.createTerm("SBO:0000013", "?", "catalyst", 
			"Substance that accelerates the velocity of a chemical reaction without itself being consumed or transformed. This effect is achieved by lowering the free energy of the transition state.", 
			"SBO:0000459");
public static final SBOTerm x_0000014 = 
		SBOUtil.createTerm("SBO:0000014", "?", "enzyme", 
			"A protein that catalyzes a chemical reaction. The word comes from en (at or in) and simo (leaven or yeast).", 
			"SBO:0000241");
public static final SBOTerm x_0000015 = 
		SBOUtil.createTerm("SBO:0000015", "?", "substrate", 
			"Molecule which is acted upon by an enzyme. The substrate binds with the enzyme's active site, and the enzyme catalyzes a chemical reaction involving the substrate.", 
			"SBO:0000010");
public static final SBOTerm x_0000016 = 
		SBOUtil.createTerm("SBO:0000016", "?", "unimolecular rate constant", 
			"Numerical parameter that quantifies the velocity of a chemical reaction involving only one reactant. ", 
			"SBO:0000009");
public static final SBOTerm x_0000017 = 
		SBOUtil.createTerm("SBO:0000017", "?", "bimolecular rate constant", 
			"Numerical parameter that quantifies the velocity of a chemical reaction involving two reactants.", 
			"SBO:0000009");
public static final SBOTerm x_0000018 = 
		SBOUtil.createTerm("SBO:0000018", "?", "trimolecular rate constant", 
			"Numerical parameter that quantifies the velocity of a chemical reaction involving three reactants. ", 
			"SBO:0000009");
public static final SBOTerm x_0000019 = 
		SBOUtil.createTerm("SBO:0000019", "?", "modifier", 
			"Substance that changes the velocity of a process without itself being consumed or transformed by the reaction.", 
			"SBO:0000003");
public static final SBOTerm x_0000020 = 
		SBOUtil.createTerm("SBO:0000020", "?", "inhibitor", 
			"Substance that decreases the probability of a chemical reaction without itself being consumed or transformed by the reaction. ", 
			"SBO:0000019");
public static final SBOTerm x_0000021 = 
		SBOUtil.createTerm("SBO:0000021", "activator", "potentiator", 
			"Substance that increases the probability of a chemical reaction without itself being consumed or transformed by the reaction. This effect is achieved by increasing the difference of free energy between the reactant(s) and the product(s)", 
			"SBO:0000459");
public static final SBOTerm x_0000022 = 
		SBOUtil.createTerm("SBO:0000022", "?", "forward unimolecular rate constant", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction involving only one reactant. This parameter encompasses all the contributions to the velocity except the quantity of the reactant.", 
			"SBO:0000016,SBO:0000153");
public static final SBOTerm x_0000023 = 
		SBOUtil.createTerm("SBO:0000023", "?", "forward bimolecular rate constant", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction involving two reactants. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. ", 
			"SBO:0000017,SBO:0000153");
public static final SBOTerm x_0000024 = 
		SBOUtil.createTerm("SBO:0000024", "?", "forward trimolecular rate constant", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction involving three reactants. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. ", 
			"SBO:0000018,SBO:0000153");
public static final SBOTerm x_0000025 = 
		SBOUtil.createTerm("SBO:0000025", "kcat", "catalytic rate constant", 
			"Numerical parameter that quantifies the velocity of an enzymatic reaction.", 
			"SBO:0000035");
public static final SBOTerm x_0000026 = 
		SBOUtil.createTerm("SBO:0000026", "?", "new term name", 
			"none", 
			"SBO:0000006");
public static final SBOTerm x_0000027 = 
		SBOUtil.createTerm("SBO:0000027", "Km", "Michaelis constant", 
			"Substrate concentration at which the velocity of reaction is half its maximum. Michaelis constant is an experimental parameter. According to the underlying molecular mechanism it can be interpreted differently in terms of microscopic constants.", 
			"SBO:0000193");
public static final SBOTerm x_0000028 = 
		SBOUtil.createTerm("SBO:0000028", "?", "enzymatic rate law for irreversible non-modulated non-interacting unireactant enzymes", 
			"Kinetics of enzymes that react only with one substance, their substrate. The enzymes do not catalyse the reactions in both directions.", 
			"SBO:0000150,SBO:0000326");
public static final SBOTerm x_0000029 = 
		SBOUtil.createTerm("SBO:0000029", "?", "Henri-Michaelis-Menten rate law", 
			"First general rate equation for reactions involving enzymes, it was presented in Victor Henri. Lois G?n?rales de l'Action des Diastases. Paris, Hermann, 1903.. The reaction is assumed to be made of a reversible of the binding of the substrate to the enzyme, followed by the breakdown of the complex generating the product. Ten years after Henri, Michaelis and Menten presented a variant of his equation, based on the hypothesis that the dissociation rate of the substrate was much larger than the rate of the product generation. Leonor Michaelis, Maud Menten (1913). Die Kinetik der Invertinwirkung, Biochem. Z. 49:333-369.", 
			"SBO:0000028");
public static final SBOTerm x_0000030 = 
		SBOUtil.createTerm("SBO:0000030", "?", "Van Slyke-Cullen rate law", 
			"Rate-law presented in Donald D. Van Slyke and Glenn E. Cullen. The mode of action of urease and of enzymes in general. J. Biol. Chem., Oct 1914; 19: 141-180. It assumes that the enzymatic reaction occurs as two irreversible steps.E+S -> ES -> E+P. Although of the same form than the Henri-Michaelis-Menten equation, it is semantically different since K now represents the ratio between the production rate and the association rate of the enzyme and the substrate.", 
			"SBO:0000028");
public static final SBOTerm x_0000031 = 
		SBOUtil.createTerm("SBO:0000031", "?", "Briggs-Haldane rate law", 
			"The Briggs-Haldane rate law is a general rate equation that does not require the restriction of equilibrium of Henri-Michaelis-Menten or irreversible reactions of Van Slyke, but instead make the hypothesis that the complex enzyme-substrate is in quasi-steady-state. Although of the same form than the Henri-Michaelis-Menten equation, it is semantically different since Km now represents a pseudo-equilibrium constant, and is equal to the ratio between the rate of consumption of the complex (sum of dissociation of substrate and generation of product) and the association rate of the enzyme and the substrate.", 
			"SBO:0000028");
public static final SBOTerm x_0000032 = 
		SBOUtil.createTerm("SBO:0000032", "?", "reverse unimolecular rate constant", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction involving only one product. This parameter encompasses all the contributions to the velocity except the quantity of the product.", 
			"SBO:0000016,SBO:0000156");
public static final SBOTerm x_0000033 = 
		SBOUtil.createTerm("SBO:0000033", "?", "reverse bimolecular rate constant", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction involving only one product. This parameter encompasses all the contributions to the velocity except the quantity of the product.", 
			"SBO:0000017,SBO:0000156");
public static final SBOTerm x_0000034 = 
		SBOUtil.createTerm("SBO:0000034", "?", "reverse trimolecular rate constant", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction involving three products. This parameter encompasses all the contributions to the velocity except the quantity of the products.", 
			"SBO:0000018,SBO:0000156");
public static final SBOTerm x_0000035 = 
		SBOUtil.createTerm("SBO:0000035", "?", "forward unimolecular rate constant, continuous case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction involving only one reactant. This parameter encompasses all the contributions to the velocity except the quantity of the reactant. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000022,SBO:0000154");
public static final SBOTerm x_0000036 = 
		SBOUtil.createTerm("SBO:0000036", "?", "forward bimolecular rate constant, continuous case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction involving two reactants. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000023,SBO:0000154");
public static final SBOTerm x_0000037 = 
		SBOUtil.createTerm("SBO:0000037", "?", "forward trimolecular rate constant, continuous case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction involving three reactants. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000024,SBO:0000154");
public static final SBOTerm x_0000038 = 
		SBOUtil.createTerm("SBO:0000038", "?", "reverse unimolecular rate constant, continuous case", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction involving only one product. This parameter encompasses all the contributions to the velocity except the quantity of the product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000032");
public static final SBOTerm x_0000039 = 
		SBOUtil.createTerm("SBO:0000039", "?", "reverse bimolecular rate constant, continuous case", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction involving only one product. This parameter encompasses all the contributions to the velocity except the quantity of the product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000033");
public static final SBOTerm x_0000040 = 
		SBOUtil.createTerm("SBO:0000040", "?", "reverse trimolecular rate constant, continuous case", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction involving three products. This parameter encompasses all the contributions to the velocity except the quantity of the products. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000034");
public static final SBOTerm x_0000041 = 
		SBOUtil.createTerm("SBO:0000041", "?", "mass action rate law for irreversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products.", 
			"SBO:0000012");
public static final SBOTerm x_0000042 = 
		SBOUtil.createTerm("SBO:0000042", "?", "mass action rate law for reversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products.", 
			"SBO:0000012");
public static final SBOTerm x_0000043 = 
		SBOUtil.createTerm("SBO:0000043", "?", "mass action rate law for zeroth order irreversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is constant.", 
			"SBO:0000041");
public static final SBOTerm x_0000044 = 
		SBOUtil.createTerm("SBO:0000044", "?", "mass action rate law for first order irreversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of one reactant.", 
			"SBO:0000041");
public static final SBOTerm x_0000045 = 
		SBOUtil.createTerm("SBO:0000045", "?", "mass action rate law for second order irreversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to two reactant quantity.", 
			"SBO:0000041");
public static final SBOTerm x_0000046 = 
		SBOUtil.createTerm("SBO:0000046", "?", "zeroth order rate constant", 
			"Numerical parameter that quantifies the velocity of a chemical reaction independant of the reactant quantities. This parameter encompasses all the contributions to the velocity.", 
			"SBO:0000009");
public static final SBOTerm x_0000047 = 
		SBOUtil.createTerm("SBO:0000047", "?", "mass action rate law for zeroth order irreversible reactions, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is constant. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000043,SBO:0000163");
public static final SBOTerm x_0000048 = 
		SBOUtil.createTerm("SBO:0000048", "?", "forward zeroth order rate constant, continuous case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction independant of the reactant quantities. This parameter encompasses all the contributions to the velocity. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000154,SBO:0000162");
public static final SBOTerm x_0000049 = 
		SBOUtil.createTerm("SBO:0000049", "?", "mass action rate law for first order irreversible reactions, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of one reactant. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000044,SBO:0000163");
public static final SBOTerm x_0000050 = 
		SBOUtil.createTerm("SBO:0000050", "?", "mass action rate law for second order irreversible reactions, one reactant", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products, and the change of a product quantity is proportional to the square of one reactant quantity.", 
			"SBO:0000045");
public static final SBOTerm x_0000051 = 
		SBOUtil.createTerm("SBO:0000051", "?", "new term name", 
			"", 
			"SBO:0000005");
public static final SBOTerm x_0000052 = 
		SBOUtil.createTerm("SBO:0000052", "?", "mass action rate law for second order irreversible reactions, one reactant, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the square of one reactant quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000050,SBO:0000163");
public static final SBOTerm x_0000053 = 
		SBOUtil.createTerm("SBO:0000053", "?", "mass action rate law for second order irreversible reactions, two reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of two reactants. ", 
			"SBO:0000045");
public static final SBOTerm x_0000054 = 
		SBOUtil.createTerm("SBO:0000054", "?", "mass action rate law for second order irreversible reactions, two reactants, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the product of two reactant quantities. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000053,SBO:0000163");
public static final SBOTerm x_0000055 = 
		SBOUtil.createTerm("SBO:0000055", "?", "mass action rate law for third order irreversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to three reactant quantities.", 
			"SBO:0000041");
public static final SBOTerm x_0000056 = 
		SBOUtil.createTerm("SBO:0000056", "?", "mass action rate law for third order irreversible reactions, one reactant", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the cube of one reactant quantity.", 
			"SBO:0000055");
public static final SBOTerm x_0000057 = 
		SBOUtil.createTerm("SBO:0000057", "?", "mass action rate law for third order irreversible reactions, one reactant, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products, and the change of a product quantity is proportional to the cube of one reactant quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000056,SBO:0000163");
public static final SBOTerm x_0000058 = 
		SBOUtil.createTerm("SBO:0000058", "?", "mass action rate law for third order irreversible reactions, two reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of one reactant and the square of the quantity of the other reactant.", 
			"SBO:0000055");
public static final SBOTerm x_0000059 = 
		SBOUtil.createTerm("SBO:0000059", "?", "mass action rate law for third order irreversible reactions, two reactants, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of one reactant and the square of the quantity of the other reactant. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000058,SBO:0000163");
public static final SBOTerm x_0000060 = 
		SBOUtil.createTerm("SBO:0000060", "?", "mass action rate law for third order irreversible reactions, three reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of three reactants.", 
			"SBO:0000055");
public static final SBOTerm x_0000061 = 
		SBOUtil.createTerm("SBO:0000061", "?", "mass action rate law for third order irreversible reactions, three reactants, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products, and the change of a product quantity is proportional to the product of three reactant quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000060,SBO:0000163");
public static final SBOTerm x_0000062 = 
		SBOUtil.createTerm("SBO:0000062", "?", "continuous framework", 
			"Modelling approach where the quantities of participants are considered continuous, and represented by real values. The associated simulation methods make use of differential equations.", 
			"SBO:0000004");
public static final SBOTerm x_0000063 = 
		SBOUtil.createTerm("SBO:0000063", "?", "discrete framework", 
			"Modelling approach where the quantities of participants are considered discrete, and represented by integer values. The associated simulation methods can be deterministic or stochastic. ", 
			"SBO:0000004");
public static final SBOTerm x_0000064 = 
		SBOUtil.createTerm("SBO:0000064", "?", "mathematical expression", 
			"Formal representation of a calculus linking parameters and variables of a model.", 
			"SBO:0000000");
public static final SBOTerm x_0000065 = 
		SBOUtil.createTerm("SBO:0000065", "?", "forward zeroth order rate constant, discrete case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction independant of the reactant quantities. This parameter encompasses all the contributions to the velocity. It is to be used in a reaction modelled using a discrete framework. ", 
			"SBO:0000155,SBO:0000162");
public static final SBOTerm x_0000066 = 
		SBOUtil.createTerm("SBO:0000066", "?", "forward unimolecular rate constant, discrete case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction involving only one reactant. This parameter encompasses all the contributions to the velocity except the quantity of the reactant. It is to be used in a reaction modelled using a discrete framework.  ", 
			"SBO:0000022,SBO:0000155");
public static final SBOTerm x_0000067 = 
		SBOUtil.createTerm("SBO:0000067", "?", "forward bimolecular rate constant, discrete case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction involving two reactants. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. It is to be used in a reaction modelled using a discrete framework. ", 
			"SBO:0000023,SBO:0000155");
public static final SBOTerm x_0000068 = 
		SBOUtil.createTerm("SBO:0000068", "?", "forward trimolecular rate constant, discrete case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction involving three reactants. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. It is to be used in a reaction modelled using a discrete framework. ", 
			"SBO:0000024,SBO:0000155");
public static final SBOTerm x_0000069 = 
		SBOUtil.createTerm("SBO:0000069", "?", "mass action rate law for zeroth order reversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is constant.", 
			"SBO:0000042");
public static final SBOTerm x_0000070 = 
		SBOUtil.createTerm("SBO:0000070", "?", "mass action rate law for zeroth order forward, first order reverse, reversible reactions, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is constant. The rate of the reverse process is proportional to the quantity of one product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000069");
public static final SBOTerm x_0000071 = 
		SBOUtil.createTerm("SBO:0000071", "?", "mass action rate law for zeroth order forward, second order reverse, reversible reactions, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is constant. The rate of the reverse process is proportional totwo product quantities.", 
			"SBO:0000069");
public static final SBOTerm x_0000072 = 
		SBOUtil.createTerm("SBO:0000072", "?", "mass action rate law for zeroth order forward, second order reverse, reversible reactions, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is constant. The rate of the reverse process is proportional to the square of one product quantity. It is to be used in a reaction modelled using a continuous framework.  ", 
			"SBO:0000071");
public static final SBOTerm x_0000073 = 
		SBOUtil.createTerm("SBO:0000073", "?", "mass action rate law for zeroth order forward, second order reverse, reversible reactions, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is constant. The rate of the reverse process is proportional to the product of two product quantities. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000071");
public static final SBOTerm x_0000074 = 
		SBOUtil.createTerm("SBO:0000074", "?", "mass action rate law for zeroth order forward, third order reverse, reversible reactions, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is constant. The rate of the reverse process is proportional to three product quantities.", 
			"SBO:0000069");
public static final SBOTerm x_0000075 = 
		SBOUtil.createTerm("SBO:0000075", "?", "mass action rate law for zeroth order forward, third order reverse, reversible reactions, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is constant. The rate of the reverse process is proportional to the cube of one product quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000074");
public static final SBOTerm x_0000076 = 
		SBOUtil.createTerm("SBO:0000076", "?", "mass action rate law for zeroth order forward, third order reverse, reversible reactions, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is constant. The rate of the reverse process is proportional to the quantity of one product and the square of the quantity of the other product. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000074");
public static final SBOTerm x_0000077 = 
		SBOUtil.createTerm("SBO:0000077", "?", "mass action rate law for zeroth order forward, third order reverse, reversible reactions, three products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is constant. The rate of the reverse process is proportional to the product of three product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000074");
public static final SBOTerm x_0000078 = 
		SBOUtil.createTerm("SBO:0000078", "?", "mass action rate law for first order reversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant.", 
			"SBO:0000042");
public static final SBOTerm x_0000079 = 
		SBOUtil.createTerm("SBO:0000079", "?", "mass action rate law for first order forward, zeroth order reverse, reversible reactions, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant. The rate of the reverse process is constant. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000078");
public static final SBOTerm x_0000080 = 
		SBOUtil.createTerm("SBO:0000080", "?", "mass action rate law for first order forward, first order reverse, reversible reactions, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant. The rate of the reverse process is proportional to the quantity of one product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000078");
public static final SBOTerm x_0000081 = 
		SBOUtil.createTerm("SBO:0000081", "?", "mass action rate law for first order forward, second order reverse, reversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant. The rate of the reverse process is proportional to two product quantities.", 
			"SBO:0000078");
public static final SBOTerm x_0000082 = 
		SBOUtil.createTerm("SBO:0000082", "?", "mass action rate law for first order forward, second order reverse, reversible reactions, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant. The rate of the reverse process is proportional to the square of one product quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000081");
public static final SBOTerm x_0000083 = 
		SBOUtil.createTerm("SBO:0000083", "?", "mass action rate law for first order forward, second order reverse, reversible reactions, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant. The rate of the reverse process is proportional to the product of two product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000081");
public static final SBOTerm x_0000084 = 
		SBOUtil.createTerm("SBO:0000084", "?", "mass action rate law for first order forward, third order reverse, reversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant. The rate of the reverse process is proportional to three product quantities.", 
			"SBO:0000078");
public static final SBOTerm x_0000085 = 
		SBOUtil.createTerm("SBO:0000085", "?", "mass action rate law for first order forward, third order reverse, reversible reactions, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant. The rate of the reverse process is proportional to the cube of one product quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000084");
public static final SBOTerm x_0000086 = 
		SBOUtil.createTerm("SBO:0000086", "?", "mass action rate law for first order forward, third order reverse, reversible reactions, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant. The rate of the reverse process is proportional to the quantity of one product and the square of the quantity of the other product. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000084");
public static final SBOTerm x_0000087 = 
		SBOUtil.createTerm("SBO:0000087", "?", "mass action rate law for first order forward, third order reverse, reversible reactions, three products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant. The rate of the reverse process is proportional to the product of three product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000084");
public static final SBOTerm x_0000088 = 
		SBOUtil.createTerm("SBO:0000088", "?", "mass action rate law for second order reversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to two reactant quantities.", 
			"SBO:0000042");
public static final SBOTerm x_0000089 = 
		SBOUtil.createTerm("SBO:0000089", "?", "mass action rate law for second order forward, reversible reactions, one reactant", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity.", 
			"SBO:0000088");
public static final SBOTerm x_0000090 = 
		SBOUtil.createTerm("SBO:0000090", "?", "mass action rate law for second order forward, zeroth order reverse, reversible reactions, one reactant, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity. The rate of the reverse process is constant. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000089");
public static final SBOTerm x_0000091 = 
		SBOUtil.createTerm("SBO:0000091", "?", "mass action rate law for second order forward, first order reverse, reversible reactions, one reactant, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity. The rate of the reverse process is proportional to the quantity of one product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000089");
public static final SBOTerm x_0000092 = 
		SBOUtil.createTerm("SBO:0000092", "?", "mass action rate law for second order forward, second order reverse, reversible reactions, one reactant", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity. The rate of the reverse process is proportional to the quantity of two products.", 
			"SBO:0000089");
public static final SBOTerm x_0000093 = 
		SBOUtil.createTerm("SBO:0000093", "?", "mass action rate law for second order forward, second order reverse, reversible reactions, one reactant, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity. The rate of the reverse process is proportional to the square of one product quantity. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000092");
public static final SBOTerm x_0000094 = 
		SBOUtil.createTerm("SBO:0000094", "?", "mass action rate law for second order forward, second order reverse, reversible reactions, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity. The rate of the reverse process is proportional to the product of two product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000092");
public static final SBOTerm x_0000095 = 
		SBOUtil.createTerm("SBO:0000095", "?", "mass action rate law for second order forward, third order reverse, reversible reactions, one reactant", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity. The rate of the reverse process is proportional to the quantity of three products.", 
			"SBO:0000089");
public static final SBOTerm x_0000096 = 
		SBOUtil.createTerm("SBO:0000096", "?", "mass action rate law for second order forward, third order reverse, reversible reactions, one reactant, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity. The rate of the reverse process is proportional to the cube of one product quantity. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000095");
public static final SBOTerm x_0000097 = 
		SBOUtil.createTerm("SBO:0000097", "?", "mass action rate law for second order forward, third order reverse, reversible reactions, one reactant, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity. The rate of the reverse process is proportional to the quantity of one product and the square of the quantity of the other product. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000095");
public static final SBOTerm x_0000098 = 
		SBOUtil.createTerm("SBO:0000098", "?", "mass action rate law for second order forward, third order reverse, reversible reactions, one reactant, three products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the square of one reactant quantity. The rate of the reverse process is proportional to the product of three product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000095");
public static final SBOTerm x_0000099 = 
		SBOUtil.createTerm("SBO:0000099", "?", "mass action rate law for second order forward, reversible reactions, two reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities.", 
			"SBO:0000088");
public static final SBOTerm x_0000100 = 
		SBOUtil.createTerm("SBO:0000100", "?", "mass action rate law for second order forward, zeroth order reverse, reversible reactions, two reactants, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities. The rate of the reverse process is constant. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000099");
public static final SBOTerm x_0000101 = 
		SBOUtil.createTerm("SBO:0000101", "?", "mass action rate law for second order forward, first order reverse, reversible reactions, two reactants, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities. The rate of the reverse process is proportional to the quantity of one product. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000099");
public static final SBOTerm x_0000102 = 
		SBOUtil.createTerm("SBO:0000102", "?", "mass action rate law for second order forward, second order reverse, reversible reactions, two reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities. The rate of the reverse process is proportional to the quantity of two products.", 
			"SBO:0000099");
public static final SBOTerm x_0000103 = 
		SBOUtil.createTerm("SBO:0000103", "?", "mass action rate law for second order forward, second order reverse, reversible reactions, two reactants, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities. The rate of the reverse process is proportional to the square of one product quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000102");
public static final SBOTerm x_0000104 = 
		SBOUtil.createTerm("SBO:0000104", "?", "mass action rate law for second order forward, second order reverse, reversible reactions, two reactants, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities. The rate of the reverse process is proportional to the product of two product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000102");
public static final SBOTerm x_0000105 = 
		SBOUtil.createTerm("SBO:0000105", "?", "mass action rate law for second order forward, third order reverse, reversible reactions, two reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities. The rate of the reverse process is proportional to the quantity of three products.", 
			"SBO:0000099");
public static final SBOTerm x_0000106 = 
		SBOUtil.createTerm("SBO:0000106", "?", "mass action rate law for second order forward, third order reverse, reversible reactions, two reactants, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities. The rate of the reverse process is proportional to the cube of one product quantity. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000105");
public static final SBOTerm x_0000107 = 
		SBOUtil.createTerm("SBO:0000107", "?", "mass action rate law for second order forward, third order reverse, reversible reactions, two reactants, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities. The rate of the reverse process is proportional to the quantity of one product and the square of the quantity of the other product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000105");
public static final SBOTerm x_0000108 = 
		SBOUtil.createTerm("SBO:0000108", "?", "mass action rate law for second order forward, third order reverse, reversible reactions, two reactants, three products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of two reactant quantities. The rate of the reverse process is proportional to the product of three product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000105");
public static final SBOTerm x_0000109 = 
		SBOUtil.createTerm("SBO:0000109", "?", "mass action rate law for third order reversible reactions", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of a reactant quantity.", 
			"SBO:0000042");
public static final SBOTerm x_0000110 = 
		SBOUtil.createTerm("SBO:0000110", "?", "mass action rate law for third order forward, reversible reactions, two reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant.", 
			"SBO:0000109");
public static final SBOTerm x_0000111 = 
		SBOUtil.createTerm("SBO:0000111", "?", "mass action rate law for third order forward, zeroth order reverse, reversible reactions, two reactants, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant. The rate of the reverse process is constant. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000110");
public static final SBOTerm x_0000112 = 
		SBOUtil.createTerm("SBO:0000112", "?", "mass action rate law for third order forward, first order reverse, reversible reactions, two reactants, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant. The rate of the reverse process is proportional to the quantity of one product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000110");
public static final SBOTerm x_0000113 = 
		SBOUtil.createTerm("SBO:0000113", "?", "mass action rate law for third order forward, second order reverse, reversible reactions, two reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant. The rate of the reverse process is proportional to the quantity of two products.", 
			"SBO:0000110");
public static final SBOTerm x_0000114 = 
		SBOUtil.createTerm("SBO:0000114", "?", "mass action rate law for third order forward, second order reverse, reversible reactions, two reactants, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant. The rate of the reverse process is proportional to the square of one product quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000113");
public static final SBOTerm x_0000115 = 
		SBOUtil.createTerm("SBO:0000115", "?", "mass action rate law for third order forward, second order reverse, reversible reactions, two reactants, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant. The rate of the reverse process is proportional to the product of two product quantities. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000113");
public static final SBOTerm x_0000116 = 
		SBOUtil.createTerm("SBO:0000116", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, two reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant. The rate of the reverse process is proportional to the quantity of three products.", 
			"SBO:0000110");
public static final SBOTerm x_0000117 = 
		SBOUtil.createTerm("SBO:0000117", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, two reactants, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant. The rate of the reverse process is proportional to the cube of one product quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000116");
public static final SBOTerm x_0000118 = 
		SBOUtil.createTerm("SBO:0000118", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, two reactants, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant. The rate of the reverse process is proportional to the quantity of one product and the square of the quantity of the other product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000116");
public static final SBOTerm x_0000119 = 
		SBOUtil.createTerm("SBO:0000119", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, two reactants, three products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the quantity of one reactant and the square of quantity of the other reactant. The rate of the reverse process is proportional to the product of three product quantities. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000116");
public static final SBOTerm x_0000120 = 
		SBOUtil.createTerm("SBO:0000120", "?", "mass action rate law for third order forward, reversible reactions, three reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities.", 
			"SBO:0000109");
public static final SBOTerm x_0000121 = 
		SBOUtil.createTerm("SBO:0000121", "?", "mass action rate law for third order forward, zeroth order reverse, reversible reactions, three reactants, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities. The rate of the reverse process is constant. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000120");
public static final SBOTerm x_0000122 = 
		SBOUtil.createTerm("SBO:0000122", "?", "mass action rate law for third order forward, first order reverse, reversible reactions, three reactants, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities. The rate of the reverse process is proportional to the quantity of one product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000120");
public static final SBOTerm x_0000123 = 
		SBOUtil.createTerm("SBO:0000123", "?", "mass action rate law for third order forward, second order reverse, reversible reactions, three reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities. The rate of the reverse process is proportional to the quantity of two products.", 
			"SBO:0000120");
public static final SBOTerm x_0000124 = 
		SBOUtil.createTerm("SBO:0000124", "?", "mass action rate law for third order forward, second order reverse, reversible reactions, three reactants, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities. The rate of the reverse process is proportional to the square of one product quantity. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000123");
public static final SBOTerm x_0000125 = 
		SBOUtil.createTerm("SBO:0000125", "?", "mass action rate law for third order forward, second order reverse, reversible reactions, three reactants, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities. The rate of the reverse process is proportional to the product of two product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000123");
public static final SBOTerm x_0000126 = 
		SBOUtil.createTerm("SBO:0000126", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, three reactants", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities. The rate of the reverse process is proportional to the quantity of three products.", 
			"SBO:0000120");
public static final SBOTerm x_0000127 = 
		SBOUtil.createTerm("SBO:0000127", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, three reactants, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities. The rate of the reverse process is proportional to the cube of one product quantity. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000126");
public static final SBOTerm x_0000128 = 
		SBOUtil.createTerm("SBO:0000128", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, three reactants, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities. The rate of the reverse process is proportional to the quantity of one product and the square of the quantity of the other product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000126");
public static final SBOTerm x_0000129 = 
		SBOUtil.createTerm("SBO:0000129", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, three reactants, three products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the product of three reactant quantities. The rate of the reverse process is proportional to the product of three product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000126");
public static final SBOTerm x_0000130 = 
		SBOUtil.createTerm("SBO:0000130", "?", "mass action rate law for third order forward, reversible reactions, one reactant", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity.", 
			"SBO:0000109");
public static final SBOTerm x_0000131 = 
		SBOUtil.createTerm("SBO:0000131", "?", "mass action rate law for third order forward, zeroth order reverse, reversible reactions, one reactant, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity. The rate of the reverse process is constant. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000130");
public static final SBOTerm x_0000132 = 
		SBOUtil.createTerm("SBO:0000132", "?", "mass action rate law for third order forward, first order reverse, reversible reactions, one reactant, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity. The rate of the reverse process is proportional to the quantity of one product. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000130");
public static final SBOTerm x_0000133 = 
		SBOUtil.createTerm("SBO:0000133", "?", "mass action rate law for third order forward, second order reverse, reversible reactions, one reactant", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity. The rate of the reverse process is proportional to the quantity of two products.", 
			"SBO:0000130");
public static final SBOTerm x_0000134 = 
		SBOUtil.createTerm("SBO:0000134", "?", "mass action rate law for third order forward, second order reverse, reversible reactions, one reactant, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity. The rate of the reverse process is proportional to the square of one product quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000133");
public static final SBOTerm x_0000135 = 
		SBOUtil.createTerm("SBO:0000135", "?", "mass action rate law for third order forward, second order reverse, reversible reactions, one reactant, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity. The rate of the reverse process is proportional to the product of two product quantities. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000133");
public static final SBOTerm x_0000136 = 
		SBOUtil.createTerm("SBO:0000136", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, one reactant", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity. The rate of the reverse process is proportional to the quantity of three products.", 
			"SBO:0000130");
public static final SBOTerm x_0000137 = 
		SBOUtil.createTerm("SBO:0000137", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, one reactant, one product, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity. The rate of the reverse process is proportional to the cube of one product quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000136");
public static final SBOTerm x_0000138 = 
		SBOUtil.createTerm("SBO:0000138", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, one reactant, two products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity. The rate of the reverse process is proportional to the quantity of one product and the square of the quantity of the other product. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000136");
public static final SBOTerm x_0000139 = 
		SBOUtil.createTerm("SBO:0000139", "?", "mass action rate law for third order forward, third order reverse, reversible reactions, one reactant, three products, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does include a reverse process that creates the reactants from the products. The rate of the forward process is proportional to the cube of one reactant quantity. The rate of the reverse process is proportional to the product of three product quantities. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000136");
public static final SBOTerm x_0000140 = 
		SBOUtil.createTerm("SBO:0000140", "?", "mass action rate law for zeroth order irreversible reactions, discrete scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is constant. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000043,SBO:0000166");
public static final SBOTerm x_0000141 = 
		SBOUtil.createTerm("SBO:0000141", "?", "mass action rate law for first order irreversible reactions, discrete scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of one reactant. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000044,SBO:0000166");
public static final SBOTerm x_0000142 = 
		SBOUtil.createTerm("SBO:0000142", "?", "mass action rate law for second order irreversible reactions, one reactant, discrete scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the square of one reactant quantity. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000050,SBO:0000166");
public static final SBOTerm x_0000143 = 
		SBOUtil.createTerm("SBO:0000143", "?", "mass action rate law for second order irreversible reactions, two reactants, discrete scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of two reactants. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000053,SBO:0000166");
public static final SBOTerm x_0000144 = 
		SBOUtil.createTerm("SBO:0000144", "?", "mass action rate law for third order irreversible reactions, one reactant, discrete scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the cube of one reactant quantity. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000056,SBO:0000166");
public static final SBOTerm x_0000145 = 
		SBOUtil.createTerm("SBO:0000145", "?", "mass action rate law for third order irreversible reactions, two reactants, discrete scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of one reactant and the square of the quantity of the other reactant. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000058,SBO:0000166");
public static final SBOTerm x_0000146 = 
		SBOUtil.createTerm("SBO:0000146", "?", "mass action rate law for third order irreversible reactions, three reactants, discrete scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of three reactants. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000060,SBO:0000166");
public static final SBOTerm x_0000147 = 
		SBOUtil.createTerm("SBO:0000147", "?", "thermodynamic temperature", 
			"Temperature is the physical property of a system which underlies the common notions of hot and cold; the material with the higher temperature is said to be hotter. Temperature is a quantity related to the average kinetic energy of the particles in a substance. The 10th Conference Generale des Poids et Mesures decided to define the thermodynamic temperature scale by choosing the triple point of water as the fundamental fixed point, and assigning to it the temperature 273,16 degrees Kelvin, exactly (0.01 degree Celsius).", 
			"SBO:0000002");
public static final SBOTerm x_0000148 = 
		SBOUtil.createTerm("SBO:0000148", "?", "temperature difference", 
			"Quantity resulting from the difference between two thermodynamic temperatures. A difference or interval of temperature may be expressed in Kelvins or in degrees Celsius. ", 
			"SBO:0000002");
public static final SBOTerm x_0000149 = 
		SBOUtil.createTerm("SBO:0000149", "?", "number of substrates", 
			"Number of molecules which are acted upon by an enzyme.", 
			"SBO:0000157");
public static final SBOTerm x_0000150 = 
		SBOUtil.createTerm("SBO:0000150", "?", "enzymatic rate law for irreversible non-modulated non-interacting reactant enzymes", 
			"Kinetics of enzymes that react with one or several substances, their substrates, that bind independently. The enzymes do not catalyse the reactions in both directions. ", 
			"SBO:0000268");
public static final SBOTerm x_0000151 = 
		SBOUtil.createTerm("SBO:0000151", "?", "enzymatic rate law for irreversible non-modulated non-interacting bireactant enzymes", 
			"Kinetics of enzymes that react with two substances, their substrates, that bind independently. The enzymes do not catalyse the reactions in both directions. ", 
			"SBO:0000150");
public static final SBOTerm x_0000152 = 
		SBOUtil.createTerm("SBO:0000152", "?", "enzymatic rate law for irreversible non-modulated non-interacting trireactant enzymes", 
			"Kinetics of enzymes that react with three substances, their substrates, that bind independently. The enzymes do not catalyse the reactions in both directions.", 
			"SBO:0000150");
public static final SBOTerm x_0000153 = 
		SBOUtil.createTerm("SBO:0000153", "?", "forward rate constant", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction. This parameter encompasses all the contributions to the velocity except the quantity of the reactants.", 
			"SBO:0000009");
public static final SBOTerm x_0000154 = 
		SBOUtil.createTerm("SBO:0000154", "?", "forward rate constant, continuous case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000153");
public static final SBOTerm x_0000155 = 
		SBOUtil.createTerm("SBO:0000155", "?", "forward rate constant, discrete case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000153");
public static final SBOTerm x_0000156 = 
		SBOUtil.createTerm("SBO:0000156", "?", "reverse rate constant", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. ", 
			"SBO:0000009");
public static final SBOTerm x_0000157 = 
		SBOUtil.createTerm("SBO:0000157", "?", "number of reactants", 
			"Number of different substances consumed by a chemical reaction.", 
			"SBO:0000188");
public static final SBOTerm x_0000158 = 
		SBOUtil.createTerm("SBO:0000158", "?", "order of a reaction with respect to a reactant", 
			"The order of a reaction with respect to a certain reactant is defined as the power to which its concentration term in the rate equation is raised.", 
			"SBO:0000382");
public static final SBOTerm x_0000159 = 
		SBOUtil.createTerm("SBO:0000159", "?", "non-integral order rate constant", 
			"Numerical parameter that quantifies the velocity of a chemical reaction where reactants have non-integral orders. This parameter encompasses all the contributions to the velocity except the quantity of the reactants.", 
			"SBO:0000009");
public static final SBOTerm x_0000160 = 
		SBOUtil.createTerm("SBO:0000160", "?", "forward non-integral order rate constant", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction where reactants have non-integral orders. This parameter encompasses all the contributions to the velocity except the quantity of the reactants.", 
			"SBO:0000153,SBO:0000159");
public static final SBOTerm x_0000161 = 
		SBOUtil.createTerm("SBO:0000161", "?", "reverse non-integral order rate constant", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction where products have non-integral orders. This parameter encompasses all the contributions to the velocity except the quantity of the products.", 
			"SBO:0000156,SBO:0000159");
public static final SBOTerm x_0000162 = 
		SBOUtil.createTerm("SBO:0000162", "?", "forward zeroth order rate constant", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction independant of the reactant quantities. This parameter encompasses all the contributions to the velocity.", 
			"SBO:0000046,SBO:0000153");
public static final SBOTerm x_0000163 = 
		SBOUtil.createTerm("SBO:0000163", "?", "mass action rate law for irreversible reactions, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000041");
public static final SBOTerm x_0000164 = 
		SBOUtil.createTerm("SBO:0000164", "?", "second order irreversible mass action kinetics, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to two reactant quantity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000005");
public static final SBOTerm x_0000165 = 
		SBOUtil.createTerm("SBO:0000165", "?", "third order irreversible mass action kinetics, continuous scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to three reactant quantities. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000005");
public static final SBOTerm x_0000166 = 
		SBOUtil.createTerm("SBO:0000166", "?", "mass action rate law for irreversible reactions, discrete scheme", 
			"Reaction scheme where the products are created from the reactants and the change of a product quantity is proportional to the product of reactant activities. The reaction scheme does not include any reverse process that creates the reactants from the products. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000041");
public static final SBOTerm x_0000231 = 
		SBOUtil.createTerm("SBO:0000231", "?", "occurring entity representation", 
			"Representation of an entity that manifests, unfolds or develops through time, such as a discrete event, or a mutual or reciprocal action or influence that happens between participating physical entities, and/or other occurring entities. ", 
			"SBO:0000000");
public static final SBOTerm x_0000232 = 
		SBOUtil.createTerm("SBO:0000232", "?", "obsolete event", 
			"A phenomenon that takes place and which may be observable, or may be determined to have occurred as the result of an action or process.", 
			"SBO:0000231");
public static final SBOTerm x_0000167 = 
		SBOUtil.createTerm("SBO:0000167", "?", "biochemical or transport reaction", 
			"An event involving one or more physical entities that modifies the structure, location or free energy of at least one of the participants.", 
			"SBO:0000375");
public static final SBOTerm x_0000168 = 
		SBOUtil.createTerm("SBO:0000168", "modulation", "control", 
			"Modification of the execution of an event or a process.", 
			"SBO:0000374");
public static final SBOTerm x_0000169 = 
		SBOUtil.createTerm("SBO:0000169", "?", "inhibition", 
			"Negative modulation of the execution of a process.", 
			"SBO:0000168");
public static final SBOTerm x_0000170 = 
		SBOUtil.createTerm("SBO:0000170", "?", "stimulation", 
			"Positive modulation of the execution of a process.", 
			"SBO:0000168");
public static final SBOTerm x_0000171 = 
		SBOUtil.createTerm("SBO:0000171", " absolute stimulation", "necessary stimulation", 
			"Control that is necessary to the execution of a process.", 
			"SBO:0000170");
public static final SBOTerm x_0000172 = 
		SBOUtil.createTerm("SBO:0000172", "?", "catalysis", 
			"Modification of the velocity of a reaction by lowering the energy of the transition state.", 
			"SBO:0000170");
public static final SBOTerm x_0000173 = 
		SBOUtil.createTerm("SBO:0000173", "?", "and", 
			"All the preceding events or participating entities are necessary to perform the control.", 
			"SBO:0000237");
public static final SBOTerm x_0000174 = 
		SBOUtil.createTerm("SBO:0000174", "?", "or", 
			"Any of the preceding events or participating entities are necessary to perform the control.", 
			"SBO:0000237");
public static final SBOTerm x_0000175 = 
		SBOUtil.createTerm("SBO:0000175", "exclusive or", "xor", 
			"Only one of the preceding events or participating entities can perform the control at one time.", 
			"SBO:0000237");
public static final SBOTerm x_0000176 = 
		SBOUtil.createTerm("SBO:0000176", "?", "biochemical reaction", 
			"An event involving one or more chemical entities that modifies the electrochemical structure of at least one of the participants. ", 
			"SBO:0000167");
public static final SBOTerm x_0000177 = 
		SBOUtil.createTerm("SBO:0000177", "association", "non-covalent binding", 
			"Interaction between several biochemical entities that results in the formation of a non-covalent complex", 
			"SBO:0000176");
public static final SBOTerm x_0000178 = 
		SBOUtil.createTerm("SBO:0000178", "?", "cleavage", 
			"Rupture of a covalent bond resulting in the conversion of one physical entity into several physical entities.", 
			"SBO:0000182");
public static final SBOTerm x_0000179 = 
		SBOUtil.createTerm("SBO:0000179", "?", "degradation", 
			"Complete disappearance of a physical entity.", 
			"SBO:0000176");
public static final SBOTerm x_0000180 = 
		SBOUtil.createTerm("SBO:0000180", "?", "dissociation", 
			"Transformation of a non-covalent complex that results in the formation of several independent biochemical entities", 
			"SBO:0000176");
public static final SBOTerm x_0000181 = 
		SBOUtil.createTerm("SBO:0000181", "?", "conformational transition", 
			"Biochemical reaction that does not result in the modification of covalent bonds of reactants, but rather modifies the conformation of some reactants, that is the relative position of their atoms in space.", 
			"SBO:0000176");
public static final SBOTerm x_0000182 = 
		SBOUtil.createTerm("SBO:0000182", "?", "conversion", 
			"Biochemical reaction that results in the modification of some covalent bonds.", 
			"SBO:0000176");
public static final SBOTerm x_0000183 = 
		SBOUtil.createTerm("SBO:0000183", "?", "transcription", 
			"Process through which a DNA sequence is copied to produce a complementary RNA.", 
			"SBO:0000205");
public static final SBOTerm x_0000184 = 
		SBOUtil.createTerm("SBO:0000184", "?", "translation", 
			"Process in which a polypeptide chain is produced from a messenger RNA.", 
			"SBO:0000205");
public static final SBOTerm x_0000185 = 
		SBOUtil.createTerm("SBO:0000185", "?", "transport reaction", 
			"Movement of a physical entity without modification of the structure of the entity.", 
			"SBO:0000167");
public static final SBOTerm x_0000186 = 
		SBOUtil.createTerm("SBO:0000186", "Vmax", "maximal velocity", 
			"Limiting maximal velocity of an enzymatic reaction, reached when the substrate is in large excess and all the enzyme is complexed.", 
			"SBO:0000046");
public static final SBOTerm x_0000187 = 
		SBOUtil.createTerm("SBO:0000187", "?", "Henri-Michaelis-Menten equation, Vmax form", 
			"Version of Henri-Michaelis-Menten equation where kp*[E]t is replaced by the maximal velocity, Vmax, reached when all the enzyme is active. ", 
			"SBO:0000005");
public static final SBOTerm x_0000188 = 
		SBOUtil.createTerm("SBO:0000188", "?", "number of biochemical items", 
			"A number of objects of the same type, identical or different, involved in a biochemical event.", 
			"SBO:0000002");
public static final SBOTerm x_0000189 = 
		SBOUtil.createTerm("SBO:0000189", "?", "number of binding sites", 
			"Number of regions on a reactant to which specific other reactants, in this context collectively called ligands, form a chemical bond.", 
			"SBO:0000188");
public static final SBOTerm x_0000190 = 
		SBOUtil.createTerm("SBO:0000190", "?", "Hill coefficient", 
			"Empirical parameter created by Archibald Vivian Hill to describe the cooperative binding of oxygen on hemoglobine (Hill (1910). The possible effects of the aggregation of the molecules of haemoglobin on its dissociation curves. J Physiol 40: iv-vii).", 
			"SBO:0000382");
public static final SBOTerm x_0000191 = 
		SBOUtil.createTerm("SBO:0000191", "?", "Hill constant", 
			"Empirical constant created by Archibald Vivian Hill to describe the cooperative binding of oxygen on hemoglobine (Hill (1910). The possible effects of the aggregation of the molecules of haemoglobin on its dissociation curves. J Physiol 40: iv-vii). Different from a microscopic dissociation constant, it has the dimension of concentration to the power of the Hill coefficient.", 
			"SBO:0000193");
public static final SBOTerm x_0000192 = 
		SBOUtil.createTerm("SBO:0000192", "?", "Hill-type rate law, generalised form", 
			"Empirical equation created by Archibald Vivian Hill to describe the cooperative binding of oxygen on hemoglobine (Hill (1910). The possible effects of the aggregation of the molecules of haemoglobin on its dissociation curves. J Physiol 40: iv-vii).", 
			"SBO:0000001");
public static final SBOTerm x_0000193 = 
		SBOUtil.createTerm("SBO:0000193", "?", "equilibrium or steady-state constant", 
			"Constant with the dimension of a powered concentration. It is determined at half-saturation, half-activity etc. ", 
			"SBO:0000308");
public static final SBOTerm x_0000194 = 
		SBOUtil.createTerm("SBO:0000194", "?", "pseudo-dissociation constant", 
			"Dissociation constant equivalent to an intrinsic microscopic dissociation constant, but obtained from an averaging process, for instance by extracting the root of a Hill constant. ", 
			"SBO:0000193");
public static final SBOTerm x_0000195 = 
		SBOUtil.createTerm("SBO:0000195", "?", "Hill-type rate law, microscopic form", 
			"Hill equation rewritten by creating a pseudo-microscopic constant, equal to the Hill constant powered to the opposite of the Hill coefficient.", 
			"SBO:0000192");
public static final SBOTerm x_0000196 = 
		SBOUtil.createTerm("SBO:0000196", "[X]", "concentration of an entity pool", 
			"The amount of an entity per unit of volume. ", 
			"SBO:0000226");
public static final SBOTerm x_0000197 = 
		SBOUtil.createTerm("SBO:0000197", "?", "specific concentration of an entity", 
			"Concentration of an object divided by the value of another parameter having the dimension of a concentration.", 
			"SBO:0000196");
public static final SBOTerm x_0000198 = 
		SBOUtil.createTerm("SBO:0000198", "?", "Hill-type rate law, reduced form", 
			"Hill equation rewritten by replacing the concentration of reactant with its reduced form, that is the concentration divide by a pseudo-microscopic constant, equal to the Hill constant powered to the opposite of the Hill coefficient.", 
			"SBO:0000192");
public static final SBOTerm x_0000199 = 
		SBOUtil.createTerm("SBO:0000199", "?", "normalised enzymatic rate law for unireactant enzymes", 
			"Kinetics of enzymes that react only with one substance, their substrate. The total enzyme concentration is considered to be equal to 1, therefore the maximal velocity equals the catalytic constant.", 
			"SBO:0000028");
public static final SBOTerm x_0000200 = 
		SBOUtil.createTerm("SBO:0000200", "?", "redox reaction", 
			"Chemical process in which atoms have their oxidation number (oxidation state) changed.", 
			"SBO:0000176");
public static final SBOTerm x_0000201 = 
		SBOUtil.createTerm("SBO:0000201", "?", "oxidation", 
			"Chemical process during which a molecular entity loses electrons.", 
			"SBO:0000200");
public static final SBOTerm x_0000202 = 
		SBOUtil.createTerm("SBO:0000202", "?", "reduction", 
			"Chemical process in which a molecular entity gain electrons.", 
			"SBO:0000200");
public static final SBOTerm x_0000203 = 
		SBOUtil.createTerm("SBO:0000203", "?", "duplication", 
			"Reaction in which a reactant gives birth to two products identical to itself.", 
			"SBO:0000232");
public static final SBOTerm x_0000204 = 
		SBOUtil.createTerm("SBO:0000204", "?", "dna replication", 
			"Process in which a DNA duplex is transformed into two identical DNA duplexes.", 
			"SBO:0000205");
public static final SBOTerm x_0000205 = 
		SBOUtil.createTerm("SBO:0000205", "?", "composite biochemical process", 
			"Process that involves the participation of chemical or biological entities and is composed of several elementary steps or reactions. ", 
			"SBO:0000375");
public static final SBOTerm x_0000206 = 
		SBOUtil.createTerm("SBO:0000206", "?", "competitive inhibitor", 
			"Substance that decreases the probability of a chemical reaction, without itself being consumed or transformed by the reaction, by stericaly hindering the interaction between reactants. ", 
			"SBO:0000020");
public static final SBOTerm x_0000207 = 
		SBOUtil.createTerm("SBO:0000207", "?", "non-competitive inhibitor", 
			"Substance that decreases the probability of a chemical reaction, without itself being consumed or transformed by the reaction, and without sterically hindering the interaction between reactants. ", 
			"SBO:0000020");
public static final SBOTerm x_0000208 = 
		SBOUtil.createTerm("SBO:0000208", "?", "acid-base reaction", 
			"Chemical reaction where a proton is given by a compound, the acid, to another one, the base (Bronsted-Lowry definition). An alternative, more general, definition is a reaction where a compound, the base, gives a pair of electrons to another, the acid (Lewis definition).", 
			"SBO:0000176");
public static final SBOTerm x_0000209 = 
		SBOUtil.createTerm("SBO:0000209", "?", "ionisation", 
			"Ionization is the physical process of converting an atom or molecule into an ion by changing the difference between the number of protons and electrons. ", 
			"SBO:0000176");
public static final SBOTerm x_0000210 = 
		SBOUtil.createTerm("SBO:0000210", "?", "addition of a chemical group", 
			"Covalent reaction that results in the addition of a chemical group on a molecule.", 
			"SBO:0000182");
public static final SBOTerm x_0000211 = 
		SBOUtil.createTerm("SBO:0000211", "?", "removal of a chemical group", 
			"Covalent reaction that results in the removal of a chemical group from a molecule.", 
			"SBO:0000182");
public static final SBOTerm x_0000212 = 
		SBOUtil.createTerm("SBO:0000212", "?", "protonation", 
			"Addition of a proton (H+) to a chemical entity.", 
			"SBO:0000208,SBO:0000210");
public static final SBOTerm x_0000213 = 
		SBOUtil.createTerm("SBO:0000213", "?", "deprotonation", 
			"Removal of a proton (hydrogen ion H+) from a chemical entity.", 
			"SBO:0000208,SBO:0000211");
public static final SBOTerm x_0000214 = 
		SBOUtil.createTerm("SBO:0000214", "?", "methylation", 
			"Addition of a methyl group (-CH3) to a chemical entity.", 
			"SBO:0000210");
public static final SBOTerm x_0000215 = 
		SBOUtil.createTerm("SBO:0000215", "?", "acetylation", 
			"Addition of an acetyl group (-COCH3) to a chemical entity.", 
			"SBO:0000210");
public static final SBOTerm x_0000216 = 
		SBOUtil.createTerm("SBO:0000216", "?", "phosphorylation", 
			"Addition of a phosphate group (-H2PO4) to a chemical entity.", 
			"SBO:0000210");
public static final SBOTerm x_0000217 = 
		SBOUtil.createTerm("SBO:0000217", "?", "glycosylation", 
			"Addition of a saccharide group to a chemical entity.", 
			"SBO:0000210");
public static final SBOTerm x_0000218 = 
		SBOUtil.createTerm("SBO:0000218", "?", "palmitoylation", 
			"Addition of a palmitoyl group (CH3-[CH2]14-CO-) to a chemical entity.", 
			"SBO:0000210");
public static final SBOTerm x_0000219 = 
		SBOUtil.createTerm("SBO:0000219", "?", "myristoylation", 
			"Addition of a myristoyl (CH3-[CH2]12-CO-) to a chemical entity.", 
			"SBO:0000210");
public static final SBOTerm x_0000220 = 
		SBOUtil.createTerm("SBO:0000220", "sulphation", "sulfation", 
			"Addition of a sulfate group (SO4--) to a chemical entity. ", 
			"SBO:0000210");
public static final SBOTerm x_0000221 = 
		SBOUtil.createTerm("SBO:0000221", "isoprenylation", "prenylation", 
			"Addition of a prenyl group (generic sense) to a chemical entity.", 
			"SBO:0000210");
public static final SBOTerm x_0000222 = 
		SBOUtil.createTerm("SBO:0000222", "?", "farnesylation", 
			"Addition of a farnesyl group (CH2-CH=C(CH3)-CH2-CH2-CH=C(CH3)-CH2-CH2-CH=C(CH3)2) to a chemical entity.", 
			"SBO:0000221");
public static final SBOTerm x_0000223 = 
		SBOUtil.createTerm("SBO:0000223", "?", "geranylgeranylation", 
			"Addition of a geranylgeranyl group (CH2-CH=C(CH3)-CH2-CH2-CH=C(CH3)-CH2-CH2-CH=C(CH3)-CH2-CH2-CH=C(CH3)2) to a chemical entity.", 
			"SBO:0000221");
public static final SBOTerm x_0000224 = 
		SBOUtil.createTerm("SBO:0000224", "?", "ubiquitination", 
			"Covalent linkage to the protein ubiquitin. ", 
			"SBO:0000210");
public static final SBOTerm x_0000225 = 
		SBOUtil.createTerm("SBO:0000225", "?", "delay", 
			"Time during which some action is awaited.", 
			"SBO:0000346");
public static final SBOTerm x_0000226 = 
		SBOUtil.createTerm("SBO:0000226", "?", "density of an entity pool", 
			"A quantitative measure of an amount or property of an entity expressed in terms of another dimension, such as unit length, area or volume.", 
			"SBO:0000360");
public static final SBOTerm x_0000227 = 
		SBOUtil.createTerm("SBO:0000227", "?", "mass density of an entity", 
			"The mass of an entity expressed with reference to another dimension, such as unit length, area or volume.", 
			"SBO:0000226");
public static final SBOTerm x_0000228 = 
		SBOUtil.createTerm("SBO:0000228", "?", "volume density of an entity", 
			"Mass of an entity per unit volume.", 
			"SBO:0000227");
public static final SBOTerm x_0000229 = 
		SBOUtil.createTerm("SBO:0000229", "?", "area density of an entity", 
			"The mass of an entity per unit of surface area.", 
			"SBO:0000227");
public static final SBOTerm x_0000230 = 
		SBOUtil.createTerm("SBO:0000230", "?", "linear density of an entity", 
			"Mass of an entity per unit length.", 
			"SBO:0000227");
public static final SBOTerm x_0000233 = 
		SBOUtil.createTerm("SBO:0000233", "?", "hydroxylation", 
			"Addition of an hydroxyl group (-OH) to a chemical entity. ", 
			"SBO:0000210");
public static final SBOTerm x_0000234 = 
		SBOUtil.createTerm("SBO:0000234", "?", "logical framework", 
			"Modelling approach, pioneered by Rene Thomas and Stuart Kaufman, where the evolution of a system is described by the transitions between discrete activity states of genes that control each other.", 
			"SBO:0000004");
public static final SBOTerm x_0000235 = 
		SBOUtil.createTerm("SBO:0000235", "?", "participant", 
			"Entity that affects or is affected by an event.", 
			"SBO:0000000");
public static final SBOTerm x_0000236 = 
		SBOUtil.createTerm("SBO:0000236", "new synonym", "physical entity representation", 
			"Representation of an entity that may participate in an interaction, a process or relationship of significance. ", 
			"SBO:0000000");
public static final SBOTerm x_0000237 = 
		SBOUtil.createTerm("SBO:0000237", "?", "logical combination", 
			"Combining the influence of several entities or events in a unique influence.", 
			"SBO:0000374");
public static final SBOTerm x_0000238 = 
		SBOUtil.createTerm("SBO:0000238", "?", "not", 
			"The preceding event or participating entity cannot participate to the control. ", 
			"SBO:0000237");
public static final SBOTerm x_0000239 = 
		SBOUtil.createTerm("SBO:0000239", "?", "allosteric control", 
			"Regulation of the influence of a reaction participant by binding an effector to a binding site of the participant different of the site of the participant conveying the influence.", 
			"SBO:0000168");
public static final SBOTerm x_0000240 = 
		SBOUtil.createTerm("SBO:0000240", "?", "material entity", 
			"A real thing that is defined by its physico-chemical structure. ", 
			"SBO:0000236");
public static final SBOTerm x_0000241 = 
		SBOUtil.createTerm("SBO:0000241", "?", "functional entity", 
			"A real thing, defined by its properties or the actions it performs, rather than it physico-chemical structure.", 
			"SBO:0000236");
public static final SBOTerm x_0000242 = 
		SBOUtil.createTerm("SBO:0000242", "?", "channel", 
			"A component that allows another component to pass through itself, possibly connecting different compartments.", 
			"SBO:0000241");
public static final SBOTerm x_0000243 = 
		SBOUtil.createTerm("SBO:0000243", "?", "gene", 
			"A locatable region of genomic sequence, corresponding to a unit of inheritance, which is associated with regulatory regions, transcribed regions and/or other functional sequence regions.  Sequence Ontology SO:0000704", 
			"SBO:0000404");
public static final SBOTerm x_0000244 = 
		SBOUtil.createTerm("SBO:0000244", "?", "receptor", 
			"Participating entity that binds to a specific physical entity and initiates the response to that physical entity.The original concept of the receptor was introduced independently at the end of the 19th century by John Newport Langley (1852-1925) and Paul Ehrlich (1854-1915).  Langley JN.On the reaction of cells and of nerve-endings to certain poisons, chiefly as regards the reaction of striated muscle to nicotine and to curari. J Physiol. 1905 Dec 30;33(4-5):374-413.", 
			"SBO:0000241");
public static final SBOTerm x_0000245 = 
		SBOUtil.createTerm("SBO:0000245", "?", "macromolecule", 
			"Molecular entity mainly built-up by the repetition of pseudo-identical units.  CHEBI:33839", 
			"SBO:0000240");
public static final SBOTerm x_0000246 = 
		SBOUtil.createTerm("SBO:0000246", "?", "information macromolecule", 
			"Macromolecule whose sequence is encoded in the genome of living organisms.", 
			"SBO:0000245");
public static final SBOTerm x_0000247 = 
		SBOUtil.createTerm("SBO:0000247", "?", "simple chemical", 
			"Simple, non-repetitive chemical entity.", 
			"SBO:0000240");
public static final SBOTerm x_0000248 = 
		SBOUtil.createTerm("SBO:0000248", "?", "chemical macromolecule", 
			"Macromolecule whose sequence is not directly encoded in the genome.", 
			"SBO:0000245");
public static final SBOTerm x_0000249 = 
		SBOUtil.createTerm("SBO:0000249", "?", "polysaccharide", 
			"Macromolecule consisting of a large number of monosaccharide residues linked by glycosidic bonds.  CHEBI:18154", 
			"SBO:0000248");
public static final SBOTerm x_0000250 = 
		SBOUtil.createTerm("SBO:0000250", "RNA", "ribonucleic acid", 
			"Macromolecule formed by a repetition of ribonucleosides linked by phosphodiester bonds.  CHEBI:33697", 
			"SBO:0000246");
public static final SBOTerm x_0000251 = 
		SBOUtil.createTerm("SBO:0000251", "DNA", "deoxyribonucleic acid", 
			"Polymer composed of nucleotides containing deoxyribose and linked by phosphodiester bonds.  CHEBI:16991 ", 
			"SBO:0000246");
public static final SBOTerm x_0000252 = 
		SBOUtil.createTerm("SBO:0000252", "?", "polypeptide chain", 
			"Naturally occurring macromolecule formed by the repetition of amino-acid residues linked by peptidic bonds. A polypeptide chain is synthesized by the ribosome.  CHEBI:16541", 
			"SBO:0000246");
public static final SBOTerm x_0000253 = 
		SBOUtil.createTerm("SBO:0000253", "?", "non-covalent complex", 
			"Entity composed of several independant components that are not linked by covalent bonds.", 
			"SBO:0000240");
public static final SBOTerm x_0000254 = 
		SBOUtil.createTerm("SBO:0000254", "?", "electrical resistance", 
			"Measure of the degree to which an object opposes the passage of an electric current. The SI unit of electrical resistance is the ohm.", 
			"SBO:0000002");
public static final SBOTerm x_0000255 = 
		SBOUtil.createTerm("SBO:0000255", "?", "physical characteristic", 
			"Parameter characterising a physical system or the environment, and independent of life's influence.", 
			"SBO:0000002");
public static final SBOTerm x_0000256 = 
		SBOUtil.createTerm("SBO:0000256", "?", "biochemical parameter", 
			"Parameter that depends on the biochemical properties of a system.", 
			"SBO:0000002");
public static final SBOTerm x_0000257 = 
		SBOUtil.createTerm("SBO:0000257", "?", "conductance", 
			"Measure of how easily electricity flows along a certain path through an electrical element. The SI derived unit of conductance is the Siemens.", 
			"SBO:0000002");
public static final SBOTerm x_0000258 = 
		SBOUtil.createTerm("SBO:0000258", "?", "capacitance", 
			"Measure of the amount of electric charge stored (or separated) for a given electric potential. The unit of capacitance id the Farad.", 
			"SBO:0000002");
public static final SBOTerm x_0000259 = 
		SBOUtil.createTerm("SBO:0000259", "electrical potential difference", "voltage", 
			"Difference of electrical potential between two points of an electrical network, expressed in volts.", 
			"SBO:0000002");
public static final SBOTerm x_0000260 = 
		SBOUtil.createTerm("SBO:0000260", "simple intersecting linear competitive inhibition of unireactant enzymes", "enzymatic rate law for simple competitive inhibition of irreversible unireactant enzymes by one inhibitor", 
			"Inhibition of a unireactant enzyme by one inhibitor that binds once to the free enzyme and prevents the binding of the substrate. The enzymes do not catalyse the reactions in both directions. ", 
			"SBO:0000267,SBO:0000270");
public static final SBOTerm x_0000261 = 
		SBOUtil.createTerm("SBO:0000261", "inhibition constant", "inhibitory constant", 
			"Dissociation constant of a compound from a target of which it inhibits the function. ", 
			"SBO:0000282");
public static final SBOTerm x_0000262 = 
		SBOUtil.createTerm("SBO:0000262", "simple linear uncompetitive inhibition", "enzymatic rate law for simple uncompetitive inhibition of irreversible unireactant enzymes", 
			"Inhibition of a unireactant enzyme by one inhibitor that binds only to the complex enzyme-substrate and totally prevent the catalysis. The enzymes do not catalyse the reactions in both directions. ", 
			"SBO:0000458");
public static final SBOTerm x_0000263 = 
		SBOUtil.createTerm("SBO:0000263", "?", "relative equilibrium constant", 
			"Ratio of an equilibrium constant in a given condition by the same equilibrium constant is not fullfilled.", 
			"SBO:0000308");
public static final SBOTerm x_0000264 = 
		SBOUtil.createTerm("SBO:0000264", "?", "relative inhibition constant", 
			"Ratio of the dissociation constant of an inhibitor from the complex enzyme-substrate on the dissociation constant of an inhibitor from the free enzyme.", 
			"SBO:0000263");
public static final SBOTerm x_0000265 = 
		SBOUtil.createTerm("SBO:0000265", "simple intersecting linear mixed-type competitive inhibition", "enzymatic rate law for simple mixed-type inhibition of irreversible unireactant enzymes", 
			"Inhibition of a unireactant enzyme by one inhibitor that can bind to the complex enzyme-substrate and the free enzyme, possibly with different equilibrium constant, and totally prevent the catalysis. The enzymes do not catalyse the reactions in both directions.", 
			"SBO:0000275");
public static final SBOTerm x_0000266 = 
		SBOUtil.createTerm("SBO:0000266", "?", "enzymatic rate law for simple irreversible non-competitive inhibition of unireactant enzymes", 
			"Inhibition of a unireactant enzyme by one inhibitor that can bind to the complex enzyme-substrate and the free enzyme with the same equilibrium constant, and totally prevent the catalysis.", 
			"SBO:0000442");
public static final SBOTerm x_0000267 = 
		SBOUtil.createTerm("SBO:0000267", "multiple competitive inhibition by one inhibitor of unireactant enzymes", "enzymatic rate law for competitive inhibition of irreversible unireactant enzymes by one inhibitor", 
			"Inhibition of a unireactant enzyme by one inhibitor that can bind one or several times to the free enzyme, and prevent the binding of the substrate. The enzymes do not catalyse the reactions in both directions.  ", 
			"SBO:0000273");
public static final SBOTerm x_0000268 = 
		SBOUtil.createTerm("SBO:0000268", "?", "enzymatic rate law", 
			"Enzyme kinetics is the study of the rates of chemical reactions that are catalysed by enzymes, how this rate is controlled, and how drugs and poisons can inhibit its activity. ", 
			"SBO:0000001");
public static final SBOTerm x_0000269 = 
		SBOUtil.createTerm("SBO:0000269", "?", "enzymatic rate law for unireactant enzymes", 
			"Kinetics of enzymes that catalyse the transformation of only one substrate. ", 
			"SBO:0000268");
public static final SBOTerm x_0000270 = 
		SBOUtil.createTerm("SBO:0000270", "?", "enzymatic rate law for competitive inhibition of irreversible unireactant enzymes by exclusive inhibitors", 
			"Inhibition of a unireactant enzyme by inhibitors that bind to the free enzyme on the same binding site than the substrate. The enzymes do not catalyse the reactions in both directions. ", 
			"SBO:0000430");
public static final SBOTerm x_0000271 = 
		SBOUtil.createTerm("SBO:0000271", "?", "enzymatic rate law for competitive inhibition of irreversible unireactant enzymes by two exclusive inhibitors", 
			"Inhibition of a unireactant enzyme by two inhibitors that bind to the free enzyme on the same binding site than the substrate. The enzymes do not catalyse the reactions in both directions. ", 
			"SBO:0000270");
public static final SBOTerm x_0000272 = 
		SBOUtil.createTerm("SBO:0000272", "?", "number of inhibitors", 
			"Number of entities that inhibit a reaction. ", 
			"SBO:0000188");
public static final SBOTerm x_0000273 = 
		SBOUtil.createTerm("SBO:0000273", "?", "enzymatic rate law for competitive inhibition of irreversible unireactant enzymes by non-exclusive non-cooperative inhibitors", 
			"Inhibition of a unireactant enzyme by inhibitors that bind independently to the free enzyme and preclude the binding of the substrate. The enzymes do not catalyse the reactions in both directions.", 
			"SBO:0000430");
public static final SBOTerm x_0000274 = 
		SBOUtil.createTerm("SBO:0000274", "?", "enzymatic rate law for simple competitive inhibition of irreversible unireactant enzymes by two non-exclusive, non-cooperative inhibitors", 
			"Inhibition of a unireactant enzyme by two inhibitors that can bind independently once to the free enzyme and preclude the binding of the substrate. The enzymes do not catalyse the reactions in both directions.", 
			"SBO:0000273,SBO:0000379");
public static final SBOTerm x_0000275 = 
		SBOUtil.createTerm("SBO:0000275", "?", "enzymatic rate law for mixed-type inhibition of irreversible enzymes by mutually exclusive inhibitors", 
			"Inhibition of a unireactant enzyme by inhibitors that can bind to the complex enzyme-substrate and the free enzyme, possibly with different equilibrium constants, and totally prevent the catalysis. The enzymes do not catalyse the reactions in both directions. ", 
			"SBO:0000430");
public static final SBOTerm x_0000276 = 
		SBOUtil.createTerm("SBO:0000276", "?", "enzymatic rate law for mixed-type inhibition of irreversible unireactant enzymes by two inhibitors", 
			"Inhibition of unireactant enzymes by two inhibitors that can bind to the complex enzyme-substrate and the free enzyme, possibly with different equilibrium constant, and totally prevent the catalysis. The enzymes do not catalyse the reactions in both directions. ", 
			"SBO:0000275");
public static final SBOTerm x_0000277 = 
		SBOUtil.createTerm("SBO:0000277", "?", "enzymatic rate law for non-competitive inhibition of irreversible unireactant enzymes by two exclusively binding inhibitors", 
			"Inhibition of unireactant enzymes by two inhibitors that can bind to the complex enzyme-substrate and the free enzyme with the same equilibrium constant and totally prevent the catalysis. ", 
			"SBO:0000276");
public static final SBOTerm x_0000278 = 
		SBOUtil.createTerm("SBO:0000278", "mRNA", "messenger RNA", 
			"A messenger RNA is a ribonucleic acid synthesized during the transcription of a gene, and that carries the information to encode one or several proteins.", 
			"SBO:0000404");
public static final SBOTerm x_0000279 = 
		SBOUtil.createTerm("SBO:0000279", "?", "pressure", 
			"Pressure (symbol: p) is the force per unit area applied on a surface in a direction perpendicular to that surface. The unit of pressure is the Pascal (Pa), that is equal to 1 Newton per square meter.", 
			"SBO:0000002");
public static final SBOTerm x_0000280 = 
		SBOUtil.createTerm("SBO:0000280", "?", "ligand", 
			"In biochemistry, a ligand is an effector, a physical entity that binds to a site on a receptor's surface by intermolecular forces.", 
			"SBO:0000241");
public static final SBOTerm x_0000281 = 
		SBOUtil.createTerm("SBO:0000281", "Keq", "equilibrium constant", 
			"Quantity characterizing a chemical equilibrium in a chemical reaction, which is a useful tool to determine the concentration of various reactants or products in a system where chemical equilibrium occurs.", 
			"SBO:0000193");
public static final SBOTerm x_0000282 = 
		SBOUtil.createTerm("SBO:0000282", "Kd", "dissociation constant", 
			"Equilibrium constant that measures the propensity of a larger object to separate (dissociate) reversibly into smaller components, as when a complex falls apart into its component molecules, or when a salt splits up into its component ions. The dissociation constant is usually denoted Kd and is the inverse of the affinity constant.", 
			"SBO:0000281,SBO:0000309");
public static final SBOTerm x_0000283 = 
		SBOUtil.createTerm("SBO:0000283", "Ka", "acid dissociation constant", 
			"Equilibrium constant that indicates the extent of dissociation of hydrogen ions from an acid. The equilibrium is that of a proton transfer from an acid, HA, to water, H2O. The term for the concentration of water, [H2O], is omitted from the general equilibrium constant expression. Ka=([H3O+]*[A-])/(HA)", 
			"SBO:0000282,SBO:0000310");
public static final SBOTerm x_0000284 = 
		SBOUtil.createTerm("SBO:0000284", "?", "transporter", 
			"Participating entity that facilitates the movement of another physical entity from a defined subset of the physical environment (for instance a cellular compartment) to another. ", 
			"SBO:0000241");
public static final SBOTerm x_0000285 = 
		SBOUtil.createTerm("SBO:0000285", "?", "material entity of unspecified nature", 
			"Material entity whose nature is unknown or irrelevant.", 
			"SBO:0000240");
public static final SBOTerm x_0000286 = 
		SBOUtil.createTerm("SBO:0000286", "?", "multimer", 
			"Non-covalent association of identical, or pseudo-identical, entities. By pseudo-identical entities, we mean biochemical elements that differ chemically, although remaining globally identical in structure and/or function. Examples are homologous subunits in an hetero-oligomeric receptor.", 
			"SBO:0000253");
public static final SBOTerm x_0000287 = 
		SBOUtil.createTerm("SBO:0000287", "?", "EC50", 
			"Concentration of an active compound at which 50% of its maximal effect is observed. The EC50 is not a pure characteristic of the compound but depends on the conditions or the measurement.", 
			"SBO:0000193");
public static final SBOTerm x_0000288 = 
		SBOUtil.createTerm("SBO:0000288", "?", "IC50", 
			"Also called half maximal inhibitory concentration, it represents the concentration of an inhibitor substance that is required to suppress 50% of an effect. ", 
			"SBO:0000193");
public static final SBOTerm x_0000289 = 
		SBOUtil.createTerm("SBO:0000289", "?", "functional compartment", 
			"Logical or physical subset of the event space that contains pools, that is sets of participants considered identical when it comes to the event they are involved into. A compartment can have any number of dimensions, including 0, and be of any size including null.", 
			"SBO:0000003");
public static final SBOTerm x_0000290 = 
		SBOUtil.createTerm("SBO:0000290", "?", "physical compartment", 
			"Specific location of space, that can be bounded or not. A physical compartment can have 1, 2 or 3 dimensions.", 
			"SBO:0000240");
public static final SBOTerm x_0000291 = 
		SBOUtil.createTerm("SBO:0000291", "?", "empty set", 
			"Entity defined by the absence of any actual object. An empty set is often used to represent the source of a creation process or the result of a degradation process. ", 
			"SBO:0000240");
public static final SBOTerm x_0000292 = 
		SBOUtil.createTerm("SBO:0000292", "?", "spatial continuous framework", 
			"Modelling approach where the quantities of participants are considered continuous, and represented by real values. The associated simulation methods make use of differential equations. The models take into account the distribution of the entities and describe the spatial fluxes. ", 
			"SBO:0000062");
public static final SBOTerm x_0000293 = 
		SBOUtil.createTerm("SBO:0000293", "?", "non-spatial continuous framework", 
			"Modelling approach where the quantities of participants are considered continuous, and represented by real values. The associated simulation methods make use of differential equations. The models do not take into account the distribution of the entities and describe only the temporal fluxes. ", 
			"SBO:0000062");
public static final SBOTerm x_0000294 = 
		SBOUtil.createTerm("SBO:0000294", "?", "spatial discrete framework", 
			"Modelling approach where the quantities of participants are considered discrete, and represented by integer values. The associated simulation methods can be deterministic or stochastic. The models take into account the distribution of the entities and describe the spatial fluxes. ", 
			"SBO:0000063");
public static final SBOTerm x_0000295 = 
		SBOUtil.createTerm("SBO:0000295", "?", "non-spatial discrete framework", 
			"Modelling approach where the quantities of participants are considered discrete, and represented by integer values. The associated simulation methods can be deterministic or stochastic.The models do not take into account the distribution of the entities and describe only the temporal fluxes.   ", 
			"SBO:0000063");
public static final SBOTerm x_0000296 = 
		SBOUtil.createTerm("SBO:0000296", "?", "macromolecular complex", 
			"Non-covalent complex of one or more macromolecules and zero or more simple chemicals.", 
			"SBO:0000253");
public static final SBOTerm x_0000297 = 
		SBOUtil.createTerm("SBO:0000297", "?", "protein complex", 
			"Macromolecular complex containing one or more polypeptide chains possibly associated with simple chemicals.  CHEBI:36080", 
			"SBO:0000296");
public static final SBOTerm x_0000298 = 
		SBOUtil.createTerm("SBO:0000298", "?", "synthetic chemical compound", 
			"Chemical entity that is engineered by a human-designed process ex-vivo rather than a produced by a living entity.", 
			"SBO:0000241");
public static final SBOTerm x_0000299 = 
		SBOUtil.createTerm("SBO:0000299", "?", "metabolite", 
			"Substance produced by metabolism or by a metabolic process.", 
			"SBO:0000241");
public static final SBOTerm x_0000300 = 
		SBOUtil.createTerm("SBO:0000300", "Et", "total concentration of enzyme", 
			"Total amount of enzyme catalysing a reaction, divided by the volume of reaction. ", 
			"SBO:0000006");
public static final SBOTerm x_0000301 = 
		SBOUtil.createTerm("SBO:0000301", "?", "total catalytic efficiency", 
			"Constant representing the actual efficiency of an enzyme at a given concentration, taking into account its microscopic catalytic activity and the rates of substrate binding and dissociation.  NB. The symbol Vmax and the names maximum rate and maximum velocity are in widespread use although under normal circumstances there is no finite substrate concentration at which v = V and hence no maximum in the mathematical sense (Eur. J. Biochem. 128:281-291).", 
			"SBO:0000035");
public static final SBOTerm x_0000302 = 
		SBOUtil.createTerm("SBO:0000302", "?", "catalytic efficiency", 
			"Constant representing the actual efficiency of an enzyme, taking into account its microscopic catalytic activity and the rates of substrate binding and dissociation.", 
			"SBO:0000036");
public static final SBOTerm x_0000303 = 
		SBOUtil.createTerm("SBO:0000303", "chemical potential", "biochemical potential", 
			"Derivative of a biochemical energy per a substance.", 
			"SBO:0000308");
public static final SBOTerm x_0000304 = 
		SBOUtil.createTerm("SBO:0000304", "potential of hydrogen", "pH", 
			"Negative logarithm (base 10) of the activity of hydrogen in a solution. Ina diluted solution, this activity is equal to the concentration of protons (in fact of ions H3O+). The pH is proportional to the chemical potential of hydrogen, by the relation: pH = -?H ? 2.3RT. (with ?H=-RTln[H+]).", 
			"SBO:0000303");
public static final SBOTerm x_0000305 = 
		SBOUtil.createTerm("SBO:0000305", "?", "pOH", 
			"Negative logarithm (base 10) of the activity of hydroxyde in a solution. In a diluted solution, this activity is equal to the concentration of ions HO-.", 
			"SBO:0000303");
public static final SBOTerm x_0000306 = 
		SBOUtil.createTerm("SBO:0000306", "dissociation potential", "pK", 
			"negative logarithm (base 10) of a dissociation constant.", 
			"SBO:0000303,SBO:0000309");
public static final SBOTerm x_0000307 = 
		SBOUtil.createTerm("SBO:0000307", "potential of acid", "pKa", 
			"negative logarithm (base 10) of an acid dissociation constant.", 
			"SBO:0000306,SBO:0000310");
public static final SBOTerm x_0000308 = 
		SBOUtil.createTerm("SBO:0000308", "?", "equilibrium or steady-state characteristic", 
			"Quantitative parameter that characterises a biochemical equilibrium. ", 
			"SBO:0000002");
public static final SBOTerm x_0000309 = 
		SBOUtil.createTerm("SBO:0000309", "?", "dissociation characteristic", 
			"Quantitative parameter that characterises a dissociation. ", 
			"SBO:0000308");
public static final SBOTerm x_0000310 = 
		SBOUtil.createTerm("SBO:0000310", "?", "acid dissociation characteristic", 
			"Quantitative parameter that characterises an acid-base reaction.", 
			"SBO:0000309");
public static final SBOTerm x_0000311 = 
		SBOUtil.createTerm("SBO:0000311", "pre-mRNA", "heterogeneous nuclear RNA", 
			"Incompletely processed single strand of messenger ribonucleic acid (mRNA), synthesized from a DNA template in the nucleus of a cell by transcription and containing copies of the introns and exons of a gene.", 
			"SBO:0000278");
public static final SBOTerm x_0000312 = 
		SBOUtil.createTerm("SBO:0000312", "?", "mature messenger RNA", 
			"Completely processed single strand of messenger ribonucleic acid (mRNA), synthesized from a DNA template in the nucleus of a cell by transcription and containing copies of only the exons of a gene.", 
			"SBO:0000278");
public static final SBOTerm x_0000313 = 
		SBOUtil.createTerm("SBO:0000313", "tRNA", "transfer RNA", 
			"Small RNA chain (73-93 nucleotides) that transfers a specific amino acid to a growing polypeptide chain at the ribosomal site of protein synthesis during translation. It has a site for amino acid attachment and a three-base region called the anticodon that recognizes the corresponding three-base codon region on mRNA via complementary base pairing. Each type of tRNA molecule can be attached to only one type of amino acid, but because the genetic code is degenerate - that is, it contains multiple codons that specify the same amino acid - multiple types of tRNA molecules bearing different anticodons may carry the same amino acid.", 
			"SBO:0000334");
public static final SBOTerm x_0000314 = 
		SBOUtil.createTerm("SBO:0000314", "rRNA", "ribosomal RNA", 
			"Type of RNA that is the central component of the ribosome, the protein manufacturing machinery of all living cells.", 
			"SBO:0000334");
public static final SBOTerm x_0000315 = 
		SBOUtil.createTerm("SBO:0000315", "ribonucleic acid enzyme", "ribozyme", 
			"RNA molecule that catalyzes a chemical reaction.", 
			"SBO:0000241");
public static final SBOTerm x_0000316 = 
		SBOUtil.createTerm("SBO:0000316", "miRNA", "microRNA", 
			"Single-stranded RNA molecules thought to regulate the expression of other genes. miRNAs are encoded by genes that are transcribed from DNA but not translated into protein (non-coding RNA).", 
			"SBO:0000334");
public static final SBOTerm x_0000317 = 
		SBOUtil.createTerm("SBO:0000317", "siRNA", "small interfering RNA", 
			"siRNA are 20-25 nucleotide-long double-stranded RNA molecules involved in the regulation of the expression of specific genes, antiviral mechanisms, shaping the chromatin structure of a genome etc. ", 
			"SBO:0000241");
public static final SBOTerm x_0000318 = 
		SBOUtil.createTerm("SBO:0000318", "snRNA", "small nuclear RNA", 
			"Small RNA molecules that are found within the nucleus of eukaryotic cells. They are involved in a variety of important processes such as RNA splicing (removal of introns from heterogeneous nuclear RNA), regulation of transcription factors or RNA polymerase II and maintaining the telomeres. They are always associated with specific proteins, and the complexes are referred to as small nuclear ribonucleoproteins (snRNP).", 
			"SBO:0000334");
public static final SBOTerm x_0000319 = 
		SBOUtil.createTerm("SBO:0000319", "snoRNA", "small nucleolar RNA", 
			"Small RNA molecules that guide chemical modifications (methylation or pseudouridylation) of ribosomal RNAs (rRNAs) and other RNA genes. They are frequently encoded in the introns of ribosomal proteins and are synthesized by RNA polymerase II, but can also be transcribed as independent (sometimes polycistronic) transcriptional units. snoRNAs are a component in the small nucleolar ribonucleoprotein (snoRNP), which contains snoRNA and proteins. ", 
			"SBO:0000334");
public static final SBOTerm x_0000320 = 
		SBOUtil.createTerm("SBO:0000320", "kcatp", "product catalytic rate constant", 
			"Numerical parameter that quantifies the velocity of product creation by a reversible enzymatic reaction.  ", 
			"SBO:0000025");
public static final SBOTerm x_0000321 = 
		SBOUtil.createTerm("SBO:0000321", "kcats", "substrate catalytic rate constant", 
			"Numerical parameter that quantifies the velocity of substrate creation by a reversible enzymatic reaction. ", 
			"SBO:0000025");
public static final SBOTerm x_0000322 = 
		SBOUtil.createTerm("SBO:0000322", "Kms", "Michaelis constant for substrate", 
			"Substrate concentration at which the velocity of product production by the forward activity of a reversible enzyme is half its maximum. ", 
			"SBO:0000027");
public static final SBOTerm x_0000323 = 
		SBOUtil.createTerm("SBO:0000323", "Kmp", "Michaelis constant for product", 
			"Product concentration at which the velocity of substrate production by the reverse activity of a reversible enzyme is half its maximum. ", 
			"SBO:0000027");
public static final SBOTerm x_0000324 = 
		SBOUtil.createTerm("SBO:0000324", "Vmaxf", "forward maximal velocity", 
			"Limiting maximal velocity of the forward reaction of a reversible enzyme, reached when the substrate is in large excess and all the enzyme is complexed.", 
			"SBO:0000186,SBO:0000350");
public static final SBOTerm x_0000325 = 
		SBOUtil.createTerm("SBO:0000325", "Vmaxr", "reverse maximal velocity", 
			"Limiting maximal velocity of the reverse reaction of a reversible enzyme, reached when the product is in large excess and all the enzyme is complexed.", 
			"SBO:0000186,SBO:0000353");
public static final SBOTerm x_0000326 = 
		SBOUtil.createTerm("SBO:0000326", "?", "enzymatic rate law for non-modulated unireactant enzymes", 
			"Kinetics of enzymes that react only with one substance, their substrate, and are not modulated by other compounds.", 
			"SBO:0000269");
public static final SBOTerm x_0000327 = 
		SBOUtil.createTerm("SBO:0000327", "?", "non-macromolecular ion", 
			"Chemical entity having a net electric charge.", 
			"SBO:0000247");
public static final SBOTerm x_0000328 = 
		SBOUtil.createTerm("SBO:0000328", "?", "non-macromolecular radical", 
			"chemical entity possessing an unpaired electron.", 
			"SBO:0000247");
public static final SBOTerm x_0000329 = 
		SBOUtil.createTerm("SBO:0000329", "TSS", "transcription start site", 
			"First nucleotide of a gene that is copied in the transcribed RNA.  Sequence Ontology SO:0000315", 
			"SBO:0000404");
public static final SBOTerm x_0000330 = 
		SBOUtil.createTerm("SBO:0000330", "?", "dephosphorylation", 
			"Removal of a phosphate group (-H2PO4) from a chemical entity. ", 
			"SBO:0000211");
public static final SBOTerm x_0000331 = 
		SBOUtil.createTerm("SBO:0000331", "?", "half-life", 
			"Time interval over which a quantified entity is reduced to half its original value.", 
			"SBO:0000009,SBO:0000346");
public static final SBOTerm x_0000332 = 
		SBOUtil.createTerm("SBO:0000332", "?", "half-life of an exponential decay", 
			"Time taken by a quantity decreasing according to a mono-exponential decay to be divided by two. Sometimes called t1/2.", 
			"SBO:0000331");
public static final SBOTerm x_0000333 = 
		SBOUtil.createTerm("SBO:0000333", "?", "monoexponential decay rate law", 
			"Monotonic decrease of a quantity proportionally to its value.", 
			"SBO:0000049");
public static final SBOTerm x_0000334 = 
		SBOUtil.createTerm("SBO:0000334", "?", "non-coding RNA", 
			"RNA molecule that is not translated into a protein.   Sequence Ontology SO:0000655", 
			"SBO:0000404");
public static final SBOTerm x_0000335 = 
		SBOUtil.createTerm("SBO:0000335", "?", "gene coding region", 
			"Portion of DNA or RNA that is transcribed into another RNA, such as a messenger RNA or a non-coding RNA (for instance a transfert RNA or a ribosomal RNA).", 
			"SBO:0000404");
public static final SBOTerm x_0000336 = 
		SBOUtil.createTerm("SBO:0000336", "?", "interactor", 
			"Entity participating in a physical or functional interaction.", 
			"SBO:0000010");
public static final SBOTerm x_0000337 = 
		SBOUtil.createTerm("SBO:0000337", "affinity constant", "association constant", 
			"Equilibrium constant that measures the propensity of two objects to assemble (associate) reversibly into a larger component. The association constant is usually denoted Ka and is the inverse of the dissociation constant. ", 
			"SBO:0000281");
public static final SBOTerm x_0000338 = 
		SBOUtil.createTerm("SBO:0000338", "kd", "dissociation rate constant", 
			"Rate with which a complex dissociates into its components.", 
			"SBO:0000035,SBO:0000038");
public static final SBOTerm x_0000339 = 
		SBOUtil.createTerm("SBO:0000339", "?", "bimolecular association rate constant", 
			"Rate with which two components associate into a complex.", 
			"SBO:0000036,SBO:0000341");
public static final SBOTerm x_0000340 = 
		SBOUtil.createTerm("SBO:0000340", "?", "trimolecular association rate constant", 
			"Rate with which three components associate into a complex.", 
			"SBO:0000037,SBO:0000341");
public static final SBOTerm x_0000341 = 
		SBOUtil.createTerm("SBO:0000341", "?", "association rate constant", 
			"Rate with which components associate into a complex.", 
			"SBO:0000154");
public static final SBOTerm x_0000342 = 
		SBOUtil.createTerm("SBO:0000342", "?", "molecular or genetic interaction", 
			"Mutual or reciprocal action or influence between molecular entities.", 
			"SBO:0000375");
public static final SBOTerm x_0000343 = 
		SBOUtil.createTerm("SBO:0000343", "?", "genetic interaction", 
			"A phenomenon whereby an observed phenotype, qualitative or quantative, is not explainable by the simple additive effects of the individual gene pertubations alone. Genetic interaction between perturbed genes is usually expected to generate a 'defective' phenotype. The level of defectiveness is often used to sub-classify this phenomenon. ", 
			"SBO:0000342");
public static final SBOTerm x_0000344 = 
		SBOUtil.createTerm("SBO:0000344", "?", "molecular interaction", 
			"Relationship between molecular entities, based on contacts, direct or indirect. ", 
			"SBO:0000342");
public static final SBOTerm x_0000345 = 
		SBOUtil.createTerm("SBO:0000345", "?", "time", 
			"Fundmental quantity of the measuring system used to sequence events, to compare the durations of events and the intervals between them, and to quantify the motions or the transformation of entities. The SI base unit for time is the SI second. The second is the duration of 9,192,631,770 periods of the radiation corresponding to the transition between the two hyperfine levels of the ground state of the caesium 133 atom.", 
			"SBO:0000255");
public static final SBOTerm x_0000346 = 
		SBOUtil.createTerm("SBO:0000346", "?", "temporal measure", 
			"Fundamental quantity of the measuring system used to sequence events, to compare the durations of events and the intervals between them, and to quantify the motions or the transformation of entities. The SI base unit for time is the SI second. The second is the duration of 9,192,631,770 periods of the radiation corresponding to the transition between the two hyperfine levels of the ground state of the caesium 133 atom.", 
			"SBO:0000002");
public static final SBOTerm x_0000347 = 
		SBOUtil.createTerm("SBO:0000347", "?", "duration", 
			"Amount of time during which an event persists.", 
			"SBO:0000346");
public static final SBOTerm x_0000348 = 
		SBOUtil.createTerm("SBO:0000348", "mean lifetime", "exponential time constant", 
			"Time that it takes for an exponential decay to reach 1/e (about 37%) of the original value. This characterises the frequency response of a first-order, linear time-invariant system. This is also the average lifetime of an element in the decaying set. It is the inverse of the exponential decay constant. ", 
			"SBO:0000009,SBO:0000346");
public static final SBOTerm x_0000349 = 
		SBOUtil.createTerm("SBO:0000349", "kinact", "inactivation rate constant", 
			"Kinetic constant describing the rate of an irreversible enzyme inactivation by decay of the active enzyme into its inactive form.", 
			"SBO:0000035");
public static final SBOTerm x_0000350 = 
		SBOUtil.createTerm("SBO:0000350", "?", "forward reaction velocity", 
			"The speed of an enzymatic reaction at a defined concentration of substrate(s) and enzyme.", 
			"SBO:0000048");
public static final SBOTerm x_0000352 = 
		SBOUtil.createTerm("SBO:0000352", "?", "reverse zeroth order rate constant", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction independant of the reactant quantities. This parameter encompasses all the contributions to the velocity. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000046,SBO:0000156");
public static final SBOTerm x_0000353 = 
		SBOUtil.createTerm("SBO:0000353", "?", "reverse reaction velocity", 
			"The speed of an enzymatic reaction at a defined concentration of substrate(s) and enzyme. ", 
			"SBO:0000352");
public static final SBOTerm x_0000354 = 
		SBOUtil.createTerm("SBO:0000354", "?", "informational molecule segment", 
			"Fragment of a macromolecule that carries genetic information.", 
			"SBO:0000240");
public static final SBOTerm x_0000355 = 
		SBOUtil.createTerm("SBO:0000355", "?", "conservation law", 
			"Mathematical expression stating that a quantity is conserved in a system, whatever happens within the boundaries of that system. ", 
			"SBO:0000064");
public static final SBOTerm x_0000356 = 
		SBOUtil.createTerm("SBO:0000356", "?", "decay constant", 
			"Kinetic constant characterising a mono-exponential decay. It is the inverse of the mean lifetime of the continuant being decayed. Its unit is per time. ", 
			"SBO:0000035");
public static final SBOTerm x_0000357 = 
		SBOUtil.createTerm("SBO:0000357", "?", "biological effect of a perturbation", 
			"Biochemical networks can be affected by external influences. Those influences can be well-defined physical perturbations, such as a light pulse, or a change in temperature but also more complex of not well defined phenomena, for instance a biological process, an experimental setup, or a mutation.", 
			"SBO:0000375");
public static final SBOTerm x_0000358 = 
		SBOUtil.createTerm("SBO:0000358", "?", "phenotype", 
			"A biochemical network can generate phenotypes or affects biological processes. Such processes can take place at different levels and are independent of the biochemical network itself. ", 
			"SBO:0000375");
public static final SBOTerm x_0000359 = 
		SBOUtil.createTerm("SBO:0000359", "?", "mass conservation law", 
			"A chemical moiety that exists under different forms but is not created nor destroyed in a biochemical system. In any given system such a conserved moiety is characterized by a finite number of particles that exist in the system and is invariant. ", 
			"SBO:0000355");
public static final SBOTerm x_0000360 = 
		SBOUtil.createTerm("SBO:0000360", "?", "quantity of an entity pool", 
			"The enumeration of co-localised, identical biochemical entities of a specific state, which constitute a pool. The form of enumeration may be purely numerical, or may be given in relation to another dimension such as length or volume.", 
			"SBO:0000002");
public static final SBOTerm x_0000361 = 
		SBOUtil.createTerm("SBO:0000361", "?", "amount of an entity pool", 
			"A numerical measure of the quantity, or of some property, of the entities that constitute the entity pool.  ", 
			"SBO:0000360");
public static final SBOTerm x_0000362 = 
		SBOUtil.createTerm("SBO:0000362", "?", "concentration conservation law", 
			"If all forms of a moiety exist in a single compartment and the size of that compartment is fixed then the Mass Conservation is also a Concentration Conservation.  ", 
			"SBO:0000359");
public static final SBOTerm x_0000363 = 
		SBOUtil.createTerm("SBO:0000363", "Kx", "activation constant", 
			"Dissociation constant of a potentiator (activator) from a target (e.g. an enzyme) of which it activates the function.", 
			"SBO:0000282");
public static final SBOTerm x_0000364 = 
		SBOUtil.createTerm("SBO:0000364", "?", "multimer cardinality", 
			"Number of monomers composing a multimeric entity.", 
			"SBO:0000188");
public static final SBOTerm x_0000365 = 
		SBOUtil.createTerm("SBO:0000365", "?", "forward non-integral order rate constant, continuous case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction where reactants have non-integral orders. This parameter encompasses all the contributions to the velocity except the quantity of the reactants.It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000154,SBO:0000160");
public static final SBOTerm x_0000366 = 
		SBOUtil.createTerm("SBO:0000366", "?", "forward non-integral order rate constant, discrete case", 
			"Numerical parameter that quantifies the forward velocity of a chemical reaction where reactants have non-integral orders. This parameter encompasses all the contributions to the velocity except the quantity of the reactants. It is to be used in a reaction modelled using a discrete framework. ", 
			"SBO:0000155,SBO:0000160");
public static final SBOTerm x_0000367 = 
		SBOUtil.createTerm("SBO:0000367", "?", "reverse non-integral order rate constant, discrete case", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction where products have non-integral orders. This parameter encompasses all the contributions to the velocity except the quantity of the products. It is to be used in a reaction modelled using a discrete framework. ", 
			"SBO:0000161");
public static final SBOTerm x_0000368 = 
		SBOUtil.createTerm("SBO:0000368", "?", "reverse non-integral order rate constant, continuous case", 
			"Numerical parameter that quantifies the reverse velocity of a chemical reaction where products have non-integral orders. This parameter encompasses all the contributions to the velocity except the quantity of the products. It is to be used in a reaction modelled using a continuous framework. ", 
			"SBO:0000161");
public static final SBOTerm x_0000369 = 
		SBOUtil.createTerm("SBO:0000369", "?", "gene regulatory region", 
			"Region of a gene that is involved in the modulation of the expression of the gene. ", 
			"SBO:0000404");
public static final SBOTerm x_0000370 = 
		SBOUtil.createTerm("SBO:0000370", "?", "Michaelis constant in non-equilibrium situation", 
			"Michaelis constant derived or experimentally measured under non-equilibrium conditions.", 
			"SBO:0000027");
public static final SBOTerm x_0000371 = 
		SBOUtil.createTerm("SBO:0000371", "?", "Michaelis constant in quasi-steady state situation", 
			"Michaelis constant derived using a steady-state assumption for enzyme-substrate and enzyme-product intermediates. For example see Briggs-Haldane equation (SBO:0000031).", 
			"SBO:0000370");
public static final SBOTerm x_0000372 = 
		SBOUtil.createTerm("SBO:0000372", "?", "Michaelis constant in irreversible situation", 
			"Michaelis constant derived assuming enzyme-substrate and enzyme-product intermediates are formed in consecutive irreversible reactions. The constant K is the ratio of the forward rate constants. For example see Van Slyke-Cullen equation (SBO:0000030).", 
			"SBO:0000370");
public static final SBOTerm x_0000373 = 
		SBOUtil.createTerm("SBO:0000373", "?", "Michaelis constant in fast equilibrium situation", 
			"Michaelis constant as determined in a reaction where the formation of the enzyme-substrate complex occurs at a much faster rate than subsequent steps, and so are assumed to be in a quasi-equilibrium situation. K is equivalent to an equilibrium constant. For example see Henri-Michaelis-Menten equation (SBO:0000029).", 
			"SBO:0000027");
public static final SBOTerm x_0000374 = 
		SBOUtil.createTerm("SBO:0000374", "?", "relationship", 
			"connectedness between entities and/or interactions representing their relatedness or influence.", 
			"SBO:0000231");
public static final SBOTerm x_0000375 = 
		SBOUtil.createTerm("SBO:0000375", "?", "process", 
			"A sequential series of actions, motions, or occurrences, such as chemical reactions, that affect one or more entities in a phenomenologically characteristic manner.", 
			"SBO:0000231");
public static final SBOTerm x_0000376 = 
		SBOUtil.createTerm("SBO:0000376", "?", "hydrolysis", 
			"Decomposition of a compound by reaction with water, where the hydroxyl and H groups are incorporated into different products", 
			"SBO:0000176");
public static final SBOTerm x_0000377 = 
		SBOUtil.createTerm("SBO:0000377", "?", "isomerisation", 
			"A reaction in which the principal reactant and principal product are isomers of each other", 
			"SBO:0000176");
public static final SBOTerm x_0000378 = 
		SBOUtil.createTerm("SBO:0000378", "?", "enzymatic rate law for inhibition of irreversible unireactant enzymes by competing substrates", 
			"Inhibition of a unireactant enzyme by competing substrates (Sa) that bind to the free enzyme on the same binding site. The enzyme does not catalyse the reactions in both directions.     ", 
			"SBO:0000270");
public static final SBOTerm x_0000379 = 
		SBOUtil.createTerm("SBO:0000379", "?", "enzymatic rate law for simple competitive inhibition of irreversible unireactant enzymes by two non-exclusive inhibitors", 
			"Inhibition of a unireactant enzyme by two inhibitors that can bind once to the free enzyme and preclude the binding of the substrate. Binding of one inhibitor may affect binding of the other, or not. The enzymes do not catalyse the reactions in both directions.", 
			"SBO:0000430");
public static final SBOTerm x_0000380 = 
		SBOUtil.createTerm("SBO:0000380", "?", "biochemical coefficient", 
			"number used as a multiplicative or exponential factor for quantities, expressions or functions", 
			"SBO:0000002");
public static final SBOTerm x_0000381 = 
		SBOUtil.createTerm("SBO:0000381", "?", "biochemical proportionality coefficient", 
			"A multiplicative factor for quantities, expressions or functions ", 
			"SBO:0000380");
public static final SBOTerm x_0000382 = 
		SBOUtil.createTerm("SBO:0000382", "?", "biochemical exponential coefficient", 
			"number used as an exponential factor for quantities, expressions or functions ", 
			"SBO:0000380");
public static final SBOTerm x_0000383 = 
		SBOUtil.createTerm("SBO:0000383", "?", "biochemical cooperative inhibition coefficient", 
			"The coefficient used to quantify the effect on inhibition constants of multiple inhibitors binding non-exclusively to the enzyme.", 
			"SBO:0000381");
public static final SBOTerm x_0000384 = 
		SBOUtil.createTerm("SBO:0000384", "?", "biochemical inhibitory proportionality coefficient", 
			"Coefficient that quantifies the effect on inhibition constants of either binding of multiple substrates or inhibitors.", 
			"SBO:0000381");
public static final SBOTerm x_0000385 = 
		SBOUtil.createTerm("SBO:0000385", "?", "biochemical cooperative inhibitor substrate coefficient", 
			"The coefficient that describes the proportional change of Ks or Ki when inhibitor or substrate is bound, respectively, to the enzyme.", 
			"SBO:0000381");
public static final SBOTerm x_0000386 = 
		SBOUtil.createTerm("SBO:0000386", "?", "enzymatic rate law for inhibition of irreversible unireactant enzymes by single competing substrate", 
			"Inhibition of a unireactant enzyme by a competing substrate (Sa) that binds to the free enzyme on the same binding site. The enzyme does not catalyse the reactions in both directions.", 
			"SBO:0000378");
public static final SBOTerm x_0000387 = 
		SBOUtil.createTerm("SBO:0000387", "?", "enzymatic rate law for competitive inhibition of irreversible unireactant enzyme by product", 
			"Inhibition of a unireactant enzyme by a competing product (P) that binds to the free enzyme on the same binding site. The enzyme does not catalyse the reactions in both directions. ", 
			"SBO:0000270");
public static final SBOTerm x_0000388 = 
		SBOUtil.createTerm("SBO:0000388", "?", "enzymatic rate law for inhibition of irreversible unireactant enzymes by single competing substrate with product inhibition", 
			"Inhibition of a unireactant enzyme by a competing substrate (Sa) that binds to the free enzyme on the same binding site, and competitive inhibition by a product (P) and an alternative product (Pa). The enzyme does not catalyse the reactions in both directions.  ", 
			"SBO:0000378");
public static final SBOTerm x_0000389 = 
		SBOUtil.createTerm("SBO:0000389", "?", "switch value", 
			"A parameter value taken by a switch, which has a discrete set of values which can be alternated or switched between.", 
			"SBO:0000002");
public static final SBOTerm x_0000390 = 
		SBOUtil.createTerm("SBO:0000390", "binary switch", "boolean switch", 
			"A parameter that has precisely two discrete values which may be switched between. Usually for the boolean parameter these are indicated as '0 or 1' or 'True or False'.", 
			"SBO:0000389");
public static final SBOTerm x_0000391 = 
		SBOUtil.createTerm("SBO:0000391", "?", "steady state expression", 
			"A mathematical expression that describes a steady state situation", 
			"SBO:0000064");
public static final SBOTerm x_0000392 = 
		SBOUtil.createTerm("SBO:0000392", "?", "equivalence", 
			"Term to signify those material or conceptual entities that are identical in some respect within a frame of reference", 
			"SBO:0000374");
public static final SBOTerm x_0000393 = 
		SBOUtil.createTerm("SBO:0000393", "?", "production", 
			"Generation of a material or conceptual entity. ", 
			"SBO:0000168");
public static final SBOTerm x_0000394 = 
		SBOUtil.createTerm("SBO:0000394", "?", "consumption", 
			"Decrease in amount of a material or conceptual entity. ", 
			"SBO:0000168");
public static final SBOTerm x_0000395 = 
		SBOUtil.createTerm("SBO:0000395", "?", "encapsulating process", 
			"An aggregation of interactions and entities into a single process.", 
			"SBO:0000375");
public static final SBOTerm x_0000396 = 
		SBOUtil.createTerm("SBO:0000396", "?", "uncertain process", 
			"An equivocal or conjectural process, whose existence is assumed but not proven.", 
			"SBO:0000375");
public static final SBOTerm x_0000397 = 
		SBOUtil.createTerm("SBO:0000397", "?", "omitted process", 
			"One or more processes that are not represented in certain representations or interpretations of a model.", 
			"SBO:0000375");
public static final SBOTerm x_0000398 = 
		SBOUtil.createTerm("SBO:0000398", "?", "logical relationship", 
			"Relationship between entities (material or conceptual) and logical operators, or between logical operators themselves. ", 
			"SBO:0000374");
public static final SBOTerm x_0000399 = 
		SBOUtil.createTerm("SBO:0000399", "?", "decarboxylation", 
			"A process in which a carboxyl group (COOH) is removed from a molecule as carbon dioxide.", 
			"SBO:0000211");
public static final SBOTerm x_0000400 = 
		SBOUtil.createTerm("SBO:0000400", "?", "decarbonylation", 
			"Removal of a carbonyl group (-C-O-) from a molecule, usually as carbon monoxide", 
			"SBO:0000211");
public static final SBOTerm x_0000401 = 
		SBOUtil.createTerm("SBO:0000401", "?", "deamination", 
			"Removal of an amine group from a molecule, often under the addition of water", 
			"SBO:0000211");
public static final SBOTerm x_0000402 = 
		SBOUtil.createTerm("SBO:0000402", "?", "transfer of a chemical group", 
			"Covalent reaction that results in the transfer of a chemical group from one molecule to another.", 
			"SBO:0000182");
public static final SBOTerm x_0000403 = 
		SBOUtil.createTerm("SBO:0000403", "?", "transamination", 
			"The transfer of an amino group between two molecules. Commonly in biology this is restricted to reactions between an amino acid and an alpha-keto carbonic acid, whereby the reacting amino acid is converted into an alpha-keto acid, and the alpha-keto acid reactant into an amino acid.", 
			"SBO:0000402");
public static final SBOTerm x_0000404 = 
		SBOUtil.createTerm("SBO:0000404", "?", "unit of genetic information", 
			"Functional entity associated with or derived from a unit of inheritance.", 
			"SBO:0000241");
public static final SBOTerm x_0000405 = 
		SBOUtil.createTerm("SBO:0000405", "?", "perturbing agent", 
			"A material entity that is responsible for a perturbing effect", 
			"SBO:0000240");
public static final SBOTerm x_0000406 = 
		SBOUtil.createTerm("SBO:0000406", "?", "observable", 
			"An entity that can be measured quantitatively", 
			"SBO:0000240");
public static final SBOTerm x_0000407 = 
		SBOUtil.createTerm("SBO:0000407", "?", "absolute inhibition", 
			"Control that precludes the execution of a process.", 
			"SBO:0000169");
public static final SBOTerm x_0000408 = 
		SBOUtil.createTerm("SBO:0000408", "?", "biological activity", 
			"Effect of a biological entity on biological structures or processes.", 
			"SBO:0000003");
public static final SBOTerm x_0000409 = 
		SBOUtil.createTerm("SBO:0000409", "?", "interaction outcome", 
			"Entity that results from the interaction between other entities.", 
			"SBO:0000236");
public static final SBOTerm x_0000410 = 
		SBOUtil.createTerm("SBO:0000410", "?", "implicit compartment", 
			"A compartment whose existence is inferred due to the presence of known material entities which must be bounded, allowing the creation of material entity pools.", 
			"SBO:0000290");
public static final SBOTerm x_0000411 = 
		SBOUtil.createTerm("SBO:0000411", "?", "absolute stimulation", 
			"Control that always triggers the controlled process.", 
			"SBO:0000170");
public static final SBOTerm x_0000412 = 
		SBOUtil.createTerm("SBO:0000412", "?", "biological activity", 
			"The potential action that a biological entity has on other entities. Example are enzymatic activity, binding activity etc.", 
			"SBO:0000231");
public static final SBOTerm x_0000413 = 
		SBOUtil.createTerm("SBO:0000413", "?", "positional relationship", 
			"The connectedness between entities as related by their position ", 
			"SBO:0000374");
public static final SBOTerm x_0000414 = 
		SBOUtil.createTerm("SBO:0000414", "?", "cis", 
			"Positional relationship between entities on the same strand (e.g. in DNA), or on the same side. ", 
			"SBO:0000413");
public static final SBOTerm x_0000415 = 
		SBOUtil.createTerm("SBO:0000415", "?", "trans", 
			"Positional relationship between entities on different sides, or strands", 
			"SBO:0000413");
public static final SBOTerm x_0000416 = 
		SBOUtil.createTerm("SBO:0000416", "?", "true", 
			"One of the two values possible from a boolean switch, which equates to '1', 'on' or 'input'.", 
			"SBO:0000390");
public static final SBOTerm x_0000417 = 
		SBOUtil.createTerm("SBO:0000417", "?", "false", 
			"One of the two values possible from a boolean switch, which equates to '0', 'off' or 'no input'.", 
			"SBO:0000390");
public static final SBOTerm x_0000418 = 
		SBOUtil.createTerm("SBO:0000418", "?", "multimer of complexes", 
			"Non-covalent association between several independant complexes", 
			"SBO:0000286");
public static final SBOTerm x_0000419 = 
		SBOUtil.createTerm("SBO:0000419", "?", "multimer of informational molecule segment", 
			"Non-covalent association between portions of macromolecules that carry genetic information", 
			"SBO:0000286");
public static final SBOTerm x_0000420 = 
		SBOUtil.createTerm("SBO:0000420", "?", "multimer of macromolecules", 
			"Non-covalent association between several macromolecules", 
			"SBO:0000286,SBO:0000296");
public static final SBOTerm x_0000421 = 
		SBOUtil.createTerm("SBO:0000421", "?", "multimer of simple chemicals", 
			"Non-covalent association between several simple chemicals", 
			"SBO:0000286");
public static final SBOTerm x_0000422 = 
		SBOUtil.createTerm("SBO:0000422", "?", "isoinhibition constant", 
			"Inhibitory constant for the binding of a given ligand with an isomeric form of an enzyme. ", 
			"SBO:0000261");
public static final SBOTerm x_0000423 = 
		SBOUtil.createTerm("SBO:0000423", "?", "pseudo-dissociation constant for product", 
			"In reversible reactions this is the concentration of product that is required to achieve half activation or inhibition in Hill-type kinetics, in the absence of the substrate. ", 
			"SBO:0000194");
public static final SBOTerm x_0000424 = 
		SBOUtil.createTerm("SBO:0000424", "?", "pseudo-dissociation constant for substrate", 
			"In reversible reactions this is the concentration of substrate that is required to achieve half activation or inhibition in Hill-type kinetics, in the absence of the product. ", 
			"SBO:0000194");
public static final SBOTerm x_0000425 = 
		SBOUtil.createTerm("SBO:0000425", "?", "reversible Hill-type enzymatic rate law", 
			"Reversible Hill-type kinetics represents the situation where a single substrate and product bind cooperatively and reversibly to the enzyme. Co-operativity is seen if the Hill coefficient (h) is greater than 1, indicating that the binding of one substrate (or product) molecule facilitates the binding of the next. The opposite effect is evident with a coefficient less than 1. ", 
			"SBO:0000268");
public static final SBOTerm x_0000426 = 
		SBOUtil.createTerm("SBO:0000426", "?", "modulated reversible Hill-type rate law", 
			"Reversible Hill-type kinetics in the presence of at least one modifier whose binding is affected by the presence of the substrate or product.", 
			"SBO:0000425");
public static final SBOTerm x_0000427 = 
		SBOUtil.createTerm("SBO:0000427", "?", "modulated reversible Hill-type rate law with one modifier", 
			"The modifier can be either an activator or inhibitor depending on the value of alpha (activator for values larger than 1, inhibitor for values smaller than 1; no effect if exactly 1). This reflects the effect of the presence of substrate and product on the binding of the modifier. The equation, derived by Hofmeyr and Cornish-Bowden (Comput. Appl. Biosci. 13, 377 - 385 (1997)", 
			"SBO:0000426");
public static final SBOTerm x_0000428 = 
		SBOUtil.createTerm("SBO:0000428", "?", "modulated reversible Hill-type rate law with two modifiers", 
			"The modifiers can be either activators or inhibitors depending on the values of and alpha (activators for values larger than 1, inhibitors for values smaller than 1; no effect if exactly 1). The assumption is that the binding of one modifier affects the binding of the second. Modifiers are assumed to bind at different sites. The synergetic effects of the two modifiers depend on the parameter alpha (if unity then they are independent; if zero they compete for the same binding site). and reflect the effect of the presence of substrate and product on the binding of modifier A or modifier B. alphaA and alphaB factors account for the effect of substrate and product binding on the binding of modifier A and modifier B respectively. alphaAB accounts for the interaction of the modifiers on each others binding.  (if < 1 Ma is inhibitor, if > 1 activator) alpha_2 	: factor accounting for the effect of S and P on the binding of Mb  (if < 1 Mb is inhibitor, if > 1 activator) alpha_3 	: factor accounting for interaction of Ma to Mb binding to the enzyme (and v. v.).", 
			"SBO:0000426");
public static final SBOTerm x_0000429 = 
		SBOUtil.createTerm("SBO:0000429", "?", "enzymatic rate law for multireactant enzymes", 
			"Kinetics of enzyme-catalysed reactions with 2 or more substrates or products ", 
			"SBO:0000268");
public static final SBOTerm x_0000430 = 
		SBOUtil.createTerm("SBO:0000430", "?", "enzymatic rate law for modulated unireactant enzymes", 
			"Kinetics of enzymes that react with one substance, and whose activity may be positively or negatively modulated.", 
			"SBO:0000269");
public static final SBOTerm x_0000431 = 
		SBOUtil.createTerm("SBO:0000431", "?", "unmodulated reversible Hill-type rate law", 
			"Reversible equivalent of Hill kinetics, where substrate and product bind co-operatively to the enzyme. A Hill coefficient (h) of greater than 1 indicates positive co-operativity between substrate and product, while h values below 1 indicate negative co-operativity.  ", 
			"SBO:0000425");
public static final SBOTerm x_0000432 = 
		SBOUtil.createTerm("SBO:0000432", "?", "irreversible Michaelis Menten rate law for two substrates", 
			"Enzymatic rate law for an irreversible reaction involving two substrates and one product.", 
			"SBO:0000429");
public static final SBOTerm x_0000433 = 
		SBOUtil.createTerm("SBO:0000433", "?", "Ordered Bi-Bi mechanism rate law", 
			"Enzymatic rate law for a reaction involving two substrates and two products. The products P and then Q are released strictly in order, while the substrates are bound strictly in the order A and then B.", 
			"SBO:0000429");
public static final SBOTerm x_0000434 = 
		SBOUtil.createTerm("SBO:0000434", "?", "Ordered Bi-Uni mechanism rate law", 
			"Enzymatic rate for a reaction involving two substrates and one product. The substrates A and then B are bound strictly in order.", 
			"SBO:0000429");
public static final SBOTerm x_0000435 = 
		SBOUtil.createTerm("SBO:0000435", "?", "Ordered Uni-Bi mechanism rate law", 
			"Enzymatic rate law for a reaction with one substrate and two products. The products P and then Q are released in the strict order P and then Q.", 
			"SBO:0000429");
public static final SBOTerm x_0000436 = 
		SBOUtil.createTerm("SBO:0000436", "?", "Ping Pong Bi-Bi mechanism rate law", 
			"Enzymatic rate law for a reaction involving two substrates and two products. The first product (P) is released after the first substrate (A) has been bound. The second product (Q) is released after the second substrate (B) has been bound. ", 
			"SBO:0000429");
public static final SBOTerm x_0000437 = 
		SBOUtil.createTerm("SBO:0000437", "?", "reversible Iso Uni-Uni", 
			"Enzyme catalysed reaction involving one substrate and one product. Unlike the reversible uni-uni mechanism (SBO:0000326), the mechanism assumes an enzyme intermediate. Therefore, the free enzyme generated after the release of product from enzyme-product complex is not the same form as that which bind the substrate to form enzyme-substrate complex. Some permeases are thought to follow this mechanism, such that isomerization in the membrane may be accomplished through re-orientation in the membrane.", 
			"SBO:0000326");
public static final SBOTerm x_0000438 = 
		SBOUtil.createTerm("SBO:0000438", "Reversible Michaelis Menten", "reversible Uni-Uni", 
			"The reversible equivalent of the Henri-Michaelis-Menten rate law (SBO:0000029).", 
			"SBO:0000326");
public static final SBOTerm x_0000439 = 
		SBOUtil.createTerm("SBO:0000439", "Uni-Uni", "Uni-Uni Reversible using Haldane relationship", 
			"Enzyme catalysed reaction involving one substrate and one product. It is a modification of SBO:0000326 that directly incorporates the equilibrium constant in the rate law. ", 
			"SBO:0000326");
public static final SBOTerm x_0000440 = 
		SBOUtil.createTerm("SBO:0000440", "?", "enzymatic rate law for irreversible allosteric inhibition", 
			"Enzymatic rate law which follows from the allosteric concerted model (symmetry model or MWC model).This states that enzyme subunits can assume one of two conformational states (relaxed or tense), and that the state of one subunit is shared or enforced on the others. The binding of a ligand to a site other than that bound by the substrate (active site) can shift the conformation from one state to the other. L represents the equilibrium constant between active and inactive states of the enzyme, and n represents the number of binding sites for the substrate and inhibitor.", 
			"SBO:0000430");
public static final SBOTerm x_0000441 = 
		SBOUtil.createTerm("SBO:0000441", "?", "enzymatic rate law for mixed-type inhibition of reversible enzymes by mutually exclusive inhibitors", 
			"Reversible inhibition of a unireactant enzyme by inhibitors that can bind to the enzyme-substrate complex and to the free enzyme with the same equilibrium constant. The inhibitor is noncompetitive with the substrate.", 
			"SBO:0000275");
public static final SBOTerm x_0000442 = 
		SBOUtil.createTerm("SBO:0000442", "?", "enzymatic rate law for simple reversible non-competitive inhibition of unireactant enzymes", 
			"Reversible inhibition of a unireactant enzyme by one inhibitor that can bind to the enzyme-substrate complex and to the free enzyme with the same equilibrium constant. The inhibitor is noncompetitive with the substrate. ", 
			"SBO:0000265");
public static final SBOTerm x_0000443 = 
		SBOUtil.createTerm("SBO:0000443", " compulsory activation", "enzymatic rate law for reversible essential activation", 
			"Enzymatic rate law where the free enzyme, in the absence of the activator, is unable to bind substrate and has no activity.", 
			"SBO:0000430");
public static final SBOTerm x_0000444 = 
		SBOUtil.createTerm("SBO:0000444", "?", "enzymatic rate law for reversible mixed activation", 
			"Enzymatic rate law where the activator enhances the rate of reaction through specific and catalytic effects, which increase the apparent limiting rate and decrease apparent Michaelis constant. The activator can bind reversibly both the free enzyme and enzyme-substrate complex, while the substrate can bind only to enzyme-activator complex. Catalytic activity is seen only when enzyme, substrate and activator are complexed.", 
			"SBO:0000443");
public static final SBOTerm x_0000445 = 
		SBOUtil.createTerm("SBO:0000445", "?", "enzymatic rate law for irreversible substrate activation", 
			"This enzymatic rate law is available only for irreversible reactions, with one substrate and one product. There is a second binding site for the enzyme which, when occupied, activates the enzyme. Substrate binding at either site can occur at random. ", 
			"SBO:0000444");
public static final SBOTerm x_0000446 = 
		SBOUtil.createTerm("SBO:0000446", "?", "enzymatic rate law for irrreversible mixed activation", 
			"Enzymatic rate law where the activator enhances the rate of reaction through specific and catalytic effects, which increase the apparent limiting rate and decrease apparent Michaelis constant. The activator can bind irreversibly both free enzyme and enzyme-substrate complex, while the substrate can bind only to enzyme-activator complex. Catalytic activity is seen only when enzyme, substrate and activator are complexed.", 
			"SBO:0000444");
public static final SBOTerm x_0000447 = 
		SBOUtil.createTerm("SBO:0000447", "?", "enzymatic rate law for reversible catalytic activation with one activator", 
			"Enzymatic rate law where an activator enhances the rate of reaction by increasing the apparent limiting rate; The reversible binding of the activator to the enzyme-substrate complex is required for enzyme catalytic activity (to generate the product).  ", 
			"SBO:0000444");
public static final SBOTerm x_0000448 = 
		SBOUtil.createTerm("SBO:0000448", "?", "enzymatic rate law for reversible specific activation", 
			"Enzymatic rate law for one substrate, one product and one modifier which acts as an activator. The activator enhances the rate of reaction by decreasing the apparent Michaelis constant. The activator reversibly binds to the enzyme before the enzyme can bind the substrate.", 
			"SBO:0000444");
public static final SBOTerm x_0000449 = 
		SBOUtil.createTerm("SBO:0000449", "?", "enzymatic rate law for irreversible catalytic activation with one activator", 
			"Enzymatic rate law where an activator enhances the rate of reaction by increasing the apparent limiting rate; The activator binding to the enzyme-substrate complex (irreversibly) is required for enzyme catalytic activity (to generate the product). ", 
			"SBO:0000447");
public static final SBOTerm x_0000450 = 
		SBOUtil.createTerm("SBO:0000450", "?", "enzymatic rate law for irreversible specific activation", 
			"Enzymatic rate law for one substrate, one product and one modifier which acts as an activator. The activator enhances the rate of reaction by decreasing the apparent Michaelis constant. The activator must bind to the enzyme before the enzyme can bind the substrate. ", 
			"SBO:0000448");
public static final SBOTerm x_0000451 = 
		SBOUtil.createTerm("SBO:0000451", "?", "enzymatic rate law for reversible reactions with competitive inhibition", 
			"This enzymatic rate law involves one substrate, one product and one or more modifiers. The modifiers act as competitive inhibitors of the substrate at the enzyme binding site; The modifiers (inhibitors) reversibly bound to the enzyme block access to the substrate. The inhibitors have the effect of increasing the apparent Km, and bind exclusively to the enzymes.", 
			"SBO:0000430");
public static final SBOTerm x_0000452 = 
		SBOUtil.createTerm("SBO:0000452", "?", "enzymatic rate law for reversible competitive inhibition by one inhibitor", 
			"This enzymatic rate law involves one substrate, one product and one modifier. The modifier acts as a competitive inhibitor with the substrate at the enzyme binding site; The modifier (inhibitor) reversibly bound to the enzyme blocks access to the substrate. The inhibitor has the effect of increasing the apparent Km. ", 
			"SBO:0000451");
public static final SBOTerm x_0000453 = 
		SBOUtil.createTerm("SBO:0000453", "?", "enzymatic rate law for reversible empirical allosteric inhibition by one inhibitor", 
			"Enzymatic rate law where the reversible binding of one ligand decreases the affinity for substrate at other active sites. The ligand does not bind the same site as the substrate on the enzyme. This is an empirical equation, where n represents the Hill coefficient.", 
			"SBO:0000451");
public static final SBOTerm x_0000454 = 
		SBOUtil.createTerm("SBO:0000454", "?", "enzymatic rate law for reversible substrate inhibition", 
			"Enzymatic rate law where the substrate for an enzyme also acts as a reversible inhibitor. This may entail a second (non-active) binding site for the enzyme. The inhibition constant is then the dissociation constant for the substrate from this second site.", 
			"SBO:0000430");
public static final SBOTerm x_0000455 = 
		SBOUtil.createTerm("SBO:0000455", "?", "enzymatic rate law for irreversible substrate inhibition", 
			"Enzymatic rate law where the substrate for an enzyme also acts as an irreversible inhibitor. This may entail a second (non-active) binding site for the enzyme. The inhibition constant is then the dissociation constant for the substrate from this second site. ", 
			"SBO:0000454");
public static final SBOTerm x_0000456 = 
		SBOUtil.createTerm("SBO:0000456", "?", "enzymatic rate law for reversible unireactant enzyme with a single hyperbolic modulator", 
			"Enzymatic rate law where the modifier can act as an activator or inhibitor, depending upon the values of the kinetic constants. The modifier can bind reversibly to all forms of the enzyme and all enzyme-substrate complexes are reactive.  'a' represents the ratio of dissociation constant of the elementary step Enzyme-Substrate complex + Modifier = Enzyme-Substrate-Modifier complex over that of Enzyme + Modifier = Enzyme-Modifier complex. 'b' represents ratio of the rate constant of elementary step Enzyme-Substrate-Modifier complex -> Enzyme-Modifier complex + Product over that of Enzyme-Substrate complex -> Enzyme + Product.  ", 
			"SBO:0000430");
public static final SBOTerm x_0000457 = 
		SBOUtil.createTerm("SBO:0000457", "?", "enzymatic rate law for irreversible unireactant enzyme with a single hyperbolic modulator", 
			"Enzymatic rate law where the modifier can act as an activator or inhibitor, depending upon the values of the kinetic constants. The modifier can bind irreversibly to all forms of the enzyme and all enzyme-substrate complexes are reactive.  'a' represents the ratio of dissociation constant of the elementary step Enzyme-Substrate complex + Modifier = Enzyme-Substrate-Modifier complex) over that of Enzyme + Modifier = Enzyme-Modifier complex. 'b' represents ratio of the rate constant of elementary step Enzyme-Substrate-Modifier complex -> Enzyme-Modifier complex + Product over that of Enzyme-Substrate complex -> Enzyme + Product.  ", 
			"SBO:0000456");
public static final SBOTerm x_0000458 = 
		SBOUtil.createTerm("SBO:0000458", "?", "enzymatic rate law for simple uncompetitive inhibition of reversible unireactant enzymes", 
			"Reversible inhibition of a unireactant enzyme by one inhibitor, which binds to the enzyme-substrate complex. The inhibitor is uncompetitive with the substrate. ", 
			"SBO:0000430");
public static final SBOTerm x_0000459 = 
		SBOUtil.createTerm("SBO:0000459", "activator", "stimulator", 
			"Substance that accelerates the velocity of a chemical reaction without itself being consumed or transformed. ", 
			"SBO:0000019");
public static final SBOTerm x_0000460 = 
		SBOUtil.createTerm("SBO:0000460", "?", "enzymatic catalyst", 
			"A substance that accelerates the velocity of a chemical reaction without itself being consumed or transformed, by lowering the free energy of the transition state. The substance acting as a catalyst is an enzyme.", 
			"SBO:0000013");
public static final SBOTerm x_0000461 = 
		SBOUtil.createTerm("SBO:0000461", "necessary stimulator", "essential activator", 
			"A substance that is absolutely required for occurrence and stimulation of a reaction.", 
			"SBO:0000459");
public static final SBOTerm x_0000462 = 
		SBOUtil.createTerm("SBO:0000462", "?", "non-essential activator", 
			"An activator which is not necessary for an enzymatic reaction, but whose presence will further increase enzymatic activity. ", 
			"SBO:0000459");
public static final SBOTerm x_0000463 = 
		SBOUtil.createTerm("SBO:0000463", "standard chemical potential", "standard biochemical potential", 
			"The biochemical potential of a substance measured at standard concentrations and under standard conditions.", 
			"SBO:0000303");
public static final SBOTerm x_0000464 = 
		SBOUtil.createTerm("SBO:0000464", "?", "state variable assignment", 
			"Assignment of a state or a value to a state variable, characteristic or property, of a biological entity.", 
			"SBO:0000375");
public static final SBOTerm x_0000465 = 
		SBOUtil.createTerm("SBO:0000465", "?", "spatial measure", 
			"The measurable dimensions of an object which are minimally required to define the space that an object occupies.", 
			"SBO:0000002");
public static final SBOTerm x_0000466 = 
		SBOUtil.createTerm("SBO:0000466", "?", "length", 
			"The length of an object is the longest measurable distance between its extremities. ", 
			"SBO:0000465");
public static final SBOTerm x_0000467 = 
		SBOUtil.createTerm("SBO:0000467", "?", "area", 
			"The area of an object is a quantity expressing its two-dimensional size, usually part or all of its surface. ", 
			"SBO:0000465");
public static final SBOTerm x_0000468 = 
		SBOUtil.createTerm("SBO:0000468", "?", "volume", 
			"A quantity representing the three-dimensional space occupied by all or part of an object.", 
			"SBO:0000465");
public static final SBOTerm x_0000469 = 
		SBOUtil.createTerm("SBO:0000469", "inclusion", "containment", 
			"An entity that is a subset of another entity or object.", 
			"SBO:0000413");
public static final SBOTerm x_0000470 = 
		SBOUtil.createTerm("SBO:0000470", "?", "mass fraction", 
			"For a given substance, A, its mass fraction (x A) is defined as the ratio of its mass (m A) to the total mass (m total) in which it is present, where the sum of all mass fractions is equal to 1. This provides a means to express concentration in a dimensionless size. ", 
			"SBO:0000540");
public static final SBOTerm x_0000471 = 
		SBOUtil.createTerm("SBO:0000471", "?", "molal concentration of an entity", 
			"Molality denotes the number of moles of solute per kilogram of solvent (not solution). The term molal solution is used as a shorthand for a one molal solution, i.e. a solution which contains one mole of the solute per kilogram of the solvent. The SI unit for molality is mol/kg.", 
			"SBO:0000196");
public static final SBOTerm x_0000472 = 
		SBOUtil.createTerm("SBO:0000472", "?", "molar concentration of an entity", 
			"Molarity, or molar concentration, denotes the number of moles of a given substance per litre of solution. The unit of measure of molarity is mol/L, molar, or the capital letter M as an abbreviated form.", 
			"SBO:0000196");
public static final SBOTerm x_0000473 = 
		SBOUtil.createTerm("SBO:0000473", "?", "denotement", 
			"Term to signify where a material or conceptual entity is represented or denoted by a symbol or by some other abbreviated form. ", 
			"SBO:0000552");
public static final SBOTerm x_0000474 = 
		SBOUtil.createTerm("SBO:0000474", "?", "convenience function", 
			"Mathematical function commonly used in biological modeling, which enable simplification of more complex expressions", 
			"SBO:0000064");
public static final SBOTerm x_0000475 = 
		SBOUtil.createTerm("SBO:0000475", "input signal step function", "periodic forcing function", 
			"Function that enables the modeling of cyclic inputs with on and off phases, such as the light and dark phases in circadian rhythm. It includes parameters for the 'on' period (Tp), the cycle period (Tc), and the time taken to move or 'ramp' between 'on' and 'off' stages (Tw). Theta0 and Theta1 represent the minimal offset and maximal values of 'on' stage, respectively. Small values of Tw result in step-like changes. Phi is the time of the phase shift offset. In the case of light forcing, Tp represents 'light' period, Tc the cycle period, and Tw the 'twilight' timescale. Theta0 is the light value at the off state, and Theta1 the additional value at the on phase. ", 
			"SBO:0000474");
public static final SBOTerm x_0000476 = 
		SBOUtil.createTerm("SBO:0000476", "?", "period", 
			"The period is the duration of one cycle in a repeating event. [wikipedia]", 
			"SBO:0000347");
public static final SBOTerm x_0000477 = 
		SBOUtil.createTerm("SBO:0000477", "temporal offset", "phase shift", 
			"The measurable amount of time by which a periodic or cyclic is shifted or offset from defined reference point.", 
			"SBO:0000346");
public static final SBOTerm x_0000478 = 
		SBOUtil.createTerm("SBO:0000478", "?", "powered product of Michaelis constant", 
			"The product of the Michaelis constants, to the power of their respective stoichiometric coefficients, for either substrates or products.", 
			"SBO:0000193");
public static final SBOTerm x_0000479 = 
		SBOUtil.createTerm("SBO:0000479", "?", "powered product of substrate Michaelis constants", 
			"The product of the substrate Michaelis constants, to the power of their respective stoichiometric coefficients.", 
			"SBO:0000478");
public static final SBOTerm x_0000480 = 
		SBOUtil.createTerm("SBO:0000480", "?", "powered product of product Michaelis constants", 
			"The product of the product Michaelis constants, to the power of their respective stoichiometric coefficients.", 
			"SBO:0000478");
public static final SBOTerm x_0000481 = 
		SBOUtil.createTerm("SBO:0000481", "?", "stoichiometric coefficient", 
			"The stoichiometric coefficient represents the degree to which a chemical species participates in a reaction. It corresponds to the number of molecules of a reactant that are consumed or produced with each occurrence of a reaction event.", 
			"SBO:0000380");
public static final SBOTerm x_0000482 = 
		SBOUtil.createTerm("SBO:0000482", "?", "geometric mean rate constant", 
			"The geometric mean turnover rate of an enzyme in either forward or backward direction for a reaction, measured per second.", 
			"SBO:0000009");
public static final SBOTerm x_0000483 = 
		SBOUtil.createTerm("SBO:0000483", "?", "forward geometric mean rate constant", 
			"The geometric mean turnover rate of an enzyme in the forward direction for a reaction, measured per second.", 
			"SBO:0000482");
public static final SBOTerm x_0000484 = 
		SBOUtil.createTerm("SBO:0000484", "?", "reverse geometric mean rate constant", 
			"The geometric mean turnover rate of an enzyme in the reverse direction for a reaction, measured per second.", 
			"SBO:0000482");
public static final SBOTerm x_0000485 = 
		SBOUtil.createTerm("SBO:0000485", "?", "basal rate constant", 
			"The minimal velocity observed under defined conditions, which may or may not include the presence of an effector. For example in an inhibitory system, this would be the residual velocity observed under full inhibition. In non-essential activation, this would be the velocity in the absence of any activator.", 
			"SBO:0000046");
public static final SBOTerm x_0000486 = 
		SBOUtil.createTerm("SBO:0000486", "?", "relative basal rate constant", 
			"The ratio of the basal activity to the maximal velocity of a reaction. The values range between 0 and 1.", 
			"SBO:0000381");
public static final SBOTerm x_0000487 = 
		SBOUtil.createTerm("SBO:0000487", "?", "relative activity function", 
			"Function which ranges from 0 to 1, to describe the relative activation or inhibition of a reaction or process, actual or conceptual. ", 
			"SBO:0000474");
public static final SBOTerm x_0000488 = 
		SBOUtil.createTerm("SBO:0000488", "?", "relative activation function", 
			"Function which ranges from 0 to 1, to describe the relative activation of a reaction or process, actual or conceptual. ", 
			"SBO:0000487");
public static final SBOTerm x_0000489 = 
		SBOUtil.createTerm("SBO:0000489", "?", "relative inhibition function", 
			"Function which ranges from 0 to 1, to describe the relative inhibition of a reaction or process, actual or conceptual. ", 
			"SBO:0000487");
public static final SBOTerm x_0000490 = 
		SBOUtil.createTerm("SBO:0000490", "?", "number of products", 
			"Number of molecules which are generated by an enzyme.", 
			"SBO:0000188");
public static final SBOTerm x_0000491 = 
		SBOUtil.createTerm("SBO:0000491", "diffusivity", "diffusion coefficient", 
			"A proportionality constant representing the amount of substance diffusing across a unit area through a unit concentration gradient in unit time. The higher the diffusion coefficient (of one substance with respect to another), the faster they diffuse into each other. This coefficient has an SI unit of m2/s (length2/time).", 
			"SBO:0000009");
public static final SBOTerm x_0000492 = 
		SBOUtil.createTerm("SBO:0000492", "?", "amplitude", 
			"Amplitude is the magnitude of change in the oscillating variable, with each oscillation, within an oscillating system. ", 
			"SBO:0000002");
public static final SBOTerm x_0000493 = 
		SBOUtil.createTerm("SBO:0000493", "?", "functional domain", 
			"A spatial region of an entity that confers a function", 
			"SBO:0000241");
public static final SBOTerm x_0000494 = 
		SBOUtil.createTerm("SBO:0000494", "?", "binding site", 
			"A specific domain of a spatio-temporal entity to which another spatio-temporal entity is able to bind, forming chemical bonds. ", 
			"SBO:0000493");
public static final SBOTerm x_0000495 = 
		SBOUtil.createTerm("SBO:0000495", "?", "catalytic site", 
			"A catalytic site is the region which confers specificity of a substrate for the binding entity, and where specific reactions take place in the conversion of the substrate to the product. ", 
			"SBO:0000493");
public static final SBOTerm x_0000496 = 
		SBOUtil.createTerm("SBO:0000496", "?", "transmembrane domain", 
			"A transmembrane domain is any three-dimensional protein structure which is thermodynamically stable in a membrane. This may be a single alpha helix, a stable complex of several transmembrane alpha helices, a transmembrane beta barrel, a beta-helix of gramicidin A, or any other structure.  ", 
			"SBO:0000493");
public static final SBOTerm x_0000497 = 
		SBOUtil.createTerm("SBO:0000497", "?", "ternary switch", 
			"A parameter that has three discrete values which may be alternated between. ", 
			"SBO:0000389");
public static final SBOTerm x_0000498 = 
		SBOUtil.createTerm("SBO:0000498", "?", "relative activity", 
			"Value which ranges from 0 to 1, to describe the relative activity of a process or reaction. ", 
			"SBO:0000381");
public static final SBOTerm x_0000499 = 
		SBOUtil.createTerm("SBO:0000499", "?", "genetic interaction", 
			"A phenomenon whereby an observed phenotype, qualitative or quantative, is not explainable by the simple additive effects of the individual gene pertubations alone. Genetic interaction between perturbed genes is usually expected to generate a 'defective' phenotype. The level of defectiveness is often used to sub-classify this phenomenon. ", 
			"SBO:0000231");
public static final SBOTerm x_0000500 = 
		SBOUtil.createTerm("SBO:0000500", "?", "genetic suppression", 
			"Genetic suppression is said to have occurred when the phenotypic effect of an initial mutation in a gene is less severe, or entirely negated, by a subsequent mutation.  ", 
			"SBO:0000343");
public static final SBOTerm x_0000501 = 
		SBOUtil.createTerm("SBO:0000501", "?", "genetic enhancement", 
			"Genetic enhancement is said to have occurred when the phenotypic effect of an initial mutation in a gene is made increasingly severe by a subsequent mutation.", 
			"SBO:0000343");
public static final SBOTerm x_0000502 = 
		SBOUtil.createTerm("SBO:0000502", "?", "synthetic lethality", 
			"Synthetic lethality is said to have occurred where gene mutations, each of which map to a separate locus, fail to complement in an offspring to correct a phenotype, as would be expected.  ", 
			"SBO:0000343");
public static final SBOTerm x_0000503 = 
		SBOUtil.createTerm("SBO:0000503", "?", "number of entity pool constituents", 
			"The numerical quantification of an entity pool. This may be expressed as, for example, the number of molecules or the number of moles of identical entities of which an specific entity pool is comprised.", 
			"SBO:0000361");
public static final SBOTerm x_0000504 = 
		SBOUtil.createTerm("SBO:0000504", "?", "mass of an entity pool", 
			"The mass that comprises an entity pool.", 
			"SBO:0000361");
public static final SBOTerm x_0000505 = 
		SBOUtil.createTerm("SBO:0000505", "?", "concentration of enzyme", 
			"Amount of enzyme present per unit of volume. The participant role 'enzymatic catalyst' is defined in SBO:0000460.", 
			"SBO:0000518");
public static final SBOTerm x_0000506 = 
		SBOUtil.createTerm("SBO:0000506", "?", "mass of enzyme", 
			"Amount, expressed as a mass, of an enzyme. The participant role 'enzymatic catalyst' is defined in SBO:0000460.", 
			"SBO:0000504");
public static final SBOTerm x_0000507 = 
		SBOUtil.createTerm("SBO:0000507", "?", "number of an enzyme", 
			"Amount, expressed as a number, of a specific enzyme comprising an entity pool. This may be expressed, for example, as the number of molecules, or the number of moles. The participant role 'enzymatic catalyst' is defined in SBO:0000460.", 
			"SBO:0000517");
public static final SBOTerm x_0000508 = 
		SBOUtil.createTerm("SBO:0000508", "?", "number of a reactant", 
			"The amount, expressed as a number, of a specific reactant comprising an entity pool. This may be expressed, for example, as the number of molecules, or the number of moles. The participant role 'reactant' is defined in SBO:0000010. ", 
			"SBO:0000503");
public static final SBOTerm x_0000509 = 
		SBOUtil.createTerm("SBO:0000509", "?", "concentration of reactant", 
			"The amount of a specific entity pool reactant present per unit of volume. The participant role 'reactant' is defined in SBO:0000010. ", 
			"SBO:0000196");
public static final SBOTerm x_0000510 = 
		SBOUtil.createTerm("SBO:0000510", "?", "mass of reactant", 
			"The amount, expressed as a mass, of a specific reactant entity pool. The participant role 'reactant' is defined in SBO:0000010.", 
			"SBO:0000504");
public static final SBOTerm x_0000511 = 
		SBOUtil.createTerm("SBO:0000511", "?", "number of a product", 
			"The amount, expressed as a number, of a specific product comprising an entity pool. This may be expressed, for example, as the number of molecules, or the number of moles. The participant role 'product' is defined in SBO:0000011.", 
			"SBO:0000503");
public static final SBOTerm x_0000512 = 
		SBOUtil.createTerm("SBO:0000512", "?", "concentration of product", 
			"The amount of a specific entity pool product present per unit of volume. The participant role 'product' is defined in SBO:0000011.", 
			"SBO:0000196");
public static final SBOTerm x_0000513 = 
		SBOUtil.createTerm("SBO:0000513", "?", "mass of product", 
			"The amount, expressed as a mass, of a specific product entity pool. The participant role 'product' is defined in SBO:0000011.", 
			"SBO:0000504");
public static final SBOTerm x_0000514 = 
		SBOUtil.createTerm("SBO:0000514", "?", "number of a substrate", 
			"The amount, expressed as a number, of a specific substrate comprising an entity pool. This may be expressed, for example, as the number of molecules, or the number of moles. The participant role 'substrate' is defined in SBO:0000015.", 
			"SBO:0000508");
public static final SBOTerm x_0000515 = 
		SBOUtil.createTerm("SBO:0000515", "?", "concentration of substrate", 
			"The amount of a specific entity pool substrate present per unit of volume. The participant role 'substrate' is defined in SBO:0000015.", 
			"SBO:0000509");
public static final SBOTerm x_0000516 = 
		SBOUtil.createTerm("SBO:0000516", "?", "mass of substrate", 
			"The amount, expressed as a mass, of a specific substrate entity pool. The participant role 'substrate' is defined in SBO:0000015.", 
			"SBO:0000510");
public static final SBOTerm x_0000517 = 
		SBOUtil.createTerm("SBO:0000517", "?", "number of a modifier", 
			"The amount, expressed as a number, of a specific modifier comprising an entity pool. This may be expressed, for example, as the number of molecules, or the number of moles. The participant role 'modifier' is defined in SBO:0000019.", 
			"SBO:0000503");
public static final SBOTerm x_0000518 = 
		SBOUtil.createTerm("SBO:0000518", "?", "concentration of modifier", 
			"The amount of a specific modifier entity pool present per unit of volume. The participant role 'modifier' is defined in SBO:0000019.", 
			"SBO:0000196");
public static final SBOTerm x_0000519 = 
		SBOUtil.createTerm("SBO:0000519", "?", "mass of modifier", 
			"The amount, expressed as a mass, of a specific modifier entity pool. The participant role 'modifier' is defined in SBO:0000019.", 
			"SBO:0000504");
public static final SBOTerm x_0000520 = 
		SBOUtil.createTerm("SBO:0000520", "?", "number of an inhibitor", 
			"The amount, expressed as a number, of a specific inhibitor comprising an entity pool. This may be expressed, for example, as the number of molecules, or the number of moles. The participant role 'inhibitor' is defined in SBO:0000020.", 
			"SBO:0000517");
public static final SBOTerm x_0000521 = 
		SBOUtil.createTerm("SBO:0000521", "?", "concentration of inhibitor", 
			"The amount of a specific inhibitor entity pool present per unit of volume. The participant role 'inhibitor' is defined in SBO:0000020. ", 
			"SBO:0000518");
public static final SBOTerm x_0000522 = 
		SBOUtil.createTerm("SBO:0000522", "?", "mass of inhibitor", 
			"The amount, expressed as a mass, of a specific inhibitor entity pool. The participant role 'inhibitor' is defined in SBO:0000020.", 
			"SBO:0000519");
public static final SBOTerm x_0000523 = 
		SBOUtil.createTerm("SBO:0000523", "?", "number of an activator", 
			"The amount, expressed as a number, of a specific activator comprising an entity pool. This may be expressed, for example, as the number of molecules, or the number of moles. The participant role 'activator' is defined in SBO:0000459. ", 
			"SBO:0000517");
public static final SBOTerm x_0000524 = 
		SBOUtil.createTerm("SBO:0000524", "?", "concentration of activator", 
			"The amount of a specific activator entity pool present per unit of volume. The participant role 'activator' is defined in SBO:0000459.", 
			"SBO:0000518");
public static final SBOTerm x_0000525 = 
		SBOUtil.createTerm("SBO:0000525", "?", "mass of activator", 
			"The amount, expressed as a mass, of a specific activator entity pool. The participant role 'activator' is defined in SBO:0000459.", 
			"SBO:0000519");
public static final SBOTerm x_0000526 = 
		SBOUtil.createTerm("SBO:0000526", "?", "protein complex formation", 
			"The process by which two or more proteins interact non-covalently to form a protein complex (SBO:0000297).", 
			"SBO:0000344");
public static final SBOTerm x_0000527 = 
		SBOUtil.createTerm("SBO:0000527", "?", "modular rate law", 
			"Modular rate laws are a set of rate laws that provide a means to parameterise a system in a manner that is a compromise between mathematical abstraction and biochemical detail. They share the same common form:  v = u f (T/(D + Dreg))  The individual numerator and denominator terms can substituted with alternative forms, depending on reaction details and model formulation, to generate specific modular rate laws. The terms represented are; v, reaction rate; u, enzyme amount; T, modular term derived from stoichiometries, metabolite concentrations and reactant constants; D, modular term for polynomial of scaled concentrations; Dreg, competitive regulation binding states term; f, modular term for regulation factor.", 
			"SBO:0000001");
public static final SBOTerm x_0000528 = 
		SBOUtil.createTerm("SBO:0000528", "?", "common modular rate law", 
			"The common modular rate law is a generalised form of reversible Michaelis Menten kinetics, using a denominator where each binding state of the enzyme is represented. It is assumed that substrates and products bind independently and randomly, and that substrates and products cannot be bound at the same time.", 
			"SBO:0000527");
public static final SBOTerm x_0000529 = 
		SBOUtil.createTerm("SBO:0000529", "?", "direct binding modular rate law", 
			"The direct binding modular rate law makes the assumption that both substrates and products bind simultaneously and in a single step, hence the total binding states possible enumerate to 3; nothing bound, substrates bound, and products bound. Substrates and products cannot be bound at the same time.", 
			"SBO:0000527");
public static final SBOTerm x_0000530 = 
		SBOUtil.createTerm("SBO:0000530", "?", "simultaneous binding modular rate law", 
			"The simultaneous binding modular rate law makes the assumption that substrates and products can be bound simultaneously, and in any combination.", 
			"SBO:0000527");
public static final SBOTerm x_0000531 = 
		SBOUtil.createTerm("SBO:0000531", "?", "power-law modular rate law", 
			"For the power-law rate law, the denominator is set to be a constant, and the rate law does not saturate.", 
			"SBO:0000527");
public static final SBOTerm x_0000532 = 
		SBOUtil.createTerm("SBO:0000532", "?", "force-dependent modular rate law", 
			"Modular rate law where the D term is given by the square root of the product of terms (c/KM)^m where c, KM, and m denote the concentrations, Michaelis constants, and molecularities, respectively, and the product is taken over all reactants and products involved in the reaction.", 
			"SBO:0000527");
public static final SBOTerm x_0000533 = 
		SBOUtil.createTerm("SBO:0000533", "?", "specific activator", 
			"An essential activator that affects the apparent value of the specificity constant. Mechanistically, the activator would need to be bound before reactant and product binding can take place.", 
			"SBO:0000461");
public static final SBOTerm x_0000534 = 
		SBOUtil.createTerm("SBO:0000534", "?", "catalytic activator", 
			"An essential activator that affects the apparent value of the catalytic constant.", 
			"SBO:0000461");
public static final SBOTerm x_0000535 = 
		SBOUtil.createTerm("SBO:0000535", "?", "binding activator", 
			"An essential activator that affects the apparent value of the Michaelis constant(s).", 
			"SBO:0000461");
public static final SBOTerm x_0000536 = 
		SBOUtil.createTerm("SBO:0000536", "?", "partial inhibitor", 
			"Substance that, when bound, decreases enzymatic activity to a lower, nonzero value, without itself being consumed or transformed by the reaction, and without sterically hindering the interaction between reactants. The enzyme-inhibitor complex does retain some basal level of activity.", 
			"SBO:0000207");
public static final SBOTerm x_0000537 = 
		SBOUtil.createTerm("SBO:0000537", "?", "complete inhibitor", 
			"Substance that, when bound, completely negates enzymatic activity, without itself being consumed or transformed by the reaction, and without sterically hindering the interaction between reactants. The inhibitor binds to all enzyme species independently and with the same affinity, completely inhibiting any enzymatic activity.", 
			"SBO:0000207");
public static final SBOTerm x_0000538 = 
		SBOUtil.createTerm("SBO:0000538", "membrane permeability", "ionic permeability", 
			"A parameter that represents the permeability of an ion channel with respect to a particular ion.", 
			"SBO:0000002");
public static final SBOTerm x_0000539 = 
		SBOUtil.createTerm("SBO:0000539", "?", "probabilistic parameter", 
			"A quantitative parameter that represents a probability value, assigned to a specific event.", 
			"SBO:0000002");
public static final SBOTerm x_0000540 = 
		SBOUtil.createTerm("SBO:0000540", "?", "fraction of an entity pool", 
			"A ratio that represents the quantity of a defined constituent entity over the total number of all constituent entities present. ", 
			"SBO:0000360");
public static final SBOTerm x_0000541 = 
		SBOUtil.createTerm("SBO:0000541", "?", "mole fraction", 
			"The number of moles of a constituent entity, divided by the total number of all constituent entities present in a system. ", 
			"SBO:0000540");
public static final SBOTerm x_0000542 = 
		SBOUtil.createTerm("SBO:0000542", "basic reproduction number", "basic reproductive ratio", 
			"An epidemiological term representing the mean number of secondary cases which result from a single infection, where the population under consideration has no immunity, and no intervention is performed.", 
			"SBO:0000002");
public static final SBOTerm x_0000543 = 
		SBOUtil.createTerm("SBO:0000543", "?", "protein aggregate", 
			"A nonspecific coalescence of misfolded proteins which may or may not form a precipitate, depending upon particle size.", 
			"SBO:0000296");
public static final SBOTerm x_0000544 = 
		SBOUtil.createTerm("SBO:0000544", "?", "metadata representation", 
			"Supplementary information relating to a primary item of data, traditionally termed 'data about data'. It can describe, for example, the location or type of the data, or its relationship to other data.", 
			"SBO:0000000");
public static final SBOTerm x_0000545 = 
		SBOUtil.createTerm("SBO:0000545", "?", "systems description parameter", 
			"A value, numerical or symbolic, that defines certain characteristics of systems or system functions, or is necessary in their derivation.", 
			"SBO:0000000");
public static final SBOTerm x_0000546 = 
		SBOUtil.createTerm("SBO:0000546", "?", "qualitative systems description parameter", 
			"A non-numerical value that defines certain characteristics of systems or system functions.", 
			"SBO:0000545");
public static final SBOTerm x_0000547 = 
		SBOUtil.createTerm("SBO:0000547", "?", "boolean logical framework", 
			"Equationally defined algebraic framework usually interpreted as a two-valued logic using the basic Boolean operations (conjunction, disjunction and negation), together with the constants '0' and '1' denoting false and true values, respectively.", 
			"SBO:0000234");
public static final SBOTerm x_0000548 = 
		SBOUtil.createTerm("SBO:0000548", "?", "multi-valued logical framework", 
			"Extension of the boolean logical framework which associates a defined number of possible integer values (states) with the variables.", 
			"SBO:0000547");
public static final SBOTerm x_0000549 = 
		SBOUtil.createTerm("SBO:0000549", "?", "fuzzy logical framework", 
			"Extension of the Boolean logical framework which allows intermediate or undetermined values for the logical variables.", 
			"SBO:0000547");
public static final SBOTerm x_0000550 = 
		SBOUtil.createTerm("SBO:0000550", "?", "annotation", 
			"Supplementary information that does not modify the semantics of the presented information.", 
			"SBO:0000544");
public static final SBOTerm x_0000551 = 
		SBOUtil.createTerm("SBO:0000551", "?", "controlled short label", 
			"The use of an abbreviated name, taken from a controlled vocabulary of terms, which is used to represent some information about the entity to which it is attached.", 
			"SBO:0000555");
public static final SBOTerm x_0000552 = 
		SBOUtil.createTerm("SBO:0000552", "?", "reference annotation", 
			"Additional information that supplements existing data, usually in a document, by providing a link to more detailed information, which is held externally, or elsewhere.", 
			"SBO:0000550");
public static final SBOTerm x_0000553 = 
		SBOUtil.createTerm("SBO:0000553", "?", "bibliographical reference", 
			"An annotation which directs one to information contained within a published body of knowledge, usually a book or scientific journal.", 
			"SBO:0000552");
public static final SBOTerm x_0000554 = 
		SBOUtil.createTerm("SBO:0000554", "database cross-reference", "database cross reference", 
			"An annotation which directs one to information contained within a database.", 
			"SBO:0000552");
public static final SBOTerm x_0000555 = 
		SBOUtil.createTerm("SBO:0000555", "?", "controlled annotation", 
			"Annotation which complies with the full set of defined rules in its construction.", 
			"SBO:0000557");
public static final SBOTerm x_0000556 = 
		SBOUtil.createTerm("SBO:0000556", "?", "uncontrolled annotation", 
			"Annotation which does not comply with, or is not restricted by, any rules in its construction. Examples would include free text annotations.", 
			"SBO:0000557");
public static final SBOTerm x_0000557 = 
		SBOUtil.createTerm("SBO:0000557", "?", "embedded annotation", 
			"Annotation that directly incorporates information into the body of a document.", 
			"SBO:0000550");
public static final SBOTerm x_0000558 = 
		SBOUtil.createTerm("SBO:0000558", "?", "specific activity", 
			"A measure of enzyme activity under standard conditions, at a specific substrate concentration (usually saturation), expressed as the amount of product formed per unit time, per amount of enzyme. This is often expressed as micromol per min per mg, rather than the less practical official unit, Katal (1 mol per second).", 
			"SBO:0000002");
public static final SBOTerm x_0000559 = 
		SBOUtil.createTerm("SBO:0000559", "?", "enzyme activity", 
			"A measure of the amount of active enzyme present, expressed under specified conditions. This is often expressed as micromol per min (also known as enzyme unit, U), rather than the less practical official SI unit, Katal (1 mol per second). Enzyme activity normally refers to the natural substrate for the enzyme, but can also be given for standardised substrates such as gelatin, where it is then referred to as GDU (Gelatin Digesting Units).", 
			"SBO:0000002");
public static final SBOTerm x_0000560 = 
		SBOUtil.createTerm("SBO:0000560", "?", "mass action rate law for first order irreversible reactions, single essential stimulator, continuous scheme", 
			"Reaction scheme in which the reaction velocity is direct proportional to the activity or concentration of a single molecular species. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of the stimulator. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000163");
public static final SBOTerm x_0000561 = 
		SBOUtil.createTerm("SBO:0000561", "?", "mass action rate law for first order irreversible reactions, single essential stimulator, discrete scheme", 
			"Reaction scheme in which the reaction velocity is direct proportional to the activity or quantity of a single molecular species. The reaction scheme does not include any reverse process that creates the reactants from the products. The change of a product quantity is proportional to the quantity of the stimulator. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000166");
public static final SBOTerm x_0000562 = 
		SBOUtil.createTerm("SBO:0000562", "?", "mass action like rate law for second order irreversible reactions, one reactant, one essential stimulator", 
			"Reaction scheme where the products are created from a reactant and the change of a product quantity is proportional to the product of the reactant and the stimulator activities. The reaction scheme does not include any reverse process that creates the reactant from the products. The change of a product quantity is proportional to the quantity of the reactant and the stimulator. ", 
			"SBO:0000045");
public static final SBOTerm x_0000563 = 
		SBOUtil.createTerm("SBO:0000563", "?", "mass action like rate law for second order irreversible reactions, one reactant, one essential stimulator, continuous scheme", 
			"Reaction scheme where the products are created from a reactant and the change of a product quantity is proportional to the product of the reactant and the stimulator activities. The reaction scheme does not include any reverse process that creates the reactant from the products. The change of a product quantity is proportional to the quantity of the reactant and the stimulator. It is to be used in a reaction modelled using a continuous framework.", 
			"SBO:0000562");
public static final SBOTerm x_0000564 = 
		SBOUtil.createTerm("SBO:0000564", "?", "mass action like rate law for second order irreversible reactions, one reactant, one essential stimulator, discrete scheme", 
			"Reaction scheme where the products are created from a reactant and the change of a product quantity is proportional to the product of the reactant and the stimulator quantities. The reaction scheme does not include any reverse process that creates the reactant from the products. The change of a product quantity is proportional to the quantity of the reactant and the stimulator. It is to be used in a reaction modelled using a discrete framework.", 
			"SBO:0000562");
public static final SBOTerm x_0000565 = 
		SBOUtil.createTerm("SBO:0000565", "?", "systems description constant", 
			"A physical constant that is required in the calculation of a system parameter. ", 
			"SBO:0000545");
public static final SBOTerm x_0000566 = 
		SBOUtil.createTerm("SBO:0000566", "?", "relative permeability", 
			"The permeability of an ion through a channel or membrane expressed in relation to the reference ion, which is given the value 1. For example, if a membrane is most permeable to K+, then that is assigned the reference permeability value of 1, and the value for Na+ may be 0.05.", 
			"SBO:0000538");
public static final SBOTerm x_0000567 = 
		SBOUtil.createTerm("SBO:0000567", "gas constant", "universal gas constant", 
			"A physical constant featured in many fundamental equations in the physical sciences. It is equivalent to the Boltzmann constant, but expressed in units of energy per temperature increment per mole (rather than energy per temperature increment per particle). It has the value 8.314 J.K-1.mol-1 and is denoted by the symbol R.", 
			"SBO:0000565");
public static final SBOTerm x_0000568 = 
		SBOUtil.createTerm("SBO:0000568", "?", "Faraday constant", 
			"Named after Michael Faraday, it is the magnitude of electric charge per mole of electrons. It has the value 96,485.3365 C/mol (Coulombs per Mole), and the symbol F.", 
			"SBO:0000565");
public static final SBOTerm x_0000569 = 
		SBOUtil.createTerm("SBO:0000569", "Goldman-Hodgkin-Katz voltage equation", "Goldman equation", 
			"Expression to determine the equilibrium potential (membrane potential) across a cellular membrane, taking into consideration all the ions on either side of the membrane, and their permeability through the membrane. Permeability values are often recorded as relative permeability, with the most permeable ion being given a reference value of 1. The unit of measure for membrane potential is Volts, though values are typically reported as millivolts (mV).  The given formula represents the voltage equation for 'C' monovalent cations, and 'A' monovalent anions, assuming that C is the most permeable, and thereby reporting all other permeabilities as a proportion of the reference value, of 1. 'P' represents the membrane permeability of C (assumed reference molecule, value 1); 'p', the relative permeability of each non-reference molecule; 'C', the external monovalent cation; 'c', the internal monovalent cation concentration; 'A', the external monovalent anion; 'a', the internal monovalent anion concentration; 'R', the universal gas constant; 'T', the temperature in Kelvin; 'F' the Faraday constant.", 
			"SBO:0000391");
public static final SBOTerm x_0000570 = 
		SBOUtil.createTerm("SBO:0000570", "reversal potential", "Nernst potential", 
			"The membrane potential at which there is no net flow of an ions across a biological membrane. In a single ion system, this is equal to the equilibrium potential and can be calculated from the Nernst equation. It takes into consideration the charge, z, of the ion, as well as its concentration inside (x) and outside (X) the membrane.", 
			"SBO:0000569");
public static final SBOTerm x_0000571 = 
		SBOUtil.createTerm("SBO:0000571", "?", "thermodynamic parameter", 
			"Parameters used in the study of thermodynamics, a physical science that pertains to the relationship between heat and other forms of energy such as 'work done' in material bodies.", 
			"SBO:0000002");
public static final SBOTerm x_0000572 = 
		SBOUtil.createTerm("SBO:0000572", "?", "enthalpy", 
			"A thermodynamic potential whose natural variables are entropy (S) and pressure (p). The enthalpy of a system, measured in Joules (J), is defined as H = U + pV (where H is enthalpy, U is the internal energy, p is the pressure at the system boundary, and V is the system volume). symbol: H", 
			"SBO:0000571");
public static final SBOTerm x_0000573 = 
		SBOUtil.createTerm("SBO:0000573", "?", "enthalpy change", 
			"Change in enthalpy observed in the constituents of a thermodynamic system when undergoing a transformation or chemical reaction. This is the preferred way of expressing the energy changes to a system at constant pressure, since enthalpy itself cannot be directly measured. The enthalpy change is positive in endothermic reactions, negative in exothermic reactions, and is defined as the difference between the final and initial enthalpy of the system under study: ?H = Hf - Hi. The standard unit of measure is J. Symbol: ?H", 
			"SBO:0000572");
public static final SBOTerm x_0000574 = 
		SBOUtil.createTerm("SBO:0000574", "?", "standard enthalpy of formation", 
			"The enthalpy change observed in a constituent of a thermodynamic system when one mole of a compound, in its standard state, is formed from its elementary antecedents, in their standard state(s), under standard conditions (1 bar). The standard unit of measure is kJ/mol. Symbol: DeltaHf0, DeltafH0", 
			"SBO:0000573");
public static final SBOTerm x_0000575 = 
		SBOUtil.createTerm("SBO:0000575", "?", "standard enthalpy of reaction", 
			"The enthalpy change observed in a constituent of a thermodynamic system when one mole of substance reacts completely, under standard conditions (1 bar). The standard unit of measure is kJ/mol. Symbol: DeltaHr0, DeltarH0", 
			"SBO:0000573");
public static final SBOTerm x_0000576 = 
		SBOUtil.createTerm("SBO:0000576", "?", "entropy", 
			"A thermodynamic property which acts as a measure of the state of disorder of a system. Its natural variables are the internal energy (U) and the volume (V). It is defined by dS = (1/T)dU + (p/T)dV. The second law of thermodynamics states that in an isolated system, natural processes tend to increase in disorder or entropy. The standard unit of measure is Joules per Kelvin (J/K). symbol: S", 
			"SBO:0000571");
public static final SBOTerm x_0000577 = 
		SBOUtil.createTerm("SBO:0000577", "?", "entropy change", 
			"The increase or decrease of the entropy of a system. For values greater than zero, there is an implied increase in the disorder of a system, for example during a reaction, and decreased disorder where the values are less than zero. The entropy change of a process is defined as the initial system entropy value minus the final entropy value: DeltaS = Sf - Si. The standard unit of measure is J/K. symbol: DeltaS", 
			"SBO:0000576");
public static final SBOTerm x_0000578 = 
		SBOUtil.createTerm("SBO:0000578", "?", "standard entropy of reaction ", 
			"The entropy change observed in a thermodynamic system when one mole of substance reacts completely, under standard conditions (1 bar). The standard unit of measure is kJ/(mol K). This can be calculated using the entropies for products and reactants: DeltaS(reaction)=sum DeltaS (products) - sum DeltaS reactants. The standard unit of measure is kJ/(mol K). symbol: DeltaSro", 
			"SBO:0000577");
public static final SBOTerm x_0000579 = 
		SBOUtil.createTerm("SBO:0000579", "?", "standard entropy of formation", 
			"The change in entropy associated with the formation of one mole of a substance from its elements in their standard states under standard conditions (1 bar). The standard unit of measure is kJ/(mol K). symbol: DeltaSfo", 
			"SBO:0000577");
public static final SBOTerm x_0000580 = 
		SBOUtil.createTerm("SBO:0000580", "free enthalpy", "Gibbs free energy", 
			"A thermodynamic potential that measures the useful work obtainable from a thermodynamic system at constant pressure and temperature. Its natural variables are pressure (p) and temperature (T) and the definition is: G = H - TS. Gibbs free energy is minimised when a system reaches equilibrium at constant pressure and temperature. The standard unit of measure is kJ/mol. symbol: G", 
			"SBO:0000571");
public static final SBOTerm x_0000581 = 
		SBOUtil.createTerm("SBO:0000581", "?", "Gibbs free energy change", 
			"The increase or decrease of the Gibbs free energy of a system. During a reaction, this is equal to the change in enthalpy of the system minus the change in the product of the temperature times the entropy of the system:  DeltaG = DeltaH - T DeltaS A negative value indicates that the reaction will be favoured and will release energy. The magnitude of the value indicates how far the reaction is from equilibrium, where there will be no free energy change. The standard unit of measure is kJ/mol. symbol: DeltaG", 
			"SBO:0000580");
public static final SBOTerm x_0000582 = 
		SBOUtil.createTerm("SBO:0000582", "?", "standard Gibbs energy of formation", 
			"The change in Gibbs free energy associated with the formation of 1 mole of substance from elements in their standard states under standard conditions (1 bar). The standard unit of measure is kJ/mol. symbol: DeltafG(degree)", 
			"SBO:0000581");
public static final SBOTerm x_0000583 = 
		SBOUtil.createTerm("SBO:0000583", "?", "standard Gibbs energy of reaction", 
			"The Gibbs free energy change observed in a thermodynamic system when one mole of substance reacts completely, under standard conditions (1 bar). The standard unit of measure is kJ/mol. symbol: ?G?", 
			"SBO:0000581");
public static final SBOTerm x_0000584 = 
		SBOUtil.createTerm("SBO:0000584", "?", "temporal offset", 
			"A duration of time after which a phase shift occurs.", 
			"SBO:0000346");
public static final SBOTerm x_0000585 = 
		SBOUtil.createTerm("SBO:0000585", "?", "simulation duration", 
			"The total length of time over which a model is simulated, where the time scale is indicated within the model simulation. ", 
			"SBO:0000347");
public static final SBOTerm x_0000586 = 
		SBOUtil.createTerm("SBO:0000586", "?", "model time", 
			"A conceptualisation of time which is intrinsic to a mathematical model, and which can be used to describe other variables or parameters of the model.", 
			"SBO:0000346");
public static final SBOTerm x_0000587 = 
		SBOUtil.createTerm("SBO:0000587", "?", "transcellular membrane influx reaction", 
			"A transport reaction which results in the entry of the transported entity, into the cell.", 
			"SBO:0000185");
public static final SBOTerm x_0000588 = 
		SBOUtil.createTerm("SBO:0000588", "?", "transcellular membrane efflux reaction", 
			"A transport reaction which results in the removal of the transported entity from the cell.", 
			"SBO:0000185");

}