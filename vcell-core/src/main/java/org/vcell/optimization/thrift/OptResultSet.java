/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.vcell.optimization.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)")
public class OptResultSet implements org.apache.thrift.TBase<OptResultSet, OptResultSet._Fields>, java.io.Serializable, Cloneable, Comparable<OptResultSet> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OptResultSet");

  private static final org.apache.thrift.protocol.TField OBJECTIVE_FUNCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("objectiveFunction", org.apache.thrift.protocol.TType.DOUBLE, (short)1);
  private static final org.apache.thrift.protocol.TField NUM_FUNCTION_EVALUATIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("numFunctionEvaluations", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField OPT_PARAMETER_VALUES_FIELD_DESC = new org.apache.thrift.protocol.TField("optParameterValues", org.apache.thrift.protocol.TType.LIST, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new OptResultSetStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new OptResultSetTupleSchemeFactory();

  public double objectiveFunction; // required
  public long numFunctionEvaluations; // required
  public java.util.List<OptParameterValue> optParameterValues; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    OBJECTIVE_FUNCTION((short)1, "objectiveFunction"),
    NUM_FUNCTION_EVALUATIONS((short)2, "numFunctionEvaluations"),
    OPT_PARAMETER_VALUES((short)4, "optParameterValues");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // OBJECTIVE_FUNCTION
          return OBJECTIVE_FUNCTION;
        case 2: // NUM_FUNCTION_EVALUATIONS
          return NUM_FUNCTION_EVALUATIONS;
        case 4: // OPT_PARAMETER_VALUES
          return OPT_PARAMETER_VALUES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __OBJECTIVEFUNCTION_ISSET_ID = 0;
  private static final int __NUMFUNCTIONEVALUATIONS_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.OBJECTIVE_FUNCTION, new org.apache.thrift.meta_data.FieldMetaData("objectiveFunction", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUM_FUNCTION_EVALUATIONS, new org.apache.thrift.meta_data.FieldMetaData("numFunctionEvaluations", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.OPT_PARAMETER_VALUES, new org.apache.thrift.meta_data.FieldMetaData("optParameterValues", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OptParameterValue.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OptResultSet.class, metaDataMap);
  }

  public OptResultSet() {
  }

  public OptResultSet(
    double objectiveFunction,
    long numFunctionEvaluations,
    java.util.List<OptParameterValue> optParameterValues)
  {
    this();
    this.objectiveFunction = objectiveFunction;
    setObjectiveFunctionIsSet(true);
    this.numFunctionEvaluations = numFunctionEvaluations;
    setNumFunctionEvaluationsIsSet(true);
    this.optParameterValues = optParameterValues;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OptResultSet(OptResultSet other) {
    __isset_bitfield = other.__isset_bitfield;
    this.objectiveFunction = other.objectiveFunction;
    this.numFunctionEvaluations = other.numFunctionEvaluations;
    if (other.isSetOptParameterValues()) {
      java.util.List<OptParameterValue> __this__optParameterValues = new java.util.ArrayList<OptParameterValue>(other.optParameterValues.size());
      for (OptParameterValue other_element : other.optParameterValues) {
        __this__optParameterValues.add(new OptParameterValue(other_element));
      }
      this.optParameterValues = __this__optParameterValues;
    }
  }

  public OptResultSet deepCopy() {
    return new OptResultSet(this);
  }

  @Override
  public void clear() {
    setObjectiveFunctionIsSet(false);
    this.objectiveFunction = 0.0;
    setNumFunctionEvaluationsIsSet(false);
    this.numFunctionEvaluations = 0;
    this.optParameterValues = null;
  }

  public double getObjectiveFunction() {
    return this.objectiveFunction;
  }

  public OptResultSet setObjectiveFunction(double objectiveFunction) {
    this.objectiveFunction = objectiveFunction;
    setObjectiveFunctionIsSet(true);
    return this;
  }

  public void unsetObjectiveFunction() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OBJECTIVEFUNCTION_ISSET_ID);
  }

  /** Returns true if field objectiveFunction is set (has been assigned a value) and false otherwise */
  public boolean isSetObjectiveFunction() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OBJECTIVEFUNCTION_ISSET_ID);
  }

  public void setObjectiveFunctionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OBJECTIVEFUNCTION_ISSET_ID, value);
  }

  public long getNumFunctionEvaluations() {
    return this.numFunctionEvaluations;
  }

  public OptResultSet setNumFunctionEvaluations(long numFunctionEvaluations) {
    this.numFunctionEvaluations = numFunctionEvaluations;
    setNumFunctionEvaluationsIsSet(true);
    return this;
  }

  public void unsetNumFunctionEvaluations() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUMFUNCTIONEVALUATIONS_ISSET_ID);
  }

  /** Returns true if field numFunctionEvaluations is set (has been assigned a value) and false otherwise */
  public boolean isSetNumFunctionEvaluations() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUMFUNCTIONEVALUATIONS_ISSET_ID);
  }

  public void setNumFunctionEvaluationsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUMFUNCTIONEVALUATIONS_ISSET_ID, value);
  }

  public int getOptParameterValuesSize() {
    return (this.optParameterValues == null) ? 0 : this.optParameterValues.size();
  }

  public java.util.Iterator<OptParameterValue> getOptParameterValuesIterator() {
    return (this.optParameterValues == null) ? null : this.optParameterValues.iterator();
  }

  public void addToOptParameterValues(OptParameterValue elem) {
    if (this.optParameterValues == null) {
      this.optParameterValues = new java.util.ArrayList<OptParameterValue>();
    }
    this.optParameterValues.add(elem);
  }

  public java.util.List<OptParameterValue> getOptParameterValues() {
    return this.optParameterValues;
  }

  public OptResultSet setOptParameterValues(java.util.List<OptParameterValue> optParameterValues) {
    this.optParameterValues = optParameterValues;
    return this;
  }

  public void unsetOptParameterValues() {
    this.optParameterValues = null;
  }

  /** Returns true if field optParameterValues is set (has been assigned a value) and false otherwise */
  public boolean isSetOptParameterValues() {
    return this.optParameterValues != null;
  }

  public void setOptParameterValuesIsSet(boolean value) {
    if (!value) {
      this.optParameterValues = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case OBJECTIVE_FUNCTION:
      if (value == null) {
        unsetObjectiveFunction();
      } else {
        setObjectiveFunction((java.lang.Double)value);
      }
      break;

    case NUM_FUNCTION_EVALUATIONS:
      if (value == null) {
        unsetNumFunctionEvaluations();
      } else {
        setNumFunctionEvaluations((java.lang.Long)value);
      }
      break;

    case OPT_PARAMETER_VALUES:
      if (value == null) {
        unsetOptParameterValues();
      } else {
        setOptParameterValues((java.util.List<OptParameterValue>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case OBJECTIVE_FUNCTION:
      return getObjectiveFunction();

    case NUM_FUNCTION_EVALUATIONS:
      return getNumFunctionEvaluations();

    case OPT_PARAMETER_VALUES:
      return getOptParameterValues();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case OBJECTIVE_FUNCTION:
      return isSetObjectiveFunction();
    case NUM_FUNCTION_EVALUATIONS:
      return isSetNumFunctionEvaluations();
    case OPT_PARAMETER_VALUES:
      return isSetOptParameterValues();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof OptResultSet)
      return this.equals((OptResultSet)that);
    return false;
  }

  public boolean equals(OptResultSet that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_objectiveFunction = true;
    boolean that_present_objectiveFunction = true;
    if (this_present_objectiveFunction || that_present_objectiveFunction) {
      if (!(this_present_objectiveFunction && that_present_objectiveFunction))
        return false;
      if (this.objectiveFunction != that.objectiveFunction)
        return false;
    }

    boolean this_present_numFunctionEvaluations = true;
    boolean that_present_numFunctionEvaluations = true;
    if (this_present_numFunctionEvaluations || that_present_numFunctionEvaluations) {
      if (!(this_present_numFunctionEvaluations && that_present_numFunctionEvaluations))
        return false;
      if (this.numFunctionEvaluations != that.numFunctionEvaluations)
        return false;
    }

    boolean this_present_optParameterValues = true && this.isSetOptParameterValues();
    boolean that_present_optParameterValues = true && that.isSetOptParameterValues();
    if (this_present_optParameterValues || that_present_optParameterValues) {
      if (!(this_present_optParameterValues && that_present_optParameterValues))
        return false;
      if (!this.optParameterValues.equals(that.optParameterValues))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(objectiveFunction);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(numFunctionEvaluations);

    hashCode = hashCode * 8191 + ((isSetOptParameterValues()) ? 131071 : 524287);
    if (isSetOptParameterValues())
      hashCode = hashCode * 8191 + optParameterValues.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(OptResultSet other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetObjectiveFunction()).compareTo(other.isSetObjectiveFunction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObjectiveFunction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectiveFunction, other.objectiveFunction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNumFunctionEvaluations()).compareTo(other.isSetNumFunctionEvaluations());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumFunctionEvaluations()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numFunctionEvaluations, other.numFunctionEvaluations);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOptParameterValues()).compareTo(other.isSetOptParameterValues());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOptParameterValues()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.optParameterValues, other.optParameterValues);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("OptResultSet(");
    boolean first = true;

    sb.append("objectiveFunction:");
    sb.append(this.objectiveFunction);
    first = false;
    if (!first) sb.append(", ");
    sb.append("numFunctionEvaluations:");
    sb.append(this.numFunctionEvaluations);
    first = false;
    if (!first) sb.append(", ");
    sb.append("optParameterValues:");
    if (this.optParameterValues == null) {
      sb.append("null");
    } else {
      sb.append(this.optParameterValues);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'objectiveFunction' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'numFunctionEvaluations' because it's a primitive and you chose the non-beans generator.
    if (optParameterValues == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'optParameterValues' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OptResultSetStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public OptResultSetStandardScheme getScheme() {
      return new OptResultSetStandardScheme();
    }
  }

  private static class OptResultSetStandardScheme extends org.apache.thrift.scheme.StandardScheme<OptResultSet> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OptResultSet struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // OBJECTIVE_FUNCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.objectiveFunction = iprot.readDouble();
              struct.setObjectiveFunctionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NUM_FUNCTION_EVALUATIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numFunctionEvaluations = iprot.readI64();
              struct.setNumFunctionEvaluationsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OPT_PARAMETER_VALUES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list40 = iprot.readListBegin();
                struct.optParameterValues = new java.util.ArrayList<OptParameterValue>(_list40.size);
                OptParameterValue _elem41;
                for (int _i42 = 0; _i42 < _list40.size; ++_i42)
                {
                  _elem41 = new OptParameterValue();
                  _elem41.read(iprot);
                  struct.optParameterValues.add(_elem41);
                }
                iprot.readListEnd();
              }
              struct.setOptParameterValuesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetObjectiveFunction()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'objectiveFunction' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetNumFunctionEvaluations()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'numFunctionEvaluations' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OptResultSet struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(OBJECTIVE_FUNCTION_FIELD_DESC);
      oprot.writeDouble(struct.objectiveFunction);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUM_FUNCTION_EVALUATIONS_FIELD_DESC);
      oprot.writeI64(struct.numFunctionEvaluations);
      oprot.writeFieldEnd();
      if (struct.optParameterValues != null) {
        oprot.writeFieldBegin(OPT_PARAMETER_VALUES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.optParameterValues.size()));
          for (OptParameterValue _iter43 : struct.optParameterValues)
          {
            _iter43.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OptResultSetTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public OptResultSetTupleScheme getScheme() {
      return new OptResultSetTupleScheme();
    }
  }

  private static class OptResultSetTupleScheme extends org.apache.thrift.scheme.TupleScheme<OptResultSet> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OptResultSet struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeDouble(struct.objectiveFunction);
      oprot.writeI64(struct.numFunctionEvaluations);
      {
        oprot.writeI32(struct.optParameterValues.size());
        for (OptParameterValue _iter44 : struct.optParameterValues)
        {
          _iter44.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OptResultSet struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.objectiveFunction = iprot.readDouble();
      struct.setObjectiveFunctionIsSet(true);
      struct.numFunctionEvaluations = iprot.readI64();
      struct.setNumFunctionEvaluationsIsSet(true);
      {
        org.apache.thrift.protocol.TList _list45 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.optParameterValues = new java.util.ArrayList<OptParameterValue>(_list45.size);
        OptParameterValue _elem46;
        for (int _i47 = 0; _i47 < _list45.size; ++_i47)
        {
          _elem46 = new OptParameterValue();
          _elem46.read(iprot);
          struct.optParameterValues.add(_elem46);
        }
      }
      struct.setOptParameterValuesIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

