<?xml version="1.0" encoding="UTF-8"?>
<vcelldoc>


<def target = "def_BioNetGen" defLabel = "BioNetGen"> BioNetGen (stands for Biological Network 
Generator) is a set of software tools for rule-based 
modeling. Rule-based modeling can be described with the help of the BioNetGen Language (BNGL). The software
and language are described in Faeder JR, Blinov ML, and 
Hlavacek WS (2009). Rule-based modeling of biochemical systems with BioNetGen. 
In Systems biology (pp. 113-167). Humana Press.
</def>

<def target = "def_compartments" defLabel = "Compartments"> A compartment is a volume structure and associated membrane 
structure.  For example, the cyoplasmic compartment would consist of cytosol (a volume structure) and plasma membrane 
(a membrane structure).
</def>


<def target = "def_Deterministic" defLabel = "Deterministic"> A deterministic application uses numerical methods to 
solve for average concentrations over defined areas of space determined by a geometric grid using partial differential 
equations.  A deterministic simulation is valid as long as the concentrations of a simulated population are high. 
However, if the concentrations are very low the biology is more accurately simulated by discrete, stochastic approach.  
"Compartmental" simulations are a special case of deterministic applications where concentrations are assumed to be 
uniform throughout each compartment and thus each compartment is presented by a single point simulation.  Compartmental 
models are not spatially resolved and they are solved using nonlinear ordinary differential equations. These equations are 
generally computed within seconds.
</def> 


<def target = "def_Global" defLabel = "Global Parameter"> A global parameter is identical whereever the term is used.
Changing the parameter is one context will change the parameter where ever it is used.
</def>


<def target = "def_Local" defLabel = "Local Parameter"> A local parameter is unique to the context in which it is used.  A
similar parameter name in a different context will have a unique value.
</def>

<def target = "def_Mesh" defLabel = "Mesh">
A VCell mesh is a set of discrete elements (1, 2, or 3 dimensional) defining the spatial domain on which mathematical operations of spatial solvers occur.  
VCell meshs are regular grids created by dividing space (geometry size) in each dimension for form a lattice of cells (mesh size).  
The user sets the geometry size (simulation world length in each dimension) and mesh size 
(number of discretely defined spatial elements in each dimension) when creating a simulation.  
Together the geometry size and mesh size define the simulation world size of each mesh cell.  
In regular grids, larger mesh size values (increasing number of grid cells) result in finer subdivision of space (geometry size) and increase memory and file resource requirements.  
Geometry size values have no effect on memory or file resource requirements.
</def>


<def target = "def_membranes" defLabel = "Membrane"> A membrane is a 2-dimensional structure in a VCell model.  
Species contained within membranes have units of density (number per um squared).  Membrane species may participate 
with volume species in reactions, or reactions may occur only among membrane species.  Membrane flux reactions occur 
within membranes and have reactants and products in the adjacent volume structures.
</def>


<def target = "def_NetworkFree" defLabel = "NetworkFree"> Network-free simulation of rule-based 
models is performed without generation of the reaction network. Rather than generating 
	and tracking all possible chemical species, 
network-free approache follows only the molecular configurations that exist at a given time. It is described in 
Sneddon MW, Faeder JR, and Emonet T. (2011). 
Efficient modeling, simulation and coarse-graining of biological complexity with NFsim. 
Nature methods, 8(2), 177-183.
</def>

<def target = "def_NFSim" defLabel = "NFSim"> NFSim (stands for Network-Free Simulator) 
is a software tool for simulation of rule-based models using 
network-free simulation.  It is described in 
Sneddon MW, Faeder JR, and Emonet T. (2011). 
Efficient modeling, simulation and coarse-graining of biological complexity with NFsim. 
Nature methods, 8(2), 177-183.
</def>

<def target = "def_pathcom" defLabel = "Pathway Commons">
Pathway Commons mirrors the content of ten major pathway databases, providing 3,436 pathways including 565,977 
interactions and 116,073 physical entities from 1,295 organisms.
</def>


<def target = "def_prop_pane" defLabel = "Property Pane"> Properties of any selected item are displayed in the 
bottom right pane of the VCell window.  
</def>


<def target = "def_reactions" defLabel = "Reactions"> Reactions are defined by rates of change of reactants and products.
Reactions can involve volume species within a single volume structure, membrane species within a single membrane structure
or they can involved membrane species and volume species of a neighboring volume structure. Reaction kinetics can be
modified by catalysts. Fluxes are a special class of reactions that involve volume species as reactants and volume species within a neighboring volume separate by a
common membrane structure.
</def>

<def target = "def_ReactionRules" defLabel = "Reaction Rules"> Reaction rule defines transformation of multiple species at once.  
	    Species to be transformed are selected by reactant pattern(s).
		Product pattern(s) define the end result of transformation. Product pattern may differ 
		from reactant by re-assigning molecules, adding or deleting bonds and changing site states. 
	    A reaction rule may generate multiple individual reactions.  
		Every reaction generated by the reaction rule is assigned a rate law given by the product of a 
		multiplicity factor generated automatically by BioNetGen , 
		the specified rate constants (which may be a numerical value or a formula), 
		and the population levels of the reactants.
</def>

<def target = "def_RuleBased" defLabel = "Rule-Based"> Rule-based modeling involves 
the representation of molecules as structured objects and molecular interactions as rules for 
transforming the attributes of these objects. The approach is notable in that it allows one
to systematically incorporate site-specific details about protein–protein interactions into a model for the
dynamics of a signal-transduction system, but the method has other applications as well, such as following
the fates of individual carbon atoms in metabolic reactions. The consequences of protein–protein 
interactions are difficult to specify and track with a conventional modeling approach because of the large number
of protein phosphoforms and protein complexes that these interactions potentially generate.
</def>

<def target = "def_SeedSpecies" defLabel = "Seed Species"> 
The species with molecular composition and non-zero initial values. They are used by BioNetGen and NFSim simulation engines
	as a starting set of species for application of rules. 	
</def>	

<def target = "def_species" defLabel = "Species"> 
Species are any group of molecules/entities that exist within structures (either membranes or compartments) and 
can be acted upon by reactions or fluxes.  Species are unique to a particular structural class (e.g. cytosol, 
nuclear membrane) for all instances of a given class. Older version of VCell append species context to the given 
name (e..g a species called "Calcium" within "Cytosol" was given the name Calcium_cytoplasm
</def>


<def target = "def_Stochastic" defLabel = "Stochastic"> Stochastic simulations use numerical methods to solve for 
numbers of molecules in a defined region of space using probabilistic methods, where each molecule and event is 
treated individually.  Stochastic simulations are required where concentrations of molecules are very low.
</def>  


<def target = "def_structure" defLabel = "Structure"> A structure in VCell is a spatial element that can have 1,2, or 3 
dimensions.  Structures contain species and reactions,  a three-dimensional structure is a volume and its species have 
units of concentration.  Membranes are two dimensional structures and have units of molecules per micrometer squared.
</def>


<def target = "def_volumes" defLabel = "Volume"> 
A volume in VCell is a 3 dimensional structure.  Species within a volume structure have units of concentration. 
All volume structures except the outermost structure in the topology are bounded by membrane structures.
</def>



</vcelldoc>
