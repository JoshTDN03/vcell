package cbit.render.objects;
/*©
 * (C) Copyright University of Connecticut Health Center 2001.
 * All rights reserved.
©*/
import java.util.*;
import java.io.*;
import cbit.vcell.parser.*;
/**
 * This class was generated by a SmartGuide.
 * 
 */
public class AnalyticField {
	private Expression exp = null;
	//
	// the following fields are used for evaluating the inside/outside function "isInside()"
	//
	private double valueArray[] = new double[3];
	private SimpleSymbolTable symbolTable = new SimpleSymbolTable(new String[] { "x", "y", "z" });

/**
 * MathDescription constructor comment.
 */
public AnalyticField(Expression argExpression) throws ExpressionException {
	this.exp = argExpression;
	exp.bindExpression(symbolTable);
}

/**
 * This method was created by a SmartGuide.
 * @return cbit.vcell.parser.Expression
 */
public Expression getExpression() {
	return exp;
}

/**
 * This method was created in VisualAge.
 * @return boolean
 * @param x double
 * @param y double
 * @param z double
 */
public boolean isInside(Vect3d vect3d) throws ExpressionException {
	double value = evaluate(vect3d);
	return (value!=0);
}

/**
 * This method was created in VisualAge.
 * @return boolean
 * @param x double
 * @param y double
 * @param z double
 */
public double evaluate(Vect3d vect3d) throws ExpressionException {
	double value = exp.evaluateVector(vect3d.q);
	return value;
}
}