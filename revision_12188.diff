Index: src/cbit/vcell/message/server/cmd/CommandService.java
===================================================================
--- src/cbit/vcell/message/server/cmd/CommandService.java	(revision 12188)
+++ src/cbit/vcell/message/server/cmd/CommandService.java	(revision 12187)
@@ -15,8 +15,6 @@
 
 public abstract class CommandService {
 
-	public static boolean bQuiet = false;
-	
 	public static class CommandOutput {
 		private String[] commandStrings;
 		private String standardOutput;
Index: src/cbit/vcell/message/server/cmd/CommandServiceLocal.java
===================================================================
--- src/cbit/vcell/message/server/cmd/CommandServiceLocal.java	(revision 12188)
+++ src/cbit/vcell/message/server/cmd/CommandServiceLocal.java	(revision 12187)
@@ -26,10 +26,10 @@
 		VCMongoMessage.sendCommandServiceCall(commandOutput);
 
 		System.out.println("Command: " + commandOutput.getCommand());
-		if(!bQuiet){System.out.println("Command: stdout = " + commandOutput.getStandardOutput());}
+		System.out.println("Command: stdout = " + commandOutput.getStandardOutput()); 
 		System.out.println("Command: stderr = " + commandOutput.getStandardError()); 
 		System.out.println("Command: exit = " + commandOutput.getExitStatus());
-		
+
 		return commandOutput;
 	}
 
Index: src/cbit/vcell/message/server/cmd/CommandServiceSsh.java
===================================================================
--- src/cbit/vcell/message/server/cmd/CommandServiceSsh.java	(revision 12188)
+++ src/cbit/vcell/message/server/cmd/CommandServiceSsh.java	(revision 12187)
@@ -53,7 +53,7 @@
 			VCMongoMessage.sendCommandServiceCall(commandOutput);
 
 			System.out.println("Command: " + commandOutput.getCommand());
-			if(!bQuiet){System.out.println("Command: stdout = " + commandOutput.getStandardOutput());}
+			System.out.println("Command: stdout = " + commandOutput.getStandardOutput()); 
 			System.out.println("Command: stderr = " + commandOutput.getStandardError()); 
 			System.out.println("Command: exit = " + commandOutput.getExitStatus());
 
Index: src/cbit/vcell/mongodb/VCMongoDbDriver.java
===================================================================
--- src/cbit/vcell/mongodb/VCMongoDbDriver.java	(revision 12188)
+++ src/cbit/vcell/mongodb/VCMongoDbDriver.java	(revision 12187)
@@ -5,7 +5,6 @@
 import java.util.Arrays;
 import java.util.concurrent.ConcurrentLinkedQueue;
 
-import org.vcell.util.NullSessionLog;
 import org.vcell.util.PropertyLoader;
 import org.vcell.util.SessionLog;
 import org.vcell.util.StdoutSessionLog;
@@ -22,13 +21,10 @@
 
 public class VCMongoDbDriver implements Runnable {
 	
-	public static boolean bQuiet = false;
-	
 	private static VCMongoDbDriver mongoDriverSingleton = null;
 
 	private Mongo m = null;
 	private SessionLog log = new StdoutSessionLog("mongoDbDriver");
-	private NullSessionLog nullSessionLog = new NullSessionLog();
 	private ConcurrentLinkedQueue<VCMongoMessage> messageOutbox = new ConcurrentLinkedQueue<VCMongoMessage>();
 	private boolean processing = false;
 	private Thread messageProcessingThread = null;
@@ -49,9 +45,6 @@
 	}
 	
 	public SessionLog getSessionLog(){
-		if(bQuiet){
-			return nullSessionLog;
-		}
 		return log;
 	}
 	
@@ -89,11 +82,11 @@
 	        	String errorString = writeResult.getError();////???????
 	        	if (errorString !=null && errorString.length()>0){
 	        		for (VCMongoMessage message : queuedMessages){
-	        			getSessionLog().alert("VCMongoMessage failedToSend : "+message);
+	        			log.alert("VCMongoMessage failedToSend : "+message);
 	        		}
 	        	}else{
 		    		for (VCMongoMessage message : queuedMessages){
-		    			getSessionLog().alert("VCMongoMessage sent : "+message);
+		    			log.alert("VCMongoMessage sent : "+message);
 		    		}
 	        	}
 //   			} catch (MongoException e){
@@ -112,10 +105,10 @@
    					m = null;
    				}
    				final int minutesToWaitUponFailure = 20;
-   				getSessionLog().alert("MongoDB failure ... waiting "+minutesToWaitUponFailure+" minutes before trying to connect again");
+   				log.alert("MongoDB failure ... waiting "+minutesToWaitUponFailure+" minutes before trying to connect again");
    				for (VCMongoMessage msg : queuedMessages){
    					try {
-   						getSessionLog().alert("MongoDB failure: discarding message: "+msg);
+   						log.alert("MongoDB failure: discarding message: "+msg);
    					}catch (Exception e4){
    						e4.printStackTrace(System.out);
    					}
@@ -130,7 +123,7 @@
     
     public void run()
     {
-		getSessionLog().print("Starting MongoDB Thread");
+		log.print("Starting MongoDB Thread");
         while(processing && VCMongoMessage.enabled) {
             try {
                 sendMessages();
@@ -143,7 +136,7 @@
 				e.printStackTrace(System.out);
 			}
         }
-        getSessionLog().print("Ended MongoDB Thread");
+        log.print("Ended MongoDB Thread");
     }
 
 
@@ -171,7 +164,7 @@
     public void addMessage(VCMongoMessage message)
     {
     	messageOutbox.add(message);
-    	getSessionLog().print("VCMongoMessage queued : "+message);
+    	log.print("VCMongoMessage queued : "+message);
     	if (!IsProcessing()){
     		startProcessing();
     	}
